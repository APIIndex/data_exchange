/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "../src/worker.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/asn1.js/lib/asn1.js":
/*!*******************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var asn1 = exports;\n\nasn1.bignum = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\n\nasn1.define = __webpack_require__(/*! ./asn1/api */ \"../node_modules/asn1.js/lib/asn1/api.js\").define;\nasn1.base = __webpack_require__(/*! ./asn1/base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\");\nasn1.constants = __webpack_require__(/*! ./asn1/constants */ \"../node_modules/asn1.js/lib/asn1/constants/index.js\");\nasn1.decoders = __webpack_require__(/*! ./asn1/decoders */ \"../node_modules/asn1.js/lib/asn1/decoders/index.js\");\nasn1.encoders = __webpack_require__(/*! ./asn1/encoders */ \"../node_modules/asn1.js/lib/asn1/encoders/index.js\");\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/api.js":
/*!***********************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/api.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var asn1 = __webpack_require__(/*! ../asn1 */ \"../node_modules/asn1.js/lib/asn1.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = __webpack_require__(/*! vm */ \"../node_modules/vm-browserify/index.js\").runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/api.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/base/buffer.js":
/*!*******************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Reporter = __webpack_require__(/*! ../base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\").Reporter;\nvar Buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\").Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/base/buffer.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/base/index.js":
/*!******************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var base = exports;\n\nbase.Reporter = __webpack_require__(/*! ./reporter */ \"../node_modules/asn1.js/lib/asn1/base/reporter.js\").Reporter;\nbase.DecoderBuffer = __webpack_require__(/*! ./buffer */ \"../node_modules/asn1.js/lib/asn1/base/buffer.js\").DecoderBuffer;\nbase.EncoderBuffer = __webpack_require__(/*! ./buffer */ \"../node_modules/asn1.js/lib/asn1/base/buffer.js\").EncoderBuffer;\nbase.Node = __webpack_require__(/*! ./node */ \"../node_modules/asn1.js/lib/asn1/base/node.js\");\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/base/index.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/base/node.js":
/*!*****************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/node.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Reporter = __webpack_require__(/*! ../base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\").Reporter;\nvar EncoderBuffer = __webpack_require__(/*! ../base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\").EncoderBuffer;\nvar DecoderBuffer = __webpack_require__(/*! ../base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\").DecoderBuffer;\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/base/node.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/base/reporter.js":
/*!*********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/base/reporter.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/constants/der.js":
/*!*********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var constants = __webpack_require__(/*! ../constants */ \"../node_modules/asn1.js/lib/asn1/constants/index.js\");\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/constants/der.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/constants/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/constants/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/constants/der.js\");\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/constants/index.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/decoders/der.js":
/*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar asn1 = __webpack_require__(/*! ../../asn1 */ \"../node_modules/asn1.js/lib/asn1.js\");\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/decoders/der.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/decoders/index.js":
/*!**********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var decoders = exports;\n\ndecoders.der = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/decoders/der.js\");\ndecoders.pem = __webpack_require__(/*! ./pem */ \"../node_modules/asn1.js/lib/asn1/decoders/pem.js\");\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/decoders/index.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/decoders/pem.js":
/*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\").Buffer;\n\nvar DERDecoder = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/decoders/der.js\");\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/decoders/pem.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/encoders/der.js":
/*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\").Buffer;\n\nvar asn1 = __webpack_require__(/*! ../../asn1 */ \"../node_modules/asn1.js/lib/asn1.js\");\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/encoders/der.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/encoders/index.js":
/*!**********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var encoders = exports;\n\nencoders.der = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/encoders/der.js\");\nencoders.pem = __webpack_require__(/*! ./pem */ \"../node_modules/asn1.js/lib/asn1/encoders/pem.js\");\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/encoders/index.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/encoders/pem.js":
/*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar DEREncoder = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/encoders/der.js\");\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n\n\n//# sourceURL=webpack:///../node_modules/asn1.js/lib/asn1/encoders/pem.js?");

/***/ }),

/***/ "../node_modules/base64-js/index.js":
/*!******************************************!*\
  !*** ../node_modules/base64-js/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///../node_modules/base64-js/index.js?");

/***/ }),

/***/ "../node_modules/bip66/index.js":
/*!**************************************!*\
  !*** ../node_modules/bip66/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nfunction check (buffer) {\n  if (buffer.length < 8) return false\n  if (buffer.length > 72) return false\n  if (buffer[0] !== 0x30) return false\n  if (buffer[1] !== buffer.length - 2) return false\n  if (buffer[2] !== 0x02) return false\n\n  var lenR = buffer[3]\n  if (lenR === 0) return false\n  if (5 + lenR >= buffer.length) return false\n  if (buffer[4 + lenR] !== 0x02) return false\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) return false\n  if ((6 + lenR + lenS) !== buffer.length) return false\n\n  if (buffer[4] & 0x80) return false\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false\n\n  if (buffer[lenR + 6] & 0x80) return false\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false\n  return true\n}\n\nfunction decode (buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short')\n  if (buffer.length > 72) throw new Error('DER sequence length is too long')\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')\n\n  var lenR = buffer[3]\n  if (lenR === 0) throw new Error('R length is zero')\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long')\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) throw new Error('S length is zero')\n  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')\n\n  if (buffer[4] & 0x80) throw new Error('R value is negative')\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')\n\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')\n\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  }\n}\n\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nfunction encode (r, s) {\n  var lenR = r.length\n  var lenS = s.length\n  if (lenR === 0) throw new Error('R length is zero')\n  if (lenS === 0) throw new Error('S length is zero')\n  if (lenR > 33) throw new Error('R length is too long')\n  if (lenS > 33) throw new Error('S length is too long')\n  if (r[0] & 0x80) throw new Error('R value is negative')\n  if (s[0] & 0x80) throw new Error('S value is negative')\n  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')\n  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')\n\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS)\n\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30\n  signature[1] = signature.length - 2\n  signature[2] = 0x02\n  signature[3] = r.length\n  r.copy(signature, 4)\n  signature[4 + lenR] = 0x02\n  signature[5 + lenR] = s.length\n  s.copy(signature, 6 + lenR)\n\n  return signature\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n\n\n//# sourceURL=webpack:///../node_modules/bip66/index.js?");

/***/ }),

/***/ "../node_modules/bn.js/lib/bn.js":
/*!***************************************!*\
  !*** ../node_modules/bn.js/lib/bn.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = __webpack_require__(/*! buffer */ 2).Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"../node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///../node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "../node_modules/bottos-crypto-js/lib/keystore.js":
/*!********************************************************!*\
  !*** ../node_modules/bottos-crypto-js/lib/keystore.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {const crypto = __webpack_require__(/*! crypto */ \"../node_modules/crypto-browserify/index.js\")\nconst eccrypto = __webpack_require__(/*! eccrypto */ \"../node_modules/eccrypto/browser.js\")\nconst secp256k1 = __webpack_require__(/*! secp256k1 */ \"../node_modules/secp256k1/elliptic.js\")\nconst scrypt = __webpack_require__(/*! ./scrypt */ \"../node_modules/bottos-crypto-js/lib/scrypt.js\")\nconst keccak = __webpack_require__(/*! keccak */ \"../node_modules/keccak/js.js\")\nconst uuid = __webpack_require__(/*! uuid */ \"../node_modules/uuid/index.js\")\nvar createKeccakHash = __webpack_require__(/*! keccak/js */ \"../node_modules/keccak/js.js\");\n\nfunction isFunction(f) {\n    return typeof f === \"function\";\n}\n\nfunction keccak256(buffer) {\n    return createKeccakHash(\"keccak256\").update(buffer).digest();\n}\n\nclass Keystore{\n    constructor(){\n        this.crypto = crypto\n        this.scrypt = scrypt\n        this.constants = {\n            // Suppress logging\n            quiet: false,\n\n            // Symmetric cipher for private key encryption\n            cipher: \"aes-128-ctr\",\n\n            // Initialization vector size in bytes\n            ivBytes: 16,\n\n            // ECDSA private key size in bytes\n            keyBytes: 32,\n\n            // Key derivation function parameters\n            pbkdf2: {\n                c: 262144,\n                dklen: 32,\n                hash: \"sha256\",\n                prf: \"hmac-sha256\"\n            },\n            scrypt: {\n                memory: 280000000,\n                dklen: 32,\n                n: 262144,\n                r: 1,\n                p: 8\n            }\n        }\n    }\n\n    create(params){\n      let account = params.account;\n      let password = params.password;\n      if(typeof account === 'undefined' || account===null){\n        throw new Error('Must provide account and password')\n      }\n\n      if (typeof password === \"undefined\" || password === null) {\n        throw new Error(\"Must provide password and salt to derive a key\");\n      }\n\n      const ct = this.createKeyInfo(params)\n      const privateKey = params.privateKey || ct.privateKey;\n      return this.dump(account,password,privateKey,ct.salt,ct.iv)\n    }\n\n    str2buf(str, enc){\n        if (!str || str.constructor !== String) return str;\n        if (!enc && this.isHex(str)) enc = \"hex\";\n        if (!enc && this.isBase64(str)) enc = \"base64\";\n        return Buffer.from(str, enc);\n    }\n\n    isHex(str){\n        if (str.length % 2 === 0 && str.match(/^[0-9a-f]+$/i)) return true;\n        return false;\n    }\n\n    isBase64(str){\n        var index;\n        if (str.length % 4 > 0 || str.match(/[^0-9a-z+\\/=]/i)) return false;\n        index = str.indexOf(\"=\");\n        if (index === -1 || str.slice(index).match(/={1,2}/)) return true;\n        return false;\n    }\n\n    isCipherAvailable(cipher){\n        return crypto.getCiphers().some(function (name) { return name === cipher; });\n    }\n\n    keccak256(){\n        return keccak(\"keccak256\").update(buffer).digest();\n    }\n\n    createKeys(){\n        let privateKey = crypto.randomBytes(32)\n        let publicKey = eccrypto.getPublic(privateKey)\n        return {privateKey,publicKey}\n    }\n\n    createKeyInfo(params){\n        var keyBytes, ivBytes, self = this;\n        params = params || {};\n        keyBytes = params.keyBytes || this.constants.keyBytes;\n        ivBytes = params.ivBytes || this.constants.ivBytes;\n    \n        function checkBoundsAndCreateObject(randomBytes) {\n          var privateKey = randomBytes.slice(0, keyBytes);\n          if (!secp256k1.privateKeyVerify(privateKey)) return self.create(params, cb);\n          return {\n            privateKey: params.privateKey || privateKey,\n            iv: randomBytes.slice(keyBytes, keyBytes + ivBytes),\n            salt: randomBytes.slice(keyBytes + ivBytes)\n          };\n        }\n\n        // synchronous key generation if callback not provided\n        return checkBoundsAndCreateObject(crypto.randomBytes(keyBytes + ivBytes + keyBytes));\n    }\n\n    encrypt(plaintext, key, iv, algo){\n        var cipher, ciphertext;\n        algo = algo || this.constants.cipher;\n        if (!this.isCipherAvailable(algo)) throw new Error(algo + \" is not available\");\n        cipher = crypto.createCipheriv(algo, this.str2buf(key), this.str2buf(iv));\n        ciphertext = cipher.update(this.str2buf(plaintext));\n        return Buffer.concat([ciphertext, cipher.final()]);\n    }\n\n    decrypt(ciphertext, key, iv, algo){\n        var decipher, plaintext;\n        algo = algo || this.constants.cipher;\n        if (!this.isCipherAvailable(algo)) throw new Error(algo + \" is not available\");\n        decipher = crypto.createDecipheriv(algo, this.str2buf(key), this.str2buf(iv));\n        plaintext = decipher.update(this.str2buf(ciphertext));\n        return Buffer.concat([plaintext, decipher.final()]);\n    }\n\n    privateKeyToAddress(privateKey){\n        var privateKeyBuffer, publicKey;\n        privateKeyBuffer = this.str2buf(privateKey);\n        if (privateKeyBuffer.length < 32) {\n          privateKeyBuffer = Buffer.concat([\n            Buffer.alloc(32 - privateKeyBuffer.length, 0),\n            privateKeyBuffer\n          ]);\n        }\n        publicKey = secp256k1.publicKeyCreate(privateKeyBuffer, false).slice(1);\n        return \"0x\" + keccak256(publicKey).slice(-20).toString(\"hex\");\n    }\n\n    getMAC(derivedKey, ciphertext){\n        if (derivedKey !== undefined && derivedKey !== null && ciphertext !== undefined && ciphertext !== null) {\n            return keccak256(Buffer.concat([\n              this.str2buf(derivedKey).slice(16, 32),\n              this.str2buf(ciphertext)\n            ])).toString(\"hex\");\n          }\n    }\n\n    deriveKey(password, salt, options, cb){\n        var prf, self = this;\n        if (typeof password === \"undefined\" || password === null || !salt) {\n          throw new Error(\"Must provide password and salt to derive a key\");\n        }\n    \n        options = options || {};\n        options.kdfparams = options.kdfparams || {};\n    \n        // convert strings to buffers\n        password = this.str2buf(password, \"utf8\");\n        salt = this.str2buf(salt);\n    \n        // use scrypt as key derivation function\n          if (isFunction(this.scrypt)) {\n            this.scrypt = this.scrypt(options.kdfparams.memory || self.constants.scrypt.memory);\n          }\n          if (isFunction(cb)) {\n            setTimeout(function () {\n              cb(Buffer.from(scrypt.to_hex(scrypt.crypto_scrypt(\n                password,\n                salt,\n                options.kdfparams.n || self.constants.scrypt.n,\n                options.kdfparams.r || self.constants.scrypt.r,\n                options.kdfparams.p || self.constants.scrypt.p,\n                options.kdfparams.dklen || self.constants.scrypt.dklen\n              )), \"hex\"));\n            }, 0);\n          } else {\n            return Buffer.from(this.scrypt.to_hex(this.scrypt.crypto_scrypt(\n              password,\n              salt,\n              options.kdfparams.n || this.constants.scrypt.n,\n              options.kdfparams.r || this.constants.scrypt.r,\n              options.kdfparams.p || this.constants.scrypt.p,\n              options.kdfparams.dklen || this.constants.scrypt.dklen\n            )), \"hex\");\n          }\n    }\n\n    marshal(derivedKey,account, privateKey, salt, iv, options){\n        var ciphertext, keyObject, algo;\n        options = options || {};\n        options.kdfparams = options.kdfparams || {};\n        algo = options.cipher || this.constants.cipher;\n    \n        // encrypt using first 16 bytes of derived key\n        ciphertext = this.encrypt(privateKey, derivedKey.slice(0, 16), iv, algo).toString(\"hex\");\n    \n        keyObject = {\n          account:account,\n          crypto: {\n            cipher: options.cipher || this.constants.cipher,\n            ciphertext: ciphertext,\n            cipherparams: { iv: iv.toString(\"hex\") },\n            mac: this.getMAC(derivedKey, ciphertext)\n          },\n          id: uuid.v4(), // random 128-bit UUID\n          version: 3\n        };\n    \n        keyObject.crypto.kdf = \"scrypt\";\n        keyObject.crypto.kdfparams = {\n          dklen: options.kdfparams.dklen || this.constants.scrypt.dklen,\n          n: options.kdfparams.n || this.constants.scrypt.n,\n          r: options.kdfparams.r || this.constants.scrypt.r,\n          p: options.kdfparams.p || this.constants.scrypt.p,\n          salt: salt.toString(\"hex\")\n        };\n    \n        return keyObject;\n    }\n\n    dump(account,password, privateKey, salt, iv, options, cb){\n        options = options || {};\n        iv = this.str2buf(iv);\n        privateKey = this.str2buf(privateKey);\n\n        // synchronous if no callback provided\n        if (!isFunction(cb)) {\n        return this.marshal(this.deriveKey(password, salt, options),account, privateKey, salt, iv, options);\n        }\n\n        // asynchronous if callback provided\n        this.deriveKey(password, salt, options, function (derivedKey) {\n        cb(this.marshal(derivedKey,account, privateKey, salt, iv, options));\n        }.bind(this));\n    }\n\n    recover(password, keyObject, cb){\n        var keyObjectCrypto, iv, salt, ciphertext, algo, self = this;\n        keyObjectCrypto = keyObject.Crypto || keyObject.crypto;\n    \n        // verify that message authentication codes match, then decrypt\n        function verifyAndDecrypt(derivedKey, salt, iv, ciphertext, algo) {\n          var key;\n          if (self.getMAC(derivedKey, ciphertext) !== keyObjectCrypto.mac) {\n            throw new Error(\"message authentication code mismatch\");\n          }\n          if (keyObject.version === \"1\") {\n            key = keccak256(derivedKey.slice(0, 16)).slice(0, 16);\n          } else {\n            key = derivedKey.slice(0, 16);\n          }\n          return self.decrypt(ciphertext, key, iv, algo);\n        }\n    \n        iv = this.str2buf(keyObjectCrypto.cipherparams.iv);\n        salt = this.str2buf(keyObjectCrypto.kdfparams.salt);\n        ciphertext = this.str2buf(keyObjectCrypto.ciphertext);\n        algo = keyObjectCrypto.cipher;\n    \n        if (keyObjectCrypto.kdf === \"pbkdf2\" && keyObjectCrypto.kdfparams.prf !== \"hmac-sha256\") {\n          throw new Error(\"PBKDF2 only supported with HMAC-SHA256\");\n        }\n    \n        // derive secret key from password\n        if (!isFunction(cb)) {\n          return verifyAndDecrypt(this.deriveKey(password, salt, keyObjectCrypto), salt, iv, ciphertext, algo);\n        }\n        this.deriveKey(password, salt, keyObjectCrypto, function (derivedKey) {\n          cb(verifyAndDecrypt(derivedKey, salt, iv, ciphertext, algo));\n        });\n    }\n}\n\nmodule.exports = new Keystore()\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/bottos-crypto-js/lib/keystore.js?");

/***/ }),

/***/ "../node_modules/bottos-crypto-js/lib/scrypt.js":
/*!******************************************************!*\
  !*** ../node_modules/bottos-crypto-js/lib/scrypt.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, __dirname, Buffer) {module.exports = function (requested_total_memory) {\n  var Module = {\n    TOTAL_MEMORY: (requested_total_memory || 33554432),\n  };\n  var scrypt_raw = Module;\nvar Module;if(!Module)Module=(typeof Module!==\"undefined\"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module[\"ENVIRONMENT\"]){if(Module[\"ENVIRONMENT\"]===\"WEB\"){ENVIRONMENT_IS_WEB=true}else if(Module[\"ENVIRONMENT\"]===\"WORKER\"){ENVIRONMENT_IS_WORKER=true}else if(Module[\"ENVIRONMENT\"]===\"NODE\"){ENVIRONMENT_IS_NODE=true}else if(Module[\"ENVIRONMENT\"]===\"SHELL\"){ENVIRONMENT_IS_SHELL=true}else{throw new Error(\"The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.\")}}else{ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&\"function\"===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module[\"print\"])Module[\"print\"]=console.log;if(!Module[\"printErr\"])Module[\"printErr\"]=console.warn;var nodeFS;var nodePath;Module[\"read\"]=function read(filename,binary){if(!nodeFS)nodeFS=__webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'fs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));if(!nodePath)nodePath=__webpack_require__(/*! path */ \"../node_modules/path-browserify/index.js\");filename=nodePath[\"normalize\"](filename);var ret=nodeFS[\"readFileSync\"](filename);if(!ret&&filename!=nodePath[\"resolve\"](filename)){filename=path.join(__dirname,\"..\",\"src\",filename);ret=nodeFS[\"readFileSync\"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module[\"load\"]=function load(f){globalEval(read(f))};if(!Module[\"thisProgram\"]){if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}else{Module[\"thisProgram\"]=\"unknown-program\"}}Module[\"arguments\"]=process[\"argv\"].slice(2);if(true){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(!Module[\"print\"])Module[\"print\"]=print;if(typeof printErr!=\"undefined\")Module[\"printErr\"]=printErr;if(typeof read!=\"undefined\"){Module[\"read\"]=read}else{Module[\"read\"]=function read(){throw\"no read() available (jsc?)\"}}Module[\"readBinary\"]=function readBinary(f){if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}var data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module[\"read\"]=function read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof console!==\"undefined\"){if(!Module[\"print\"])Module[\"print\"]=function print(x){console.log(x)};if(!Module[\"printErr\"])Module[\"printErr\"]=function printErr(x){console.warn(x)}}else{var TRY_USE_DUMP=false;if(!Module[\"print\"])Module[\"print\"]=TRY_USE_DUMP&&typeof dump!==\"undefined\"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module[\"load\"]=importScripts}if(typeof Module[\"setWindowTitle\"]===\"undefined\"){Module[\"setWindowTitle\"]=(function(title){document.title=title})}}else{throw\"Unknown runtime environment. Where are we?\"}function globalEval(x){eval.call(null,x)}if(!Module[\"load\"]&&Module[\"read\"]){Module[\"load\"]=function load(f){globalEval(Module[\"read\"](f))}}if(!Module[\"print\"]){Module[\"print\"]=(function(){})}if(!Module[\"printErr\"]){Module[\"printErr\"]=Module[\"print\"]}if(!Module[\"arguments\"]){Module[\"arguments\"]=[]}if(!Module[\"thisProgram\"]){Module[\"thisProgram\"]=\"./this.program\"}Module.print=Module[\"print\"];Module.printErr=Module[\"printErr\"];Module[\"preRun\"]=[];Module[\"postRun\"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return Runtime.QUANTUM_SIZE}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type===\"double\"||type===\"i64\"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type==\"i64\"||type==\"double\"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){assert(args.length==sig.length-1);if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);assert(\"dynCall_\"+sig in Module,\"bad function pointer type - no table for sig '\"+sig+\"'\");return Module[\"dynCall_\"+sig].apply(null,args)}else{assert(sig.length==1);assert(\"dynCall_\"+sig in Module,\"bad function pointer type - no table for sig '\"+sig+\"'\");return Module[\"dynCall_\"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw\"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.\"}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]}),getCompilerSetting:(function(name){throw\"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work\"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;assert((STACKTOP|0)<(STACK_MAX|0)|0)|0;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+(assert(!staticSealed),size)|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+(assert(DYNAMICTOP>0),size)|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){DYNAMICTOP=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module[\"Runtime\"]=Runtime;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];if(!func){try{func=eval(\"_\"+ident)}catch(e){}}assert(func,\"Cannot call unknown function \"+ident+\" (perhaps LLVM optimizations or closure removed it?)\");return func}var cwrap,ccall;((function(){var JSfuncs={\"stackSave\":(function(){Runtime.stackSave()}),\"stackRestore\":(function(){Runtime.stackRestore()}),\"arrayToC\":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),\"stringToC\":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret})};var toC={\"string\":JSfuncs[\"stringToC\"],\"array\":JSfuncs[\"arrayToC\"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;assert(returnType!==\"array\",'Return type should not be \"array\".');if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if((!opts||!opts.async)&&typeof EmterpreterAsync===\"object\"){assert(!EmterpreterAsync.state,\"cannot start async op with normal JS calling ccall\")}if(opts&&opts.async)assert(!returnType,\"async ccalls cannot return values\");if(returnType===\"string\")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};var sourceRegex=/^function\\s*[a-zA-Z$_0-9]*\\s*\\(([^)]*)\\)\\s*{\\s*([^*]*?)[\\s;]*(?:return\\s*(.*?)[;\\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource=null;function ensureJSsource(){if(!JSsource){JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}}}cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type===\"number\"}));var numericRet=returnType!==\"string\";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return\"$\"+i}));var funcstr=\"(function(\"+argNames.join(\",\")+\") {\";var nargs=argTypes.length;if(!numericArgs){ensureJSsource();funcstr+=\"var stack = \"+JSsource[\"stackSave\"].body+\";\";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type===\"number\")continue;var convertCode=JSsource[type+\"ToC\"];funcstr+=\"var \"+convertCode.arguments+\" = \"+arg+\";\";funcstr+=convertCode.body+\";\";funcstr+=arg+\"=(\"+convertCode.returnValue+\");\"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+=\"var ret = \"+cfuncname+\"(\"+argNames.join(\",\")+\");\";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+=\"ret = \"+strgfy+\"(ret);\"}funcstr+=\"if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }\";if(!numericArgs){ensureJSsource();funcstr+=JSsource[\"stackRestore\"].body.replace(\"()\",\"(stack)\")+\";\"}funcstr+=\"return ret})\";return eval(funcstr)}}))();Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}Module[\"setValue\"]=setValue;function getValue(ptr,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":return HEAP8[ptr>>0];case\"i8\":return HEAP8[ptr>>0];case\"i16\":return HEAP16[ptr>>1];case\"i32\":return HEAP32[ptr>>2];case\"i64\":return HEAP32[ptr>>2];case\"float\":return HEAPF32[ptr>>2];case\"double\":return HEAPF64[ptr>>3];default:abort(\"invalid type for setValue: \"+type)}return null}Module[\"getValue\"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module[\"ALLOC_NORMAL\"]=ALLOC_NORMAL;Module[\"ALLOC_STACK\"]=ALLOC_STACK;Module[\"ALLOC_STATIC\"]=ALLOC_STATIC;Module[\"ALLOC_DYNAMIC\"]=ALLOC_DYNAMIC;Module[\"ALLOC_NONE\"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc===\"function\"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr===\"function\"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}assert(type,\"Must know what type to store in allocate!\");if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module[\"allocate\"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(typeof _sbrk!==\"undefined\"&&!_sbrk.called||!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module[\"getMemory\"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){assert(ptr+i<TOTAL_MEMORY);t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module[\"UTF8ToString\"](ptr)}Module[\"Pointer_stringify\"]=Pointer_stringify;function AsciiToString(ptr){var str=\"\";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module[\"AsciiToString\"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module[\"stringToAscii\"]=stringToAscii;function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}Module[\"UTF8ArrayToString\"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module[\"UTF8ToString\"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module[\"stringToUTF8Array\"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite==\"number\",\"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module[\"stringToUTF8\"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module[\"lengthBytesUTF8\"]=lengthBytesUTF8;function demangle(func){var hasLibcxxabi=!!Module[\"___cxa_demangle\"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module[\"___cxa_demangle\"](buf,0,0,status);if(getValue(status,\"i32\")===0&&ret){return Pointer_stringify(ret)}}catch(e){return func}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}Runtime.warnOnce(\"warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling\");return func}function demangleAll(text){return text.replace(/__Z[\\w\\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+\" [\"+y+\"]\"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module[\"stackTrace\"]=stackTrace;var PAGE_SIZE=4096;function alignMemoryPage(x){if(x%4096>0){x+=4096-x%4096}return x}var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){Module.printErr(\"increasing TOTAL_MEMORY to \"+totalMemory+\" to be compliant with the asm.js spec (and given that TOTAL_STACK=\"+TOTAL_STACK+\")\");TOTAL_MEMORY=totalMemory}assert(typeof Int32Array!==\"undefined\"&&typeof Float64Array!==\"undefined\"&&!!(new Int32Array(1))[\"subarray\"]&&!!(new Int32Array(1))[\"set\"],\"JS engine does not provide full typed array support\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"];assert(buffer.byteLength===TOTAL_MEMORY,\"provided buffer should be \"+TOTAL_MEMORY+\" bytes, but it is \"+buffer.byteLength)}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}updateGlobalBufferViews();HEAP32[0]=255;if(HEAPU8[0]!==255||HEAPU8[3]!==0)throw\"Typed arrays 2 must be run on a little-endian system\";Module[\"HEAP\"]=HEAP;Module[\"buffer\"]=buffer;Module[\"HEAP8\"]=HEAP8;Module[\"HEAP16\"]=HEAP16;Module[\"HEAP32\"]=HEAP32;Module[\"HEAPU8\"]=HEAPU8;Module[\"HEAPU16\"]=HEAPU16;Module[\"HEAPU32\"]=HEAPU32;Module[\"HEAPF32\"]=HEAPF32;Module[\"HEAPF64\"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Runtime.dynCall(\"v\",func)}else{Runtime.dynCall(\"vi\",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module[\"addOnPreRun\"]=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module[\"addOnInit\"]=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module[\"addOnPreMain\"]=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module[\"addOnExit\"]=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module[\"addOnPostRun\"]=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module[\"intArrayFromString\"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\");chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}Module[\"intArrayToString\"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module[\"writeStringToMemory\"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}Module[\"writeArrayToMemory\"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===str.charCodeAt(i)&255);HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module[\"writeAsciiToMemory\"]=writeAsciiToMemory;if(!Math[\"imul\"]||Math[\"imul\"](4294967295,5)!==-5)Math[\"imul\"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math[\"imul\"];if(!Math[\"clz32\"])Math[\"clz32\"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math[\"clz32\"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function getUniqueRunDependency(id){var orig=id;while(1){if(!runDependencyTracking[id])return id;id=orig+Math.random()}return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!==\"undefined\"){runDependencyWatcher=setInterval((function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;Module.printErr(\"still waiting on run dependencies:\")}Module.printErr(\"dependency: \"+dep)}if(shown){Module.printErr(\"(end of list)\")}}),1e4)}}else{Module.printErr(\"warning: run dependency added without ID\")}}Module[\"addRunDependency\"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{Module.printErr(\"warning: run dependency removed without ID\")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"removeRunDependency\"]=removeRunDependency;Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var ASM_CONSTS=[];STATIC_BASE=8;STATICTOP=STATIC_BASE+170112;__ATINIT__.push();allocate([154,58,2,0,168,58,2,0,16,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,37,169,250,32,127,135,202,9,164,239,139,159,119,122,202,22,190,183,132,174,24,48,191,191,211,131,37,170,187,147,119,223,27,167,132,215,70,234,39,59,245,22,164,111,191,172,245,17,197,190,186,76,74,179,172,199,250,111,70,11,108,15,71,123,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,34,174,40,215,152,47,138,66,205,101,239,35,145,68,55,113,47,59,77,236,207,251,192,181,188,219,137,129,165,219,181,233,56,181,72,243,91,194,86,57,25,208,5,182,241,17,241,89,155,79,25,175,164,130,63,146,24,129,109,218,213,94,28,171,66,2,3,163,152,170,7,216,190,111,112,69,1,91,131,18,140,178,228,78,190,133,49,36,226,180,255,213,195,125,12,85,111,137,123,242,116,93,190,114,177,150,22,59,254,177,222,128,53,18,199,37,167,6,220,155,148,38,105,207,116,241,155,193,210,74,241,158,193,105,155,228,227,37,79,56,134,71,190,239,181,213,140,139,198,157,193,15,101,156,172,119,204,161,12,36,117,2,43,89,111,44,233,45,131,228,166,110,170,132,116,74,212,251,65,189,220,169,176,92,181,83,17,131,218,136,249,118,171,223,102,238,82,81,62,152,16,50,180,45,109,198,49,168,63,33,251,152,200,39,3,176,228,14,239,190,199,127,89,191,194,143,168,61,243,11,224,198,37,167,10,147,71,145,167,213,111,130,3,224,81,99,202,6,112,110,14,10,103,41,41,20,252,47,210,70,133,10,183,39,38,201,38,92,56,33,27,46,237,42,196,90,252,109,44,77,223,179,149,157,19,13,56,83,222,99,175,139,84,115,10,101,168,178,119,60,187,10,106,118,230,174,237,71,46,201,194,129,59,53,130,20,133,44,114,146,100,3,241,76,161,232,191,162,1,48,66,188,75,102,26,168,145,151,248,208,112,139,75,194,48,190,84,6,163,81,108,199,24,82,239,214,25,232,146,209,16,169,101,85,36,6,153,214,42,32,113,87,133,53,14,244,184,209,187,50,112,160,106,16,200,208,210,184,22,193,164,25,83,171,65,81,8,108,55,30,153,235,142,223,76,119,72,39,168,72,155,225,181,188,176,52,99,90,201,197,179,12,28,57,203,138,65,227,74,170,216,78,115,227,99,119,79,202,156,91,163,184,178,214,243,111,46,104,252,178,239,93,238,130,143,116,96,47,23,67,111,99,165,120,114,171,240,161,20,120,200,132,236,57,100,26,8,2,199,140,40,30,99,35,250,255,190,144,233,189,130,222,235,108,80,164,21,121,198,178,247,163,249,190,43,83,114,227,242,120,113,198,156,97,38,234,206,62,39,202,7,194,192,33,199,184,134,209,30,235,224,205,214,125,218,234,120,209,110,238,127,79,125,245,186,111,23,114,170,103,240,6,166,152,200,162,197,125,99,10,174,13,249,190,4,152,63,17,27,71,28,19,53,11,113,27,132,125,4,35,245,119,219,40,147,36,199,64,123,171,202,50,188,190,201,21,10,190,158,60,76,13,16,156,196,103,29,67,182,66,62,203,190,212,197,76,42,126,101,252,156,41,127,89,236,250,214,58,171,111,203,95,23,88,71,74,140,25,68,108,0,0,0,64,251,33,249,63,0,0,0,0,45,68,116,62,0,0,0,128,152,70,248,60,0,0,0,96,81,204,120,59,0,0,0,128,131,27,240,57,0,0,0,64,32,37,122,56,0,0,0,128,34,130,227,54,0,0,0,0,29,243,105,53,205,59,127,102,158,160,230,63,135,1,235,115,20,161,231,63,219,160,42,66,229,172,232,63,144,240,163,130,145,196,233,63,173,211,90,153,159,232,234,63,156,82,133,221,155,25,236,63,135,164,251,220,24,88,237,63,218,144,164,162,175,164,238,63,0,0,0,0,0,0,240,63,15,137,249,108,88,181,240,63,123,81,125,60,184,114,241,63,56,98,117,110,122,56,242,63,21,183,49,10,254,6,243,63,34,52,18,76,166,222,243,63,39,42,54,213,218,191,244,63,41,84,72,221,7,171,245,63,93,61,127,102,158,160,230,63,0,0,0,0,0,136,57,61,68,23,117,250,82,176,230,63,0,0,0,0,0,0,216,60,254,217,11,117,18,192,230,63,0,0,0,0,0,120,40,189,191,118,212,221,220,207,230,63,0,0,0,0,0,192,30,61,41,26,101,60,178,223,230,63,0,0,0,0,0,0,216,188,227,58,89,152,146,239,230,63,0,0,0,0,0,0,188,188,134,147,81,249,125,255,230,63,0,0,0,0,0,216,47,189,163,45,244,102,116,15,231,63,0,0,0,0,0,136,44,189,195,95,236,232,117,31,231,63,0,0,0,0,0,192,19,61,5,207,234,134,130,47,231,63,0,0,0,0,0,48,56,189,82,129,165,72,154,63,231,63,0,0,0,0,0,192,0,189,252,204,215,53,189,79,231,63,0,0,0,0,0,136,47,61,241,103,66,86,235,95,231,63,0,0,0,0,0,224,3,61,72,109,171,177,36,112,231,63,0,0,0,0,0,208,39,189,56,93,222,79,105,128,231,63,0,0,0,0,0,0,221,188,0,29,172,56,185,144,231,63,0,0,0,0,0,0,227,60,120,1,235,115,20,161,231,63,0,0,0,0,0,0,237,188,96,208,118,9,123,177,231,63,0,0,0,0,0,64,32,61,51,193,48,1,237,193,231,63,0,0,0,0,0,0,160,60,54,134,255,98,106,210,231,63,0,0,0,0,0,144,38,189,59,78,207,54,243,226,231,63,0,0,0,0,0,224,2,189,232,195,145,132,135,243,231,63,0,0,0,0,0,88,36,189,78,27,62,84,39,4,232,63,0,0,0,0,0,0,51,61,26,7,209,173,210,20,232,63,0,0,0,0,0,0,15,61,126,205,76,153,137,37,232,63,0,0,0,0,0,192,33,189,208,66,185,30,76,54,232,63,0,0,0,0,0,208,41,61,181,202,35,70,26,71,232,63,0,0,0,0,0,16,71,61,188,91,159,23,244,87,232,63,0,0,0,0,0,96,34,61,175,145,68,155,217,104,232,63,0,0,0,0,0,196,50,189,149,163,49,217,202,121,232,63,0,0,0,0,0,0,35,189,184,101,138,217,199,138,232,63,0,0,0,0,0,128,42,189,0,88,120,164,208,155,232,63,0,0,0,0,0,0,237,188,35,162,42,66,229,172,232,63,0,0,0,0,0,40,51,61,250,25,214,186,5,190,232,63,0,0,0,0,0,180,66,61,131,67,181,22,50,207,232,63,0,0,0,0,0,208,46,189,76,102,8,94,106,224,232,63,0,0,0,0,0,80,32,189,7,120,21,153,174,241,232,63,0,0,0,0,0,40,40,61,14,44,40,208,254,2,233,63,0,0,0,0,0,176,28,189,150,255,145,11,91,20,233,63,0,0,0,0,0,224,5,189,249,47,170,83,195,37,233,63,0,0,0,0,0,64,245,60,74,198,205,176,55,55,233,63,0,0,0,0,0,32,23,61,174,152,95,43,184,72,233,63,0,0,0,0,0,0,9,189,203,82,200,203,68,90,233,63,0,0,0,0,0,104,37,61,33,111,118,154,221,107,233,63,0,0,0,0,0,208,54,189,42,78,222,159,130,125,233,63,0,0,0,0,0,0,1,189,163,35,122,228,51,143,233,63,0,0,0,0,0,0,45,61,4,6,202,112,241,160,233,63,0,0,0,0,0,164,56,189,137,255,83,77,187,178,233,63,0,0,0,0,0,92,53,61,91,241,163,130,145,196,233,63,0,0,0,0,0,184,38,61,197,184,75,25,116,214,233,63,0,0,0,0,0,0,236,188,142,35,227,25,99,232,233,63,0,0,0,0,0,208,23,61,2,243,7,141,94,250,233,63,0,0,0,0,0,64,22,61,77,229,93,123,102,12,234,63,0,0,0,0,0,0,245,188,246,184,142,237,122,30,234,63,0,0,0,0,0,224,9,61,39,46,74,236,155,48,234,63,0,0,0,0,0,216,42,61,93,10,70,128,201,66,234,63,0,0,0,0,0,240,26,189,155,37,62,178,3,85,234,63,0,0,0,0,0,96,11,61,19,98,244,138,74,103,234,63,0,0,0,0,0,136,56,61,167,179,48,19,158,121,234,63,0,0,0,0,0,32,17,61,141,46,193,83,254,139,234,63,0,0,0,0,0,192,6,61,210,252,121,85,107,158,234,63,0,0,0,0,0,184,41,189,184,111,53,33,229,176,234,63,0,0,0,0,0,112,43,61,129,243,211,191,107,195,234,63,0,0,0,0,0,0,217,60,128,39,60,58,255,213,234,63,0,0,0,0,0,0,228,60,163,210,90,153,159,232,234,63,0,0,0,0,0,144,44,189,103,243,34,230,76,251,234,63,0,0,0,0,0,80,22,61,144,183,141,41,7,14,235,63,0,0,0,0,0,212,47,61,169,137,154,108,206,32,235,63,0,0,0,0,0,112,18,61,75,26,79,184,162,51,235,63,0,0,0,0,0,71,77,61,231,71,183,21,132,70,235,63,0,0,0,0,0,56,56,189,58,89,229,141,114,89,235,63,0,0,0,0,0,0,152,60,106,197,241,41,110,108,235,63,0,0,0,0,0,208,10,61,80,94,251,242,118,127,235,63,0,0,0,0,0,128,222,60,178,73,39,242,140,146,235,63,0,0,0,0,0,192,4,189,3,6,161,48,176,165,235,63,0,0,0,0,0,112,13,189,102,111,154,183,224,184,235,63,0,0,0,0,0,144,13,61,255,193,75,144,30,204,235,63,0,0,0,0,0,160,2,61,111,161,243,195,105,223,235,63,0,0,0,0,0,120,31,189,184,29,215,91,194,242,235,63,0,0,0,0,0,160,16,189,233,178,65,97,40,6,236,63,0,0,0,0,0,64,17,189,224,82,133,221,155,25,236,63,0,0,0,0,0,224,11,61,238,100,250,217,28,45,236,63,0,0,0,0,0,64,9,189,47,208,255,95,171,64,236,63,0,0,0,0,0,208,14,189,21,253,250,120,71,84,236,63,0,0,0,0,0,102,57,61,203,208,87,46,241,103,236,63,0,0,0,0,0,16,26,189,182,193,136,137,168,123,236,63,0,0,0,0,128,69,88,189,51,231,6,148,109,143,236,63,0,0,0,0,0,72,26,189,223,196,81,87,64,163,236,63,0,0,0,0,0,0,203,60,148,144,239,220,32,183,236,63,0,0,0,0,0,64,1,61,137,22,109,46,15,203,236,63,0,0,0,0,0,32,240,60,18,196,93,85,11,223,236,63,0,0,0,0,0,96,243,60,59,171,91,91,21,243,236,63,0,0,0,0,0,144,6,189,188,137,7,74,45,7,237,63,0,0,0,0,0,160,9,61,250,200,8,43,83,27,237,63,0,0,0,0,0,224,21,189,133,138,13,8,135,47,237,63,0,0,0,0,0,40,29,61,3,162,202,234,200,67,237,63,0,0,0,0,0,160,1,61,145,164,251,220,24,88,237,63,0,0,0,0,0,0,223,60,161,230,98,232,118,108,237,63,0,0,0,0,0,160,3,189,78,131,201,22,227,128,237,63,0,0,0,0,0,216,12,189,144,96,255,113,93,149,237,63,0,0,0,0,0,192,244,60,174,50,219,3,230,169,237,63,0,0,0,0,0,144,255,60,37,131,58,214,124,190,237,63,0,0,0,0,0,128,233,60,69,180,1,243,33,211,237,63,0,0,0,0,0,32,245,188,191,5,28,100,213,231,237,63,0,0,0,0,0,112,29,189,236,154,123,51,151,252,237,63,0,0,0,0,0,20,22,189,94,125,25,107,103,17,238,63,0,0,0,0,0,72,11,61,231,163,245,20,70,38,238,63,0,0,0,0,0,206,64,61,92,238,22,59,51,59,238,63,0,0,0,0,0,104,12,61,180,63,139,231,46,80,238,63,0,0,0,0,0,48,9,189,104,109,103,36,57,101,238,63,0,0,0,0,0,0,229,188,68,76,199,251,81,122,238,63,0,0,0,0,0,248,7,189,38,183,205,119,121,143,238,63,0,0,0,0,0,112,243,188,232,144,164,162,175,164,238,63,0,0,0,0,0,208,229,60,228,202,124,134,244,185,238,63,0,0,0,0,0,26,22,61,13,104,142,45,72,207,238,63,0,0,0,0,0,80,245,60,20,133,24,162,170,228,238,63,0,0,0,0,0,64,198,60,19,90,97,238,27,250,238,63,0,0,0,0,0,128,238,188,6,65,182,28,156,15,239,63,0,0,0,0,0,136,250,188,99,185,107,55,43,37,239,63,0,0,0,0,0,144,44,189,117,114,221,72,201,58,239,63,0,0,0,0,0,0,170,60,36,69,110,91,118,80,239,63,0,0,0,0,0,240,244,188,253,68,136,121,50,102,239,63,0,0,0,0,0,128,202,60,56,190,156,173,253,123,239,63,0,0,0,0,0,188,250,60,130,60,36,2,216,145,239,63,0,0,0,0,0,96,212,188,142,144,158,129,193,167,239,63,0,0,0,0,0,12,11,189,17,213,146,54,186,189,239,63,0,0,0,0,0,224,192,188,148,113,143,43,194,211,239,63,0,0,0,0,128,222,16,189,238,35,42,107,217,233,239,63,0,0,0,0,0,67,238,60,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,0,190,188,90,250,26,11,240,63,0,0,0,0,0,64,179,188,3,51,251,169,61,22,240,63,0,0,0,0,0,23,18,189,130,2,59,20,104,33,240,63,0,0,0,0,0,64,186,60,108,128,119,62,154,44,240,63,0,0,0,0,0,152,239,60,202,187,17,46,212,55,240,63,0,0,0,0,0,64,199,188,137,127,110,232,21,67,240,63,0,0,0,0,0,48,216,60,103,84,246,114,95,78,240,63,0,0,0,0,0,63,26,189,90,133,21,211,176,89,240,63,0,0,0,0,0,132,2,189,149,31,60,14,10,101,240,63,0,0,0,0,0,96,241,60,26,247,221,41,107,112,240,63,0,0,0,0,0,36,21,61,45,168,114,43,212,123,240,63,0,0,0,0,0,160,233,188,208,155,117,24,69,135,240,63,0,0,0,0,0,64,230,60,200,7,102,246,189,146,240,63,0,0,0,0,0,120,0,189,131,243,198,202,62,158,240,63,0,0,0,0,0,0,152,188,48,57,31,155,199,169,240,63,0,0,0,0,0,160,255,60,252,136,249,108,88,181,240,63,0,0,0,0,0,200,250,188,138,108,228,69,241,192,240,63,0,0,0,0,0,192,217,60,22,72,114,43,146,204,240,63,0,0,0,0,0,32,5,61,216,93,57,35,59,216,240,63,0,0,0,0,0,208,250,188,243,209,211,50,236,227,240,63,0,0,0,0,0,172,27,61,166,169,223,95,165,239,240,63,0,0,0,0,0,232,4,189,240,210,254,175,102,251,240,63,0,0,0,0,0,48,13,189,75,35,215,40,48,7,241,63,0,0,0,0,0,80,241,60,91,91,18,208,1,19,241,63,0,0,0,0,0,0,236,60,249,42,94,171,219,30,241,63,0,0,0,0,0,188,22,61,213,49,108,192,189,42,241,63,0,0,0,0,0,64,232,60,125,4,242,20,168,54,241,63,0,0,0,0,0,208,14,189,233,45,169,174,154,66,241,63,0,0,0,0,0,224,232,60,56,49,79,147,149,78,241,63,0,0,0,0,0,64,235,60,113,142,165,200,152,90,241,63,0,0,0,0,0,48,5,61,223,195,113,84,164,102,241,63,0,0,0,0,0,56,3,61,17,82,125,60,184,114,241,63,0,0,0,0,0,212,40,61,159,187,149,134,212,126,241,63,0,0,0,0,0,208,5,189,147,141,140,56,249,138,241,63,0,0,0,0,0,136,28,189,102,93,55,88,38,151,241,63,0,0,0,0,0,240,17,61,167,203,111,235,91,163,241,63,0,0,0,0,0,72,16,61,227,135,19,248,153,175,241,63,0,0,0,0,0,57,71,189,84,93,4,132,224,187,241,63,0,0,0,0,0,228,36,61,67,28,40,149,47,200,241,63,0,0,0,0,0,32,10,189,178,185,104,49,135,212,241,63,0,0,0,0,0,128,227,60,49,64,180,94,231,224,241,63,0,0,0,0,0,192,234,60,56,217,252,34,80,237,241,63,0,0,0,0,0,144,1,61,247,205,56,132,193,249,241,63,0,0,0,0,0,120,27,189,143,141,98,136,59,6,242,63,0,0,0,0,0,148,45,61,30,168,120,53,190,18,242,63,0,0,0,0,0,0,216,60,65,221,125,145,73,31,242,63,0,0,0,0,0,52,43,61,35,19,121,162,221,43,242,63,0,0,0,0,0,248,25,61,231,97,117,110,122,56,242,63,0,0,0,0,0,200,25,189,39,20,130,251,31,69,242,63,0,0,0,0,0,48,2,61,2,166,178,79,206,81,242,63,0,0,0,0,0,72,19,189,176,206,30,113,133,94,242,63,0,0,0,0,0,112,18,61,22,125,226,101,69,107,242,63,0,0,0,0,0,208,17,61,15,224,29,52,14,120,242,63,0,0,0,0,0,238,49,61,62,99,245,225,223,132,242,63,0,0,0,0,0,192,20,189,48,187,145,117,186,145,242,63,0,0,0,0,0,216,19,189,9,223,31,245,157,158,242,63,0,0,0,0,0,176,8,61,155,14,209,102,138,171,242,63,0,0,0,0,0,124,34,189,58,218,218,208,127,184,242,63,0,0,0,0,0,52,42,61,249,26,119,57,126,197,242,63,0,0,0,0,0,128,16,189,217,2,228,166,133,210,242,63,0,0,0,0,0,208,14,189,121,21,100,31,150,223,242,63,0,0,0,0,0,32,244,188,207,46,62,169,175,236,242,63,0,0,0,0,0,152,36,189,34,136,189,74,210,249,242,63,0,0,0,0,0,48,22,189,37,182,49,10,254,6,243,63,0,0,0,0,0,54,50,189,11,165,238,237,50,20,243,63,0,0,0,0,128,223,112,189,184,215,76,252,112,33,243,63,0,0,0,0,0,72,34,189,162,233,168,59,184,46,243,63,0,0,0,0,0,152,37,189,102,23,100,178,8,60,243,63,0,0,0,0,0,208,30,61,39,250,227,102,98,73,243,63,0,0,0,0,0,0,220,188,15,159,146,95,197,86,243,63,0,0,0,0,0,216,48,189,185,136,222,162,49,100,243,63,0,0,0,0,0,200,34,61,57,170,58,55,167,113,243,63,0,0,0,0,0,96,32,61,254,116,30,35,38,127,243,63,0,0,0,0,0,96,22,189,56,216,5,109,174,140,243,63,0,0,0,0,0,224,10,189,195,62,113,27,64,154,243,63,0,0,0,0,0,114,68,189,32,160,229,52,219,167,243,63,0,0,0,0,0,32,8,61,149,110,236,191,127,181,243,63,0,0,0,0,0,128,62,61,242,168,19,195,45,195,243,63,0,0,0,0,0,128,239,60,34,225,237,68,229,208,243,63,0,0,0,0,0,160,23,189,187,52,18,76,166,222,243,63,0,0,0,0,0,48,38,61,204,78,28,223,112,236,243,63,0,0,0,0,0,166,72,189,140,126,172,4,69,250,243,63,0,0,0,0,0,220,60,189,187,160,103,195,34,8,244,63,0,0,0,0,0,184,37,61,149,46,247,33,10,22,244,63,0,0,0,0,0,192,30,61,70,70,9,39,251,35,244,63,0,0,0,0,0,96,19,189,32,169,80,217,245,49,244,63,0,0,0,0,0,152,35,61,235,185,132,63,250,63,244,63,0,0,0,0,0,0,250,60,25,137,97,96,8,78,244,63,0,0,0,0,0,192,246,188,1,210,167,66,32,92,244,63,0,0,0,0,0,192,11,189,22,0,29,237,65,106,244,63,0,0,0,0,0,128,18,189,38,51,139,102,109,120,244,63,0,0,0,0,0,224,48,61,0,60,193,181,162,134,244,63,0,0,0,0,0,64,45,189,4,175,146,225,225,148,244,63,0,0,0,0,0,32,12,61,114,211,215,240,42,163,244,63,0,0,0,0,0,80,30,189,1,184,109,234,125,177,244,63,0,0,0,0,0,128,7,61,225,41,54,213,218,191,244,63,0,0,0,0,0,128,19,189,50,193,23,184,65,206,244,63,0,0,0,0,0,128,0,61,219,221,253,153,178,220,244,63,0,0,0,0,0,112,44,61,150,171,216,129,45,235,244,63,0,0,0,0,0,224,28,189,2,45,157,118,178,249,244,63,0,0,0,0,0,32,25,61,193,49,69,127,65,8,245,63,0,0,0,0,0,192,8,189,42,102,207,162,218,22,245,63,0,0,0,0,0,0,250,188,234,81,63,232,125,37,245,63,0,0,0,0,0,8,74,61,218,78,157,86,43,52,245,63,0,0,0,0,0,216,38,189,26,172,246,244,226,66,245,63,0,0,0,0,0,68,50,189,219,148,93,202,164,81,245,63,0,0,0,0,0,60,72,61,107,17,233,221,112,96,245,63,0,0,0,0,0,176,36,61,222,41,181,54,71,111,245,63,0,0,0,0,0,90,65,61,14,196,226,219,39,126,245,63,0,0,0,0,0,224,41,189,111,199,151,212,18,141,245,63,0,0,0,0,0,8,35,189,76,11,255,39,8,156,245,63,0,0,0,0,0,236,77,61,39,84,72,221,7,171,245,63,0,0,0,0,0,0,196,188,244,122,168,251,17,186,245,63,0,0,0,0,0,8,48,61,11,70,89,138,38,201,245,63,0,0,0,0,0,200,38,189,63,142,153,144,69,216,245,63,0,0,0,0,0,154,70,61,225,32,173,21,111,231,245,63,0,0,0,0,0,64,27,189,202,235,220,32,163,246,245,63,0,0,0,0,0,112,23,61,184,220,118,185,225,5,246,63,0,0,0,0,0,248,38,61,21,247,205,230,42,21,246,63,0,0,0,0,0,0,1,61,49,85,58,176,126,36,246,63,0,0,0,0,0,208,21,189,181,41,25,29,221,51,246,63,0,0,0,0,0,208,18,189,19,195,204,52,70,67,246,63,0,0,0,0,0,128,234,188,250,142,188,254,185,82,246,63,0,0,0,0,0,96,40,189,151,51,85,130,56,98,246,63,0,0,0,0,0,254,113,61,142,50,8,199,193,113,246,63,0,0,0,0,0,32,55,189,126,169,76,212,85,129,246,63,0,0,0,0,0,128,230,60,113,148,158,177,244,144,246,63,0,0,0,0,0,120,41,189,211,125,7,132,146,237,65,64,14,124,74,70,57,152,118,64,214,97,16,109,110,166,146,64,126,155,195,184,252,159,145,64,129,144,55,252,150,178,101,64,89,89,139,144,101,56,54,64,143,135,232,14,158,6,97,64,155,7,234,66,134,231,112,64,255,250,182,58,3,60,99,64,9,24,57,68,179,80,45,64,134,170,225,111,3,225,37,190,75,226,192,247,246,255,177,191,116,128,164,174,178,69,3,192,20,78,185,76,74,247,53,192,69,26,10,66,34,10,77,192,15,216,146,168,172,114,63,192,109,2,39,233,22,211,119,190,66,30,94,73,98,255,177,191,67,168,36,138,57,54,247,191,243,167,175,237,243,138,30,192,3,99,36,197,230,98,38,192,15,231,143,175,129,222,9,192,81,103,169,7,51,34,93,64,56,105,89,80,125,243,173,64,95,176,182,110,187,210,227,64,189,169,159,143,15,129,252,64,220,73,44,79,119,65,231,64,222,197,152,12,129,96,78,64,100,40,126,92,2,109,144,64,96,29,190,143,248,90,183,64,56,250,118,250,184,204,194,64,100,232,11,199,29,204,162,64,0,0,0,0,0,0,0,0,50,253,255,255,255,255,177,191,121,167,79,180,208,41,32,192,99,232,25,123,2,17,112,192,252,202,77,205,110,106,163,192,61,100,204,54,11,133,180,192,204,149,228,71,177,24,169,189,198,251,154,230,255,255,177,191,191,107,12,249,112,163,16,192,131,23,125,90,47,235,80,192,99,204,66,103,179,179,116,192,215,139,163,40,239,166,117,192,166,67,227,191,34,97,72,64,179,78,84,134,131,45,134,64,99,252,77,228,75,240,172,64,40,106,199,215,108,60,185,64,192,177,79,217,170,168,163,64,15,244,28,32,235,167,98,192,237,122,192,247,150,93,62,64,64,75,209,228,145,213,112,64,34,191,179,34,69,102,138,64,20,194,92,156,124,151,139,64,101,19,0,14,83,149,106,64,49,41,179,248,106,62,21,192,130,203,222,106,3,205,50,62,66,8,141,14,238,191,178,63,245,156,20,97,252,192,10,64,221,174,45,150,152,79,69,64,31,253,94,226,219,89,101,64,224,33,250,129,124,215,100,64,219,107,247,84,59,49,132,62,52,62,136,62,197,190,178,63,156,119,39,231,151,248,255,63,229,111,249,170,191,253,44,64,74,220,251,41,142,170,63,64,180,75,129,113,177,64,48,64,188,57,91,54,213,120,100,64,99,5,107,78,88,162,191,64,63,140,211,84,82,102,1,65,67,43,165,131,218,131,40,65,61,11,222,40,107,166,41,65,197,48,149,44,109,253,20,193,67,21,94,251,179,177,84,64,206,192,33,218,160,59,160,64,109,30,89,123,210,103,210,64,114,35,224,151,227,181,235,64,160,84,122,31,24,145,225,64,9,198,219,190,87,234,180,192,0,0,0,0,0,0,0,0,44,254,255,255,255,191,178,63,214,52,179,91,82,137,39,64,37,24,48,21,99,109,129,64,109,244,24,62,153,77,193,64,102,21,144,14,212,18,226,64,217,140,204,41,143,61,180,61,76,176,114,209,255,191,178,63,211,61,149,185,176,87,23,64,233,136,135,10,146,227,96,64,129,196,200,157,249,12,144,64,166,227,198,83,233,23,159,64,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,24,64,0,0,0,0,0,0,56,64,0,0,0,0,0,0,94,64,0,0,0,0,0,128,134,64,0,0,0,0,0,176,179,64,0,0,0,0,0,176,227,64,0,0,0,0,0,38,22,65,0,0,0,0,128,175,75,65,0,0,0,0,168,8,131,65,0,0,0,0,252,140,188,65,0,0,0,192,140,50,247,65,0,0,0,40,59,76,52,66,0,0,128,117,119,7,115,66,0,0,128,117,119,7,179,66,0,0,216,236,238,55,244,66,0,0,115,202,236,190,54,67,0,144,104,48,185,2,123,67,0,90,65,190,179,225,192,67,32,198,181,233,59,40,6,68,108,240,89,97,82,119,78,68,158,164,193,67,81,234,21,66,87,76,245,117,112,252,35,66,26,182,138,129,50,161,32,66,26,38,232,34,181,176,16,66,232,161,165,179,193,127,246,65,63,243,211,245,24,116,213,65,42,95,185,123,12,171,173,65,152,204,93,249,118,248,125,65,76,244,128,80,233,241,69,65,235,135,135,31,66,182,6,65,4,216,88,8,172,135,191,64,82,59,188,123,96,90,106,64,5,39,246,31,147,13,4,64,0,0,0,0,0,0,0,0,0,0,0,0,168,8,131,65,0,0,0,128,105,189,156,65,0,0,0,176,166,253,161,65,0,0,0,112,113,24,153,65,0,0,0,144,182,238,133,65,0,0,0,224,113,113,105,65,0,0,0,0,123,31,68,65,0,0,0,0,188,208,21,65,0,0,0,0,128,231,223,64,0,0,0,0,0,20,158,64,0,0,0,0,0,128,80,64,0,0,0,0,0,0,240,63,156,6,52,161,73,101,65,64,95,167,241,7,51,12,117,64,35,213,55,80,124,91,144,64,233,49,46,163,125,214,139,64,83,237,46,124,109,242,89,64,220,236,213,138,189,111,53,64,213,44,249,20,147,82,95,64,217,219,162,213,216,8,109,64,169,132,24,218,122,107,93,64,146,81,78,244,177,186,32,64,221,158,173,167,33,252,41,62,123,209,33,91,245,255,189,63,138,173,94,232,188,118,15,64,41,209,166,157,72,143,65,64,55,24,44,77,133,195,86,64,229,62,168,142,143,71,72,64,244,68,85,246,212,233,124,62,131,13,118,190,66,255,189,63,192,174,143,249,183,242,2,64,100,169,113,127,55,124,40,64,226,142,127,23,168,177,49,64,254,193,116,165,73,75,20,64,172,108,101,142,69,141,92,64,79,39,77,150,220,133,172,64,127,187,197,151,134,11,226,64,187,23,143,178,44,212,247,64,45,11,122,105,17,21,222,64,61,99,175,168,234,163,77,64,1,103,6,27,54,251,142,64,251,182,6,87,68,233,180,64,21,187,165,184,176,164,190,64,81,94,111,3,48,128,151,64,0,0,0,0,0,0,0,0,206,252,255,255,255,255,189,63,206,127,127,53,157,122,42,64,144,165,46,101,212,192,121,64,204,50,165,163,125,69,174,64,221,130,39,195,122,234,190,64,125,202,225,218,103,6,173,61,67,0,193,226,255,255,189,63,227,21,99,110,4,54,27,64,237,2,38,69,185,19,91,64,73,214,82,208,22,45,128,64,183,12,126,187,184,133,128,64,228,103,211,204,35,213,71,64,62,238,49,192,235,14,133,64,154,124,142,68,78,104,170,64,166,84,29,166,186,171,181,64,75,223,212,13,122,188,157,64,31,49,10,41,112,230,96,192,255,100,174,120,138,136,61,64,186,28,130,219,104,159,111,64,247,160,73,206,5,172,135,64,41,192,212,72,37,27,135,64,212,216,62,60,94,126,99,64,107,232,27,231,134,214,19,192,79,200,143,211,169,207,53,190,84,237,174,81,235,63,186,191,255,217,2,51,194,112,18,192,218,22,93,194,113,236,76,192,95,213,24,71,211,135,108,192,246,27,92,95,185,102,107,192,210,38,198,68,38,241,135,190,16,176,72,145,142,62,186,191,218,78,187,105,132,4,6,192,127,144,104,193,226,169,51,192,170,74,16,222,163,41,69,192,82,110,207,57,54,95,53,192,229,205,91,222,166,44,100,64,25,132,216,208,98,145,190,64,152,94,183,176,154,87,0,65,25,156,134,114,83,246,37,65,92,173,25,119,210,87,36,65,24,170,165,14,105,249,17,193,178,17,90,255,178,81,84,64,57,248,123,231,49,31,159,64,41,206,100,13,31,15,209,64,151,209,186,170,109,87,232,64,75,54,124,207,4,75,219,64,4,160,255,252,46,111,178,192,0,0,0,0,0,0,0,0,243,253,255,255,255,63,186,191,247,121,103,162,145,69,48,192,118,181,228,83,208,188,135,192,21,116,248,64,231,36,199,192,106,156,208,101,208,166,231,192,152,160,161,26,67,250,182,189,239,127,89,203,255,63,186,191,75,173,3,202,230,28,32,192,176,185,167,108,109,245,102,192,79,115,49,105,198,116,149,192,157,167,253,136,227,104,164,192,22,86,231,158,175,3,210,60,155,43,161,134,155,132,6,61,130,118,73,104,194,37,60,61,17,234,45,129,153,151,113,61,149,100,121,225,127,253,165,61,187,189,215,217,223,124,219,61,149,214,38,232,11,46,17,62,58,140,48,226,142,121,69,62,72,175,188,154,242,215,122,62,141,237,181,160,247,198,176,62,241,104,227,136,181,248,228,62,45,67,28,235,226,54,26,63,252,169,241,210,77,98,80,63,123,20,174,71,225,122,132,63,154,153,153,153,153,153,185,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,64,143,64,0,0,0,0,0,136,195,64,0,0,0,0,0,106,248,64,0,0,0,0,128,132,46,65,0,0,0,0,208,18,99,65,0,0,0,0,132,215,151,65,0,0,0,0,101,205,205,65,0,0,0,32,95,160,2,66,0,0,0,232,118,72,55,66,0,0,0,162,148,26,109,66,0,0,64,229,156,48,162,66,0,0,144,30,196,188,214,66,0,0,52,38,245,107,12,67,1,0,0,0,103,230,9,106,133,174,103,187,114,243,110,60,58,245,79,165,127,82,14,81,140,104,5,155,171,217,131,31,25,205,224,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,40,28,0,0,9,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,46,142,2,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,28,0,0,160,28,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,54,146,2,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,28,0,0,24,29,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,62,150,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,29,0,0,1,0,0,0,1,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,243,255,255,255,216,255,255,255,220,255,255,255,254,255,255,255,236,255,255,255,226,255,255,255,247,255,255,255,234,255,255,255,230,255,255,255,242,255,255,255,251,255,255,255,244,255,255,255,240,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,32,0,0,0,9,0,0,0,10,0,0,0,13,0,0,0,11,0,0,0,12,0,0,0,133,0,0,0,0,32,0,0,1,32,0,0,2,32,0,0,3,32,0,0,4,32,0,0,5,32,0,0,6,32,0,0,8,32,0,0,9,32,0,0,10,32,0,0,40,32,0,0,41,32,0,0,95,32,0,0,0,48,0,0,0,0,0,0,164,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,97,0,0,116,0,0,0,62,111,2,0,110,0,0,0,116,135,2,0,114,0,0,0,64,111,2,0,102,0,0,0,66,111,2,0,97,0,0,0,68,111,2,0,101,0,0,0,70,111,2,0,119,0,0,0,72,111,2,0,87,0,0,0,85,111,2,0,115,0,0,0,99,111,2,0,83,0,0,0,111,111,2,0,100,0,0,0,124,111,2,0,68,0,0,0,136,111,2,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,156,135,2,0,116,151,2,0,116,151,2,0,116,151,2,0,116,151,2,0,116,151,2,0,116,151,2,0,116,151,2,0,116,151,2,0,116,151,2,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,16,0,0,0,16,0,0,0,0,16,0,0,0,16,0,0,16,16,0,0,16,16,0,0,0,0,16,0,0,0,16,0,16,0,16,0,16,0,16,0,0,16,16,0,0,16,16,0,16,16,16,0,16,16,16,0,0,0,0,0,0,0,0,0,32,0,0,0,32,0,0,0,0,32,0,0,0,32,0,0,32,32,0,0,32,32,0,0,0,0,32,0,0,0,32,0,32,0,32,0,32,0,32,0,0,32,32,0,0,32,32,0,32,32,32,0,32,32,32,0,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,0,0,64,0,0,0,64,0,0,64,64,0,0,64,64,0,0,0,0,64,0,0,0,64,0,64,0,64,0,64,0,64,0,0,64,64,0,0,64,64,0,64,64,64,0,64,64,64,0,0,0,0,0,0,0,0,0,128,0,0,0,128,0,0,0,0,128,0,0,0,128,0,0,128,128,0,0,128,128,0,0,0,0,128,0,0,0,128,0,128,0,128,0,128,0,128,0,0,128,128,0,0,128,128,0,128,128,128,0,128,128,128,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,0,0,0,0,1,1,0,0,1,0,1,0,1,1,1,0,1,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,2,0,0,0,0,2,0,0,2,2,0,0,0,0,2,0,2,0,2,0,0,2,2,0,2,2,2,0,0,0,0,2,2,0,0,2,0,2,0,2,2,2,0,2,0,0,2,2,2,0,2,2,0,2,2,2,2,2,2,2,0,0,0,0,4,0,0,0,0,4,0,0,4,4,0,0,0,0,4,0,4,0,4,0,0,4,4,0,4,4,4,0,0,0,0,4,4,0,0,4,0,4,0,4,4,4,0,4,0,0,4,4,4,0,4,4,0,4,4,4,4,4,4,4,0,0,0,0,8,0,0,0,0,8,0,0,8,8,0,0,0,0,8,0,8,0,8,0,0,8,8,0,8,8,8,0,0,0,0,8,8,0,0,8,0,8,0,8,8,8,0,8,0,0,8,8,8,0,8,8,0,8,8,8,8,8,8,8,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,16,0,0,16,0,0,0,16,0,0,0,16,16,0,0,16,16,0,16,0,0,0,16,0,0,0,16,0,16,0,16,0,16,0,16,16,0,0,16,16,0,0,16,16,16,0,16,16,16,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,32,0,0,32,0,0,0,32,0,0,0,32,32,0,0,32,32,0,32,0,0,0,32,0,0,0,32,0,32,0,32,0,32,0,32,32,0,0,32,32,0,0,32,32,32,0,32,32,32,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,64,0,0,0,64,0,0,0,64,64,0,0,64,64,0,64,0,0,0,64,0,0,0,64,0,64,0,64,0,64,0,64,64,0,0,64,64,0,0,64,64,64,0,64,64,64,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,128,0,0,128,0,0,0,128,0,0,0,128,128,0,0,128,128,0,128,0,0,0,128,0,0,0,128,0,128,0,128,0,128,0,128,128,0,0,128,128,0,0,128,128,128,0,128,128,128,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0,0,2,0,0,0,2,2,0,0,2,2,0,2,0,0,0,2,0,0,0,2,0,2,0,2,0,2,0,2,2,0,0,2,2,0,0,2,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,4,0,0,0,4,0,0,0,4,4,0,0,4,4,0,4,0,0,0,4,0,0,0,4,0,4,0,4,0,4,0,4,4,0,0,4,4,0,0,4,4,4,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,8,0,0,0,8,0,0,0,8,8,0,0,8,8,0,8,0,0,0,8,0,0,0,8,0,8,0,8,0,8,0,8,8,0,0,8,8,0,0,8,8,8,0,8,8,8,0,0,0,0,0,0,2,0,1,0,0,0,1,0,2,0,0,0,8,0,0,0,10,0,1,0,8,0,1,0,10,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,64,0,0,0,64,16,0,0,64,0,0,0,64,16,0,0,0,0,0,0,0,0,64,0,32,0,0,0,32,0,64,0,0,128,0,0,0,128,64,0,32,128,0,0,32,128,64,0,0,0,0,0,0,0,16,0,0,8,0,0,0,8,16,0,0,0,0,0,0,0,16,0,0,8,0,0,0,8,16,0,0,0,0,0,0,0,32,0,0,0,2,0,0,0,34,0,2,0,0,0,2,0,32,0,2,0,2,0,2,0,34,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,16,0,4,0,0,0,4,0,0,0,4,0,16,0,4,0,16,0,0,0,0,0,0,64,0,0,0,8,0,0,0,72,0,0,0,0,0,0,0,64,0,0,0,8,0,0,0,72,0,0,0,0,0,0,0,0,64,0,0,128,0,0,0,128,64,0,8,0,0,0,8,0,64,0,8,128,0,0,8,128,64,0,0,0,0,0,16,0,0,0,0,64,0,0,16,64,0,0,0,0,4,0,16,0,4,0,0,64,4,0,16,64,4,0,0,1,0,0,16,1,0,0,0,65,0,0,16,65,0,0,0,1,4,0,16,1,4,0,0,65,4,0,16,65,4,0,0,0,0,0,0,0,128,0,2,0,0,0,2,0,128,0,0,2,0,0,0,2,128,0,2,2,0,0,2,2,128,0,0,0,32,0,0,0,160,0,2,0,32,0,2,0,160,0,0,2,32,0,0,2,160,0,2,2,32,0,2,2,160,0,0,0,0,0,0,32,0,0,4,0,0,0,4,32,0,0,0,4,0,0,0,36,0,0,4,4,0,0,4,36,0,0,0,0,0,0,0,32,0,0,4,0,0,0,4,32,0,0,0,4,0,0,0,36,0,0,4,4,0,0,4,36,0,0,0,0,0,0,0,0,1,0,8,0,0,0,8,0,1,0,128,0,0,0,128,0,1,0,136,0,0,0,136,0,1,0,0,0,0,0,0,0,1,0,8,0,0,0,8,0,1,0,128,0,0,0,128,0,1,0,136,0,0,0,136,0,1,0,0,0,0,0,0,0,0,0,128,0,0,0,128,0,0,0,0,32,0,0,0,32,0,0,128,32,0,0,128,32,0,0,1,0,0,0,1,0,0,0,129,0,0,0,129,0,0,0,1,32,0,0,1,32,0,0,129,32,0,0,129,32,0,0,0,0,0,0,16,0,0,0,0,0,128,0,16,0,128,0,0,0,1,0,16,0,1,0,0,0,129,0,16,0,129,0,0,2,0,0,16,2,0,0,0,2,128,0,16,2,128,0,0,2,1,0,16,2,1,0,0,2,129,0,16,2,129,0,0,0,0,0,0,4,0,0,0,16,0,0,0,20,0,0,0,0,8,0,0,4,8,0,0,16,8,0,0,20,8,0,32,0,0,0,32,4,0,0,32,16,0,0,32,20,0,0,32,0,8,0,32,4,8,0,32,16,8,0,32,20,8,0,0,0,0,0,0,1,0,0,0,0,4,0,0,1,4,0,0,0,0,0,0,1,0,0,0,0,4,0,0,1,4,0,64,0,0,0,64,1,0,0,64,0,4,0,64,1,4,0,64,0,0,0,64,1,0,0,64,0,4,0,64,1,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,2,2,0,0,0,2,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,2,2,0,0,0,2,0,0,2,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,2,2,0,0,0,2,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,2,2,0,0,0,2,0,0,2,2,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,4,0,0,4,4,0,0,0,4,0,0,4,4,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,4,0,0,4,4,0,0,0,4,0,0,4,4,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,4,0,0,4,4,0,0,0,4,0,0,4,4,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,4,0,0,4,4,0,0,0,4,0,0,4,4,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,8,0,0,8,8,0,0,0,8,0,0,8,8,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,8,0,0,8,8,0,0,0,8,0,0,8,8,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,8,0,0,8,8,0,0,0,8,0,0,8,8,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,8,0,0,8,8,0,0,0,8,0,0,8,8,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,16,0,0,16,16,0,0,0,16,0,0,16,16,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,16,0,0,16,16,0,0,0,16,0,0,16,16,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,16,0,0,16,16,0,0,0,16,0,0,16,16,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,16,0,0,16,16,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,32,0,0,32,32,0,0,0,32,0,0,32,32,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,32,0,0,32,32,0,0,0,32,0,0,32,32,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,32,0,0,32,32,0,0,0,32,0,0,32,32,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,32,0,0,32,32,0,0,0,32,0,0,32,32,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,64,0,0,64,64,0,0,0,64,0,0,64,64,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,64,0,0,64,64,0,0,0,64,0,0,64,64,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,64,0,0,64,64,0,0,0,64,0,0,64,64,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,64,0,0,64,64,0,0,0,64,0,0,64,64,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,128,0,0,0,0,128,0,0,128,128,0,0,0,128,0,0,128,128,0,0,0,0,0,0,128,0,0,0,0,0,0,0,128,0,0,0,0,128,0,0,128,128,0,0,0,128,0,0,128,128,0,0,0,0,128,0,0,0,0,0,0,0,128,0,0,0,0,128,0,0,128,128,0,0,0,128,0,0,128,128,0,0,0,0,0,0,128,0,0,0,0,0,0,0,128,0,0,0,0,128,0,0,128,128,0,0,0,128,0,0,128,128,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,2,2,0,0,2,2,0,0,0,2,0,0,0,2,0,0,2,2,0,0,2,2,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,2,2,0,0,2,2,0,0,0,2,0,0,0,2,0,0,2,2,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,0,4,0,0,0,4,0,0,4,4,0,0,4,4,0,0,0,4,0,0,0,4,0,0,4,4,0,0,4,4,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,0,4,0,0,0,4,0,0,4,4,0,0,4,4,0,0,0,4,0,0,0,4,0,0,4,4,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,8,0,0,0,8,0,0,8,8,0,0,8,8,0,0,0,8,0,0,0,8,0,0,8,8,0,0,8,8,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,8,0,0,0,8,0,0,8,8,0,0,8,8,0,0,0,8,0,0,0,8,0,0,8,8,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,16,0,0,0,0,16,0,0,0,16,0,0,16,16,0,0,16,16,0,0,0,16,0,0,0,16,0,0,16,16,0,0,16,16,0,0,0,0,0,0,0,0,16,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,16,0,0,0,0,16,0,0,0,16,0,0,16,16,0,0,16,16,0,0,0,16,0,0,0,16,0,0,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,32,0,0,0,0,32,0,0,0,32,0,0,32,32,0,0,32,32,0,0,0,32,0,0,0,32,0,0,32,32,0,0,32,32,0,0,0,0,0,0,0,0,32,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,32,0,0,0,0,32,0,0,0,32,0,0,32,32,0,0,32,32,0,0,0,32,0,0,0,32,0,0,32,32,0,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,0,0,64,0,0,0,64,0,0,64,64,0,0,64,64,0,0,0,64,0,0,0,64,0,0,64,64,0,0,64,64,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,0,0,64,0,0,0,64,0,0,64,64,0,0,64,64,0,0,0,64,0,0,0,64,0,0,64,64,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,128,0,0,0,0,128,0,0,0,128,0,0,128,128,0,0,128,128,0,0,0,128,0,0,0,128,0,0,128,128,0,0,128,128,0,0,0,0,0,0,0,0,128,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,128,0,0,0,0,128,0,0,0,128,0,0,128,128,0,0,128,128,0,0,0,128,0,0,0,128,0,0,128,128,0,0,128,128,0,0,0,130,128,0,0,0,0,0,0,128,0,0,2,130,128,0,2,128,128,0,2,130,0,0,2,0,0,0,0,128,0,0,0,2,0,0,0,130,128,0,2,130,128,0,0,2,0,0,2,2,128,0,2,128,128,0,0,0,128,0,2,0,0,0,2,2,0,0,0,2,128,0,0,2,128,0,0,130,0,0,0,130,0,0,0,128,128,0,0,128,128,0,2,2,128,0,2,128,0,0,2,0,128,0,2,0,128,0,2,128,0,0,0,0,0,0,2,2,0,0,2,130,0,0,0,0,128,0,0,128,0,0,2,130,128,0,2,0,0,0,0,128,128,0,0,130,128,0,0,0,128,0,0,0,128,0,0,2,0,0,2,128,128,0,0,128,0,0,0,130,0,0,2,0,128,0,0,2,0,0,2,0,0,0,2,2,128,0,2,130,0,0,2,130,128,0,2,128,0,0,0,128,128,0,2,2,128,0,2,0,128,0,2,2,0,0,2,130,0,0,0,130,128,0,2,2,0,0,0,2,128,0,0,2,128,0,0,0,0,0,2,128,0,0,0,130,0,0,0,0,0,0,2,128,128,0,16,64,8,64,0,64,0,64,0,64,0,0,16,64,8,0,0,0,8,0,16,0,0,0,16,0,8,64,16,64,0,64,16,0,0,64,16,64,8,64,0,64,8,64,0,0,0,64,0,64,0,64,0,0,8,0,16,0,0,0,16,0,8,64,0,64,8,0,16,0,8,0,16,64,0,64,0,0,0,0,0,0,0,64,0,64,0,0,16,64,8,0,0,0,8,64,16,0,8,0,16,0,0,64,0,0,0,0,0,64,8,0,16,64,0,0,0,64,8,64,0,0,8,64,16,64,0,0,0,0,0,0,16,64,8,0,16,0,8,64,0,0,8,0,16,64,0,64,0,0,8,64,0,64,8,64,0,64,0,0,0,0,8,64,0,64,0,64,16,0,0,0,16,64,8,64,16,64,8,0,16,0,0,0,0,64,0,0,0,0,0,64,16,64,0,0,0,64,8,64,0,0,8,0,16,0,0,64,16,0,8,0,16,64,0,64,16,0,0,64,16,0,8,0,0,64,8,0,0,0,0,0,0,64,0,64,16,64,0,0,0,0,0,64,16,0,8,64,16,64,8,64,0,64,8,0,4,1,0,0,0,1,1,4,0,0,0,0,4,0,1,4,0,1,0,4,0,0,0,0,4,1,1,0,0,1,0,4,4,0,1,0,4,0,0,4,4,0,0,4,0,0,1,0,4,1,1,4,4,0,1,0,0,0,1,4,4,1,0,0,0,0,0,4,4,0,0,0,0,1,1,4,0,1,0,0,0,1,1,0,0,0,1,4,4,0,1,4,4,1,1,0,4,1,0,4,0,1,1,0,0,0,1,0,4,1,0,4,4,0,0,0,4,1,1,4,0,1,0,0,0,0,0,4,0,1,1,4,0,0,0,4,4,0,1,0,4,1,0,0,0,0,1,0,0,1,1,4,0,1,0,4,0,0,0,0,0,1,0,0,4,0,1,0,4,1,1,4,0,1,0,4,4,0,0,4,0,1,0,0,0,0,0,0,4,0,1,4,4,1,0,4,0,0,1,0,0,0,0,4,4,1,1,4,4,0,0,0,4,1,1,0,0,1,1,0,4,0,0,4,0,0,1,4,4,1,0,4,4,1,0,0,0,0,1,4,4,1,1,0,4,0,0,0,4,0,1,4,0,1,1,0,0,16,64,128,64,16,0,128,64,16,0,128,64,0,0,0,64,16,64,0,64,0,64,128,0,0,64,128,0,16,0,128,0,0,0,0,0,16,64,0,0,16,64,0,64,16,64,128,64,0,0,128,0,0,0,0,64,0,64,0,0,0,64,128,0,0,0,128,0,16,0,0,0,0,64,0,0,16,64,128,64,0,0,0,0,0,64,0,0,16,0,128,64,16,0,0,64,0,64,128,0,0,0,128,64,16,0,0,64,0,64,0,0,16,0,0,64,16,64,0,64,16,64,128,64,0,0,128,64,0,64,0,0,0,64,128,0,16,64,0,64,16,64,128,64,0,0,128,0,0,0,0,0,0,0,0,0,16,64,0,64,16,0,0,64,0,64,0,64,0,64,128,0,0,0,128,0,16,64,128,64,16,0,128,64,16,0,128,64,0,0,0,64,16,64,128,64,0,0,128,0,0,0,128,0,16,0,0,0,0,64,128,0,16,0,128,64,16,64,0,64,0,64,128,0,16,0,128,64,16,0,0,0,0,64,0,0,16,64,128,64,0,0,0,0,0,64,0,0,16,0,0,64,16,64,0,128,0,0,0,128,0,4,1,0,0,4,1,128,0,0,33,0,0,4,0,128,0,0,0,0,0,0,32,0,0,4,1,128,0,4,32,0,0,4,0,128,0,0,1,128,0,4,32,128,0,0,33,0,0,4,33,128,0,4,0,0,0,0,32,0,0,0,1,0,0,4,32,0,0,4,32,0,0,0,0,128,0,0,32,128,0,4,33,128,0,4,33,128,0,0,1,0,0,4,33,128,0,0,32,0,0,0,0,0,0,0,33,128,0,4,1,0,0,0,1,0,0,0,33,128,0,4,0,0,0,4,0,128,0,0,33,128,0,0,0,0,0,0,1,0,0,0,32,0,0,4,1,128,0,0,33,128,0,4,32,128,0,0,1,0,0,0,32,0,0,4,33,128,0,4,1,128,0,4,32,128,0,0,0,0,0,0,1,0,0,4,33,128,0,4,33,128,0,4,0,0,0,0,33,128,0,4,33,0,0,4,1,0,0,0,0,0,0,4,32,0,0,0,33,128,0,4,0,128,0,0,1,128,0,0,32,0,0,4,0,0,0,0,0,0,0,4,32,128,0,4,1,128,0,0,32,8,0,0,16,0,0,32,16,0,32,0,0,8,32,32,16,0,0,32,16,8,0,0,0,8,32,32,16,0,0,32,0,0,32,0,16,8,32,32,0,0,0,32,0,8,0,0,16,8,0,32,0,0,32,0,16,0,0,0,16,8,32,0,0,0,0,0,0,8,0,32,0,8,32,0,16,0,32,0,0,0,32,32,0,8,32,0,16,8,0,0,0,8,0,32,16,8,0,32,16,0,0,0,0,8,32,32,0,0,32,32,16,8,32,0,0,0,32,32,0,0,32,32,16,0,0,0,16,0,32,0,16,8,0,0,0,8,0,32,16,0,32,32,0,8,32,32,16,0,0,32,0,8,32,0,0,8,0,0,16,0,0,32,0,0,32,0,16,0,0,0,16,8,32,0,0,8,0,0,16,8,32,32,16,0,32,32,0,0,0,32,16,8,32,32,0,0,32,32,16,0,0,0,0,8,0,32,16,8,0,0,0,0,32,0,0,0,0,32,16,8,32,32,0,0,32,0,0,8,0,32,0,8,32,0,16,0,0,0,0,0,32,32,16,0,0,0,16,8,0,32,0,8,32,0,16,0,0,16,0,1,0,16,2,1,4,0,2,0,0,0,0,0,4,0,0,1,4,0,2,1,4,16,0,0,4,16,2,1,4,16,2,0,0,16,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,2,1,0,16,2,1,4,0,0,0,4,0,2,1,4,16,0,1,0,16,0,0,4,0,2,1,0,0,2,0,0,16,2,0,4,16,2,1,0,16,0,0,0,16,2,0,4,0,0,1,4,0,0,1,4,16,2,0,4,16,0,1,0,0,0,0,0,0,2,0,4,16,0,0,0,0,2,0,4,16,0,0,0,16,0,1,4,0,2,1,4,0,2,1,0,16,2,1,0,16,2,1,0,0,0,1,0,16,0,0,0,0,2,0,4,0,2,0,0,16,0,0,4,16,2,1,4,0,0,1,4,16,0,0,4,16,2,1,4,0,0,1,0,0,2,1,4,16,2,0,0,16,2,0,4,16,0,0,0,0,0,1,0,0,0,1,4,16,2,0,0,0,0,1,4,16,0,0,0,16,2,0,4,0,0,1,0,0,2,0,4,0,2,0,4,0,0,1,0,16,0,32,8,0,8,0,8,0,0,0,0,2,0,32,8,2,8,0,0,0,8,32,8,0,8,32,0,0,0,0,0,0,8,32,0,2,0,0,0,2,8,32,8,2,8,0,8,2,0,0,8,2,8,32,8,2,0,0,8,0,0,32,0,0,0,0,0,2,8,32,0,0,8,0,8,0,8,32,8,0,0,0,8,2,0,32,0,2,0,32,0,2,8,0,8,2,8,32,8,0,0,0,0,0,0,0,0,0,0,32,0,2,8,32,0,0,8,0,8,0,8,32,8,2,0,0,0,2,0,32,8,2,0,0,0,2,0,0,8,2,8,0,8,0,0,32,0,0,0,32,0,2,8,0,8,0,0,32,8,2,0,0,8,0,8,32,0,0,0,32,0,0,8,0,0,2,8,32,0,2,8,0,0,0,8,0,0,2,0,32,8,0,8,0,0,0,0,32,8,2,8,32,0,2,0,32,0,0,8,0,0,2,8,0,8,0,8,32,8,0,8,0,0,0,0,32,8,2,8,0,8,2,0,0,8,2,0,32,8,0,0,32,8,0,0,32,0,2,0,0,0,0,8,0,8,2,8,0,0,0,0,0,0,0,64,0,0,64,0,0,0,64,64,0,64,0,0,0,64,0,64,0,64,64,0,0,64,64,64,64,0,0,0,64,0,0,64,64,0,64,0,64,0,64,64,64,64,0,0,64,64,0,64,64,64,64,0,64,64,64,64,0,0,0,0,0,0,0,16,0,0,16,0,0,0,16,16,0,16,0,0,0,16,0,16,0,16,16,0,0,16,16,16,16,0,0,0,16,0,0,16,16,0,16,0,16,0,16,16,16,16,0,0,16,16,0,16,16,16,16,0,16,16,16,16,0,0,0,0,0,0,0,4,0,0,4,0,0,0,4,4,0,4,0,0,0,4,0,4,0,4,4,0,0,4,4,4,4,0,0,0,4,0,0,4,4,0,4,0,4,0,4,4,4,4,0,0,4,4,0,4,4,4,4,0,4,4,4,4,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,1,0,0,0,1,0,1,0,1,1,0,0,1,1,1,1,0,0,0,1,0,0,1,1,0,1,0,1,0,1,1,1,1,0,0,1,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,128,0,0,128,0,0,0,128,128,0,128,0,0,0,128,0,128,0,128,128,0,0,128,128,128,128,0,0,0,128,0,0,128,128,0,128,0,128,0,128,128,128,128,0,0,128,128,0,128,128,128,128,0,128,128,128,128,0,0,0,0,0,0,0,32,0,0,32,0,0,0,32,32,0,32,0,0,0,32,0,32,0,32,32,0,0,32,32,32,32,0,0,0,32,0,0,32,32,0,32,0,32,0,32,32,32,32,0,0,32,32,0,32,32,32,32,0,32,32,32,32,0,0,0,0,0,0,0,8,0,0,8,0,0,0,8,8,0,8,0,0,0,8,0,8,0,8,8,0,0,8,8,8,8,0,0,0,8,0,0,8,8,0,8,0,8,0,8,8,8,8,0,0,8,8,0,8,8,8,8,0,8,8,8,8,0,0,0,0,0,0,0,2,0,0,2,0,0,0,2,2,0,2,0,0,0,2,0,2,0,2,2,0,0,2,2,2,2,0,0,0,2,0,0,2,2,0,2,0,2,0,2,2,2,2,0,0,2,2,0,2,2,2,2,0,2,2,2,2,136,106,63,36,211,8,163,133,46,138,25,19,68,115,112,3,34,56,9,164,208,49,159,41,152,250,46,8,137,108,78,236,230,33,40,69,119,19,208,56,207,102,84,190,108,12,233,52,183,41,172,192,221,80,124,201,181,213,132,63,23,9,71,181,217,213,22,146,27,251,121,137,166,11,49,209,172,181,223,152,219,114,253,47,183,223,26,208,237,175,225,184,150,126,38,106,69,144,124,186,153,127,44,241,71,153,161,36,247,108,145,179,226,242,1,8,22,252,142,133,216,32,105,99,105,78,87,113,163,254,88,164,126,61,147,244,143,116,149,13,88,182,142,114,88,205,139,113,238,74,21,130,29,164,84,123,181,89,90,194,57,213,48,156,19,96,242,42,35,176,209,197,240,133,96,40,24,121,65,202,239,56,219,184,176,220,121,142,14,24,58,96,139,14,158,108,62,138,30,176,193,119,21,215,39,75,49,189,218,47,175,120,96,92,96,85,243,37,85,230,148,171,85,170,98,152,72,87,64,20,232,99,106,57,202,85,182,16,171,42,52,92,204,180,206,232,65,17,175,134,84,161,147,233,114,124,17,20,238,179,42,188,111,99,93,197,169,43,246,49,24,116,22,62,92,206,30,147,135,155,51,186,214,175,92,207,36,108,129,83,50,122,119,134,149,40,152,72,143,59,175,185,75,107,27,232,191,196,147,33,40,102,204,9,216,97,145,169,33,251,96,172,124,72,50,128,236,93,93,93,132,239,177,117,133,233,2,35,38,220,136,27,101,235,129,62,137,35,197,172,150,211,243,111,109,15,57,66,244,131,130,68,11,46,4,32,132,164,74,240,200,105,94,155,31,158,66,104,198,33,154,108,233,246,97,156,12,103,240,136,211,171,210,160,81,106,104,47,84,216,40,167,15,150,163,51,81,171,108,11,239,110,228,59,122,19,80,240,59,186,152,42,251,126,29,101,241,161,118,1,175,57,62,89,202,102,136,14,67,130,25,134,238,140,180,159,111,69,195,165,132,125,190,94,139,59,216,117,111,224,115,32,193,133,159,68,26,64,166,106,193,86,98,170,211,78,6,119,63,54,114,223,254,27,61,2,155,66,36,215,208,55,72,18,10,208,211,234,15,219,155,192,241,73,201,114,83,7,123,27,153,128,216,121,212,37,247,222,232,246,26,80,254,227,59,76,121,182,189,224,108,151,186,6,192,4,182,79,169,193,196,96,159,64,194,158,92,94,99,36,106,25,175,111,251,104,181,83,108,62,235,178,57,19,111,236,82,59,31,81,252,109,44,149,48,155,68,69,129,204,9,189,94,175,4,208,227,190,253,74,51,222,7,40,15,102,179,75,46,25,87,168,203,192,15,116,200,69,57,95,11,210,219,251,211,185,189,192,121,85,10,50,96,26,198,0,161,214,121,114,44,64,254,37,159,103,204,163,31,251,248,233,165,142,248,34,50,219,223,22,117,60,21,107,97,253,200,30,80,47,171,82,5,173,250,181,61,50,96,135,35,253,72,123,49,83,130,223,0,62,187,87,92,158,160,140,111,202,46,86,135,26,219,105,23,223,246,168,66,213,195,255,126,40,198,50,103,172,115,85,79,140,176,39,91,105,200,88,202,187,93,163,255,225,160,17,240,184,152,61,250,16,184,131,33,253,108,181,252,74,91,211,209,45,121,228,83,154,101,69,248,182,188,73,142,210,144,151,251,75,218,242,221,225,51,126,203,164,65,19,251,98,232,198,228,206,218,202,32,239,1,76,119,54,254,158,126,208,180,31,241,43,77,218,219,149,152,145,144,174,113,142,173,234,160,213,147,107,208,209,142,208,224,37,199,175,47,91,60,142,183,148,117,142,251,226,246,143,100,43,18,242,18,184,136,136,28,240,13,144,160,94,173,79,28,195,143,104,145,241,207,209,173,193,168,179,24,34,47,47,119,23,14,190,254,45,117,234,161,31,2,139,15,204,160,229,232,116,111,181,214,243,172,24,153,226,137,206,224,79,168,180,183,224,19,253,129,59,196,124,217,168,173,210,102,162,95,22,5,119,149,128,20,115,204,147,119,20,26,33,101,32,173,230,134,250,181,119,245,66,84,199,207,53,157,251,12,175,205,235,160,137,62,123,211,27,65,214,73,126,30,174,45,14,37,0,94,179,113,32,187,0,104,34,175,224,184,87,155,54,100,36,30,185,9,240,29,145,99,85,170,166,223,89,137,67,193,120,127,83,90,217,162,91,125,32,197,185,229,2,118,3,38,131,169,207,149,98,104,25,200,17,65,74,115,78,202,45,71,179,74,169,20,123,82,0,81,27,21,41,83,154,63,87,15,214,228,198,155,188,118,164,96,43,0,116,230,129,181,111,186,8,31,233,27,87,107,236,150,242,21,217,13,42,33,101,99,182,182,249,185,231,46,5,52,255,100,86,133,197,93,45,176,83,161,143,159,169,153,71,186,8,106,7,133,110,233,112,122,75,68,41,179,181,46,9,117,219,35,38,25,196,176,166,110,173,125,223,167,73,184,96,238,156,102,178,237,143,113,140,170,236,255,23,154,105,108,82,100,86,225,158,177,194,165,2,54,25,41,76,9,117,64,19,89,160,62,58,24,228,154,152,84,63,101,157,66,91,214,228,143,107,214,63,247,153,7,156,210,161,245,48,232,239,230,56,45,77,193,93,37,240,134,32,221,76,38,235,112,132,198,233,130,99,94,204,30,2,63,107,104,9,201,239,186,62,20,24,151,60,161,112,106,107,132,53,127,104,134,226,160,82,5,83,156,183,55,7,80,170,28,132,7,62,92,174,222,127,236,68,125,142,184,242,22,87,55,218,58,176,13,12,80,240,4,31,28,240,255,179,0,2,26,245,12,174,178,116,181,60,88,122,131,37,189,33,9,220,249,19,145,209,246,47,169,124,115,71,50,148,1,71,245,34,129,229,229,58,220,218,194,55,52,118,181,200,167,221,243,154,70,97,68,169,14,3,208,15,62,199,200,236,65,30,117,164,153,205,56,226,47,14,234,59,161,187,128,50,49,179,62,24,56,139,84,78,8,185,109,79,3,13,66,111,191,4,10,246,144,18,184,44,121,124,151,36,114,176,121,86,175,137,175,188,31,119,154,222,16,8,147,217,18,174,139,179,46,63,207,220,31,114,18,85,36,113,107,46,230,221,26,80,135,205,132,159,24,71,88,122,23,218,8,116,188,154,159,188,140,125,75,233,58,236,122,236,250,29,133,219,102,67,9,99,210,195,100,196,71,24,28,239,8,217,21,50,55,59,67,221,22,186,194,36,67,77,161,18,81,196,101,42,2,0,148,80,221,228,58,19,158,248,223,113,85,78,49,16,214,119,172,129,155,25,17,95,241,86,53,4,107,199,163,215,59,24,17,60,9,165,36,89,237,230,143,242,250,251,241,151,44,191,186,158,110,60,21,30,112,69,227,134,177,111,233,234,10,94,14,134,179,42,62,90,28,231,31,119,250,6,61,78,185,220,101,41,15,29,231,153,214,137,62,128,37,200,102,82,120,201,76,46,106,179,16,156,186,14,21,198,120,234,226,148,83,60,252,165,244,45,10,30,167,78,247,242,61,43,29,54,15,38,57,25,96,121,194,25,8,167,35,82,182,18,19,247,110,254,173,235,102,31,195,234,149,69,188,227,131,200,123,166,209,55,127,177,40,255,140,1,239,221,50,195,165,90,108,190,133,33,88,101,2,152,171,104,15,165,206,238,59,149,47,219,173,125,239,42,132,47,110,91,40,182,33,21,112,97,7,41,117,71,221,236,16,21,159,97,48,168,204,19,150,189,97,235,30,254,52,3,207,99,3,170,144,92,115,181,57,162,112,76,11,158,158,213,20,222,170,203,188,134,204,238,167,44,98,96,171,92,171,156,110,132,243,178,175,30,139,100,202,240,189,25,185,105,35,160,80,187,90,101,50,90,104,64,179,180,42,60,213,233,158,49,247,184,33,192,25,11,84,155,153,160,95,135,126,153,247,149,168,125,61,98,154,136,55,248,119,45,227,151,95,147,237,17,129,18,104,22,41,136,53,14,214,31,230,199,161,223,222,150,153,186,88,120,165,132,245,87,99,114,34,27,255,195,131,155,150,70,194,26,235,10,179,205,84,48,46,83,228,72,217,143,40,49,188,109,239,242,235,88,234,255,198,52,97,237,40,254,115,60,124,238,217,20,74,93,227,183,100,232,20,93,16,66,224,19,62,32,182,226,238,69,234,171,170,163,21,79,108,219,208,79,203,250,66,244,66,199,181,187,106,239,29,59,79,101,5,33,205,65,158,121,30,216,199,77,133,134,106,71,75,228,80,98,129,61,242,161,98,207,70,38,141,91,160,131,136,252,163,182,199,193,195,36,21,127,146,116,203,105,11,138,132,71,133,178,146,86,0,191,91,9,157,72,25,173,116,177,98,20,0,14,130,35,42,141,66,88,234,245,85,12,62,244,173,29,97,112,63,35,146,240,114,51,65,126,147,141,241,236,95,214,219,59,34,108,89,55,222,124,96,116,238,203,167,242,133,64,110,50,119,206,132,128,7,166,158,80,248,25,85,216,239,232,53,151,217,97,170,167,105,169,194,6,12,197,252,171,4,90,220,202,11,128,46,122,68,158,132,52,69,195,5,103,213,253,201,158,30,14,211,219,115,219,205,136,85,16,121,218,95,103,64,67,103,227,101,52,196,197,216,56,62,113,158,248,40,61,32,255,109,241,231,33,62,21,74,61,176,143,43,159,227,230,247,173,131,219,104,90,61,233,247,64,129,148,28,38,76,246,52,41,105,148,247,32,21,65,247,212,2,118,46,107,244,188,104,0,162,212,113,36,8,212,106,244,32,51,183,212,183,67,175,97,0,80,46,246,57,30,70,69,36,151,116,79,33,20,64,136,139,191,29,252,149,77,175,145,181,150,211,221,244,112,69,47,160,102,236,9,188,191,133,151,189,3,208,109,172,127,4,133,203,49,179,39,235,150,65,57,253,85,230,71,37,218,154,10,202,171,37,120,80,40,244,41,4,83,218,134,44,10,251,109,182,233,98,20,220,104,0,105,72,215,164,192,14,104,238,141,161,39,162,254,63,79,140,173,135,232,6,224,140,181,182,214,244,122,124,30,206,170,236,95,55,211,153,163,120,206,66,42,107,64,53,158,254,32,185,133,243,217,171,215,57,238,139,78,18,59,247,250,201,29,86,24,109,75,49,102,163,38,178,151,227,234,116,250,110,58,50,67,91,221,247,231,65,104,251,32,120,202,78,245,10,251,151,179,254,216,172,86,64,69,39,149,72,186,58,58,83,85,135,141,131,32,183,169,107,254,75,149,150,208,188,103,168,85,88,154,21,161,99,41,169,204,51,219,225,153,86,74,42,166,249,37,49,63,28,126,244,94,124,49,41,144,2,232,248,253,112,47,39,4,92,21,187,128,227,44,40,5,72,21,193,149,34,109,198,228,63,19,193,72,220,134,15,199,238,201,249,7,15,31,4,65,164,121,71,64,23,110,136,93,235,81,95,50,209,192,155,213,143,193,188,242,100,53,17,65,52,120,123,37,96,156,42,96,163,232,248,223],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);allocate([27,108,99,31,194,180,18,14,158,50,225,2,209,79,102,175,21,129,209,202,224,149,35,107,225,146,62,51,98,11,36,59,34,185,190,238,14,162,178,133,153,13,186,230,140,12,114,222,40,247,162,45,69,120,18,208,253,148,183,149,98,8,125,100,240,245,204,231,111,163,73,84,250,72,125,135,39,253,157,195,30,141,62,243,65,99,71,10,116,255,46,153,171,110,111,58,55,253,248,244,96,220,18,168,248,221,235,161,76,225,27,153,13,107,110,219,16,85,123,198,55,44,103,109,59,212,101,39,4,232,208,220,199,13,41,241,163,255,0,204,146,15,57,181,11,237,15,105,251,159,123,102,156,125,219,206,11,207,145,160,163,94,21,217,136,47,19,187,36,173,91,81,191,121,148,123,235,214,59,118,179,46,57,55,121,89,17,204,151,226,38,128,45,49,46,244,167,173,66,104,59,43,106,198,204,76,117,18,28,241,46,120,55,66,18,106,231,81,146,183,230,187,161,6,80,99,251,75,24,16,107,26,250,237,202,17,216,189,37,61,201,195,225,226,89,22,66,68,134,19,18,10,110,236,12,217,42,234,171,213,78,103,175,100,95,168,134,218,136,233,191,190,254,195,228,100,87,128,188,157,134,192,247,240,248,123,120,96,77,96,3,96,70,131,253,209,176,31,56,246,4,174,69,119,204,252,54,215,51,107,66,131,113,171,30,240,135,65,128,176,95,94,0,60,190,87,160,119,36,174,232,189,153,66,70,85,97,46,88,191,143,244,88,78,162,253,221,242,56,239,116,244,194,189,137,135,195,249,102,83,116,142,179,200,85,242,117,180,185,217,252,70,97,38,235,122,132,223,29,139,121,14,106,132,226,149,95,145,142,89,110,70,112,87,180,32,145,85,213,140,76,222,2,201,225,172,11,185,208,5,130,187,72,98,168,17,158,169,116,117,182,25,127,183,9,220,169,224,161,9,45,102,51,70,50,196,2,31,90,232,140,190,240,9,37,160,153,74,16,254,110,29,29,61,185,26,223,164,165,11,15,242,134,161,105,241,104,40,131,218,183,220,254,6,57,87,155,206,226,161,82,127,205,79,1,94,17,80,250,131,6,167,196,181,2,160,39,208,230,13,39,140,248,154,65,134,63,119,6,76,96,195,181,6,168,97,40,122,23,240,224,134,245,192,170,88,96,0,98,125,220,48,215,158,230,17,99,234,56,35,148,221,194,83,52,22,194,194,86,238,203,187,222,182,188,144,161,125,252,235,118,29,89,206,9,228,5,111,136,1,124,75,61,10,114,57,36,124,146,124,95,114,227,134,185,157,77,114,180,91,193,26,252,184,158,211,120,85,84,237,181,165,252,8,211,124,61,216,196,15,173,77,94,239,80,30,248,230,97,177,217,20,133,162,60,19,81,108,231,199,213,111,196,78,225,86,206,191,42,54,55,200,198,221,52,50,154,215,18,130,99,146,142,250,14,103,224,0,96,64,55,206,57,58,207,245,250,211,55,119,194,171,27,45,197,90,158,103,176,92,66,55,163,79,64,39,130,211,190,155,188,153,157,142,17,213,21,115,15,191,126,28,45,214,123,196,0,199,107,27,140,183,69,144,161,33,190,177,110,178,180,110,54,106,47,171,72,87,121,110,148,188,210,118,163,198,200,194,73,101,238,248,15,83,125,222,141,70,29,10,115,213,198,77,208,76,219,187,57,41,80,70,186,169,232,38,149,172,4,227,94,190,240,213,250,161,154,81,45,106,226,140,239,99,34,238,134,154,184,194,137,192,246,46,36,67,170,3,30,165,164,208,242,156,186,97,192,131,77,106,233,155,80,21,229,143,214,91,100,186,249,162,38,40,225,58,58,167,134,149,169,75,233,98,85,239,211,239,47,199,218,247,82,247,105,111,4,63,89,10,250,119,21,169,228,128,1,134,176,135,173,230,9,155,147,229,62,59,90,253,144,233,151,215,52,158,217,183,240,44,81,139,43,2,58,172,213,150,125,166,125,1,214,62,207,209,40,45,125,124,207,37,159,31,155,184,242,173,114,180,214,90,76,245,136,90,113,172,41,224,230,165,25,224,253,172,176,71,155,250,147,237,141,196,211,232,204,87,59,40,41,102,213,248,40,46,19,121,145,1,95,120,85,96,117,237,68,14,150,247,140,94,211,227,212,109,5,21,186,109,244,136,37,97,161,3,189,240,100,5,21,158,235,195,162,87,144,60,236,26,39,151,42,7,58,169,155,109,63,27,245,33,99,30,251,102,156,245,25,243,220,38,40,217,51,117,245,253,85,177,130,52,86,3,187,60,186,138,17,119,81,40,248,217,10,194,103,81,204,171,95,146,173,204,81,23,232,77,142,220,48,56,98,88,157,55,145,249,32,147,194,144,122,234,206,123,62,251,100,206,33,81,50,190,79,119,126,227,182,168,70,61,41,195,105,83,222,72,128,230,19,100,16,8,174,162,36,178,109,221,253,45,133,105,102,33,7,9,10,70,154,179,221,192,69,100,207,222,108,88,174,200,32,28,221,247,190,91,64,141,88,27,127,1,210,204,187,227,180,107,126,106,162,221,69,255,89,58,68,10,53,62,213,205,180,188,168,206,234,114,187,132,100,250,174,18,102,141,71,111,60,191,99,228,155,210,158,93,47,84,27,119,194,174,112,99,78,246,141,13,14,116,87,19,91,231,113,22,114,248,93,125,83,175,8,203,64,64,204,226,180,78,106,70,210,52,132,175,21,1,40,4,176,225,29,58,152,149,180,159,184,6,72,160,110,206,130,59,63,111,130,171,32,53,75,29,26,1,248,39,114,39,177,96,21,97,220,63,147,231,43,121,58,187,189,37,69,52,225,57,136,160,75,121,206,81,183,201,50,47,201,186,31,160,126,200,28,224,246,209,199,188,195,17,1,207,199,170,232,161,73,135,144,26,154,189,79,212,203,222,218,208,56,218,10,213,42,195,57,3,103,54,145,198,124,49,249,141,79,43,177,224,183,89,158,247,58,187,245,67,255,25,213,242,156,69,217,39,44,34,151,191,42,252,230,21,113,252,145,15,37,21,148,155,97,147,229,250,235,156,182,206,89,100,168,194,209,168,186,18,94,7,193,182,12,106,5,227,101,80,210,16,66,164,3,203,14,110,236,224,59,219,152,22,190,160,152,76,100,233,120,50,50,149,31,159,223,146,211,224,43,52,160,211,30,242,113,137,65,116,10,27,140,52,163,75,32,113,190,197,216,50,118,195,141,159,53,223,46,47,153,155,71,111,11,230,29,241,227,15,84,218,76,229,145,216,218,30,207,121,98,206,111,126,62,205,102,177,24,22,5,29,44,253,197,210,143,132,153,34,251,246,87,243,35,245,35,118,50,166,49,53,168,147,2,205,204,86,98,129,240,172,181,235,117,90,151,54,22,110,204,115,210,136,146,98,150,222,208,73,185,129,27,144,80,76,20,86,198,113,189,199,198,230,10,20,122,50,6,208,225,69,154,123,242,195,253,83,170,201,0,15,168,98,226,191,37,187,246,210,189,53,5,105,18,113,34,2,4,178,124,207,203,182,43,156,118,205,192,62,17,83,211,227,64,22,96,189,171,56,240,173,71,37,156,32,56,186,118,206,70,247,197,161,175,119,96,96,117,32,78,254,203,133,216,141,232,138,176,249,170,122,126,170,249,76,92,194,72,25,140,138,251,2,228,106,195,1,249,225,235,214,105,248,212,144,160,222,92,166,45,37,9,63,159,230,8,194,50,97,78,183,91,226,119,206,227,223,143,87,230,114,195,58,104,112,114,79,66,110,97,101,108,111,104,101,83,114,101,100,68,121,114,99,116,98,117,111,120,164,106,215,86,183,199,232,219,112,32,36,238,206,189,193,175,15,124,245,42,198,135,71,19,70,48,168,1,149,70,253,216,152,128,105,175,247,68,139,177,91,255,255,190,215,92,137,34,17,144,107,147,113,152,253,142,67,121,166,33,8,180,73,98,37,30,246,64,179,64,192,81,90,94,38,170,199,182,233,93,16,47,214,83,20,68,2,129,230,161,216,200,251,211,231,230,205,225,33,214,7,55,195,135,13,213,244,237,20,90,69,5,233,227,169,248,163,239,252,217,2,111,103,138,76,42,141,66,57,250,255,129,246,113,135,34,97,157,109,12,56,229,253,68,234,190,164,169,207,222,75,96,75,187,246,112,188,191,190,198,126,155,40,250,39,161,234,133,48,239,212,5,29,136,4,57,208,212,217,229,153,219,230,248,124,162,31,101,86,172,196,68,34,41,244,151,255,42,67,167,35,148,171,57,160,147,252,195,89,91,101,146,204,12,143,125,244,239,255,209,93,132,133,79,126,168,111,224,230,44,254,20,67,1,163,161,17,8,78,130,126,83,247,53,242,58,189,187,210,215,42,145,211,134,235,152,47,138,66,145,68,55,113,207,251,192,181,165,219,181,233,91,194,86,57,241,17,241,89,164,130,63,146,213,94,28,171,152,170,7,216,1,91,131,18,190,133,49,36,195,125,12,85,116,93,190,114,254,177,222,128,167,6,220,155,116,241,155,193,193,105,155,228,134,71,190,239,198,157,193,15,204,161,12,36,111,44,233,45,170,132,116,74,220,169,176,92,218,136,249,118,82,81,62,152,109,198,49,168,200,39,3,176,199,127,89,191,243,11,224,198,71,145,167,213,81,99,202,6,103,41,41,20,133,10,183,39,56,33,27,46,252,109,44,77,19,13,56,83,84,115,10,101,187,10,106,118,46,201,194,129,133,44,114,146,161,232,191,162,75,102,26,168,112,139,75,194,163,81,108,199,25,232,146,209,36,6,153,214,133,53,14,244,112,160,106,16,22,193,164,25,8,108,55,30,76,119,72,39,181,188,176,52,179,12,28,57,74,170,216,78,79,202,156,91,243,111,46,104,238,130,143,116,111,99,165,120,20,120,200,132,8,2,199,140,250,255,190,144,235,108,80,164,247,163,249,190,242,120,113,198,37,0,0,0,0,0,0,0,31,0,0,0,200,88,0,0,0,0,0,0,45,244,81,88,207,140,177,192,70,246,181,203,41,49,3,199,4,91,112,48,180,93,253,32,120,127,139,154,216,89,41,80,104,72,137,171,167,86,3,108,255,183,205,136,63,212,119,180,43,165,163,112,241,186,228,168,252,65,131,253,217,111,225,138,122,47,45,116,150,7,31,13,9,94,3,118,44,112,247,64,165,44,167,111,87,65,168,170,116,223,160,88,100,3,74,199,196,60,83,174,175,95,24,4,21,177,227,109,40,134,171,12,164,191,67,240,233,80,129,57,87,22,82,55,3,0,0,0,255,0,0,0,255,255,255,255,8,0,0,0,148,108,15,66,202,193,180,67,115,51,149,68,230,255,140,68,184,148,45,67,45,195,177,65,240,52,8,67,50,60,135,67,26,224,25,67,154,133,106,65,27,8,47,177,184,255,143,189,149,45,26,192,82,186,175,193,18,81,104,194,101,149,251,193,183,152,190,179,18,251,143,189,204,177,185,191,159,87,244,192,54,23,51,193,13,244,78,192,152,17,233,66,235,155,111,69,219,149,30,71,124,8,228,71,186,11,58,71,8,4,115,66,19,104,131,68,196,215,186,69,200,101,22,70,238,96,22,69,0,0,0,0,0,0,144,189,134,78,1,193,20,136,128,195,118,83,27,197,90,40,164,197,138,197,72,173,255,255,143,189,136,27,133,192,123,89,135,194,155,157,165,195,121,55,173,195,22,9,67,66,28,108,49,68,95,130,103,69,103,227,201,69,87,69,29,69,89,63,21,195,184,236,242,65,143,172,134,67,41,50,83,68,229,187,92,68,152,170,84,67,88,243,169,192,27,104,150,49,112,255,149,61,227,7,86,64,197,124,42,66,223,206,42,67,228,187,38,67,219,137,33,52,42,246,149,61,191,196,255,63,253,237,103,65,113,84,253,65,140,5,130,65,170,198,35,67,194,18,253,69,147,50,11,72,212,30,68,73,89,51,77,73,105,235,167,200,160,141,165,66,7,221,1,69,148,62,147,70,29,175,93,71,193,136,12,71,190,82,167,197,0,0,0,0,0,0,150,61,147,74,60,65,25,107,11,68,202,108,10,70,160,150,16,71,121,236,161,45,255,255,149,61,134,189,186,64,144,28,7,67,205,103,128,68,75,191,248,68,3,0,0,0,4,0,0,0,4,0,0,0,6,0,0,0,131,249,162,0,68,78,110,0,252,41,21,0,209,87,39,0,221,52,245,0,98,219,192,0,60,153,149,0,65,144,67,0,99,81,254,0,187,222,171,0,183,97,197,0,58,110,36,0,210,77,66,0,73,6,224,0,9,234,46,0,28,146,209,0,235,29,254,0,41,177,28,0,232,62,167,0,245,53,130,0,68,187,46,0,156,233,132,0,180,38,112,0,65,126,95,0,214,145,57,0,83,131,57,0,156,244,57,0,139,95,132,0,40,249,189,0,248,31,59,0,222,255,151,0,15,152,5,0,17,47,239,0,10,90,139,0,109,31,109,0,207,126,54,0,9,203,39,0,70,79,183,0,158,102,63,0,45,234,95,0,186,39,117,0,229,235,199,0,61,123,241,0,247,57,7,0,146,82,138,0,251,107,234,0,31,177,95,0,8,93,141,0,48,3,86,0,123,252,70,0,240,171,107,0,32,188,207,0,54,244,154,0,227,169,29,0,94,97,145,0,8,27,230,0,133,153,101,0,160,20,95,0,141,64,104,0,128,216,255,0,39,115,77,0,6,6,49,0,202,86,21,0,201,168,115,0,123,226,96,0,107,140,192,0,77,42,11,66,152,97,168,67,227,219,130,68,237,179,94,68,108,147,207,66,236,125,171,65,153,148,250,66,199,70,104,67,215,91,235,66,144,213,5,65,13,225,79,49,171,255,239,61,231,181,123,64,69,122,12,66,42,28,182,66,124,60,66,66,168,78,231,51,22,250,239,61,192,149,23,64,188,225,67,65,65,141,141,65,77,90,162,64,44,106,228,66,229,46,100,69,53,92,16,71,102,161,190,71,139,168,240,70,85,31,109,66,177,217,119,68,35,74,167,69,134,37,245,69,128,1,188,68,0,0,0,0,0,0,240,61,234,212,83,65,163,6,206,67,237,43,114,69,214,83,247,69,63,51,104,45,255,255,239,61,35,176,217,64,202,157,216,66,183,104,1,68,198,45,4,68,55,101,33,67,23,139,244,69,214,188,2,72,156,178,47,73,148,190,34,73,72,203,143,200,84,68,236,65,71,251,124,67,46,96,61,68,42,217,56,68,242,242,27,67,55,180,158,192,0,0,0,0,0,0,210,189,141,44,130,193,131,230,61,196,58,39,57,198,131,54,61,199,50,137,63,180,117,244,209,189,35,36,48,192,22,79,157,193,31,77,41,194,178,249,170,193,149,191,214,51,189,55,134,53,172,197,39,55,23,183,209,56,111,18,131,58,10,215,35,60,205,204,204,61,0,0,128,63,0,0,32,65,0,0,200,66,0,0,122,68,0,64,28,70,0,80,195,71,0,36,116,73,128,150,24,75,0,0,0,0,0,0,109,230,236,222,5,0,11,0,73,0,49,1,83,0,127,1,48,1,105,0,120,1,255,0,129,1,83,2,130,1,131,1,132,1,133,1,134,1,84,2,135,1,136,1,137,1,86,2,138,1,87,2,139,1,140,1,142,1,221,1,143,1,89,2,144,1,91,2,145,1,146,1,147,1,96,2,148,1,99,2,150,1,105,2,151,1,104,2,152,1,153,1,156,1,111,2,157,1,114,2,159,1,117,2,166,1,128,2,167,1,168,1,169,1,131,2,172,1,173,1,174,1,136,2,175,1,176,1,177,1,138,2,178,1,139,2,183,1,146,2,184,1,185,1,188,1,189,1,196,1,198,1,196,1,197,1,197,1,198,1,199,1,201,1,199,1,200,1,200,1,201,1,202,1,204,1,202,1,203,1,203,1,204,1,241,1,243,1,241,1,242,1,242,1,243,1,244,1,245,1,246,1,149,1,247,1,191,1,32,2,158,1,134,3,172,3,136,3,173,3,137,3,174,3,138,3,175,3,140,3,204,3,142,3,205,3,143,3,206,3,153,3,69,3,153,3,190,31,163,3,194,3,247,3,248,3,250,3,251,3,96,30,155,30,223,0,223,0,158,30,223,0,89,31,81,31,91,31,83,31,93,31,85,31,95,31,87,31,188,31,179,31,204,31,195,31,236,31,229,31,252,31,243,31,58,2,101,44,59,2,60,2,61,2,154,1,62,2,102,44,65,2,66,2,67,2,128,1,68,2,137,2,69,2,140,2,244,3,184,3,249,3,242,3,253,3,123,3,254,3,124,3,255,3,125,3,192,4,207,4,38,33,201,3,42,33,107,0,43,33,229,0,50,33,78,33,131,33,132,33,96,44,97,44,98,44,107,2,99,44,125,29,100,44,125,2,109,44,81,2,110,44,113,2,111,44,80,2,112,44,82,2,114,44,115,44,117,44,118,44,126,44,63,2,127,44,64,2,242,44,243,44,125,167,121,29,139,167,140,167,141,167,101,2,170,167,102,2,199,16,39,45,205,16,45,45,118,3,119,3,156,3,181,0,146,3,208,3,152,3,209,3,166,3,213,3,160,3,214,3,154,3,240,3,161,3,241,3,149,3,245,3,207,3,215,3,0,0,0,0,65,0,32,26,192,0,32,31,0,1,1,47,50,1,1,5,57,1,1,15,74,1,1,45,121,1,1,5,112,3,1,3,145,3,32,17,163,3,32,9,0,4,80,16,16,4,32,32,96,4,1,33,138,4,1,53,193,4,1,13,208,4,1,63,20,5,1,19,49,5,48,38,160,1,1,5,179,1,1,3,205,1,1,15,222,1,1,17,248,1,1,39,34,2,1,17,216,3,1,23,0,30,1,149,160,30,1,95,8,31,248,8,24,31,248,6,40,31,248,8,56,31,248,8,72,31,248,6,104,31,248,8,136,31,248,8,152,31,248,8,168,31,248,8,184,31,248,2,186,31,182,2,200,31,170,4,216,31,248,2,218,31,156,2,232,31,248,2,234,31,144,2,248,31,128,2,250,31,130,2,70,2,1,9,16,5,1,3,96,33,16,16,0,44,48,47,103,44,1,5,128,44,1,99,235,44,1,3,64,166,1,45,128,166,1,23,34,167,1,13,50,167,1,61,121,167,1,3,126,167,1,9,144,167,1,3,160,167,1,9,33,255,32,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,3,32,2,32,2,32,2,32,2,32,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,1,96,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,213,8,213,8,213,8,213,8,213,8,213,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,4,192,4,192,4,192,4,192,4,192,4,192,8,214,8,214,8,214,8,214,8,214,8,214,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,4,192,4,192,4,192,4,192,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,1,48,2,48,12,255,14,255,251,48,26,255,27,255,31,255,1,255,155,48,156,48,180,0,64,255,168,0,62,255,227,255,63,255,253,48,254,48,157,48,158,48,3,48,221,78,5,48,6,48,7,48,252,48,21,32,16,32,15,255,92,0,28,48,22,32,92,255,38,32,37,32,24,32,25,32,28,32,29,32,8,255,9,255,20,48,21,48,59,255,61,255,91,255,93,255,8,48,9,48,10,48,11,48,12,48,13,48,14,48,15,48,16,48,17,48,11,255,18,34,177,0,215,0,247,0,29,255,96,34,28,255,30,255,102,34,103,34,30,34,52,34,66,38,64,38,176,0,50,32,51,32,3,33,229,255,4,255,162,0,163,0,5,255,3,255,6,255,10,255,32,255,167,0,6,38,5,38,203,37,207,37,206,37,199,37,198,37,161,37,160,37,179,37,178,37,189,37,188,37,59,32,18,48,146,33,144,33,145,33,147,33,19,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,34,11,34,134,34,135,34,130,34,131,34,42,34,41,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,34,40,34,172,0,210,33,212,33,0,34,3,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,34,165,34,18,35,2,34,7,34,97,34,82,34,106,34,107,34,26,34,61,34,29,34,53,34,43,34,44,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,33,48,32,111,38,109,38,106,38,32,32,33,32,182,0,0,0,0,0,0,0,0,0,239,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,255,17,255,18,255,19,255,20,255,21,255,22,255,23,255,24,255,25,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,255,34,255,35,255,36,255,37,255,38,255,39,255,40,255,41,255,42,255,43,255,44,255,45,255,46,255,47,255,48,255,49,255,50,255,51,255,52,255,53,255,54,255,55,255,56,255,57,255,58,255,0,0,0,0,0,0,0,0,0,0,0,0,65,255,66,255,67,255,68,255,69,255,70,255,71,255,72,255,73,255,74,255,75,255,76,255,77,255,78,255,79,255,80,255,81,255,82,255,83,255,84,255,85,255,86,255,87,255,88,255,89,255,90,255,0,0,0,0,0,0,0,0,65,48,66,48,67,48,68,48,69,48,70,48,71,48,72,48,73,48,74,48,75,48,76,48,77,48,78,48,79,48,80,48,81,48,82,48,83,48,84,48,85,48,86,48,87,48,88,48,89,48,90,48,91,48,92,48,93,48,94,48,95,48,96,48,97,48,98,48,99,48,100,48,101,48,102,48,103,48,104,48,105,48,106,48,107,48,108,48,109,48,110,48,111,48,112,48,113,48,114,48,115,48,116,48,117,48,118,48,119,48,120,48,121,48,122,48,123,48,124,48,125,48,126,48,127,48,128,48,129,48,130,48,131,48,132,48,133,48,134,48,135,48,136,48,137,48,138,48,139,48,140,48,141,48,142,48,143,48,144,48,145,48,146,48,147,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,161,48,162,48,163,48,164,48,165,48,166,48,167,48,168,48,169,48,170,48,171,48,172,48,173,48,174,48,175,48,176,48,177,48,178,48,179,48,180,48,181,48,182,48,183,48,184,48,185,48,186,48,187,48,188,48,189,48,190,48,191,48,192,48,193,48,194,48,195,48,196,48,197,48,198,48,199,48,200,48,201,48,202,48,203,48,204,48,205,48,206,48,207,48,208,48,209,48,210,48,211,48,212,48,213,48,214,48,215,48,216,48,217,48,218,48,219,48,220,48,221,48,222,48,223,48,224,48,225,48,226,48,227,48,228,48,229,48,230,48,231,48,232,48,233,48,234,48,235,48,236,48,237,48,238,48,239,48,240,48,241,48,242,48,243,48,244,48,245,48,246,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,3,146,3,147,3,148,3,149,3,150,3,151,3,152,3,153,3,154,3,155,3,156,3,157,3,158,3,159,3,160,3,161,3,163,3,164,3,165,3,166,3,167,3,168,3,169,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,3,178,3,179,3,180,3,181,3,182,3,183,3,184,3,185,3,186,3,187,3,188,3,189,3,190,3,191,3,192,3,193,3,195,3,196,3,197,3,198,3,199,3,200,3,201,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,4,17,4,18,4,19,4,20,4,21,4,1,4,22,4,23,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,4,37,4,38,4,39,4,40,4,41,4,42,4,43,4,44,4,45,4,46,4,47,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,4,49,4,50,4,51,4,52,4,53,4,81,4,54,4,55,4,56,4,57,4,58,4,59,4,60,4,61,4,62,4,63,4,64,4,65,4,66,4,67,4,68,4,69,4,70,4,71,4,72,4,73,4,74,4,75,4,76,4,77,4,78,4,79,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,2,37,12,37,16,37,24,37,20,37,28,37,44,37,36,37,52,37,60,37,1,37,3,37,15,37,19,37,27,37,23,37,35,37,51,37,43,37,59,37,75,37,32,37,47,37,40,37,55,37,63,37,29,37,48,37,37,37,56,37,66,37],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+20480);allocate([156,78,22,85,3,90,63,150,192,84,27,97,40,99,246,89,34,144,117,132,28,131,80,122,170,96,225,99,37,110,237,101,102,132,166,130,245,155,147,104,39,87,161,101,113,98,155,91,208,89,123,134,244,152,98,125,190,125,142,155,22,98,159,124,183,136,137,91,181,94,9,99,151,102,72,104,199,149,141,151,79,103,229,78,10,79,77,79,157,79,73,80,242,86,55,89,212,89,1,90,9,92,223,96,15,97,112,97,19,102,5,105,186,112,79,117,112,117,251,121,173,125,239,125,195,128,14,132,99,136,2,139,85,144,122,144,59,83,149,78,165,78,223,87,178,128,193,144,239,120,0,78,241,88,162,110,56,144,50,122,40,131,139,130,47,156,65,81,112,83,189,84,225,84,224,86,251,89,21,95,242,152,235,109,228,128,45,133,98,150,112,150,160,150,251,151,11,84,243,83,135,91,207,112,189,127,194,143,232,150,111,83,92,157,186,122,17,78,147,120,252,129,38,110,24,86,4,85,29,107,26,133,59,156,229,89,169,83,102,109,220,116,143,149,66,86,145,78,75,144,242,150,79,131,12,153,225,83,182,85,48,91,113,95,32,102,243,102,4,104,56,108,243,108,41,109,91,116,200,118,78,122,52,152,241,130,91,136,96,138,237,146,178,109,171,117,202,118,197,153,166,96,1,139,138,141,178,149,142,105,173,83,134,81,18,87,48,88,68,89,180,91,246,94,40,96,169,99,244,99,191,108,20,111,142,112,20,113,89,113,213,113,63,115,1,126,118,130,209,130,151,133,96,144,91,146,27,157,105,88,188,101,90,108,37,117,249,81,46,89,101,89,128,95,220,95,188,98,250,101,42,106,39,107,180,107,139,115,193,127,86,137,44,157,14,157,196,158,161,92,150,108,123,131,4,81,75,92,182,97,198,129,118,104,97,114,89,78,250,79,120,83,105,96,41,110,79,122,243,151,11,78,22,83,238,78,85,79,61,79,161,79,115,79,160,82,239,83,9,86,15,89,193,90,182,91,225,91,209,121,135,102,156,103,182,103,76,107,179,108,107,112,194,115,141,121,190,121,60,122,135,123,177,130,219,130,4,131,119,131,239,131,211,131,102,135,178,138,41,86,168,140,230,143,78,144,30,151,138,134,196,79,232,92,17,98,89,114,59,117,229,129,189,130,254,134,192,140,197,150,19,153,213,153,203,78,26,79,227,137,222,86,74,88,202,88,251,94,235,95,42,96,148,96,98,96,208,97,18,98,208,98,57,101,65,155,102,102,176,104,119,109,112,112,76,117,134,118,117,125,165,130,249,135,139,149,142,150,157,140,241,81,190,82,22,89,179,84,179,91,22,93,104,97,130,105,175,109,141,120,203,132,87,136,114,138,167,147,184,154,108,109,168,153,217,134,163,87,255,103,206,134,14,146,131,82,135,86,4,84,211,94,225,98,185,100,60,104,56,104,187,107,114,115,186,120,107,122,154,137,210,137,107,141,3,143,237,144,163,149,148,150,105,151,102,91,179,92,125,105,77,152,78,152,155,99,32,123,43,106,127,106,182,104,13,156,95,111,114,82,157,85,112,96,236,98,59,109,7,110,209,110,91,132,16,137,68,143,20,78,57,156,246,83,27,105,58,106,132,151,42,104,92,81,195,122,178,132,220,145,140,147,91,86,40,157,34,104,5,131,49,132,165,124,8,82,197,130,230,116,126,78,131,79,160,81,210,91,10,82,216,82,231,82,251,93,154,85,42,88,230,89,140,91,152,91,219,91,114,94,121,94,163,96,31,97,99,97,190,97,219,99,98,101,209,103,83,104,250,104,62,107,83,107,87,108,34,111,151,111,69,111,176,116,24,117,227,118,11,119,255,122,161,123,33,124,233,125,54,127,240,127,157,128,102,130,158,131,179,137,204,138,171,140,132,144,81,148,147,149,145,149,162,149,101,150,211,151,40,153,24,130,56,78,43,84,184,92,204,93,169,115,76,118,60,119,169,92,235,127,11,141,193,150,17,152,84,152,88,152,1,79,14,79,113,83,156,85,104,86,250,87,71,89,9,91,196,91,144,92,12,94,126,94,204,95,238,99,58,103,215,101,226,101,31,103,203,104,196,104,95,106,48,94,197,107,23,108,125,108,127,117,72,121,99,91,0,122,0,125,189,95,143,137,24,138,180,140,119,141,204,142,29,143,226,152,14,154,60,155,128,78,125,80,0,81,147,89,156,91,47,98,128,98,236,100,58,107,160,114,145,117,71,121,169,127,251,135,188,138,112,139,172,99,202,131,160,151,9,84,3,84,171,85,84,104,88,106,112,138,39,120,117,103,205,158,116,83,162,91,26,129,80,134,6,144,24,78,69,78,199,78,17,79,202,83,56,84,174,91,19,95,37,96,81,101,61,103,66,108,114,108,227,108,120,112,3,116,118,122,174,122,8,123,26,125,254,124,102,125,231,101,91,114,187,83,69,92,232,93,210,98,224,98,25,99,32,110,90,134,49,138,221,141,248,146,1,111,166,121,90,155,168,78,171,78,172,78,155,79,160,79,209,80,71,81,246,122,113,81,246,81,84,83,33,83,127,83,235,83,172,85,131,88,225,92,55,95,74,95,47,96,80,96,109,96,31,99,89,101,75,106,193,108,194,114,237,114,239,119,248,128,5,129,8,130,78,133,247,144,225,147,255,151,87,153,90,154,240,78,221,81,45,92,129,102,109,105,64,92,242,102,117,105,137,115,80,104,129,124,197,80,228,82,71,87,254,93,38,147,164,101,35,107,61,107,52,116,129,121,189,121,75,123,202,125,185,130,204,131,127,136,95,137,57,139,209,143,209,145,31,84,128,146,93,78,54,80,229,83,58,83,215,114,150,115,233,119,230,130,175,142,198,153,200,153,210,153,119,81,26,97,94,134,176,85,122,122,118,80,211,91,71,144,133,150,50,78,219,106,231,145,81,92,72,92,152,99,159,122,147,108,116,151,97,143,170,122,138,113,136,150,130,124,23,104,112,126,81,104,108,147,242,82,27,84,171,133,19,138,164,127,205,142,225,144,102,83,136,136,65,121,194,79,190,80,17,82,68,81,83,85,45,87,234,115,139,87,81,89,98,95,132,95,117,96,118,97,103,97,169,97,178,99,58,100,108,101,111,102,66,104,19,110,102,117,61,122,251,124,76,125,153,125,75,126,107,127,14,131,74,131,205,134,8,138,99,138,102,139,253,142,26,152,143,157,184,130,206,143,232,155,135,82,31,98,131,100,192,111,153,150,65,104,145,80,32,107,122,108,84,111,116,122,80,125,64,136,35,138,8,103,246,78,57,80,38,80,101,80,124,81,56,82,99,82,167,85,15,87,5,88,204,90,250,94,178,97,248,97,243,98,114,99,28,105,41,106,125,114,172,114,46,115,20,120,111,120,121,125,12,119,169,128,139,137,25,139,226,140,210,142,99,144,117,147,122,150,85,152,19,154,120,158,67,81,159,83,179,83,123,94,38,95,27,110,144,110,132,115,254,115,67,125,55,130,0,138,250,138,80,150,78,78,11,80,228,83,124,84,250,86,209,89,100,91,241,93,171,94,39,95,56,98,69,101,175,103,86,110,208,114,202,124,180,136,161,128,225,128,240,131,78,134,135,138,232,141,55,146,199,150,103,152,19,159,148,78,146,78,13,79,72,83,73,84,62,84,47,90,140,95,161,95,159,96,167,104,142,106,90,116,129,120,158,138,164,138,119,139,144,145,94,78,201,155,164,78,124,79,175,79,25,80,22,80,73,81,108,81,159,82,185,82,254,82,154,83,227,83,17,84,14,84,137,85,81,87,162,87,125,89,84,91,93,91,143,91,229,93,231,93,247,93,120,94,131,94,154,94,183,94,24,95,82,96,76,97,151,98,216,98,167,99,59,101,2,102,67,102,244,102,109,103,33,104,151,104,203,105,95,108,42,109,105,109,47,110,157,110,50,117,135,118,108,120,63,122,224,124,5,125,24,125,94,125,177,125,21,128,3,128,175,128,177,128,84,129,143,129,42,130,82,131,76,136,97,136,27,139,162,140,252,140,202,144,117,145,113,146,63,120,252,146,164,149,77,150,5,152,153,153,216,154,59,157,91,82,171,82,247,83,8,84,213,88,247,98,224,111,106,140,95,143,185,158,75,81,59,82,74,84,253,86,64,122,119,145,96,157,210,158,68,115,9,111,112,129,17,117,253,95,218,96,168,154,219,114,188,143,100,107,3,152,202,78,240,86,100,87,190,88,90,90,104,96,199,97,15,102,6,102,57,104,177,104,247,109,213,117,58,125,110,130,66,155,155,78,80,79,201,83,6,85,111,93,230,93,238,93,251,103,153,108,115,116,2,120,80,138,150,147,223,136,80,87,167,94,43,99,181,80,172,80,141,81,0,103,201,84,94,88,187,89,176,91,105,95,77,98,161,99,61,104,115,107,8,110,125,112,199,145,128,114,21,120,38,120,109,121,142,101,48,125,220,131,193,136,9,143,155,150,100,82,40,87,80,103,106,127,161,140,180,81,66,87,42,150,58,88,138,105,180,128,178,84,14,93,252,87,149,120,250,157,92,79,74,82,139,84,62,100,40,102,20,103,245,103,132,122,86,123,34,125,47,147,92,104,173,155,57,123,25,83,138,81,55,82,223,91,246,98,174,100,230,100,45,103,186,107,169,133,209,150,144,118,214,155,76,99,6,147,171,155,191,118,82,102,9,78,152,80,194,83,113,92,232,96,146,100,99,101,95,104,230,113,202,115,35,117,151,123,130,126,149,134,131,139,219,140,120,145,16,153,172,101,171,102,139,107,213,78,212,78,58,79,127,79,58,82,248,83,242,83,227,85,219,86,235,88,203,89,201,89,255,89,80,91,77,92,2,94,43,94,215,95,29,96,7,99,47,101,92,91,175,101,189,101,232,101,157,103,98,107,123,107,15,108,69,115,73,121,193,121,248,124,25,125,43,125,162,128,2,129,243,129,150,137,94,138,105,138,102,138,140,138,238,138,199,140,220,140,204,150,252,152,111,107,139,78,60,79,141,79,80,81,87,91,250,91,72,97,1,99,66,102,33,107,203,110,187,108,62,114,189,116,212,117,193,120,58,121,12,128,51,128,234,129,148,132,158,143,80,108,127,158,15,95,88,139,43,157,250,122,248,142,141,91,235,150,3,78,241,83,247,87,49,89,201,90,164,91,137,96,127,110,6,111,190,117,234,140,159,91,0,133,224,123,114,80,244,103,157,130,97,92,74,133,30,126,14,130,153,81,4,92,104,99,102,141,156,101,110,113,62,121,23,125,5,128,29,139,202,142,110,144,199,134,170,144,31,80,250,82,58,92,83,103,124,112,53,114,76,145,200,145,43,147,229,130,194,91,49,95,249,96,59,78,214,83,136,91,75,98,49,103,138,107,233,114,224,115,46,122,107,129,163,141,82,145,150,153,18,81,215,83,106,84,255,91,136,99,57,106,172,125,0,151,218,86,206,83,104,84,151,91,49,92,222,93,238,79,1,97,254,98,50,109,192,121,203,121,66,125,77,126,210,127,237,129,31,130,144,132,70,136,114,137,144,139,116,142,47,143,49,144,75,145,108,145,198,150,156,145,192,78,79,79,69,81,65,83,147,95,14,98,212,103,65,108,11,110,99,115,38,126,205,145,131,146,212,83,25,89,191,91,209,109,93,121,46,126,155,124,126,88,159,113,250,81,83,136,240,143,202,79,251,92,37,102,172,119,227,122,28,130,255,153,198,81,170,95,236,101,111,105,137,107,243,109,150,110,100,111,254,118,20,125,225,93,117,144,135,145,6,152,230,81,29,82,64,98,145,102,217,102,26,110,182,94,210,125,114,127,248,102,175,133,247,133,248,138,169,82,217,83,115,89,143,94,144,95,85,96,228,146,100,150,183,80,31,81,221,82,32,83,71,83,236,83,232,84,70,85,49,85,23,86,104,89,190,89,60,90,181,91,6,92,15,92,17,92,26,92,132,94,138,94,224,94,112,95,127,98,132,98,219,98,140,99,119,99,7,102,12,102,45,102,118,102,126,103,162,104,31,106,53,106,188,108,136,109,9,110,88,110,60,113,38,113,103,113,199,117,1,119,93,120,1,121,101,121,240,121,224,122,17,123,167,124,57,125,150,128,214,131,139,132,73,133,93,136,243,136,31,138,60,138,84,138,115,138,97,140,222,140,164,145,102,146,126,147,24,148,156,150,152,151,10,78,8,78,30,78,87,78,151,81,112,82,206,87,52,88,204,88,34,91,56,94,197,96,254,100,97,103,86,103,68,109,182,114,115,117,99,122,184,132,114,139,184,145,32,147,49,86,244,87,254,152,237,98,13,105,150,107,237,113,84,126,119,128,114,130,230,137,223,152,85,135,177,143,59,92,56,79,225,79,181,79,7,85,32,90,221,91,233,91,195,95,78,97,47,99,176,101,75,102,238,104,155,105,120,109,241,109,51,117,185,117,31,119,94,121,230,121,51,125,227,129,175,130,170,133,170,137,58,138,171,142,155,143,50,144,221,145,7,151,186,78,193,78,3,82,117,88,236,88,11,92,26,117,61,92,78,129,10,138,197,143,99,150,109,151,37,123,207,138,8,152,98,145,243,86,168,83,23,144,57,84,130,87,37,94,168,99,52,108,138,112,97,119,139,124,224,127,112,136,66,144,84,145,16,147,24,147,143,150,94,116,196,154,7,93,105,93,112,101,162,103,168,141,219,150,110,99,73,103,25,105,197,131,23,152,192,150,254,136,132,111,122,100,248,91,22,78,44,112,93,117,47,102,196,81,54,82,226,82,211,89,129,95,39,96,16,98,63,101,116,101,31,102,116,102,242,104,22,104,99,107,5,110,114,114,31,117,219,118,190,124,86,128,240,88,253,136,127,137,160,138,147,138,203,138,29,144,146,145,82,151,89,151,137,101,14,122,6,129,187,150,45,94,220,96,26,98,165,101,20,102,144,103,243,119,77,122,77,124,62,126,10,129,172,140,100,141,225,141,95,142,169,120,7,82,217,98,165,99,66,100,152,98,45,138,131,122,192,123,172,138,234,150,118,125,12,130,73,135,217,78,72,81,67,83,96,83,163,91,2,92,22,92,221,93,38,98,71,98,176,100,19,104,52,104,201,108,69,109,23,109,211,103,92,111,78,113,125,113,203,101,127,122,173,123,218,125,74,126,168,127,122,129,27,130,57,130,166,133,110,138,206,140,245,141,120,144,119,144,173,146,145,146,131,149,174,155,77,82,132,85,56,111,54,113,104,81,133,121,85,126,179,129,206,124,76,86,81,88,168,92,170,99,254,102,253,102,90,105,217,114,143,117,142,117,14,121,86,121,223,121,151,124,32,125,68,125,7,134,52,138,59,150,97,144,32,159,231,80,117,82,204,83,226,83,9,80,170,85,238,88,79,89,61,114,139,91,100,92,29,83,227,96,243,96,92,99,131,99,63,99,187,99,205,100,233,101,249,102,227,93,205,105,253,105,21,111,229,113,137,78,233,117,248,118,147,122,223,124,207,125,156,125,97,128,73,131,88,131,108,132,188,132,251,133,197,136,112,141,1,144,109,144,151,147,28,151,18,154,207,80,151,88,142,97,211,129,53,133,8,141,32,144,195,79,116,80,71,82,115,83,111,96,73,99,95,103,44,110,179,141,31,144,215,79,94,92,202,140,207,101,154,125,82,83,150,136,118,81,195,99,88,91,107,91,10,92,13,100,81,103,92,144,214,78,26,89,42,89,112,108,81,138,62,85,21,88,165,89,240,96,83,98,193,103,53,130,85,105,64,150,196,153,40,154,83,79,6,88,254,91,16,128,177,92,47,94,133,95,32,96,75,97,52,98,255,102,240,108,222,110,206,128,127,129,212,130,139,136,184,140,0,144,46,144,138,150,219,158,219,155,227,78,240,83,39,89,44,123,141,145,76,152,249,157,221,110,39,112,83,83,68,85,133,91,88,98,158,98,211,98,162,108,239,111,34,116,23,138,56,148,193,111,254,138,56,131,231,81,248,134,234,83,233,83,70,79,84,144,176,143,106,89,49,129,253,93,234,122,191,143,218,104,55,140,248,114,72,156,61,106,176,138,57,78,88,83,6,86,102,87,197,98,162,99,230,101,78,107,225,109,91,110,173,112,237,119,239,122,170,123,187,125,61,128,198,128,203,134,149,138,91,147,227,86,199,88,62,95,173,101,150,102,128,106,181,107,55,117,199,138,36,80,229,119,48,87,27,95,101,96,122,102,96,108,244,117,26,122,110,127,244,129,24,135,69,144,179,153,201,123,92,117,249,122,81,123,196,132,16,144,233,121,146,122,54,131,225,90,64,119,45,78,242,78,153,91,224,95,189,98,60,102,241,103,232,108,107,134,119,136,59,138,78,145,243,146,208,153,23,106,38,112,42,115,231,130,87,132,175,140,1,78,70,81,203,81,139,85,245,91,22,94,51,94,129,94,20,95,53,95,107,95,180,95,242,97,17,99,162,102,29,103,110,111,82,114,58,117,58,119,116,128,57,129,120,129,118,135,191,138,220,138,133,141,243,141,154,146,119,149,2,152,229,156,197,82,87,99,244,118,21,103,136,108,205,115,195,140,174,147,115,150,37,109,156,88,14,105,204,105,253,143,154,147,219,117,26,144,90,88,2,104,180,99,251,105,67,79,44,111,216,103,187,143,38,133,180,125,84,147,63,105,112,111,106,87,247,88,44,91,44,125,42,114,10,84,227,145,180,157,173,78,78,79,92,80,117,80,67,82,158,140,72,84,36,88,154,91,29,94,149,94,173,94,247,94,31,95,140,96,181,98,58,99,208,99,175,104,64,108,135,120,142,121,11,122,224,125,71,130,2,138,230,138,68,142,19,144,184,144,45,145,216,145,14,159,229,108,88,100,226,100,117,101,244,110,132,118,27,123,105,144,209,147,186,110,242,84,185,95,164,100,77,143,237,143,68,146,120,81,107,88,41,89,85,92,151,94,251,109,143,126,28,117,188,140,226,142,91,152,185,112,29,79,191,107,177,111,48,117,251,150,78,81,16,84,53,88,87,88,172,89,96,92,146,95,151,101,92,103,33,110,123,118,223,131,237,140,20,144,253,144,77,147,37,120,58,120,170,82,166,94,31,87,116,89,18,96,18,80,90,81,172,81,205,81,0,82,16,85,84,88,88,88,87,89,149,91,246,92,139,93,188,96,149,98,45,100,113,103,67,104,188,104,223,104,215,118,216,109,111,110,155,109,111,112,200,113,83,95,216,117,119,121,73,123,84,123,82,123,214,124,113,125,48,82,99,132,105,133,228,133,14,138,4,139,70,140,15,142,3,144,15,144,25,148,118,150,45,152,48,154,216,149,205,80,213,82,12,84,2,88,14,92,167,97,158,100,30,109,179,119,229,122,244,128,4,132,83,144,133,146,224,92,7,157,63,83,151,95,179,95,156,109,121,114,99,119,191,121,228,123,210,107,236,114,173,138,3,104,97,106,248,81,129,122,52,105,74,92,246,156,235,130,197,91,73,145,30,112,120,86,111,92,199,96,102,101,140,108,90,140,65,144,19,152,81,84,199,102,13,146,72,89,163,144,133,81,77,78,234,81,153,133,14,139,88,112,122,99,75,147,98,105,180,153,4,126,119,117,87,83,96,105,223,142,227,150,93,108,140,78,60,92,16,95,233,143,2,83,209,140,137,128,121,134,255,94,229,101,115,78,101,81,130,89,63,92,238,151,251,78,138,89,205,95,141,138,225,111,176,121,98,121,231,91,113,132,43,115,177,113,116,94,245,95,123,99,154,100,195,113,152,124,67,78,252,94,75,78,220,87,162,86,169,96,195,111,13,125,253,128,51,129,191,129,178,143,151,137,164,134,244,93,138,98,173,100,135,137,119,103,226,108,62,109,54,116,52,120,70,90,117,127,173,130,172,153,243,79,195,94,221,98,146,99,87,101,111,103,195,118,76,114,204,128,186,128,41,143,77,145,13,80,249,87,146,90,133,104,115,105,100,113,253,114,183,140,242,88,224,140,106,150,25,144,127,135,228,121,231,119,41,132,47,79,101,82,90,83,205,98,207,103,202,108,125,118,148,123,149,124,54,130,132,133,235,143,221,102,32,111,6,114,27,126,171,131,193,153,166,158,253,81,177,123,114,120,184,123,135,128,72,123,232,106,97,94,140,128,81,117,96,117,107,81,98,146,140,110,122,118,151,145,234,154,16,79,112,127,156,98,79,123,165,149,233,156,122,86,89,88,228,134,188,150,52,79,36,82,74,83,205,83,219,83,6,94,44,100,145,101,127,103,62,108,78,108,72,114,175,114,237,115,84,117,65,126,44,130,233,133,169,140,196,123,198,145,105,113,18,152,239,152,61,99,105,102,106,117,228,118,208,120,67,133,238,134,42,83,81,83,38,84,131,89,135,94,124,95,178,96,73,98,121,98,171,98,144,101,212,107,204,108,178,117,174,118,145,120,216,121,203,125,119,127,165,128,171,136,185,138,187,140,127,144,94,151,219,152,11,106,56,124,153,80,62,92,174,95,135,103,216,107,53,116,9,119,142,127,59,159,202,103,23,122,57,83,139,117,237,154,102,95,157,129,241,131,152,128,60,95,197,95,98,117,70,123,60,144,103,104,235,89,155,90,16,125,126,118,44,139,245,79,106,95,25,106,55,108,2,111,226,116,104,121,104,136,85,138,121,140,223,94,207,99,197,117,210,121,215,130,40,147,242,146,156,132,237,134,45,156,193,84,108,95,140,101,92,109,21,112,167,140,211,140,59,152,79,101,246,116,13,78,216,78,224,87,43,89,102,90,204,91,168,81,3,94,156,94,22,96,118,98,119,101,167,101,110,102,110,109,54,114,38,123,80,129,154,129,153,130,92,139,160,140,230,140,116,141,28,150,68,150,174,79,171,100,102,107,30,130,97,132,106,133,232,144,1,92,83,105,168,152,122,132,87,133,15,79,111,82,169,95,69,94,13,103,143,121,121,129,7,137,134,137,245,109,23,95,85,98,184,108,207,78,105,114,146,155,6,82,59,84,116,86,179,88,164,97,110,98,26,113,110,89,137,124,222,124,27,125,240,150,135,101,94,128,25,78,117,79,117,81,64,88,99,94,115,94,10,95,196,103,38,78,61,133,137,149,91,150,115,124,1,152,251,80,193,88,86,118,167,120,37,82,165,119,17,133,134,123,79,80,9,89,71,114,199,123,232,125,186,143,212,143,77,144,191,79,201,82,41,90,1,95,173,151,221,79,23,130,234,146,3,87,85,99,105,107,43,117,220,136,20,143,66,122,223,82,147,88,85,97,10,98,174,102,205,107,63,124,233,131,35,80,248,79,5,83,70,84,49,88,73,89,157,91,240,92,239,92,41,93,150,94,177,98,103,99,62,101,185,101,11,103,213,108,225,108,249,112,50,120,43,126,222,128,179,130,12,132,236,132,2,135,18,137,42,138,74,140,166,144,210,146,253,152,243,156,108,157,79,78,161,78,141,80,86,82,74,87,168,89,61,94,216,95,217,95,63,98,180,102,27,103,208,103,210,104,146,81,33,125,170,128,168,129,0,139,140,140,191,140,126,146,50,150,32,84,44,152,23,83,213,80,92,83,168,88,178,100,52,103,103,114,102,119,70,122,230,145,195,82,161,108,134,107,0,88,76,94,84,89,44,103,251,127,225,81,198,118,105,100,232,120,84,155,187,158,203,87,185,89,39,102,154,103,206,107,233,84,217,105,85,94,156,129,149,103,170,155,254,103,82,156,93,104,166,78,227,79,200,83,185,98,43,103,171,108,196,143,173,79,109,126,191,158,7,78,98,97,128,110,43,111,19,133,115,84,42,103,69,155,243,93,149,123,172,92,198,91,28,135,74,110,209,132,20,122,8,129,153,89,141,124,17,108,32,119,217,82,34,89,33,113,95,114,219,119,39,151,97,157,11,105,127,90,24,90,165,81,13,84,125,84,14,102,223,118,247,143,152,146,244,156,234,89,93,114,197,110,77,81,201,104,191,125,236,125,98,151,186,158,120,100,33,106,2,131,132,89,95,91,219,107,27,115,242,118,178,125,23,128,153,132,50,81,40,103,217,158,238,118,98,103,255,82,5,153,36,92,59,98,126,124,176,140,79,85,182,96,11,125,128,149,1,83,95,78,182,81,28,89,58,114,54,128,206,145,37,95,226,119,132,83,121,95,4,125,172,133,51,138,141,142,86,151,243,103,174,133,83,148,9,97,8,97,185,108,82,118,237,138,56,143,47,85,81,79,42,81,199,82,203,83,165,91,125,94,160,96,130,97,214,99,9,103,218,103,103,110,140,109,54,115,55,115,49,117,80,121,213,136,152,138,74,144,145,144,245,144,196,150,141,135,21,89,136,78,89,79,14,78,137,138,63,143,16,152,173,80,124,94,150,89,185,91,184,94,218,99,250,99,193,100,220,102,74,105,216,105,11,109,182,110,148,113,40,117,175,122,138,127,0,128,73,132,201,132,129,137,33,139,10,142,101,144,125,150,10,153,126,97,145,98,50,107,131,108,116,109,204,127,252,127,192,109,133,127,186,135,248,136,101,103,177,131,60,152,247,150,27,109,97,125,61,132,106,145,113,78,117,83,80,93,4,107,235,111,205,133,45,134,167,137,41,82,15,84,101,92,78,103,168,104,6,116,131,116,226,117,207,136,225,136,204,145,226,150,120,150,139,95,135,115,203,122,78,132,160,99,101,117,137,82,65,109,156,110,9,116,89,117,107,120,146,124,134,150,220,122,141,159,182,79,110,97,197,101,92,134,134,78,174,78,218,80,33,78,204,81,238,91,153,101,129,104,188,109,31,115,66,118,173,119,28,122,231,124,111,130,210,138,124,144,207,145,117,150,24,152,155,82,209,125,43,80,152,83,151,103,203,109,208,113,51,116,232,129,42,143,163,150,87,156,159,158,96,116,65,88,153,109,47,125,94,152,228,78,54,79,139,79,183,81,177,82,186,93,28,96,178,115,60,121,211,130,52,146,183,150,246,150,10,151,151,158,98,159,166,102,116,107,23,82,163,82,200,112,194,136,201,94,75,96,144,97,35,111,73,113,62,124,244,125,111,128,238,132,35,144,44,147,66,84,111,155,211,106,137,112,194,140,239,141,50,151,180,82,65,90,202,94,4,95,23,103,124,105,148,105,106,109,15,111,98,114,252,114,237,123,1,128,126,128,75,135,206,144,109,81,147,158,132,121,139,128,50,147,214,138,45,80,140,84,113,138,106,107,196,140,7,129,209,96,160,103,242,157,153,78,152,78,16,156,107,138,193,133,104,133,0,105,126,110,151,120,85,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,95,16,78,21,78,42,78,49,78,54,78,60,78,63,78,66,78,86,78,88,78,130,78,133,78,107,140,138,78,18,130,13,95,142,78,158,78,159,78,160,78,162,78,176,78,179,78,182,78,206,78,205,78,196,78,198,78,194,78,215,78,222,78,237,78,223,78,247,78,9,79,90,79,48,79,91,79,93,79,87,79,71,79,118,79,136,79,143,79,152,79,123,79,105,79,112,79,145,79,111,79,134,79,150,79,24,81,212,79,223,79,206,79,216,79,219,79,209,79,218,79,208,79,228,79,229,79,26,80,40,80,20,80,42,80,37,80,5,80,28,79,246,79,33,80,41,80,44,80,254,79,239,79,17,80,6,80,67,80,71,80,3,103,85,80,80,80,72,80,90,80,86,80,108,80,120,80,128,80,154,80,133,80,180,80,178,80,201,80,202,80,179,80,194,80,214,80,222,80,229,80,237,80,227,80,238,80,249,80,245,80,9,81,1,81,2,81,22,81,21,81,20,81,26,81,33,81,58,81,55,81,60,81,59,81,63,81,64,81,82,81,76,81,84,81,98,81,248,122,105,81,106,81,110,81,128,81,130,81,216,86,140,81,137,81,143,81,145,81,147,81,149,81,150,81,164,81,166,81,162,81,169,81,170,81,171,81,179,81,177,81,178,81,176,81,181,81,189,81,197,81,201,81,219,81,224,81,85,134,233,81,237,81,240,81,245,81,254,81,4,82,11,82,20,82,14,82,39,82,42,82,46,82,51,82,57,82,79,82,68,82,75,82,76,82,94,82,84,82,106,82,116,82,105,82,115,82,127,82,125,82,141,82,148,82,146,82,113,82,136,82,145,82,168,143,167,143,172,82,173,82,188,82,181,82,193,82,205,82,215,82,222,82,227,82,230,82,237,152,224,82,243,82,245,82,248,82,249,82,6,83,8,83,56,117,13,83,16,83,15,83,21,83,26,83,35,83,47,83,49,83,51,83,56,83,64,83,70,83,69,83,23,78,73,83,77,83,214,81,94,83,105,83,110,83,24,89,123,83,119,83,130,83,150,83,160,83,166,83,165,83,174,83,176,83,182,83,195,83,18,124,217,150,223,83,252,102,238,113,238,83,232,83,237,83,250,83,1,84,61,84,64,84,44,84,45,84,60,84,46,84,54,84,41,84,29,84,78,84,143,84,117,84,142,84,95,84,113,84,119,84,112,84,146,84,123,84,128,84,118,84,132,84,144,84,134,84,199,84,162,84,184,84,165,84,172,84,196,84,200,84,168,84,171,84,194,84,164,84,190,84,188,84,216,84,229,84,230,84,15,85,20,85,253,84,238,84,237,84,250,84,226,84,57,85,64,85,99,85,76,85,46,85,92,85,69,85,86,85,87,85,56,85,51,85,93,85,153,85,128,85,175,84,138,85,159,85,123,85,126,85,152,85,158,85,174,85,124,85,131,85,169,85,135,85,168,85,218,85,197,85,223,85,196,85,220,85,228,85,212,85,20,86,247,85,22,86,254,85,253,85,27,86,249,85,78,86,80,86,223,113,52,86,54,86,50,86,56,86,107,86,100,86,47,86,108,86,106,86,134,86,128,86,138,86,160,86,148,86,143,86,165,86,174,86,182,86,180,86,194,86,188,86,193,86,195,86,192,86,200,86,206,86,209,86,211,86,215,86,238,86,249,86,0,87,255,86,4,87,9,87,8,87,11,87,13,87,19,87,24,87,22,87,199,85,28,87,38,87,55,87,56,87,78,87,59,87,64,87,79,87,105,87,192,87,136,87,97,87,127,87,137,87,147,87,160,87,179,87,164,87,170,87,176,87,195,87,198,87,212,87,210,87,211,87,10,88,214,87,227,87,11,88,25,88,29,88,114,88,33,88,98,88,75,88,112,88,192,107,82,88,61,88,121,88,133,88,185,88,159,88,171,88,186,88,222,88,187,88,184,88,174,88,197,88,211,88,209,88,215,88,217,88,216,88,229,88,220,88,228,88,223,88,239,88,250,88,249,88,251,88,252,88,253,88,2,89,10,89,16,89,27,89,166,104,37,89,44,89,45,89,50,89,56,89,62,89,210,122,85,89,80,89,78,89,90,89,88,89,98,89,96,89,103,89,108,89,105,89,120,89,129,89,157,89,94,79,171,79,163,89,178,89,198,89,232,89,220,89,141,89,217,89,218,89,37,90,31,90,17,90,28,90,9,90,26,90,64,90,108,90,73,90,53,90,54,90,98,90,106,90,154,90,188,90,190,90,203,90,194,90,189,90,227,90,215,90,230,90,233,90,214,90,250,90,251,90,12,91,11,91,22,91,50,91,208,90,42,91,54,91,62,91,67,91,69,91,64,91,81,91,85,91,90,91,91,91,101,91,105,91,112,91,115,91,117,91,120,91,136,101,122,91,128,91,131,91,166,91,184,91,195,91,199,91,201,91,212,91,208,91,228,91,230,91,226,91,222,91,229,91,235,91,240,91,246,91,243,91,5,92,7,92,8,92,13,92,19,92,32,92,34,92,40,92,56,92,57,92,65,92,70,92,78,92,83,92,80,92,79,92,113,91,108,92,110,92,98,78,118,92,121,92,140,92,145,92,148,92,155,89,171,92,187,92,182,92,188,92,183,92,197,92,190,92,199,92,217,92,233,92,253,92,250,92,237,92,140,93,234,92,11,93,21,93,23,93,92,93,31,93,27,93,17,93,20,93,34,93,26,93,25,93,24,93,76,93,82,93,78,93,75,93,108,93,115,93,118,93,135,93,132,93,130,93,162,93,157,93,172,93,174,93,189,93,144,93,183,93,188,93,201,93,205,93,211,93,210,93,214,93,219,93,235,93,242,93,245,93,11,94,26,94,25,94,17,94,27,94,54,94,55,94,68,94,67,94,64,94,78,94,87,94,84,94,95,94,98,94,100,94,71,94,117,94,118,94,122,94,188,158,127,94,160,94,193,94,194,94,200,94,208,94,207,94,214,94,227,94,221,94,218,94,219,94,226,94,225,94,232,94,233,94,236,94,241,94,243,94,240,94,244,94,248,94,254,94,3,95,9,95,93,95,92,95,11,95,17,95,22,95,41,95,45,95,56,95,65,95,72,95,76,95,78,95,47,95,81,95,86,95,87,95,89,95,97,95,109,95,115,95,119,95,131,95,130,95,127,95,138,95,136,95,145,95,135,95,158,95,153,95,152,95,160,95,168,95,173,95,188,95,214,95,251,95,228,95,248,95,241,95,221,95,179,96,255,95,33,96,96,96,25,96,16,96,41,96,14,96,49,96,27,96,21,96,43,96,38,96,15,96,58,96,90,96,65,96,106,96,119,96,95,96,74,96,70,96,77,96,99,96,67,96,100,96,66,96,108,96,107,96,89,96,129,96,141,96,231,96,131,96,154,96,132,96,155,96,150,96,151,96,146,96,167,96,139,96,225,96,184,96,224,96,211,96,180,96,240,95,189,96,198,96,181,96,216,96,77,97,21,97,6,97,246,96,247,96,0,97,244,96,250,96,3,97,33,97,251,96,241,96,13,97,14,97,71,97,62,97,40,97,39,97,74,97,63,97,60,97,44,97,52,97,61,97,66,97,68,97,115,97,119,97,88,97,89,97,90,97,107,97,116,97,111,97,101,97,113,97,95,97,93,97,83,97,117,97,153,97,150,97,135,97,172,97,148,97,154,97,138,97,145,97,171,97,174,97,204,97,202,97,201,97,247,97,200,97,195,97,198,97,186,97,203,97,121,127,205,97,230,97,227,97,246,97,250,97,244,97,255,97,253,97,252,97,254,97,0,98,8,98,9,98,13,98,12,98,20,98,27,98,30,98,33,98,42,98,46,98,48,98,50,98,51,98,65,98,78,98,94,98,99,98,91,98,96,98,104,98,124,98,130,98,137,98,126,98,146,98,147,98,150,98,212,98,131,98,148,98,215,98,209,98,187,98,207,98,255,98,198,98,212,100,200,98,220,98,204,98,202,98,194,98,199,98,155,98,201,98,12,99,238,98,241,98,39,99,2,99,8,99,239,98,245,98,80,99,62,99,77,99,28,100,79,99,150,99,142,99,128,99,171,99,118,99,163,99,143,99,137,99,159,99,181,99,107,99,105,99,190,99,233,99,192,99,198,99,227,99,201,99,210,99,246,99,196,99,22,100,52,100,6,100,19,100,38,100,54,100,29,101,23,100,40,100,15,100,103,100,111,100,118,100,78,100,42,101,149,100,147,100,165,100,169,100,136,100,188,100,218,100,210,100,197,100,199,100,187,100,216,100,194,100,241,100,231,100,9,130,224,100,225,100,172,98,227,100,239,100,44,101,246,100,244,100,242,100,250,100,0,101,253,100,24,101,28,101,5,101,36,101,35,101,43,101,52,101,53,101,55,101,54,101,56,101,75,117,72,101,86,101,85,101,77,101,88,101,94,101,93,101,114,101,120,101,130,101,131,101,138,139,155,101,159,101,171,101,183,101,195,101,198,101,193,101,196,101,204,101,210,101,219,101,217,101,224,101,225,101,241,101,114,103,10,102,3,102,251,101,115,103,53,102,54,102,52,102,28,102,79,102,68,102,73,102,65,102,94,102,93,102,100,102,103,102,104,102,95,102,98,102,112,102,131,102,136,102,142,102,137,102,132,102,152,102,157,102,193,102,185,102,201,102,190,102,188,102,196,102,184,102,214,102,218,102,224,102,63,102,230,102,233,102,240,102,245,102,247,102,15,103,22,103,30,103,38,103,39,103,56,151,46,103,63,103,54,103,65,103,56,103,55,103,70,103,94,103,96,103,89,103,99,103,100,103,137,103,112,103,169,103,124,103,106,103,140,103,139,103,166,103,161,103,133,103,183,103,239,103,180,103,236,103,179,103,233,103,184,103,228,103,222,103,221,103,226,103,238,103,185,103,206,103,198,103,231,103,156,106,30,104,70,104,41,104,64,104,77,104,50,104,78,104,179,104,43,104,89,104,99,104,119,104,127,104,159,104,143,104,173,104,148,104,157,104,155,104,131,104,174,106,185,104,116,104,181,104,160,104,186,104,15,105,141,104,126,104,1,105,202,104,8,105,216,104,34,105,38,105,225,104,12,105,205,104,212,104,231,104,213,104,54,105,18,105,4,105,215,104,227,104,37,105,249,104,224,104,239,104,40,105,42,105,26,105,35,105,33,105,198,104,121,105,119,105,92,105,120,105,107,105,84,105,126,105,110,105,57,105,116,105,61,105,89,105,48,105,97,105,94,105,93,105,129,105,106,105,178,105,174,105,208,105,191,105,193,105,211,105,190,105,206,105,232,91,202,105,221,105,187,105,195,105,167,105,46,106,145,105,160,105,156,105,149,105,180,105,222,105,232,105,2,106,27,106,255,105,10,107,249,105,242,105,231,105,5,106,177,105,30,106,237,105,20,106,235,105,10,106,18,106,193,106,35,106,19,106,68,106,12,106,114,106,54,106,120,106,71,106,98,106,89,106,102,106,72,106,56,106,34,106,144,106,141,106,160,106,132,106,162,106,163,106,151,106,23,134,187,106,195,106,194,106,184,106,179,106,172,106,222,106,209,106,223,106,170,106,218,106,234,106,251,106,5,107,22,134,250,106,18,107,22,107,49,155,31,107,56,107,55,107,220,118,57,107,238,152,71,107,67,107,73,107,80,107,89,107,84,107,91,107,95,107,97,107,120,107,121,107,127,107,128,107,132,107,131,107,141,107,152,107,149,107,158,107,164,107,170,107,171,107,175,107,178,107,177,107,179,107,183,107,188,107,198,107,203,107,211,107,223,107,236,107,235,107,243,107,239,107,190,158,8,108,19,108,20,108,27,108,36,108,35,108,94,108,85,108,98,108,106,108,130,108,141,108,154,108,129,108,155,108,126,108,104,108,115,108,146,108,144,108,196,108,241,108,211,108,189,108,215,108,197,108,221,108,174,108,177,108,190,108,186,108,219,108,239,108,217,108,234,108,31,109,77,136,54,109,43,109,61,109,56,109,25,109,53,109,51,109,18,109,12,109,99,109,147,109,100,109,90,109,121,109,89,109,142,109,149,109,228,111,133,109,249,109,21,110,10,110,181,109,199,109,230,109,184,109,198,109,236,109,222,109,204,109,232,109,210,109,197,109,250,109,217,109,228,109,213,109,234,109,238,109,45,110,110,110,46,110,25,110,114,110,95,110,62,110,35,110,107,110,43,110,118,110,77,110,31,110,67,110,58,110,78,110,36,110,255,110,29,110,56,110,130,110,170,110,152,110,201,110,183,110,211,110,189,110,175,110,196,110,178,110,212,110,213,110,143,110,165,110,194,110,159,110,65,111,17,111,76,112,236,110,248,110,254,110,63,111,242,110,49,111,239,110,50,111,204,110,62,111,19,111,247,110,134,111,122,111,120,111,129,111,128,111,111,111,91,111,243,111,109,111,130,111,124,111,88,111,142,111,145,111,194,111,102,111,179,111,163,111,161,111,164,111,185,111,198,111,170,111,223,111,213,111,236,111,212,111,216,111,241,111,238,111,219,111,9,112,11,112,250,111,17,112,1,112,15,112,254,111,27,112,26,112,116,111,29,112,24,112,31,112,48,112,62,112,50,112,81,112,99,112,153,112,146,112,175,112,241,112,172,112,184,112,179,112,174,112,223,112,203,112,221,112,217,112,9,113,253,112,28,113,25,113,101,113,85,113,136,113,102,113,98,113,76,113,86,113,108,113,143,113,251,113,132,113,149,113,168,113,172,113,215,113,185,113,190,113,210,113,201,113,212,113,206,113,224,113,236,113,231,113,245,113,252,113,249,113,255,113,13,114,16,114,27,114,40,114,45,114,44,114,48,114,50,114,59,114,60,114,63,114,64,114,70,114,75,114,88,114,116,114,126,114,130,114,129,114,135,114,146,114,150,114,162,114,167,114,185,114,178,114,195,114,198,114,196,114,206,114,210,114,226,114,224,114,225,114,249,114,247,114,15,80,23,115,10,115,28,115,22,115,29,115,52,115,47,115,41,115,37,115,62,115,78,115,79,115,216,158,87,115,106,115,104,115,112,115,120,115,117,115,123,115,122,115,200,115,179,115,206,115,187,115,192,115,229,115,238,115,222,115,162,116,5,116,111,116,37,116,248,115,50,116,58,116,85,116,63,116,95,116,89,116,65,116,92,116,105,116,112,116,99,116,106,116,118,116,126,116,139,116,158,116,167,116,202,116,207,116,212,116,241,115,224,116,227,116,231,116,233,116,238,116,242,116,240,116,241,116,248,116,247,116,4,117,3,117,5,117,12,117,14,117,13,117,21,117,19,117,30,117,38,117,44,117,60,117,68,117,77,117,74,117,73,117,91,117,70,117,90,117,105,117,100,117,103,117,107,117,109,117,120,117,118,117,134,117,135,117,116,117,138,117,137,117,130,117,148,117,154,117,157,117,165,117,163,117,194,117,179,117,195,117,181,117,189,117,184,117,188,117,177,117,205,117,202,117,210,117,217,117,227,117,222,117,254,117,255,117,252,117,1,118,240,117,250,117,242,117,243,117,11,118,13,118,9,118,31,118,39,118,32,118,33,118,34,118,36,118,52,118,48,118,59,118,71,118,72,118,70,118,92,118,88,118,97,118,98,118,104,118,105,118,106,118,103,118,108,118,112,118,114,118,118,118,120,118,124,118,128,118,131,118,136,118,139,118,142,118,150,118,147,118,153,118,154,118,176,118,180,118,184,118,185,118,186,118,194,118,205,118,214,118,210,118,222,118,225,118,229,118,231,118,234,118,47,134,251,118,8,119,7,119,4,119,41,119,36,119,30,119,37,119,38,119,27,119,55,119,56,119,71,119,90,119,104,119,107,119,91,119,101,119,127,119,126,119,121,119,142,119,139,119,145,119,160,119,158,119,176,119,182,119,185,119,191,119,188,119,189,119,187,119,199,119,205,119,215,119,218,119,220,119,227,119,238,119,252,119,12,120,18,120,38,121,32,120,42,121,69,120,142,120,116,120,134,120,124,120,154,120,140,120,163,120,181,120,170,120,175,120,209,120,198,120,203,120,212,120,190,120,188,120,197,120,202,120,236,120,231,120,218,120,253,120,244,120,7,121,18,121,17,121,25,121,44,121,43,121,64,121,96,121,87,121,95,121,90,121,85,121,83,121,122,121,127,121,138,121,157,121,167,121,75,159,170,121,174,121,179,121,185,121,186,121,201,121,213,121,231,121,236,121,225,121,227,121,8,122,13,122,24,122,25,122,32,122,31,122,128,121,49,122,59,122,62,122,55,122,67,122,87,122,73,122,97,122,98,122,105,122,157,159,112,122,121,122,125,122,136,122,151,122,149,122,152,122,150,122,169,122,200,122,176,122,182,122,197,122,196,122,191,122,131,144,199,122,202,122,205,122,207,122,213,122,211,122,217,122,218,122,221,122,225,122,226,122,230,122,237,122,240,122,2,123,15,123,10,123,6,123,51,123,24,123,25,123,30,123,53,123,40,123,54,123,80,123,122,123,4,123,77,123,11,123,76,123,69,123,117,123,101,123,116,123,103,123,112,123,113,123,108,123,110,123,157,123,152,123,159,123,141,123,156,123,154,123,139,123,146,123,143,123,93,123,153,123,203,123,193,123,204,123,207,123,180,123,198,123,221,123,233,123,17,124,20,124,230,123,229,123,96,124,0,124,7,124,19,124,243,123,247,123,23,124,13,124,246,123,35,124,39,124,42,124,31,124,55,124,43,124,61,124,76,124,67,124,84,124,79,124,64,124,80,124,88,124,95,124,100,124,86,124,101,124,108,124,117,124,131,124,144,124,164,124,173,124,162,124,171,124,161,124,168,124,179,124,178,124,177,124,174,124,185,124,189,124,192,124,197,124,194,124,216,124,210,124,220,124,226,124,59,155,239,124,242,124,244,124,246,124,250,124,6,125,2,125,28,125,21,125,10,125,69,125,75,125,46,125,50,125,63,125,53,125,70,125,115,125,86,125,78,125,114,125,104,125,110,125,79,125,99,125,147,125,137,125,91,125,143,125,125,125,155,125,186,125,174,125,163,125,181,125,199,125,189,125,171,125,61,126,162,125,175,125,220,125,184,125,159,125,176,125,216,125,221,125,228,125,222,125,251,125,242,125,225,125,5,126,10,126,35,126,33,126,18,126,49,126,31,126,9,126,11,126,34,126,70,126,102,126,59,126,53,126,57,126,67,126,55,126,50,126,58,126,103,126,93,126,86,126,94,126,89,126,90,126,121,126,106,126,105,126,124,126,123,126,131,126,213,125,125,126,174,143,127,126,136,126,137,126,140,126,146,126,144,126,147,126,148,126,150,126,142,126,155,126,156,126,56,127,58,127,69,127,76,127,77,127,78,127,80,127,81,127,85,127,84,127,88,127,95,127,96,127,104,127,105,127,103,127,120,127,130,127,134,127,131,127,136,127,135,127,140,127,148,127,158,127,157,127,154,127,163,127,175,127,178,127,185,127,174,127,182,127,184,127,113,139,197,127,198,127,202,127,213,127,212,127,225,127,230,127,233,127,243,127,249,127,220,152],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+28182);allocate([6,128,4,128,11,128,18,128,24,128,25,128,28,128,33,128,40,128,63,128,59,128,74,128,70,128,82,128,88,128,90,128,95,128,98,128,104,128,115,128,114,128,112,128,118,128,121,128,125,128,127,128,132,128,134,128,133,128,155,128,147,128,154,128,173,128,144,81,172,128,219,128,229,128,217,128,221,128,196,128,218,128,214,128,9,129,239,128,241,128,27,129,41,129,35,129,47,129,75,129,139,150,70,129,62,129,83,129,81,129,252,128,113,129,110,129,101,129,102,129,116,129,131,129,136,129,138,129,128,129,130,129,160,129,149,129,164,129,163,129,95,129,147,129,169,129,176,129,181,129,190,129,184,129,189,129,192,129,194,129,186,129,201,129,205,129,209,129,217,129,216,129,200,129,218,129,223,129,224,129,231,129,250,129,251,129,254,129,1,130,2,130,5,130,7,130,10,130,13,130,16,130,22,130,41,130,43,130,56,130,51,130,64,130,89,130,88,130,93,130,90,130,95,130,100,130,98,130,104,130,106,130,107,130,46,130,113,130,119,130,120,130,126,130,141,130,146,130,171,130,159,130,187,130,172,130,225,130,227,130,223,130,210,130,244,130,243,130,250,130,147,131,3,131,251,130,249,130,222,130,6,131,220,130,9,131,217,130,53,131,52,131,22,131,50,131,49,131,64,131,57,131,80,131,69,131,47,131,43,131,23,131,24,131,133,131,154,131,170,131,159,131,162,131,150,131,35,131,142,131,135,131,138,131,124,131,181,131,115,131,117,131,160,131,137,131,168,131,244,131,19,132,235,131,206,131,253,131,3,132,216,131,11,132,193,131,247,131,7,132,224,131,242,131,13,132,34,132,32,132,189,131,56,132,6,133,251,131,109,132,42,132,60,132,90,133,132,132,119,132,107,132,173,132,110,132,130,132,105,132,70,132,44,132,111,132,121,132,53,132,202,132,98,132,185,132,191,132,159,132,217,132,205,132,187,132,218,132,208,132,193,132,198,132,214,132,161,132,33,133,255,132,244,132,23,133,24,133,44,133,31,133,21,133,20,133,252,132,64,133,99,133,88,133,72,133,65,133,2,134,75,133,85,133,128,133,164,133,136,133,145,133,138,133,168,133,109,133,148,133,155,133,234,133,135,133,156,133,119,133,126,133,144,133,201,133,186,133,207,133,185,133,208,133,213,133,221,133,229,133,220,133,249,133,10,134,19,134,11,134,254,133,250,133,6,134,34,134,26,134,48,134,63,134,77,134,85,78,84,134,95,134,103,134,113,134,147,134,163,134,169,134,170,134,139,134,140,134,182,134,175,134,196,134,198,134,176,134,201,134,35,136,171,134,212,134,222,134,233,134,236,134,223,134,219,134,239,134,18,135,6,135,8,135,0,135,3,135,251,134,17,135,9,135,13,135,249,134,10,135,52,135,63,135,55,135,59,135,37,135,41,135,26,135,96,135,95,135,120,135,76,135,78,135,116,135,87,135,104,135,110,135,89,135,83,135,99,135,106,135,5,136,162,135,159,135,130,135,175,135,203,135,189,135,192,135,208,135,214,150,171,135,196,135,179,135,199,135,198,135,187,135,239,135,242,135,224,135,15,136,13,136,254,135,246,135,247,135,14,136,210,135,17,136,22,136,21,136,34,136,33,136,49,136,54,136,57,136,39,136,59,136,68,136,66,136,82,136,89,136,94,136,98,136,107,136,129,136,126,136,158,136,117,136,125,136,181,136,114,136,130,136,151,136,146,136,174,136,153,136,162,136,141,136,164,136,176,136,191,136,177,136,195,136,196,136,212,136,216,136,217,136,221,136,249,136,2,137,252,136,244,136,232,136,242,136,4,137,12,137,10,137,19,137,67,137,30,137,37,137,42,137,43,137,65,137,68,137,59,137,54,137,56,137,76,137,29,137,96,137,94,137,102,137,100,137,109,137,106,137,111,137,116,137,119,137,126,137,131,137,136,137,138,137,147,137,152,137,161,137,169,137,166,137,172,137,175,137,178,137,186,137,189,137,191,137,192,137,218,137,220,137,221,137,231,137,244,137,248,137,3,138,22,138,16,138,12,138,27,138,29,138,37,138,54,138,65,138,91,138,82,138,70,138,72,138,124,138,109,138,108,138,98,138,133,138,130,138,132,138,168,138,161,138,145,138,165,138,166,138,154,138,163,138,196,138,205,138,194,138,218,138,235,138,243,138,231,138,228,138,241,138,20,139,224,138,226,138,247,138,222,138,219,138,12,139,7,139,26,139,225,138,22,139,16,139,23,139,32,139,51,139,171,151,38,139,43,139,62,139,40,139,65,139,76,139,79,139,78,139,73,139,86,139,91,139,90,139,107,139,95,139,108,139,111,139,116,139,125,139,128,139,140,139,142,139,146,139,147,139,150,139,153,139,154,139,58,140,65,140,63,140,72,140,76,140,78,140,80,140,85,140,98,140,108,140,120,140,122,140,130,140,137,140,133,140,138,140,141,140,142,140,148,140,124,140,152,140,29,98,173,140,170,140,189,140,178,140,179,140,174,140,182,140,200,140,193,140,228,140,227,140,218,140,253,140,250,140,251,140,4,141,5,141,10,141,7,141,15,141,13,141,16,141,78,159,19,141,205,140,20,141,22,141,103,141,109,141,113,141,115,141,129,141,153,141,194,141,190,141,186,141,207,141,218,141,214,141,204,141,219,141,203,141,234,141,235,141,223,141,227,141,252,141,8,142,9,142,255,141,29,142,30,142,16,142,31,142,66,142,53,142,48,142,52,142,74,142,71,142,73,142,76,142,80,142,72,142,89,142,100,142,96,142,42,142,99,142,85,142,118,142,114,142,124,142,129,142,135,142,133,142,132,142,139,142,138,142,147,142,145,142,148,142,153,142,170,142,161,142,172,142,176,142,198,142,177,142,190,142,197,142,200,142,203,142,219,142,227,142,252,142,251,142,235,142,254,142,10,143,5,143,21,143,18,143,25,143,19,143,28,143,31,143,27,143,12,143,38,143,51,143,59,143,57,143,69,143,66,143,62,143,76,143,73,143,70,143,78,143,87,143,92,143,98,143,99,143,100,143,156,143,159,143,163,143,173,143,175,143,183,143,218,143,229,143,226,143,234,143,239,143,135,144,244,143,5,144,249,143,250,143,17,144,21,144,33,144,13,144,30,144,22,144,11,144,39,144,54,144,53,144,57,144,248,143,79,144,80,144,81,144,82,144,14,144,73,144,62,144,86,144,88,144,94,144,104,144,111,144,118,144,168,150,114,144,130,144,125,144,129,144,128,144,138,144,137,144,143,144,168,144,175,144,177,144,181,144,226,144,228,144,72,98,219,144,2,145,18,145,25,145,50,145,48,145,74,145,86,145,88,145,99,145,101,145,105,145,115,145,114,145,139,145,137,145,130,145,162,145,171,145,175,145,170,145,181,145,180,145,186,145,192,145,193,145,201,145,203,145,208,145,214,145,223,145,225,145,219,145,252,145,245,145,246,145,30,146,255,145,20,146,44,146,21,146,17,146,94,146,87,146,69,146,73,146,100,146,72,146,149,146,63,146,75,146,80,146,156,146,150,146,147,146,155,146,90,146,207,146,185,146,183,146,233,146,15,147,250,146,68,147,46,147,25,147,34,147,26,147,35,147,58,147,53,147,59,147,92,147,96,147,124,147,110,147,86,147,176,147,172,147,173,147,148,147,185,147,214,147,215,147,232,147,229,147,216,147,195,147,221,147,208,147,200,147,228,147,26,148,20,148,19,148,3,148,7,148,16,148,54,148,43,148,53,148,33,148,58,148,65,148,82,148,68,148,91,148,96,148,98,148,94,148,106,148,41,146,112,148,117,148,119,148,125,148,90,148,124,148,126,148,129,148,127,148,130,149,135,149,138,149,148,149,150,149,152,149,153,149,160,149,168,149,167,149,173,149,188,149,187,149,185,149,190,149,202,149,246,111,195,149,205,149,204,149,213,149,212,149,214,149,220,149,225,149,229,149,226,149,33,150,40,150,46,150,47,150,66,150,76,150,79,150,75,150,119,150,92,150,94,150,93,150,95,150,102,150,114,150,108,150,141,150,152,150,149,150,151,150,170,150,167,150,177,150,178,150,176,150,180,150,182,150,184,150,185,150,206,150,203,150,201,150,205,150,77,137,220,150,13,151,213,150,249,150,4,151,6,151,8,151,19,151,14,151,17,151,15,151,22,151,25,151,36,151,42,151,48,151,57,151,61,151,62,151,68,151,70,151,72,151,66,151,73,151,92,151,96,151,100,151,102,151,104,151,210,82,107,151,113,151,121,151,133,151,124,151,129,151,122,151,134,151,139,151,143,151,144,151,156,151,168,151,166,151,163,151,179,151,180,151,195,151,198,151,200,151,203,151,220,151,237,151,79,159,242,151,223,122,246,151,245,151,15,152,12,152,56,152,36,152,33,152,55,152,61,152,70,152,79,152,75,152,107,152,111,152,112,152,113,152,116,152,115,152,170,152,175,152,177,152,182,152,196,152,195,152,198,152,233,152,235,152,3,153,9,153,18,153,20,153,24,153,33,153,29,153,30,153,36,153,32,153,44,153,46,153,61,153,62,153,66,153,73,153,69,153,80,153,75,153,81,153,82,153,76,153,85,153,151,153,152,153,165,153,173,153,174,153,188,153,223,153,219,153,221,153,216,153,209,153,237,153,238,153,241,153,242,153,251,153,248,153,1,154,15,154,5,154,226,153,25,154,43,154,55,154,69,154,66,154,64,154,67,154,62,154,85,154,77,154,91,154,87,154,95,154,98,154,101,154,100,154,105,154,107,154,106,154,173,154,176,154,188,154,192,154,207,154,209,154,211,154,212,154,222,154,223,154,226,154,227,154,230,154,239,154,235,154,238,154,244,154,241,154,247,154,251,154,6,155,24,155,26,155,31,155,34,155,35,155,37,155,39,155,40,155,41,155,42,155,46,155,47,155,50,155,68,155,67,155,79,155,77,155,78,155,81,155,88,155,116,155,147,155,131,155,145,155,150,155,151,155,159,155,160,155,168,155,180,155,192,155,202,155,185,155,198,155,207,155,209,155,210,155,227,155,226,155,228,155,212,155,225,155,58,156,242,155,241,155,240,155,21,156,20,156,9,156,19,156,12,156,6,156,8,156,18,156,10,156,4,156,46,156,27,156,37,156,36,156,33,156,48,156,71,156,50,156,70,156,62,156,90,156,96,156,103,156,118,156,120,156,231,156,236,156,240,156,9,157,8,157,235,156,3,157,6,157,42,157,38,157,175,157,35,157,31,157,68,157,21,157,18,157,65,157,63,157,62,157,70,157,72,157,93,157,94,157,100,157,81,157,80,157,89,157,114,157,137,157,135,157,171,157,111,157,122,157,154,157,164,157,169,157,178,157,196,157,193,157,187,157,184,157,186,157,198,157,207,157,194,157,217,157,211,157,248,157,230,157,237,157,239,157,253,157,26,158,27,158,30,158,117,158,121,158,125,158,129,158,136,158,139,158,140,158,146,158,149,158,145,158,157,158,165,158,169,158,184,158,170,158,173,158,97,151,204,158,206,158,207,158,208,158,212,158,220,158,222,158,221,158,224,158,229,158,232,158,239,158,244,158,246,158,247,158,249,158,251,158,252,158,253,158,7,159,8,159,183,118,21,159,33,159,44,159,62,159,74,159,82,159,84,159,99,159,95,159,96,159,97,159,102,159,103,159,108,159,106,159,119,159,114,159,118,159,149,159,156,159,160,159,47,88,199,105,89,144,100,116,220,81,153,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,78,4,78,5,78,6,78,15,78,18,78,23,78,31,78,32,78,33,78,35,78,38,78,41,78,46,78,47,78,49,78,51,78,53,78,55,78,60,78,64,78,65,78,66,78,68,78,70,78,74,78,81,78,85,78,87,78,90,78,91,78,98,78,99,78,100,78,101,78,103,78,104,78,106,78,107,78,108,78,109,78,110,78,111,78,114,78,116,78,117,78,118,78,119,78,120,78,121,78,122,78,123,78,124,78,125,78,127,78,128,78,129,78,130,78,131,78,132,78,133,78,135,78,138,78,144,78,150,78,151,78,153,78,156,78,157,78,158,78,163,78,170,78,175,78,176,78,177,78,180,78,182,78,183,78,184,78,185,78,188,78,189,78,190,78,200,78,204,78,207,78,208,78,210,78,218,78,219,78,220,78,224,78,226,78,230,78,231,78,233,78,237,78,238,78,239,78,241,78,244,78,248,78,249,78,250,78,252,78,254,78,0,79,2,79,3,79,4,79,5,79,6,79,7,79,8,79,11,79,12,79,18,79,19,79,20,79,21,79,22,79,28,79,29,79,33,79,35,79,40,79,41,79,44,79,45,79,46,79,49,79,51,79,53,79,55,79,57,79,59,79,62,79,63,79,64,79,65,79,66,79,68,79,69,79,71,79,72,79,73,79,74,79,75,79,76,79,82,79,84,79,86,79,97,79,98,79,102,79,104,79,106,79,107,79,109,79,110,79,113,79,114,79,117,79,119,79,120,79,121,79,122,79,125,79,128,79,129,79,130,79,133,79,134,79,135,79,138,79,140,79,142,79,144,79,146,79,147,79,149,79,150,79,152,79,153,79,154,79,156,79,158,79,159,79,161,79,162,79,164,79,171,79,173,79,176,79,177,79,178,79,179,79,180,79,182,79,183,79,184,79,185,79,186,79,187,79,188,79,189,79,190,79,192,79,193,79,194,79,198,79,199,79,200,79,201,79,203,79,204,79,205,79,210,79,211,79,212,79,213,79,214,79,217,79,219,79,224,79,226,79,228,79,229,79,231,79,235,79,236,79,240,79,242,79,244,79,245,79,246,79,247,79,249,79,251,79,252,79,253,79,255,79,0,80,1,80,2,80,3,80,4,80,5,80,6,80,7,80,8,80,9,80,10,80,11,80,14,80,16,80,17,80,19,80,21,80,22,80,23,80,27,80,29,80,30,80,32,80,34,80,35,80,36,80,39,80,43,80,47,80,48,80,49,80,50,80,51,80,52,80,53,80,54,80,55,80,56,80,57,80,59,80,61,80,63,80,64,80,65,80,66,80,68,80,69,80,70,80,73,80,74,80,75,80,77,80,80,80,81,80,82,80,83,80,84,80,86,80,87,80,88,80,89,80,91,80,93,80,94,80,95,80,96,80,97,80,98,80,99,80,100,80,102,80,103,80,104,80,105,80,106,80,107,80,109,80,110,80,111,80,112,80,113,80,114,80,115,80,116,80,117,80,120,80,121,80,122,80,124,80,125,80,129,80,130,80,131,80,132,80,134,80,135,80,137,80,138,80,139,80,140,80,142,80,143,80,144,80,145,80,146,80,147,80,148,80,149,80,150,80,151,80,152,80,153,80,154,80,155,80,156,80,157,80,158,80,159,80,160,80,161,80,162,80,164,80,166,80,170,80,171,80,173,80,174,80,175,80,176,80,177,80,179,80,180,80,181,80,182,80,183,80,184,80,185,80,188,80,189,80,190,80,191,80,192,80,193,80,194,80,195,80,196,80,197,80,198,80,199,80,200,80,201,80,202,80,203,80,204,80,205,80,206,80,208,80,209,80,210,80,211,80,212,80,213,80,215,80,216,80,217,80,219,80,220,80,221,80,222,80,223,80,224,80,225,80,226,80,227,80,228,80,229,80,232,80,233,80,234,80,235,80,239,80,240,80,241,80,242,80,244,80,246,80,247,80,248,80,249,80,250,80,252,80,253,80,254,80,255,80,0,81,1,81,2,81,3,81,4,81,5,81,8,81,9,81,10,81,12,81,13,81,14,81,15,81,16,81,17,81,19,81,20,81,21,81,22,81,23,81,24,81,25,81,26,81,27,81,28,81,29,81,30,81,31,81,32,81,34,81,35,81,36,81,37,81,38,81,39,81,40,81,41,81,42,81,43,81,44,81,45,81,46,81,47,81,48,81,49,81,50,81,51,81,52,81,53,81,54,81,55,81,56,81,57,81,58,81,59,81,60,81,61,81,62,81,66,81,71,81,74,81,76,81,78,81,79,81,80,81,82,81,83,81,87,81,88,81,89,81,91,81,93,81,94,81,95,81,96,81,97,81,99,81,100,81,102,81,103,81,105,81,106,81,111,81,114,81,122,81,126,81,127,81,131,81,132,81,134,81,135,81,138,81,139,81,142,81,143,81,144,81,145,81,147,81,148,81,152,81,154,81,157,81,158,81,159,81,161,81,163,81,166,81,167,81,168,81,169,81,170,81,173,81,174,81,180,81,184,81,185,81,186,81,190,81,191,81,193,81,194,81,195,81,197,81,200,81,202,81,205,81,206,81,208,81,210,81,211,81,212,81,213,81,214,81,215,81,216,81,217,81,218,81,220,81,222,81,223,81,226,81,227,81,229,81,230,81,231,81,232,81,233,81,234,81,236,81,238,81,241,81,242,81,244,81,247,81,254,81,4,82,5,82,9,82,11,82,12,82,15,82,16,82,19,82,20,82,21,82,28,82,30,82,31,82,33,82,34,82,35,82,37,82,38,82,39,82,42,82,44,82,47,82,49,82,50,82,52,82,53,82,60,82,62,82,68,82,69,82,70,82,71,82,72,82,73,82,75,82,78,82,79,82,82,82,83,82,85,82,87,82,88,82,89,82,90,82,91,82,93,82,95,82,96,82,98,82,99,82,100,82,102,82,104,82,107,82,108,82,109,82,110,82,112,82,113,82,115,82,116,82,117,82,118,82,119,82,120,82,121,82,122,82,123,82,124,82,126,82,128,82,131,82,132,82,133,82,134,82,135,82,137,82,138,82,139,82,140,82,141,82,142,82,143,82,145,82,146,82,148,82,149,82,150,82,151,82,152,82,153,82,154,82,156,82,164,82,165,82,166,82,167,82,174,82,175,82,176,82,180,82,181,82,182,82,183,82,184,82,185,82,186,82,187,82,188,82,189,82,192,82,193,82,194,82,196,82,197,82,198,82,200,82,202,82,204,82,205,82,206,82,207,82,209,82,211,82,212,82,213,82,215,82,217,82,218,82,219,82,220,82,221,82,222,82,224,82,225,82,226,82,227,82,229,82,230,82,231,82,232,82,233,82,234,82,235,82,236,82,237,82,238,82,239,82,241,82,242,82,243,82,244,82,245,82,246,82,247,82,248,82,251,82,252,82,253,82,1,83,2,83,3,83,4,83,7,83,9,83,10,83,11,83,12,83,14,83,17,83,18,83,19,83,20,83,24,83,27,83,28,83,30,83,31,83,34,83,36,83,37,83,39,83,40,83,41,83,43,83,44,83,45,83,47,83,48,83,49,83,50,83,51,83,52,83,53,83,54,83,55,83,56,83,60,83,61,83,64,83,66,83,68,83,70,83,75,83,76,83,77,83,80,83,84,83,88,83,89,83,91,83,93,83,101,83,104,83,106,83,108,83,109,83,114,83,118,83,121,83,123,83,124,83,125,83,126,83,128,83,129,83,131,83,135,83,136,83,138,83,142,83,143,83,144,83,145,83,146,83,147,83,148,83,150,83,151,83,153,83,155,83,156,83,158,83,160,83,161,83,164,83,167,83,170,83,171,83,172,83,173,83,175,83,176,83,177,83,178,83,179,83,180,83,181,83,183,83,184,83,185,83,186,83,188,83,189,83,190,83,192,83,195,83,196,83,197,83,198,83,199,83,206,83,207,83,208,83,210,83,211,83,213,83,218,83,220,83,221,83,222,83,225,83,226,83,231,83,244,83,250,83,254,83,255,83,0,84,2,84,5,84,7,84,11,84,20,84,24,84,25,84,26,84,28,84,34,84,36,84,37,84,42,84,48,84,51,84,54,84,55,84,58,84,61,84,63,84,65,84,66,84,68,84,69,84,71,84,73,84,76,84,77,84,78,84,79,84,81,84,90,84,93,84,94,84,95,84,96,84,97,84,99,84,101,84,103,84,105,84,106,84,107,84,108,84,109,84,110,84,111,84,112,84,116,84,121,84,122,84,126,84,127,84,129,84,131,84,133,84,135,84,136,84,137,84,138,84,141,84,145,84,147,84,151,84,152,84,156,84,158,84,159,84,160,84,161,84,162,84,165,84,174,84,176,84,178,84,181,84,182,84,183,84,185,84,186,84,188,84,190,84,195,84,197,84,202,84,203,84,214,84,216,84,219,84,224,84,225,84,226,84,227,84,228,84,235,84,236,84,239,84,240,84,241,84,244,84,245,84,246,84,247,84,248,84,249,84,251,84,254,84,0,85,2,85,3,85,4,85,5,85,8,85,10,85,11,85,12,85,13,85,14,85,18,85,19,85,21,85,22,85,23,85,24,85,25,85,26,85,28,85,29,85,30,85,31,85,33,85,37,85,38,85,40,85,41,85,43,85,45,85,50,85,52,85,53,85,54,85,56,85,57,85,58,85,59,85,61,85,64,85,66,85,69,85,71,85,72,85,75,85,76,85,77,85,78,85,79,85,81,85,82,85,83,85,84,85,87,85,88,85,89,85,90,85,91,85,93,85,94,85,95,85,96,85,98,85,99,85,104,85,105,85,107,85,111,85,112,85,113,85,114,85,115,85,116,85,121,85,122,85,125,85,127,85,133,85,134,85,140,85,141,85,142,85,144,85,146,85,147,85,149,85,150,85,151,85,154,85,155,85,158,85,160,85,161,85,162,85,163,85,164,85,165,85,166,85,168,85,169,85,170,85,171,85,172,85,173,85,174,85,175,85,176,85,178,85,180,85,182,85,184,85,186,85,188,85,191,85,192,85,193,85,194,85,195,85,198,85,199,85,200,85,202,85,203,85,206,85,207,85,208,85,213,85,215,85,216,85,217,85,218,85,219,85,222,85,224,85,226,85,231,85,233,85,237,85,238,85,240,85,241,85,244,85,246,85,248,85,249,85,250,85,251,85,252,85,255,85,2,86,3,86,4,86,5,86,6,86,7,86,10,86,11,86,13,86,16,86,17,86,18,86,19,86,20,86,21,86,22,86,23,86,25,86,26,86,28,86,29,86,32,86,33,86,34,86,37,86,38,86,40,86,41,86,42,86,43,86,46,86,47,86,48,86,51,86,53,86,55,86,56,86,58,86,60,86,61,86,62,86,64,86,65,86,66,86,67,86,68,86,69,86,70,86,71,86,72,86,73,86,74,86,75,86,79,86,80,86,81,86,82,86,83,86,85,86,86,86,90,86,91,86,93,86,94,86,95,86,96,86,97,86,99,86,101,86,102,86,103,86,109,86,110,86,111,86,112,86,114,86,115,86,116,86,117,86,119,86,120,86,121,86,122,86,125,86,126,86,127,86,128,86,129,86,130,86,131,86,132,86,135,86,136,86,137,86,138,86,139,86,140,86,141,86,144,86,145,86,146,86,148,86,149,86,150,86,151,86,152,86,153,86,154,86,155,86,156,86,157,86,158,86,159,86,160,86,161,86,162,86,164,86,165,86,166,86,167,86,168,86,169,86,170,86,171,86,172,86,173,86,174,86,176,86,177,86,178,86,179,86,180,86,181,86,182,86,184,86,185,86,186,86,187,86,189,86,190,86,191,86,192,86,193,86,194,86,195,86,196,86,197,86,198,86,199,86,200,86,201,86,203,86,204,86,205,86,206,86,207,86,208,86,209,86,210,86,211,86,213,86,214,86,216,86,217,86,220,86,227,86,229,86,230,86,231,86,232,86,233,86,234,86,236,86,238,86,239,86,242,86,243,86,246,86,247,86,248,86,251,86,252,86,0,87,1,87,2,87,5,87,7,87,11,87,12,87,13,87,14,87,15,87,16,87,17,87,18,87,19,87,20,87,21,87,22,87,23,87,24,87,25,87,26,87,27,87,29,87,30,87,32,87,33,87,34,87,36,87,37,87,38,87,39,87,43,87,49,87,50,87,52,87,53,87,54,87,55,87,56,87,60,87,61,87,63,87,65,87,67,87,68,87,69,87,70,87,72,87,73,87,75,87,82,87,83,87,84,87,85,87,86,87,88,87,89,87,98,87,99,87,101,87,103,87,108,87,110,87,112,87,113,87,114,87,116,87,117,87,120,87,121,87,122,87,125,87,126,87,127,87,128,87,129,87,135,87,136,87,137,87,138,87,141,87,142,87,143,87,144,87,145,87,148,87,149,87,150,87,151,87,152,87,153,87,154,87,156,87,157,87,158,87,159,87,165,87,168,87,170,87,172,87,175,87,176,87,177,87,179,87,181,87,182,87,183,87,185,87,186,87,187,87,188,87,189,87,190,87,191,87,192,87,193,87,196,87,197,87,198,87,199,87,200,87,201,87,202,87,204,87,205,87,208,87,209,87,211,87,214,87,215,87,219,87,220,87,222,87,225,87,226,87,227,87,229,87,230,87,231,87,232,87,233,87,234,87,235,87,236,87,238,87,240,87,241,87,242,87,243,87,245,87,246,87,247,87,251,87,252,87,254,87,255,87,1,88,3,88,4,88,5,88,8,88,9,88,10,88,12,88,14,88,15,88,16,88,18,88,19,88,20,88,22,88,23,88,24,88,26,88,27,88,28,88,29,88,31,88,34,88,35,88,37,88,38,88,39,88,40,88,41,88,43,88,44,88,45,88,46,88,47,88,49,88,50,88,51,88,52,88,54,88,55,88,56,88,57,88,58,88,59,88,60,88,61,88,62,88,63,88,64,88,65,88,66,88,67,88,69,88,70,88,71,88,72,88,73,88,74,88,75,88,78,88,79,88,80,88,82,88,83,88,85,88,86,88,87,88,89,88,90,88,91,88,92,88,93,88,95,88,96,88,97,88,98,88,99,88,100,88,102,88,103,88,104,88,105,88,106,88,109,88,110,88,111,88,112,88,113,88,114,88,115,88,116,88,117,88,118,88,119,88,120,88,121,88,122,88,123,88,124,88,125,88,127,88,130,88,132,88,134,88,135,88,136,88,138,88,139,88,140,88,141,88,142,88,143,88,144,88,145,88,148,88,149,88,150,88,151,88,152,88,155,88,156,88,157,88,160,88,161,88,162,88,163,88,164,88,165,88,166,88,167,88,170,88,171,88,172,88,173,88,174,88,175,88,176,88,177,88,178,88,179,88,180,88,181,88,182,88,183,88,184,88,185,88,186,88,187,88,189,88,190,88,191,88,192,88,194,88,195,88,196,88,198,88,199,88,200,88,201,88,202,88,203,88,204,88,205,88,206,88,207,88,208,88,210,88,211,88,212,88,214,88,215,88,216,88,217,88,218,88,219,88,220,88,221,88,222,88,223,88,224,88,225,88,226,88,227,88,229,88,230,88,231,88,232,88,233,88,234,88,237,88,239,88,241,88,242,88,244,88,245,88,247,88,248,88,250,88,251,88,252,88,253,88,254,88,255,88,0,89,1,89,3,89,5,89,6,89,8,89,9,89,10,89,11,89,12,89,14,89,16,89,17,89,18,89,19,89,23,89,24,89,27,89,29,89,30,89,32,89,33,89,34,89,35,89,38,89,40,89,44,89,48,89,50,89,51,89,53,89,54,89,59,89,61,89,62,89,63,89,64,89,67,89,69,89,70,89,74,89,76,89,77,89,80,89,82,89,83,89,89,89,91,89,92,89,93,89,94,89,95,89,97,89,99,89,100,89,102,89,103,89,104,89,105,89,106,89,107,89,108,89,109,89,110,89,111,89,112,89,113,89,114,89,117,89,119,89,122,89,123,89,124,89,126,89,127,89,128,89,133,89,137,89,139,89,140,89,142,89,143,89,144,89,145,89,148,89,149,89,152,89,154,89,155,89,156,89,157,89,159,89,160,89,161,89,162,89,166,89,167,89,172,89,173,89,176,89,177,89,179,89,180,89,181,89,182,89,183,89,184,89,186,89,188,89,189,89,191,89,192,89,193,89,194,89,195,89,196,89,197,89,199,89,200,89,201,89,204,89,205,89,206,89,207,89,213,89,214,89,217,89,219,89,222,89,223,89,224,89,225,89,226,89,228,89,230,89,231,89,233,89,234,89,235,89,237,89,238,89,239,89,240,89,241,89,242,89,243,89,244,89,245,89,246,89,247,89,248,89,250,89,252,89,253,89,254,89,0,90,2,90,10,90,11,90,13,90,14,90,15,90,16,90,18,90,20,90,21,90,22,90,23,90,25,90,26,90,27,90,29,90,30,90,33,90,34,90,36,90,38,90,39,90,40,90,42,90,43,90,44,90,45,90,46,90,47,90,48,90,51,90,53,90,55,90,56,90,57,90,58,90,59,90,61,90,62,90,63,90,65,90,66,90,67,90,68,90,69,90,71,90,72,90,75,90,76,90,77,90,78,90,79,90,80,90,81,90,82,90,83,90,84,90,86,90,87,90,88,90,89,90,91,90,92,90,93,90,94,90,95,90,96,90,97,90,99,90,100,90,101,90,102,90,104,90,105,90,107,90,108,90,109,90,110,90,111,90,112,90,113,90,114,90,115,90,120,90,121,90,123,90,124,90,125,90,126,90,128,90,129,90,130,90,131,90,132,90,133,90,134,90,135,90,136,90,137,90,138,90,139,90,140,90,141,90,142,90,143,90,144,90,145,90,147,90,148,90,149,90,150,90,151,90,152,90,153,90,156,90,157,90,158,90,159,90,160,90,161,90,162,90,163,90,164,90,165,90,166,90,167,90,168,90,169,90,171,90,172,90,173,90,174,90,175,90,176,90,177,90,180,90,182,90,183,90,185,90,186,90,187,90,188,90,189,90,191,90,192,90,195,90,196,90,197,90,198,90,199,90,200,90,202,90,203,90,205,90,206,90,207,90,208,90,209,90,211,90,213,90,215,90,217,90,218,90,219,90,221,90,222,90,223,90,226,90,228,90,229,90,231,90,232,90,234,90,236,90,237,90,238,90,239,90,240,90,242,90,243,90,244,90,245,90,246,90,247,90,248,90,249,90,250,90,251,90,252,90,253,90,254,90,255,90,0,91,1,91,2,91,3,91,4,91,5,91,6,91,7,91,8,91,10,91,11,91,12,91,13,91,14,91,15,91,16,91,17,91,18,91,19,91,20,91,21,91,24,91,25,91,26,91,27,91,28,91,29,91,30,91,31,91,32,91,33,91,34,91,35,91,36,91,37,91,38,91,39,91,40,91,41,91,42,91,43,91,44,91,45,91,46,91,47,91,48,91,49,91,51,91,53,91,54,91,56,91,57,91,58,91,59,91,60,91,61,91,62,91,63,91,65,91,66,91,67,91,68,91,69,91,70,91,71,91,72,91,73,91,74,91,75,91,76,91,77,91,78,91,79,91,82,91,86,91,94,91,96,91,97,91,103,91,104,91,107,91,109,91,110,91,111,91,114,91,116,91,118,91,119,91,120,91,121,91,123,91,124,91,126,91,127,91,130,91,134,91,138,91,141,91,142,91,144,91,145,91,146,91,148,91,150,91,159,91,167,91,168,91,169,91,172,91,173,91,174,91,175,91,177,91,178,91,183,91,186,91,187,91,188,91,192,91,193,91,195,91,200,91,201,91,202,91,203,91,205,91,206,91,207,91,209,91,212,91,213,91,214,91,215,91,216,91,217,91,218,91,219,91,220,91,224,91,226,91,227,91,230,91,231,91,233,91,234,91,235,91,236,91,237,91,239,91,241,91,242,91,243,91,244,91,245,91,246,91,247,91,253,91,254,91,0,92,2,92,3,92,5,92,7,92,8,92,11,92,12,92,13,92,14,92,16,92,18,92,19,92,23,92,25,92,27,92,30,92,31,92,32,92,33,92,35,92,38,92,40,92,41,92,42,92,43,92,45,92,46,92,47,92,48,92,50,92,51,92,53,92,54,92,55,92,67,92,68,92,70,92,71,92,76,92,77,92,82,92,83,92,84,92,86,92,87,92,88,92,90,92,91,92,92,92,93,92,95,92,98,92,100,92,103,92,104,92,105,92,106,92,107,92,108,92,109,92,112,92,114,92,115,92,116,92,117,92,118,92,119,92,120,92,123,92,124,92,125,92,126,92,128,92,131,92,132,92,133,92,134,92,135,92,137,92,138,92,139,92,142,92,143,92,146,92,147,92,149,92,157,92,158,92,159,92,160,92,161,92,164,92,165,92,166,92,167,92,168,92,170,92,174,92,175,92,176,92,178,92,180,92,182,92,185,92,186,92,187,92,188,92,190,92,192,92,194,92,195,92,197,92,198,92,199,92,200,92,201,92,202,92,204,92,205,92,206,92,207,92,208,92,209,92,211,92,212,92,213,92,214,92,215,92,216,92,218,92,219,92,220,92,221,92,222,92,223,92,224,92,226,92,227,92,231,92,233,92,235,92,236,92,238,92,239,92,241,92,242,92,243,92,244,92,245,92,246,92,247,92,248,92,249,92,250,92,252,92,253,92,254,92,255,92,0,93,1,93,4,93,5,93,8,93,9,93,10,93,11,93,12,93,13,93,15,93,16,93,17,93,18,93,19,93,21,93,23,93,24,93,25,93,26,93,28,93,29,93,31,93,32,93,33,93,34,93,35,93,37,93,40,93,42,93,43,93,44,93,47,93,48,93,49,93,50,93,51,93,53,93,54,93,55,93,56,93,57,93,58,93,59,93,60,93,63,93,64,93,65,93,66,93,67,93,68,93,69,93,70,93,72,93,73,93,77,93,78,93,79,93,80,93,81,93,82,93,83,93,84,93,85,93,86,93,87,93,89,93,90,93,92,93,94,93,95,93,96,93,97,93,98,93,99,93,100,93,101,93,102,93,103,93,104,93,106,93,109,93,110,93,112,93,113,93,114,93,115,93,117,93,118,93,119,93,120,93,121,93,122,93,123,93,124,93,125,93,126,93,127,93,128,93,129,93,131,93,132,93,133,93,134,93,135,93,136,93,137,93,138,93,139,93,140,93,141,93,142,93,143,93,144,93,145,93,146,93,147,93,148,93,149,93,150,93,151,93,152,93,154,93,155,93,156,93,158,93,159,93,160,93,161,93,162,93,163,93,164,93,165,93,166,93,167,93,168,93,169,93,170,93,171,93,172,93,173,93,174,93,175,93,176,93,177,93,178,93,179,93,180,93,181,93,182,93,184,93,185,93,186,93,187,93,188,93,189,93,190,93,191,93,192,93,193,93,194,93,195,93,196,93,198,93,199,93,200,93,201,93,202,93,203,93,204,93,206,93,207,93,208,93,209,93,210,93,211,93,212,93,213,93,214,93,215,93,216,93,217,93,218,93,220,93,223,93,224,93,227,93,228,93,234,93,236,93,237,93,240,93,245,93,246,93,248,93,249,93,250,93,251,93,252,93,255,93,0,94,4,94,7,94,9,94,10,94,11,94,13,94,14,94,18,94,19,94,23,94,30,94,31,94,32,94,33,94,34,94,35,94,36,94,37,94,40,94,41,94,42,94,43,94,44,94,47,94,48,94,50,94,51,94,52,94,53,94,54,94,57,94,58,94,62,94,63,94,64,94,65,94,67,94,70,94,71,94,72,94,73,94,74,94,75,94,77,94,78,94,79,94,80,94,81,94,82,94,83,94,86,94,87,94,88,94,89,94,90,94,92,94,93,94,95,94,96,94,99,94,100,94,101,94,102,94,103,94,104,94,105,94,106,94,107,94,108,94,109,94,110,94,111,94,112,94,113,94,117,94,119,94,121,94,126,94,129,94,130,94,131,94,133,94,136,94,137,94,140,94,141,94,142,94,146,94,152,94,155,94,157,94,161,94,162,94,163,94,164,94,168,94,169,94,170,94,171,94,172,94,174,94,175,94,176,94,177,94,178,94,180,94,186,94,187,94,188,94,189,94,191,94,192,94,193,94,194,94,195,94,196,94,197,94,198,94,199,94,200,94,203,94,204,94,205,94,206,94,207,94,208,94,212,94,213,94,215,94,216,94,217,94,218,94,220,94,221,94,222,94,223,94,224,94,225,94,226,94,227,94,228,94,229,94,230,94,231,94,233,94,235,94,236,94,237,94,238,94,239,94,240,94,241,94,242,94,243,94,245,94,248,94,249,94,251,94,252,94,253,94,5,95,6,95,7,95,9,95,12,95,13,95,14,95,16,95,18,95,20,95,22,95,25,95,26,95,28,95,29,95,30,95,33,95,34,95,35,95,36,95,40,95,43,95,44,95,46,95,48,95,50,95,51,95,52,95,53,95,54,95,55,95,56,95,59,95,61,95,62,95,63,95,65,95,66,95,67,95,68,95,69,95,70,95,71,95,72,95,73,95,74,95,75,95,76,95,77,95,78,95,79,95,81,95,84,95,89,95,90,95,91,95,92,95,94,95,95,95,96,95,99,95,101,95,103,95,104,95,107,95,110,95,111,95,114,95,116,95,117,95,118,95,120,95,122,95,125,95,126,95,127,95,131,95,134,95,141,95,142,95,143,95,145,95,147,95,148,95,150,95,154,95,155,95,157,95,158,95,159,95,160,95,162,95,163,95,164,95,165,95,166,95,167,95,169,95,171,95,172,95,175,95,176,95,177,95,178,95,179,95,180,95,182,95,184,95,185,95,186,95,187,95,190,95,191,95,192,95,193,95,194,95,199,95,200,95,202,95,203,95,206,95,211,95,212,95,213,95,218,95,219,95,220,95,222,95,223,95,226,95,227,95,229,95,230,95,232,95,233,95,236,95,239,95,240,95,242,95,243,95,244,95,246,95,247,95,249,95,250,95,252,95,7,96,8,96,9,96,11,96,12,96,16,96,17,96,19,96,23,96,24,96,26,96,30,96,31,96,34,96,35,96,36,96,44,96,45,96,46,96,48,96,49,96,50,96,51,96,52,96,54,96,55,96,56,96,57,96,58,96,61,96,62,96,64,96,68,96,69,96,70,96,71,96,72,96,73,96,74,96,76,96,78,96,79,96,81,96,83,96,84,96,86,96,87,96,88,96,91,96,92,96,94,96,95,96,96,96,97,96,101,96,102,96,110,96,113,96,114,96,116,96,117,96,119,96,126,96,128,96,129,96,130,96,133,96,134,96,135,96,136,96,138,96,139,96,142,96,143,96,144,96,145,96,147,96,149,96,151,96,152,96,153,96,156,96,158,96,161,96,162,96,164,96,165,96,167,96,169,96,170,96,174,96,176,96,179,96,181,96,182,96,183,96,185,96,186,96,189,96,190,96,191,96,192,96,193,96,194,96,195,96,196,96,199,96,200,96,201,96,204,96,205,96,206,96,207,96,208,96,210,96,211,96,212,96,214,96,215,96,217,96,219,96,222,96,225,96,226,96,227,96,228,96,229,96,234,96,241,96,242,96,245,96,247,96,248,96,251,96,252,96,253,96,254,96,255,96,2,97,3,97,4,97,5,97,7,97,10,97,11,97,12,97,16,97,17,97,18,97,19,97,20,97,22,97,23,97,24,97,25,97,27,97,28,97,29,97,30,97,33,97,34,97,37,97,40,97,41,97,42,97,44,97,45,97,46,97,47,97,48,97,49,97,50,97,51,97,52,97,53,97,54,97,55,97,56,97,57,97,58,97,59,97,60,97,61,97,62,97,64,97,65,97,66,97,67,97,68,97,69,97,70,97,71,97,73,97,75,97,77,97,79,97,80,97,82,97,83,97,84,97,86,97,87,97,88,97,89,97,90,97,91,97,92,97,94,97,95,97,96,97,97,97,99,97,100,97,101,97,102,97,105,97,106,97,107,97,108,97,109,97,110,97,111,97,113,97,114,97,115,97,116,97,118,97,120,97,121,97,122,97,123,97,124,97,125,97,126,97,127,97,128,97,129,97,130,97,131,97,132,97,133,97,134,97,135,97,136,97,137,97,138,97,140,97,141,97,143,97,144,97,145,97,146,97,147,97,149,97,150,97,151,97,152,97,153,97,154,97,155,97,156,97,158,97,159,97,160,97,161,97,162,97,163,97,164,97,165,97,166,97,170,97,171,97,173,97,174,97,175,97,176,97,177,97,178,97,179,97,180,97,181,97,182,97,184,97,185,97,186,97,187,97,188,97,189,97,191,97,192,97,193,97,195,97,196,97,197,97,198,97,199,97,201,97,204,97,205,97,206,97,207,97,208,97,211,97,213,97,214,97,215,97,216,97,217,97,218,97,219,97,220,97,221,97,222,97,223,97,224,97,225,97,226,97,227,97,228,97,229,97,231,97,232,97,233,97,234,97,235,97,236,97,237,97,238,97,239,97,240,97,241,97,242,97,243,97,244,97,246,97,247,97,248,97,249,97,250,97,251,97,252,97,253,97,254,97,0,98,1,98,2,98,3,98,4,98,5,98,7,98,9,98,19,98,20,98,25,98,28,98,29,98,30,98,32,98,35,98,38,98,39,98,40,98,41,98,43,98,45,98,47,98,48,98,49,98,50,98,53,98,54,98,56,98,57,98,58,98,59,98,60,98,66,98,68,98,69,98,70,98,74,98,79,98,80,98,85,98,86,98,87,98,89,98,90,98,92,98,93,98,94,98,95,98,96,98,97,98,98,98,100,98,101,98,104,98,113,98,114,98,116,98,117,98,119,98,120,98,122,98,123,98,125,98,129,98,130,98,131,98,133,98,134,98,135,98,136,98,139,98,140,98,141,98,142,98,143,98,144,98,148,98,153,98,156,98,157,98,158,98,163,98,166,98,167,98,169,98,170,98,173,98,174,98,175,98,176,98,178,98,179,98,180,98,182,98,183,98,184,98,186,98,190,98,192,98,193,98,195,98,203,98,207,98,209,98,213,98,221,98,222,98,224,98,225,98,228,98,234,98,235,98,240,98,242,98,245,98,248,98,249,98,250,98,251,98,0,99,3,99,4,99,5,99,6,99,10,99,11,99,12,99,13,99,15,99,16,99,18,99,19,99,20,99,21,99,23,99,24,99,25,99,28,99,38,99,39,99,41,99,44,99,45,99,46,99,48,99,49,99,51,99,52,99,53,99,54,99,55,99,56,99,59,99,60,99,62,99,63,99,64,99,65,99,68,99,71,99,72,99,74,99,81,99,82,99,83,99,84,99,86,99,87,99,88,99,89,99,90,99,91,99,92,99,93,99,96,99,100,99,101,99,102,99,104,99,106,99,107,99,108,99,111,99,112,99,114,99,115,99,116,99,117,99,120,99,121,99,124,99,125,99,126,99,127,99,129,99,131,99,132,99,133,99,134,99,139,99,141,99,145,99,147,99,148,99,149,99,151,99,153,99,154,99,155,99,156,99,157,99,158,99,159,99,161,99,164,99,166,99,171,99,175,99,177,99,178,99,181,99,182,99,185,99,187,99,189,99,191,99,192,99,193,99,194,99,195,99,197,99,199,99,200,99,202,99,203,99,204,99,209,99,211,99,212,99,213,99,215,99,216,99,217,99,218,99,219,99,220,99,221,99,223,99,226,99,228,99,229,99,230,99,231,99,232,99,235,99,236,99,238,99,239,99,240,99,241,99,243,99,245,99,247,99,249,99,250,99,251,99,252,99,254,99,3,100,4,100,6,100,7,100,8,100,9,100,10,100,13,100,14,100,17,100,18,100,21,100,22,100,23,100,24,100,25,100,26,100,29,100,31,100,34,100,35,100,36,100,37,100,39,100,40,100,41,100,43,100,46,100,47,100,48,100,49,100,50,100,51,100,53,100,54,100,55,100,56,100,57,100,59,100,60,100,62,100,64,100,66,100,67,100,73,100,75,100,76,100,77,100,78,100,79,100,80,100,81,100,83,100,85,100,86,100,87,100,89,100,90,100,91,100,92,100,93,100,95,100,96,100,97,100,98,100,99,100,100,100,101,100,102,100,104,100,106,100,107,100,108,100,110,100,111,100,112,100,113,100,114,100,115,100,116,100,117,100,118,100,119,100,123,100,124,100,125,100,126,100,127,100,128,100,129,100,131,100,134,100,136,100,137,100,138,100,139,100,140,100,141,100,142,100,143,100,144,100,147,100,148,100,151,100,152,100,154,100,155,100,156,100,157,100,159,100,160,100,161,100,162,100,163,100,165,100,166,100,167,100,168,100,170,100,171,100,175,100,177,100,178,100,179,100,180,100,182,100,185,100,187,100,189,100,190,100,191,100,193,100,195,100,196,100,198,100,199,100,200,100,201,100,202,100,203,100,204,100,207,100,209,100,211,100,212,100,213,100,214,100,217,100,218,100,219,100,220,100,221,100,223,100,224,100,225,100,227,100,229,100,231,100,232,100,233,100,234,100,235,100,236,100,237,100,238,100,239,100,240,100,241,100,242,100,243,100,244,100,245,100,246,100,247,100,248,100,249,100,250,100,251,100,252,100,253,100,254,100,255,100,1,101,2,101,3,101,4,101,5,101,6,101,7,101,8,101,10,101,11,101,12,101,13,101,14,101,15,101,16,101,17,101,19,101,20,101,21,101,22,101,23,101,25,101,26,101,27,101,28,101,29,101,30,101,31,101,32,101,33,101,34,101,35,101,36,101,38,101,39,101,40,101,41,101,42,101,44,101,45,101,48,101,49,101,50,101,51,101,55,101,58,101,60,101,61,101,64,101,65,101,66,101,67,101,68,101,70,101,71,101,74,101,75,101,77,101,78,101,80,101,82,101,83,101,84,101,87,101,88,101,90,101,92,101,95,101,96,101,97,101,100,101,101,101,103,101,104,101,105,101,106,101,109,101,110,101,111,101,113,101,115,101,117,101,118,101,120,101,121,101,122,101,123,101,124,101,125,101,126,101,127,101,128,101,129,101,130,101,131,101,132,101,133,101,134,101,136,101,137,101,138,101,141,101,142,101,143,101,146,101,148,101,149,101,150,101,152,101,154,101,157,101],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+38422);allocate([158,101,160,101,162,101,163,101,166,101,168,101,170,101,172,101,174,101,177,101,178,101,179,101,180,101,181,101,182,101,183,101,184,101,186,101,187,101,190,101,191,101,192,101,194,101,199,101,200,101,201,101,202,101,205,101,208,101,209,101,211,101,212,101,213,101,216,101,217,101,218,101,219,101,220,101,221,101,222,101,223,101,225,101,227,101,228,101,234,101,235,101,242,101,243,101,244,101,245,101,248,101,249,101,251,101,252,101,253,101,254,101,255,101,1,102,4,102,5,102,7,102,8,102,9,102,11,102,13,102,16,102,17,102,18,102,22,102,23,102,24,102,26,102,27,102,28,102,30,102,33,102,34,102,35,102,36,102,38,102,41,102,42,102,43,102,44,102,46,102,48,102,50,102,51,102,55,102,56,102,57,102,58,102,59,102,61,102,63,102,64,102,66,102,68,102,69,102,70,102,71,102,72,102,73,102,74,102,77,102,78,102,80,102,81,102,88,102,89,102,91,102,92,102,93,102,94,102,96,102,98,102,99,102,101,102,103,102,105,102,106,102,107,102,108,102,109,102,113,102,114,102,115,102,117,102,120,102,121,102,123,102,124,102,125,102,127,102,128,102,129,102,131,102,133,102,134,102,136,102,137,102,138,102,139,102,141,102,142,102,143,102,144,102,146,102,147,102,148,102,149,102,152,102,153,102,154,102,155,102,156,102,158,102,159,102,160,102,161,102,162,102,163,102,164,102,165,102,166,102,169,102,170,102,171,102,172,102,173,102,175,102,176,102,177,102,178,102,179,102,181,102,182,102,183,102,184,102,186,102,187,102,188,102,189,102,191,102,192,102,193,102,194,102,195,102,196,102,197,102,198,102,199,102,200,102,201,102,202,102,203,102,204,102,205,102,206,102,207,102,208,102,209,102,210,102,211,102,212,102,213,102,214,102,215,102,216,102,218,102,222,102,223,102,224,102,225,102,226,102,227,102,228,102,229,102,231,102,232,102,234,102,235,102,236,102,237,102,238,102,239,102,241,102,245,102,246,102,248,102,250,102,251,102,253,102,1,103,2,103,3,103,4,103,5,103,6,103,7,103,12,103,14,103,15,103,17,103,18,103,19,103,22,103,24,103,25,103,26,103,28,103,30,103,32,103,33,103,34,103,35,103,36,103,37,103,39,103,41,103,46,103,48,103,50,103,51,103,54,103,55,103,56,103,57,103,59,103,60,103,62,103,63,103,65,103,68,103,69,103,71,103,74,103,75,103,77,103,82,103,84,103,85,103,87,103,88,103,89,103,90,103,91,103,93,103,98,103,99,103,100,103,102,103,103,103,107,103,108,103,110,103,113,103,116,103,118,103,120,103,121,103,122,103,123,103,125,103,128,103,130,103,131,103,133,103,134,103,136,103,138,103,140,103,141,103,142,103,143,103,145,103,146,103,147,103,148,103,150,103,153,103,155,103,159,103,160,103,161,103,164,103,166,103,169,103,172,103,174,103,177,103,178,103,180,103,185,103,186,103,187,103,188,103,189,103,190,103,191,103,192,103,194,103,197,103,198,103,199,103,200,103,201,103,202,103,203,103,204,103,205,103,206,103,213,103,214,103,215,103,219,103,223,103,225,103,227,103,228,103,230,103,231,103,232,103,234,103,235,103,237,103,238,103,242,103,245,103,246,103,247,103,248,103,249,103,250,103,251,103,252,103,254,103,1,104,2,104,3,104,4,104,6,104,13,104,16,104,18,104,20,104,21,104,24,104,25,104,26,104,27,104,28,104,30,104,31,104,32,104,34,104,35,104,36,104,37,104,38,104,39,104,40,104,43,104,44,104,45,104,46,104,47,104,48,104,49,104,52,104,53,104,54,104,58,104,59,104,63,104,71,104,75,104,77,104,79,104,82,104,86,104,87,104,88,104,89,104,90,104,91,104,92,104,93,104,94,104,95,104,106,104,108,104,109,104,110,104,111,104,112,104,113,104,114,104,115,104,117,104,120,104,121,104,122,104,123,104,124,104,125,104,126,104,127,104,128,104,130,104,132,104,135,104,136,104,137,104,138,104,139,104,140,104,141,104,142,104,144,104,145,104,146,104,148,104,149,104,150,104,152,104,153,104,154,104,155,104,156,104,157,104,158,104,159,104,160,104,161,104,163,104,164,104,165,104,169,104,170,104,171,104,172,104,174,104,177,104,178,104,180,104,182,104,183,104,184,104,185,104,186,104,187,104,188,104,189,104,190,104,191,104,193,104,195,104,196,104,197,104,198,104,199,104,200,104,202,104,204,104,206,104,207,104,208,104,209,104,211,104,212,104,214,104,215,104,217,104,219,104,220,104,221,104,222,104,223,104,225,104,226,104,228,104,229,104,230,104,231,104,232,104,233,104,234,104,235,104,236,104,237,104,239,104,242,104,243,104,244,104,246,104,247,104,248,104,251,104,253,104,254,104,255,104,0,105,2,105,3,105,4,105,6,105,7,105,8,105,9,105,10,105,12,105,15,105,17,105,19,105,20,105,21,105,22,105,23,105,24,105,25,105,26,105,27,105,28,105,29,105,30,105,33,105,34,105,35,105,37,105,38,105,39,105,40,105,41,105,42,105,43,105,44,105,46,105,47,105,49,105,50,105,51,105,53,105,54,105,55,105,56,105,58,105,59,105,60,105,62,105,64,105,65,105,67,105,68,105,69,105,70,105,71,105,72,105,73,105,74,105,75,105,76,105,77,105,78,105,79,105,80,105,81,105,82,105,83,105,85,105,86,105,88,105,89,105,91,105,92,105,95,105,97,105,98,105,100,105,101,105,103,105,104,105,105,105,106,105,108,105,109,105,111,105,112,105,114,105,115,105,116,105,117,105,118,105,122,105,123,105,125,105,126,105,127,105,129,105,131,105,133,105,138,105,139,105,140,105,142,105,143,105,144,105,145,105,146,105,147,105,150,105,151,105,153,105,154,105,157,105,158,105,159,105,160,105,161,105,162,105,163,105,164,105,165,105,166,105,169,105,170,105,172,105,174,105,175,105,176,105,178,105,179,105,181,105,182,105,184,105,185,105,186,105,188,105,189,105,190,105,191,105,192,105,194,105,195,105,196,105,197,105,198,105,199,105,200,105,201,105,203,105,205,105,207,105,209,105,210,105,211,105,213,105,214,105,215,105,216,105,217,105,218,105,220,105,221,105,222,105,225,105,226,105,227,105,228,105,229,105,230,105,231,105,232,105,233,105,234,105,235,105,236,105,238,105,239,105,240,105,241,105,243,105,244,105,245,105,246,105,247,105,248,105,249,105,250,105,251,105,252,105,254,105,0,106,1,106,2,106,3,106,4,106,5,106,6,106,7,106,8,106,9,106,11,106,12,106,13,106,14,106,15,106,16,106,17,106,18,106,19,106,20,106,21,106,22,106,25,106,26,106,27,106,28,106,29,106,30,106,32,106,34,106,35,106,36,106,37,106,38,106,39,106,41,106,43,106,44,106,45,106,46,106,48,106,50,106,51,106,52,106,54,106,55,106,56,106,57,106,58,106,59,106,60,106,63,106,64,106,65,106,66,106,67,106,69,106,70,106,72,106,73,106,74,106,75,106,76,106,77,106,78,106,79,106,81,106,82,106,83,106,84,106,85,106,86,106,87,106,90,106,92,106,93,106,94,106,95,106,96,106,98,106,99,106,100,106,102,106,103,106,104,106,105,106,106,106,107,106,108,106,109,106,110,106,111,106,112,106,114,106,115,106,116,106,117,106,118,106,119,106,120,106,122,106,123,106,125,106,126,106,127,106,129,106,130,106,131,106,133,106,134,106,135,106,136,106,137,106,138,106,139,106,140,106,141,106,143,106,146,106,147,106,148,106,149,106,150,106,152,106,153,106,154,106,155,106,156,106,157,106,158,106,159,106,161,106,162,106,163,106,164,106,165,106,166,106,167,106,168,106,170,106,173,106,174,106,175,106,176,106,177,106,178,106,179,106,180,106,181,106,182,106,183,106,184,106,185,106,186,106,187,106,188,106,189,106,190,106,191,106,192,106,193,106,194,106,195,106,196,106,197,106,198,106,199,106,200,106,201,106,202,106,203,106,204,106,205,106,206,106,207,106,208,106,209,106,210,106,211,106,212,106,213,106,214,106,215,106,216,106,217,106,218,106,219,106,220,106,221,106,222,106,223,106,224,106,225,106,226,106,227,106,228,106,229,106,230,106,231,106,232,106,233,106,234,106,235,106,236,106,237,106,238,106,239,106,240,106,241,106,242,106,243,106,244,106,245,106,246,106,247,106,248,106,249,106,250,106,251,106,252,106,253,106,254,106,255,106,0,107,1,107,2,107,3,107,4,107,5,107,6,107,7,107,8,107,9,107,10,107,11,107,12,107,13,107,14,107,15,107,16,107,17,107,18,107,19,107,20,107,21,107,22,107,23,107,24,107,25,107,26,107,27,107,28,107,29,107,30,107,31,107,37,107,38,107,40,107,41,107,42,107,43,107,44,107,45,107,46,107,47,107,48,107,49,107,51,107,52,107,53,107,54,107,56,107,59,107,60,107,61,107,63,107,64,107,65,107,66,107,68,107,69,107,72,107,74,107,75,107,77,107,78,107,79,107,80,107,81,107,82,107,83,107,84,107,85,107,86,107,87,107,88,107,90,107,91,107,92,107,93,107,94,107,95,107,96,107,97,107,104,107,105,107,107,107,108,107,109,107,110,107,111,107,112,107,113,107,114,107,115,107,116,107,117,107,118,107,119,107,120,107,122,107,125,107,126,107,127,107,128,107,133,107,136,107,140,107,142,107,143,107,144,107,145,107,148,107,149,107,151,107,152,107,153,107,156,107,157,107,158,107,159,107,160,107,162,107,163,107,164,107,165,107,166,107,167,107,168,107,169,107,171,107,172,107,173,107,174,107,175,107,176,107,177,107,178,107,182,107,184,107,185,107,186,107,187,107,188,107,189,107,190,107,192,107,195,107,196,107,198,107,199,107,200,107,201,107,202,107,204,107,206,107,208,107,209,107,216,107,218,107,220,107,221,107,222,107,223,107,224,107,226,107,227,107,228,107,229,107,230,107,231,107,232,107,233,107,236,107,237,107,238,107,240,107,241,107,242,107,244,107,246,107,247,107,248,107,250,107,251,107,252,107,254,107,255,107,0,108,1,108,2,108,3,108,4,108,8,108,9,108,10,108,11,108,12,108,14,108,18,108,23,108,28,108,29,108,30,108,32,108,35,108,37,108,43,108,44,108,45,108,49,108,51,108,54,108,55,108,57,108,58,108,59,108,60,108,62,108,63,108,67,108,68,108,69,108,72,108,75,108,76,108,77,108,78,108,79,108,81,108,82,108,83,108,86,108,88,108,89,108,90,108,98,108,99,108,101,108,102,108,103,108,107,108,108,108,109,108,110,108,111,108,113,108,115,108,117,108,119,108,120,108,122,108,123,108,124,108,127,108,128,108,132,108,135,108,138,108,139,108,141,108,142,108,145,108,146,108,149,108,150,108,151,108,152,108,154,108,156,108,157,108,158,108,160,108,162,108,168,108,172,108,175,108,176,108,180,108,181,108,182,108,183,108,186,108,192,108,193,108,194,108,195,108,198,108,199,108,200,108,203,108,205,108,206,108,207,108,209,108,210,108,216,108,217,108,218,108,220,108,221,108,223,108,228,108,230,108,231,108,233,108,236,108,237,108,242,108,244,108,249,108,255,108,0,109,2,109,3,109,5,109,6,109,8,109,9,109,10,109,13,109,15,109,16,109,17,109,19,109,20,109,21,109,22,109,24,109,28,109,29,109,31,109,32,109,33,109,34,109,35,109,36,109,38,109,40,109,41,109,44,109,45,109,47,109,48,109,52,109,54,109,55,109,56,109,58,109,63,109,64,109,66,109,68,109,73,109,76,109,80,109,85,109,86,109,87,109,88,109,91,109,93,109,95,109,97,109,98,109,100,109,101,109,103,109,104,109,107,109,108,109,109,109,112,109,113,109,114,109,115,109,117,109,118,109,121,109,122,109,123,109,125,109,126,109,127,109,128,109,129,109,131,109,132,109,134,109,135,109,138,109,139,109,141,109,143,109,144,109,146,109,150,109,151,109,152,109,153,109,154,109,156,109,162,109,165,109,172,109,173,109,176,109,177,109,179,109,180,109,182,109,183,109,185,109,186,109,187,109,188,109,189,109,190,109,193,109,194,109,195,109,200,109,201,109,202,109,205,109,206,109,207,109,208,109,210,109,211,109,212,109,213,109,215,109,218,109,219,109,220,109,223,109,226,109,227,109,229,109,231,109,232,109,233,109,234,109,237,109,239,109,240,109,242,109,244,109,245,109,246,109,248,109,250,109,253,109,254,109,255,109,0,110,1,110,2,110,3,110,4,110,6,110,7,110,8,110,9,110,11,110,15,110,18,110,19,110,21,110,24,110,25,110,27,110,28,110,30,110,31,110,34,110,38,110,39,110,40,110,42,110,44,110,46,110,48,110,49,110,51,110,53,110,54,110,55,110,57,110,59,110,60,110,61,110,62,110,63,110,64,110,65,110,66,110,69,110,70,110,71,110,72,110,73,110,74,110,75,110,76,110,79,110,80,110,81,110,82,110,85,110,87,110,89,110,90,110,92,110,93,110,94,110,96,110,97,110,98,110,99,110,100,110,101,110,102,110,103,110,104,110,105,110,106,110,108,110,109,110,111,110,112,110,113,110,114,110,115,110,116,110,117,110,118,110,119,110,120,110,121,110,122,110,123,110,124,110,125,110,128,110,129,110,130,110,132,110,135,110,136,110,138,110,139,110,140,110,141,110,142,110,145,110,146,110,147,110,148,110,149,110,150,110,151,110,153,110,154,110,155,110,157,110,158,110,160,110,161,110,163,110,164,110,166,110,168,110,169,110,171,110,172,110,173,110,174,110,176,110,179,110,181,110,184,110,185,110,188,110,190,110,191,110,192,110,195,110,196,110,197,110,198,110,200,110,201,110,202,110,204,110,205,110,206,110,208,110,210,110,214,110,216,110,217,110,219,110,220,110,221,110,227,110,231,110,234,110,235,110,236,110,237,110,238,110,239,110,240,110,241,110,242,110,243,110,245,110,246,110,247,110,248,110,250,110,251,110,252,110,253,110,254,110,255,110,0,111,1,111,3,111,4,111,5,111,7,111,8,111,10,111,11,111,12,111,13,111,14,111,16,111,17,111,18,111,22,111,23,111,24,111,25,111,26,111,27,111,28,111,29,111,30,111,31,111,33,111,34,111,35,111,37,111,38,111,39,111,40,111,44,111,46,111,48,111,50,111,52,111,53,111,55,111,56,111,57,111,58,111,59,111,60,111,61,111,63,111,64,111,65,111,66,111,67,111,68,111,69,111,72,111,73,111,74,111,76,111,78,111,79,111,80,111,81,111,82,111,83,111,84,111,85,111,86,111,87,111,89,111,90,111,91,111,93,111,95,111,96,111,97,111,99,111,100,111,101,111,103,111,104,111,105,111,106,111,107,111,108,111,111,111,112,111,113,111,115,111,117,111,118,111,119,111,121,111,123,111,125,111,126,111,127,111,128,111,129,111,130,111,131,111,133,111,134,111,135,111,138,111,139,111,143,111,144,111,145,111,146,111,147,111,148,111,149,111,150,111,151,111,152,111,153,111,154,111,155,111,157,111,158,111,159,111,160,111,162,111,163,111,164,111,165,111,166,111,168,111,169,111,170,111,171,111,172,111,173,111,174,111,175,111,176,111,177,111,178,111,180,111,181,111,183,111,184,111,186,111,187,111,188,111,189,111,190,111,191,111,193,111,195,111,196,111,197,111,198,111,199,111,200,111,202,111,203,111,204,111,205,111,206,111,207,111,208,111,211,111,212,111,213,111,214,111,215,111,216,111,217,111,218,111,219,111,220,111,221,111,223,111,226,111,227,111,228,111,229,111,230,111,231,111,232,111,233,111,234,111,235,111,236,111,237,111,240,111,241,111,242,111,243,111,244,111,245,111,246,111,247,111,248,111,249,111,250,111,251,111,252,111,253,111,254,111,255,111,0,112,1,112,2,112,3,112,4,112,5,112,6,112,7,112,8,112,9,112,10,112,11,112,12,112,13,112,14,112,15,112,16,112,18,112,19,112,20,112,21,112,22,112,23,112,24,112,25,112,28,112,29,112,30,112,31,112,32,112,33,112,34,112,36,112,37,112,38,112,39,112,40,112,41,112,42,112,43,112,44,112,45,112,46,112,47,112,48,112,49,112,50,112,51,112,52,112,54,112,55,112,56,112,58,112,59,112,60,112,61,112,62,112,63,112,64,112,65,112,66,112,67,112,68,112,69,112,70,112,71,112,72,112,73,112,74,112,75,112,77,112,78,112,80,112,81,112,82,112,83,112,84,112,85,112,86,112,87,112,88,112,89,112,90,112,91,112,92,112,93,112,95,112,96,112,97,112,98,112,99,112,100,112,101,112,102,112,103,112,104,112,105,112,106,112,110,112,113,112,114,112,115,112,116,112,119,112,121,112,122,112,123,112,125,112,129,112,130,112,131,112,132,112,134,112,135,112,136,112,139,112,140,112,141,112,143,112,144,112,145,112,147,112,151,112,152,112,154,112,155,112,158,112,159,112,160,112,161,112,162,112,163,112,164,112,165,112,166,112,167,112,168,112,169,112,170,112,176,112,178,112,180,112,181,112,182,112,186,112,190,112,191,112,196,112,197,112,198,112,199,112,201,112,203,112,204,112,205,112,206,112,207,112,208,112,209,112,210,112,211,112,212,112,213,112,214,112,215,112,218,112,220,112,221,112,222,112,224,112,225,112,226,112,227,112,229,112,234,112,238,112,240,112,241,112,242,112,243,112,244,112,245,112,246,112,248,112,250,112,251,112,252,112,254,112,255,112,0,113,1,113,2,113,3,113,4,113,5,113,6,113,7,113,8,113,11,113,12,113,13,113,14,113,15,113,17,113,18,113,20,113,23,113,27,113,28,113,29,113,30,113,31,113,32,113,33,113,34,113,35,113,36,113,37,113,39,113,40,113,41,113,42,113,43,113,44,113,45,113,46,113,50,113,51,113,52,113,53,113,55,113,56,113,57,113,58,113,59,113,60,113,61,113,62,113,63,113,64,113,65,113,66,113,67,113,68,113,70,113,71,113,72,113,73,113,75,113,77,113,79,113,80,113,81,113,82,113,83,113,84,113,85,113,86,113,87,113,88,113,89,113,90,113,91,113,93,113,95,113,96,113,97,113,98,113,99,113,101,113,105,113,106,113,107,113,108,113,109,113,111,113,112,113,113,113,116,113,117,113,118,113,119,113,121,113,123,113,124,113,126,113,127,113,128,113,129,113,130,113,131,113,133,113,134,113,135,113,136,113,137,113,139,113,140,113,141,113,142,113,144,113,145,113,146,113,147,113,149,113,150,113,151,113,154,113,155,113,156,113,157,113,158,113,161,113,162,113,163,113,164,113,165,113,166,113,167,113,169,113,170,113,171,113,173,113,174,113,175,113,176,113,177,113,178,113,180,113,182,113,183,113,184,113,186,113,187,113,188,113,189,113,190,113,191,113,192,113,193,113,194,113,196,113,197,113,198,113,199,113,200,113,201,113,202,113,203,113,204,113,205,113,207,113,208,113,209,113,210,113,211,113,214,113,215,113,216,113,217,113,218,113,219,113,220,113,221,113,222,113,223,113,225,113,226,113,227,113,228,113,230,113,232,113,233,113,234,113,235,113,236,113,237,113,239,113,240,113,241,113,242,113,243,113,244,113,245,113,246,113,247,113,248,113,250,113,251,113,252,113,253,113,254,113,255,113,0,114,1,114,2,114,3,114,4,114,5,114,7,114,8,114,9,114,10,114,11,114,12,114,13,114,14,114,15,114,16,114,17,114,18,114,19,114,20,114,21,114,22,114,23,114,24,114,25,114,26,114,27,114,28,114,30,114,31,114,32,114,33,114,34,114,35,114,36,114,37,114,38,114,39,114,41,114,43,114,45,114,46,114,47,114,50,114,51,114,52,114,58,114,60,114,62,114,64,114,65,114,66,114,67,114,68,114,69,114,70,114,73,114,74,114,75,114,78,114,79,114,80,114,81,114,83,114,84,114,85,114,87,114,88,114,90,114,92,114,94,114,96,114,99,114,100,114,101,114,104,114,106,114,107,114,108,114,109,114,112,114,113,114,115,114,116,114,118,114,119,114,120,114,123,114,124,114,125,114,130,114,131,114,133,114,134,114,135,114,136,114,137,114,140,114,142,114,144,114,145,114,147,114,148,114,149,114,150,114,151,114,152,114,153,114,154,114,155,114,156,114,157,114,158,114,160,114,161,114,162,114,163,114,164,114,165,114,166,114,167,114,168,114,169,114,170,114,171,114,174,114,177,114,178,114,179,114,181,114,186,114,187,114,188,114,189,114,190,114,191,114,192,114,197,114,198,114,199,114,201,114,202,114,203,114,204,114,207,114,209,114,211,114,212,114,213,114,214,114,216,114,218,114,219,114,198,228,199,228,200,228,201,228,202,228,203,228,204,228,205,228,206,228,207,228,208,228,209,228,210,228,211,228,212,228,213,228,214,228,215,228,216,228,217,228,218,228,219,228,220,228,221,228,222,228,223,228,224,228,225,228,226,228,227,228,228,228,229,228,230,228,231,228,232,228,233,228,234,228,235,228,236,228,237,228,238,228,239,228,240,228,241,228,242,228,243,228,244,228,245,228,246,228,247,228,248,228,249,228,250,228,251,228,252,228,253,228,254,228,255,228,0,229,1,229,2,229,3,229,4,229,5,229,6,229,7,229,8,229,9,229,10,229,11,229,12,229,13,229,14,229,15,229,16,229,17,229,18,229,19,229,20,229,21,229,22,229,23,229,24,229,25,229,26,229,27,229,28,229,29,229,30,229,31,229,32,229,33,229,34,229,35,229,36,229,37,229,0,48,1,48,2,48,183,0,201,2,199,2,168,0,3,48,5,48,20,32,94,255,22,32,38,32,24,32,25,32,28,32,29,32,20,48,21,48,8,48,9,48,10,48,11,48,12,48,13,48,14,48,15,48,22,48,23,48,16,48,17,48,177,0,215,0,247,0,54,34,39,34,40,34,17,34,15,34,42,34,41,34,8,34,55,34,26,34,165,34,37,34,32,34,18,35,153,34,43,34,46,34,97,34,76,34,72,34,61,34,29,34,96,34,110,34,111,34,100,34,101,34,30,34,53,34,52,34,66,38,64,38,176,0,50,32,51,32,3,33,4,255,164,0,224,255,225,255,48,32,167,0,22,33,6,38,5,38,203,37,207,37,206,37,199,37,198,37,161,37,160,37,179,37,178,37,59,32,146,33,144,33,145,33,147,33,19,48,38,229,39,229,40,229,41,229,42,229,43,229,44,229,45,229,46,229,47,229,48,229,49,229,50,229,51,229,52,229,53,229,54,229,55,229,56,229,57,229,58,229,59,229,60,229,61,229,62,229,63,229,64,229,65,229,66,229,67,229,68,229,69,229,70,229,71,229,72,229,73,229,74,229,75,229,76,229,77,229,78,229,79,229,80,229,81,229,82,229,83,229,84,229,85,229,86,229,87,229,88,229,89,229,90,229,91,229,92,229,93,229,94,229,95,229,96,229,97,229,98,229,99,229,100,229,101,229,102,229,103,229,104,229,105,229,106,229,107,229,108,229,109,229,110,229,111,229,112,229,113,229,114,229,115,229,116,229,117,229,118,229,119,229,120,229,121,229,122,229,123,229,124,229,125,229,126,229,127,229,128,229,129,229,130,229,131,229,132,229,133,229,112,33,113,33,114,33,115,33,116,33,117,33,118,33,119,33,120,33,121,33,102,231,103,231,104,231,105,231,106,231,107,231,136,36,137,36,138,36,139,36,140,36,141,36,142,36,143,36,144,36,145,36,146,36,147,36,148,36,149,36,150,36,151,36,152,36,153,36,154,36,155,36,116,36,117,36,118,36,119,36,120,36,121,36,122,36,123,36,124,36,125,36,126,36,127,36,128,36,129,36,130,36,131,36,132,36,133,36,134,36,135,36,96,36,97,36,98,36,99,36,100,36,101,36,102,36,103,36,104,36,105,36,172,32,109,231,32,50,33,50,34,50,35,50,36,50,37,50,38,50,39,50,40,50,41,50,110,231,111,231,96,33,97,33,98,33,99,33,100,33,101,33,102,33,103,33,104,33,105,33,106,33,107,33,112,231,113,231,134,229,135,229,136,229,137,229,138,229,139,229,140,229,141,229,142,229,143,229,144,229,145,229,146,229,147,229,148,229,149,229,150,229,151,229,152,229,153,229,154,229,155,229,156,229,157,229,158,229,159,229,160,229,161,229,162,229,163,229,164,229,165,229,166,229,167,229,168,229,169,229,170,229,171,229,172,229,173,229,174,229,175,229,176,229,177,229,178,229,179,229,180,229,181,229,182,229,183,229,184,229,185,229,186,229,187,229,188,229,189,229,190,229,191,229,192,229,193,229,194,229,195,229,196,229,197,229,198,229,199,229,200,229,201,229,202,229,203,229,204,229,205,229,206,229,207,229,208,229,209,229,210,229,211,229,212,229,213,229,214,229,215,229,216,229,217,229,218,229,219,229,220,229,221,229,222,229,223,229,224,229,225,229,226,229,227,229,228,229,229,229,1,255,2,255,3,255,229,255,5,255,6,255,7,255,8,255,9,255,10,255,11,255,12,255,13,255,14,255,15,255,16,255,17,255,18,255,19,255,20,255,21,255,22,255,23,255,24,255,25,255,26,255,27,255,28,255,29,255,30,255,31,255,32,255,33,255,34,255,35,255,36,255,37,255,38,255,39,255,40,255,41,255,42,255,43,255,44,255,45,255,46,255,47,255,48,255,49,255,50,255,51,255,52,255,53,255,54,255,55,255,56,255,57,255,58,255,59,255,60,255,61,255,62,255,63,255,64,255,65,255,66,255,67,255,68,255,69,255,70,255,71,255,72,255,73,255,74,255,75,255,76,255,77,255,78,255,79,255,80,255,81,255,82,255,83,255,84,255,85,255,86,255,87,255,88,255,89,255,90,255,91,255,92,255,93,255,227,255,230,229,231,229,232,229,233,229,234,229,235,229,236,229,237,229,238,229,239,229,240,229,241,229,242,229,243,229,244,229,245,229,246,229,247,229,248,229,249,229,250,229,251,229,252,229,253,229,254,229,255,229,0,230,1,230,2,230,3,230,4,230,5,230,6,230,7,230,8,230,9,230,10,230,11,230,12,230,13,230,14,230,15,230,16,230,17,230,18,230,19,230,20,230,21,230,22,230,23,230,24,230,25,230,26,230,27,230,28,230,29,230,30,230,31,230,32,230,33,230,34,230,35,230,36,230,37,230,38,230,39,230,40,230,41,230,42,230,43,230,44,230,45,230,46,230,47,230,48,230,49,230,50,230,51,230,52,230,53,230,54,230,55,230,56,230,57,230,58,230,59,230,60,230,61,230,62,230,63,230,64,230,65,230,66,230,67,230,68,230,69,230,65,48,66,48,67,48,68,48,69,48,70,48,71,48,72,48,73,48,74,48,75,48,76,48,77,48,78,48,79,48,80,48,81,48,82,48,83,48,84,48,85,48,86,48,87,48,88,48,89,48,90,48,91,48,92,48,93,48,94,48,95,48,96,48,97,48,98,48,99,48,100,48,101,48,102,48,103,48,104,48,105,48,106,48,107,48,108,48,109,48,110,48,111,48,112,48,113,48,114,48,115,48,116,48,117,48,118,48,119,48,120,48,121,48,122,48,123,48,124,48,125,48,126,48,127,48,128,48,129,48,130,48,131,48,132,48,133,48,134,48,135,48,136,48,137,48,138,48,139,48,140,48,141,48,142,48,143,48,144,48,145,48,146,48,147,48,114,231,115,231,116,231,117,231,118,231,119,231,120,231,121,231,122,231,123,231,124,231,70,230,71,230,72,230,73,230,74,230,75,230,76,230,77,230,78,230,79,230,80,230,81,230,82,230,83,230,84,230,85,230,86,230,87,230,88,230,89,230,90,230,91,230,92,230,93,230,94,230,95,230,96,230,97,230,98,230,99,230,100,230,101,230,102,230,103,230,104,230,105,230,106,230,107,230,108,230,109,230,110,230,111,230,112,230,113,230,114,230,115,230,116,230,117,230,118,230,119,230,120,230,121,230,122,230,123,230,124,230,125,230,126,230,127,230,128,230,129,230,130,230,131,230,132,230,133,230,134,230,135,230,136,230,137,230,138,230,139,230,140,230,141,230,142,230,143,230,144,230,145,230,146,230,147,230,148,230,149,230,150,230,151,230,152,230,153,230,154,230,155,230,156,230,157,230,158,230,159,230,160,230,161,230,162,230,163,230,164,230,165,230,161,48,162,48,163,48,164,48,165,48,166,48,167,48,168,48,169,48,170,48,171,48,172,48,173,48,174,48,175,48,176,48,177,48,178,48,179,48,180,48,181,48,182,48,183,48,184,48,185,48,186,48,187,48,188,48,189,48,190,48,191,48,192,48,193,48,194,48,195,48,196,48,197,48,198,48,199,48,200,48,201,48,202,48,203,48,204,48,205,48,206,48,207,48,208,48,209,48,210,48,211,48,212,48,213,48,214,48,215,48,216,48,217,48,218,48,219,48,220,48,221,48,222,48,223,48,224,48,225,48,226,48,227,48,228,48,229,48,230,48,231,48,232,48,233,48,234,48,235,48,236,48,237,48,238,48,239,48,240,48,241,48,242,48,243,48,244,48,245,48,246,48,125,231,126,231,127,231,128,231,129,231,130,231,131,231,132,231,166,230,167,230,168,230,169,230,170,230,171,230,172,230,173,230,174,230,175,230,176,230,177,230,178,230,179,230,180,230,181,230,182,230,183,230,184,230,185,230,186,230,187,230,188,230,189,230,190,230,191,230,192,230,193,230,194,230,195,230,196,230,197,230,198,230,199,230,200,230,201,230,202,230,203,230,204,230,205,230,206,230,207,230,208,230,209,230,210,230,211,230,212,230,213,230,214,230,215,230,216,230,217,230,218,230,219,230,220,230,221,230,222,230,223,230,224,230,225,230,226,230,227,230,228,230,229,230,230,230,231,230,232,230,233,230,234,230,235,230,236,230,237,230,238,230,239,230,240,230,241,230,242,230,243,230,244,230,245,230,246,230,247,230,248,230,249,230,250,230,251,230,252,230,253,230,254,230,255,230,0,231,1,231,2,231,3,231,4,231,5,231,145,3,146,3,147,3,148,3,149,3,150,3,151,3,152,3,153,3,154,3,155,3,156,3,157,3,158,3,159,3,160,3,161,3,163,3,164,3,165,3,166,3,167,3,168,3,169,3,133,231,134,231,135,231,136,231,137,231,138,231,139,231,140,231,177,3,178,3,179,3,180,3,181,3,182,3,183,3,184,3,185,3,186,3,187,3,188,3,189,3,190,3,191,3,192,3,193,3,195,3,196,3,197,3,198,3,199,3,200,3,201,3,141,231,142,231,143,231,144,231,145,231,146,231,147,231,53,254,54,254,57,254,58,254,63,254,64,254,61,254,62,254,65,254,66,254,67,254,68,254,148,231,149,231,59,254,60,254,55,254,56,254,49,254,150,231,51,254,52,254,151,231,152,231,153,231,154,231,155,231,156,231,157,231,158,231,159,231,6,231,7,231,8,231,9,231,10,231,11,231,12,231,13,231,14,231,15,231,16,231,17,231,18,231,19,231,20,231,21,231,22,231,23,231,24,231,25,231,26,231,27,231,28,231,29,231,30,231,31,231,32,231,33,231,34,231,35,231,36,231,37,231,38,231,39,231,40,231,41,231,42,231,43,231,44,231,45,231,46,231,47,231,48,231,49,231,50,231,51,231,52,231,53,231,54,231,55,231,56,231,57,231,58,231,59,231,60,231,61,231,62,231,63,231,64,231,65,231,66,231,67,231,68,231,69,231,70,231,71,231,72,231,73,231,74,231,75,231,76,231,77,231,78,231,79,231,80,231,81,231,82,231,83,231,84,231,85,231,86,231,87,231,88,231,89,231,90,231,91,231,92,231,93,231,94,231,95,231,96,231,97,231,98,231,99,231,100,231,101,231,16,4,17,4,18,4,19,4,20,4,21,4,1,4,22,4,23,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,4,37,4,38,4,39,4,40,4,41,4,42,4,43,4,44,4,45,4,46,4,47,4,160,231,161,231,162,231,163,231,164,231,165,231,166,231,167,231,168,231,169,231,170,231,171,231,172,231,173,231,174,231,48,4,49,4,50,4,51,4,52,4,53,4,81,4,54,4,55,4,56,4,57,4,58,4,59,4,60,4,61,4,62,4,63,4,64,4,65,4,66,4,67,4,68,4,69,4,70,4,71,4,72,4,73,4,74,4,75,4,76,4,77,4,78,4,79,4,175,231,176,231,177,231,178,231,179,231,180,231,181,231,182,231,183,231,184,231,185,231,186,231,187,231,202,2,203,2,217,2,19,32,21,32,37,32,53,32,5,33,9,33,150,33,151,33,152,33,153,33,21,34,31,34,35,34,82,34,102,34,103,34,191,34,80,37,81,37,82,37,83,37,84,37,85,37,86,37,87,37,88,37,89,37,90,37,91,37,92,37,93,37,94,37,95,37,96,37,97,37,98,37,99,37,100,37,101,37,102,37,103,37,104,37,105,37,106,37,107,37,108,37,109,37,110,37,111,37,112,37,113,37,114,37,115,37,129,37,130,37,131,37,132,37,133,37,134,37,135,37,136,37,137,37,138,37,139,37,140,37,141,37,142,37,143,37,147,37,148,37,149,37,188,37,189,37,226,37,227,37,228,37,229,37,9,38,149,34,18,48,29,48,30,48,188,231,189,231,190,231,191,231,192,231,193,231,194,231,195,231,196,231,197,231,198,231,1,1,225,0,206,1,224,0,19,1,233,0,27,1,232,0,43,1,237,0,208,1,236,0,77,1,243,0,210,1,242,0,107,1,250,0,212,1,249,0,214,1,216,1,218,1,220,1,252,0,234,0,81,2,199,231,68,1,72,1,249,1,97,2,201,231,202,231,203,231,204,231,5,49,6,49,7,49,8,49,9,49,10,49,11,49,12,49,13,49,14,49,15,49,16,49,17,49,18,49,19,49,20,49,21,49,22,49,23,49,24,49,25,49,26,49,27,49,28,49,29,49,30,49,31,49,32,49,33,49,34,49,35,49,36,49,37,49,38,49,39,49,40,49,41,49,205,231,206,231,207,231,208,231,209,231,210,231,211,231,212,231,213,231,214,231,215,231,216,231,217,231,218,231,219,231,220,231,221,231,222,231,223,231,224,231,225,231,33,48,34,48,35,48,36,48,37,48,38,48,39,48,40,48,41,48,163,50,142,51,143,51,156,51,157,51,158,51,161,51,196,51,206,51,209,51,210,51,213,51,48,254,226,255,228,255,226,231,33,33,49,50,227,231,16,32,228,231,229,231,230,231,252,48,155,48,156,48,253,48,254,48,6,48,157,48,158,48,73,254,74,254,75,254,76,254,77,254,78,254,79,254,80,254,81,254,82,254,84,254,85,254,86,254,87,254,89,254,90,254,91,254,92,254,93,254,94,254,95,254,96,254,97,254,98,254,99,254,100,254,101,254,102,254,104,254,105,254,106,254,107,254,62,48,240,47,241,47,242,47,243,47,244,47,245,47,246,47,247,47,248,47,249,47,250,47,251,47,7,48,244,231,245,231,246,231,247,231,248,231,249,231,250,231,251,231,252,231,253,231,254,231,255,231,0,232,0,37,1,37,2,37,3,37,4,37,5,37,6,37,7,37,8,37,9,37,10,37,11,37,12,37,13,37,14,37,15,37,16,37,17,37,18,37,19,37,20,37,21,37,22,37,23,37,24,37,25,37,26,37,27,37,28,37,29,37,30,37,31,37,32,37,33,37,34,37,35,37,36,37,37,37,38,37,39,37,40,37,41,37,42,37,43,37,44,37,45,37,46,37,47,37,48,37,49,37,50,37,51,37,52,37,53,37,54,37,55,37,56,37,57,37,58,37,59,37,60,37,61,37,62,37,63,37,64,37,65,37,66,37,67,37,68,37,69,37,70,37,71,37,72,37,73,37,74,37,75,37,1,232,2,232,3,232,4,232,5,232,6,232,7,232,8,232,9,232,10,232,11,232,12,232,13,232,14,232,15,232,220,114,221,114,223,114,226,114,227,114,228,114,229,114,230,114,231,114,234,114,235,114,245,114,246,114,249,114,253,114,254,114,255,114,0,115,2,115,4,115,5,115,6,115,7,115,8,115,9,115,11,115,12,115,13,115,15,115,16,115,17,115,18,115,20,115,24,115,25,115,26,115,31,115,32,115,35,115,36,115,38,115,39,115,40,115,45,115,47,115,48,115,50,115,51,115,53,115,54,115,58,115,59,115,60,115,61,115,64,115,65,115,66,115,67,115,68,115,69,115,70,115,71,115,72,115,73,115,74,115,75,115,76,115,78,115,79,115,81,115,83,115,84,115,85,115,86,115,88,115,89,115,90,115,91,115,92,115,93,115,94,115,95,115,97,115,98,115,99,115,100,115,101,115,102,115,103,115,104,115,105,115,106,115,107,115,110,115,112,115,113,115,0,224,1,224,2,224,3,224,4,224,5,224,6,224,7,224,8,224,9,224,10,224,11,224,12,224,13,224,14,224,15,224,16,224,17,224,18,224,19,224,20,224,21,224,22,224,23,224,24,224,25,224,26,224,27,224,28,224,29,224,30,224,31,224,32,224,33,224,34,224,35,224,36,224,37,224,38,224,39,224,40,224,41,224,42,224,43,224,44,224,45,224,46,224,47,224,48,224,49,224,50,224,51,224,52,224,53,224,54,224,55,224,56,224,57,224,58,224,59,224,60,224,61,224,62,224,63,224,64,224,65,224,66,224,67,224,68,224,69,224,70,224,71,224,72,224,73,224,74,224,75,224,76,224,77,224,78,224,79,224,80,224,81,224,82,224,83,224,84,224,85,224,86,224,87,224,88,224,89,224,90,224,91,224,92,224,93,224,114,115,115,115,116,115,117,115,118,115,119,115,120,115,121,115,122,115,123,115,124,115,125,115,127,115,128,115,129,115,130,115,131,115,133,115,134,115,136,115,138,115,140,115,141,115,143,115,144,115,146,115,147,115,148,115,149,115,151,115,152,115,153,115,154,115,156,115,157,115,158,115,160,115,161,115,163,115,164,115,165,115,166,115,167,115,168,115,170,115,172,115,173,115,177,115,180,115,181,115,182,115,184,115,185,115,188,115,189,115,190,115,191,115,193,115,195,115,196,115,197,115,198,115,199,115,203,115,204,115,206,115,210,115,211,115,212,115,213,115,214,115,215,115,216,115,218,115,219,115,220,115,221,115,223,115,225,115,226,115,227,115,228,115,230,115,232,115,234,115,235,115,236,115,238,115,239,115,240,115,241,115,243,115,244,115,245,115,246,115,247,115,94,224,95,224,96,224,97,224,98,224,99,224,100,224,101,224,102,224,103,224,104,224,105,224,106,224,107,224,108,224,109,224,110,224,111,224,112,224,113,224,114,224,115,224,116,224,117,224,118,224,119,224,120,224,121,224,122,224,123,224,124,224,125,224,126,224,127,224,128,224,129,224,130,224,131,224,132,224,133,224,134,224,135,224,136,224,137,224,138,224,139,224,140,224,141,224,142,224,143,224,144,224,145,224,146,224,147,224,148,224,149,224,150,224,151,224,152,224,153,224,154,224,155,224,156,224,157,224,158,224,159,224,160,224,161,224,162,224,163,224,164,224,165,224,166,224,167,224,168,224,169,224,170,224,171,224,172,224,173,224,174,224,175,224,176,224,177,224,178,224,179,224,180,224,181,224,182,224,183,224,184,224,185,224,186,224,187,224,248,115,249,115,250,115,251,115,252,115,253,115,254,115,255,115,0,116,1,116,2,116,4,116,7,116,8,116,11,116,12,116,13,116,14,116,17,116,18,116,19,116,20,116,21,116,22,116,23,116,24,116,25,116,28,116,29,116,30,116,31,116,32,116,33,116,35,116,36,116,39,116,41,116,43,116,45,116,47,116,49,116,50,116,55,116,56,116,57,116,58,116,59,116,61,116,62,116,63,116,64,116,66,116,67,116,68,116,69,116,70,116,71,116,72,116,73,116,74,116,75,116,76,116,77,116,78,116,79,116,80,116,81,116,82,116,83,116,84,116,86,116,88,116,93,116,96,116,97,116,98,116,99,116,100,116,101,116,102,116,103,116,104,116,105,116,106,116,107,116,108,116,110,116,111,116,113,116,114,116,115,116,116,116,117,116,120,116,121,116,122,116,188,224,189,224,190,224,191,224,192,224,193,224,194,224,195,224,196,224,197,224,198,224,199,224,200,224,201,224,202,224,203,224,204,224,205,224,206,224,207,224,208,224,209,224,210,224,211,224,212,224,213,224,214,224,215,224,216,224,217,224,218,224,219,224,220,224,221,224,222,224,223,224,224,224,225,224,226,224,227,224,228,224,229,224,230,224,231,224,232,224,233,224,234,224,235,224,236,224,237,224,238,224,239,224,240,224,241,224,242,224,243,224,244,224,245,224,246,224,247,224,248,224,249,224,250,224,251,224,252,224,253,224,254,224,255,224,0,225,1,225,2,225,3,225,4,225,5,225,6,225,7,225,8,225,9,225,10,225,11,225,12,225,13,225,14,225,15,225,16,225,17,225,18,225,19,225,20,225,21,225,22,225,23,225,24,225,25,225,123,116,124,116,125,116,127,116,130,116,132,116,133,116,134,116,136,116,137,116,138,116,140,116,141,116,143,116,145,116,146,116,147,116,148,116,149,116,150,116,151,116,152,116,153,116,154,116,155,116,157,116,159,116,160,116,161,116,162,116,163,116,164,116,165,116,166,116,170,116,171,116,172,116,173,116,174,116,175,116,176,116,177,116,178,116,179,116,180,116,181,116,182,116,183,116,184,116,185,116,187,116,188,116,189,116,190,116,191,116,192,116,193,116,194,116,195,116,196,116,197,116,198,116,199,116,200,116,201,116,202,116,203,116,204,116,205,116,206,116,207,116,208,116,209,116,211,116,212,116,213,116,214,116,215,116,216,116,217,116,218,116,219,116,221,116,223,116,225,116,229,116,231,116,232,116,233,116,234,116,235,116,236,116,237,116,240,116,241,116,242,116,26,225,27,225,28,225,29,225,30,225,31,225,32,225,33,225,34,225,35,225,36,225,37,225,38,225,39,225,40,225,41,225,42,225,43,225,44,225,45,225,46,225,47,225,48,225,49,225,50,225,51,225,52,225,53,225,54,225,55,225,56,225,57,225,58,225,59,225,60,225,61,225,62,225,63,225,64,225,65,225,66,225,67,225,68,225,69,225,70,225,71,225,72,225,73,225,74,225,75,225,76,225,77,225,78,225,79,225,80,225,81,225,82,225,83,225,84,225,85,225,86,225,87,225,88,225,89,225,90,225,91,225,92,225,93,225,94,225,95,225,96,225,97,225,98,225,99,225,100,225,101,225,102,225,103,225,104,225,105,225,106,225,107,225,108,225,109,225,110,225,111,225,112,225,113,225,114,225,115,225,116,225,117,225,118,225,119,225,243,116,245,116,248,116,249,116,250,116,251,116,252,116,253,116,254,116,0,117,1,117,2,117,3,117,5,117,6,117,7,117,8,117,9,117,10,117,11,117,12,117,14,117,16,117,18,117,20,117,21,117,22,117,23,117,27,117,29,117,30,117,32,117,33,117,34,117,35,117,36,117,38,117,39,117,42,117,46,117,52,117,54,117,57,117,60,117,61,117,63,117,65,117,66,117,67,117,68,117,70,117,71,117,73,117,74,117,77,117,80,117,81,117,82,117,83,117,85,117,86,117,87,117,88,117,93,117,94,117,95,117,96,117,97,117,98,117,99,117,100,117,103,117,104,117,105,117,107,117,108,117,109,117,110,117,111,117,112,117,113,117,115,117,117,117,118,117,119,117,122,117,123,117,124,117,125,117,126,117,128,117,129,117,130,117,132,117,133,117,135,117,120,225,121,225,122,225,123,225,124,225,125,225,126,225,127,225,128,225,129,225,130,225,131,225,132,225,133,225,134,225,135,225,136,225,137,225,138,225,139,225,140,225,141,225,142,225,143,225,144,225,145,225,146,225,147,225,148,225,149,225,150,225,151,225,152,225,153,225,154,225,155,225,156,225,157,225,158,225,159,225,160,225,161,225,162,225,163,225,164,225,165,225,166,225,167,225,168,225,169,225,170,225,171,225,172,225,173,225,174,225,175,225,176,225,177,225,178,225,179,225,180,225,181,225,182,225,183,225,184,225,185,225,186,225,187,225,188,225,189,225,190,225,191,225,192,225,193,225,194,225,195,225,196,225,197,225,198,225,199,225,200,225,201,225,202,225,203,225,204,225,205,225,206,225,207,225,208,225,209,225,210,225,211,225,212,225,213,225,136,117,137,117,138,117,140,117,141,117,142,117,144,117,147,117,149,117,152,117,155,117,156,117,158,117,162,117,166,117,167,117,168,117,169,117,170,117,173,117,182,117,183,117,186,117,187,117,191,117,192,117,193,117,198,117,203,117,204,117,206,117,207,117,208,117,209,117,211,117,215,117,217,117,218,117,220,117,221,117,223,117,224,117,225,117,229,117,233,117,236,117,237,117,238,117,239,117,242,117,243,117,245,117,246,117,247,117,248,117,250,117,251,117,253,117,254,117,2,118,4,118,6,118,7,118,8,118,9,118,11,118,13,118,14,118,15,118,17,118,18,118,19,118,20,118,22,118,26,118,28,118,29,118,30,118,33,118,35,118,39,118,40,118,44,118,46,118,47,118,49,118,50,118,54,118,55,118,57,118,58,118,59,118,61,118,65,118,66,118,68,118,214,225,215,225,216,225,217,225,218,225,219,225,220,225,221,225,222,225,223,225,224,225,225,225,226,225,227,225,228,225,229,225,230,225,231,225,232,225,233,225,234,225,235,225,236,225,237,225,238,225,239,225,240,225,241,225,242,225,243,225,244,225,245,225,246,225,247,225,248,225,249,225,250,225,251,225],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+48662);allocate([252,225,253,225,254,225,255,225,0,226,1,226,2,226,3,226,4,226,5,226,6,226,7,226,8,226,9,226,10,226,11,226,12,226,13,226,14,226,15,226,16,226,17,226,18,226,19,226,20,226,21,226,22,226,23,226,24,226,25,226,26,226,27,226,28,226,29,226,30,226,31,226,32,226,33,226,34,226,35,226,36,226,37,226,38,226,39,226,40,226,41,226,42,226,43,226,44,226,45,226,46,226,47,226,48,226,49,226,50,226,51,226,69,118,70,118,71,118,72,118,73,118,74,118,75,118,78,118,79,118,80,118,81,118,82,118,83,118,85,118,87,118,88,118,89,118,90,118,91,118,93,118,95,118,96,118,97,118,98,118,100,118,101,118,102,118,103,118,104,118,105,118,106,118,108,118,109,118,110,118,112,118,113,118,114,118,115,118,116,118,117,118,118,118,119,118,121,118,122,118,124,118,127,118,128,118,129,118,131,118,133,118,137,118,138,118,140,118,141,118,143,118,144,118,146,118,148,118,149,118,151,118,152,118,154,118,155,118,156,118,157,118,158,118,159,118,160,118,161,118,162,118,163,118,165,118,166,118,167,118,168,118,169,118,170,118,171,118,172,118,173,118,175,118,176,118,179,118,181,118,182,118,183,118,184,118,185,118,186,118,187,118,188,118,189,118,190,118,192,118,193,118,195,118,74,85,63,150,195,87,40,99,206,84,9,85,192,84,145,118,76,118,60,133,238,119,126,130,141,120,49,114,152,150,141,151,40,108,137,91,250,79,9,99,151,102,184,92,250,128,72,104,174,128,2,102,206,118,249,81,86,101,172,113,241,127,132,136,178,80,101,89,202,97,179,111,173,130,76,99,82,98,237,83,39,84,6,123,107,81,164,117,244,93,212,98,203,141,118,151,138,98,25,128,93,87,56,151,98,127,56,114,125,118,207,103,126,118,70,100,112,79,37,141,220,98,23,122,145,101,237,115,44,100,115,98,44,130,129,152,127,103,72,114,110,98,204,98,52,79,227,116,74,83,158,82,202,126,166,144,46,94,134,104,156,105,128,129,209,126,210,104,197,120,140,134,81,149,141,80,36,140,222,130,222,128,5,83,18,137,101,82,196,118,199,118,201,118,203,118,204,118,211,118,213,118,217,118,218,118,220,118,221,118,222,118,224,118,225,118,226,118,227,118,228,118,230,118,231,118,232,118,233,118,234,118,235,118,236,118,237,118,240,118,243,118,245,118,246,118,247,118,250,118,251,118,253,118,255,118,0,119,2,119,3,119,5,119,6,119,10,119,12,119,14,119,15,119,16,119,17,119,18,119,19,119,20,119,21,119,22,119,23,119,24,119,27,119,28,119,29,119,30,119,33,119,35,119,36,119,37,119,39,119,42,119,43,119,44,119,46,119,48,119,49,119,50,119,51,119,52,119,57,119,59,119,61,119,62,119,63,119,66,119,68,119,69,119,70,119,72,119,73,119,74,119,75,119,76,119,77,119,78,119,79,119,82,119,83,119,84,119,85,119,86,119,87,119,88,119,89,119,92,119,132,133,249,150,221,79,33,88,113,153,157,91,177,98,165,98,180,102,121,140,141,156,6,114,111,103,145,120,178,96,81,83,23,83,136,143,204,128,29,141,161,148,13,80,200,114,7,89,235,96,25,113,171,136,84,89,239,130,44,103,40,123,41,93,247,126,45,117,245,108,102,142,248,143,60,144,59,159,212,107,25,145,20,123,124,95,167,120,214,132,61,133,213,107,217,107,214,107,1,94,135,94,249,117,237,149,93,101,10,95,197,95,159,143,193,88,194,129,127,144,91,150,173,151,185,143,22,127,44,141,65,98,191,79,216,83,94,83,168,143,169,143,171,143,77,144,7,104,106,95,152,129,104,136,214,156,139,97,43,82,42,118,108,95,140,101,210,111,232,110,190,91,72,100,117,81,176,81,196,103,25,78,201,121,124,153,179,112,93,119,94,119,95,119,96,119,100,119,103,119,105,119,106,119,109,119,110,119,111,119,112,119,113,119,114,119,115,119,116,119,117,119,118,119,119,119,120,119,122,119,123,119,124,119,129,119,130,119,131,119,134,119,135,119,136,119,137,119,138,119,139,119,143,119,144,119,147,119,148,119,149,119,150,119,151,119,152,119,153,119,154,119,155,119,156,119,157,119,158,119,161,119,163,119,164,119,166,119,168,119,171,119,173,119,174,119,175,119,177,119,178,119,180,119,182,119,183,119,184,119,185,119,186,119,188,119,190,119,192,119,193,119,194,119,195,119,196,119,197,119,198,119,199,119,200,119,201,119,202,119,203,119,204,119,206,119,207,119,208,119,209,119,210,119,211,119,212,119,213,119,214,119,216,119,217,119,218,119,221,119,222,119,223,119,224,119,225,119,228,119,197,117,118,94,187,115,224,131,173,100,232,98,181,148,226,108,90,83,195,82,15,100,194,148,148,123,47,79,27,94,54,130,22,129,138,129,36,110,202,108,115,154,85,99,92,83,250,84,101,136,224,87,13,78,3,94,101,107,63,124,232,144,22,96,230,100,28,115,193,136,80,103,77,98,34,141,108,119,41,142,199,145,105,95,220,131,33,133,16,153,194,83,149,134,139,107,237,96,232,96,127,112,205,130,49,130,211,78,167,108,207,133,205,100,217,124,253,105,249,102,73,131,149,83,86,123,167,79,140,81,75,109,66,92,109,142,210,99,201,83,44,131,54,131,229,103,180,120,61,100,223,91,148,92,238,93,231,139,198,98,244,103,122,140,0,100,186,99,73,135,139,153,23,140,32,127,242,148,167,78,16,150,164,152,12,102,22,115,230,119,232,119,234,119,239,119,240,119,241,119,242,119,244,119,245,119,247,119,249,119,250,119,251,119,252,119,3,120,4,120,5,120,6,120,7,120,8,120,10,120,11,120,14,120,15,120,16,120,19,120,21,120,25,120,27,120,30,120,32,120,33,120,34,120,36,120,40,120,42,120,43,120,46,120,47,120,49,120,50,120,51,120,53,120,54,120,61,120,63,120,65,120,66,120,67,120,68,120,70,120,72,120,73,120,74,120,75,120,77,120,79,120,81,120,83,120,84,120,88,120,89,120,90,120,91,120,92,120,94,120,95,120,96,120,97,120,98,120,99,120,100,120,101,120,102,120,103,120,104,120,105,120,111,120,112,120,113,120,114,120,115,120,116,120,117,120,118,120,120,120,121,120,122,120,123,120,125,120,126,120,127,120,128,120,129,120,130,120,131,120,58,87,29,92,56,94,127,149,127,80,160,128,130,83,94,101,69,117,49,85,33,80,133,141,132,98,158,148,29,103,50,86,110,111,226,93,53,84,146,112,102,143,111,98,164,100,163,99,123,95,136,111,244,144,227,129,176,143,24,92,104,102,241,95,137,108,72,150,129,141,108,136,145,100,240,121,206,87,89,106,16,98,72,84,88,78,11,122,233,96,132,111,218,139,127,98,30,144,139,154,228,121,3,84,244,117,1,99,25,83,96,108,223,143,27,95,112,154,59,128,127,159,136,79,58,92,100,141,197,127,165,101,189,112,69,81,178,81,107,134,7,93,160,91,189,98,108,145,116,117,12,142,32,122,1,97,121,123,199,78,248,126,133,119,17,78,237,129,29,82,250,81,113,106,168,83,135,142,4,149,207,150,193,110,100,150,90,105,132,120,133,120,134,120,136,120,138,120,139,120,143,120,144,120,146,120,148,120,149,120,150,120,153,120,157,120,158,120,160,120,162,120,164,120,166,120,168,120,169,120,170,120,171,120,172,120,173,120,174,120,175,120,181,120,182,120,183,120,184,120,186,120,187,120,188,120,189,120,191,120,192,120,194,120,195,120,196,120,198,120,199,120,200,120,204,120,205,120,206,120,207,120,209,120,210,120,211,120,214,120,215,120,216,120,218,120,219,120,220,120,221,120,222,120,223,120,224,120,225,120,226,120,227,120,228,120,229,120,230,120,231,120,233,120,234,120,235,120,237,120,238,120,239,120,240,120,241,120,243,120,245,120,246,120,248,120,249,120,251,120,252,120,253,120,254,120,255,120,0,121,2,121,3,121,4,121,6,121,7,121,8,121,9,121,10,121,11,121,12,121,64,120,168,80,215,119,16,100,230,137,4,89,227,99,221,93,127,122,61,105,32,79,57,130,152,85,50,78,174,117,151,122,98,94,138,94,239,149,27,82,57,84,138,112,118,99,36,149,130,87,37,102,63,105,135,145,7,85,243,109,175,126,34,136,51,98,240,126,181,117,40,131,193,120,204,150,158,143,72,97,247,116,205,139,100,107,58,82,80,141,33,107,106,128,113,132,241,86,6,83,206,78,27,78,209,81,151,124,139,145,7,124,195,79,127,142,225,123,156,122,103,100,20,93,172,80,6,129,1,118,185,124,236,109,224,127,81,103,88,91,248,91,203,120,174,100,19,100,170,99,43,99,25,149,45,100,190,143,84,123,41,118,83,98,39,89,70,84,121,107,163,80,52,98,38,94,134,107,227,78,55,141,139,136,133,95,46,144,13,121,14,121,15,121,16,121,17,121,18,121,20,121,21,121,22,121,23,121,24,121,25,121,26,121,27,121,28,121,29,121,31,121,32,121,33,121,34,121,35,121,37,121,38,121,39,121,40,121,41,121,42,121,43,121,44,121,45,121,46,121,47,121,48,121,49,121,50,121,51,121,53,121,54,121,55,121,56,121,57,121,61,121,63,121,66,121,67,121,68,121,69,121,71,121,74,121,75,121,76,121,77,121,78,121,79,121,80,121,81,121,82,121,84,121,85,121,88,121,89,121,97,121,99,121,100,121,102,121,105,121,106,121,107,121,108,121,110,121,112,121,113,121,114,121,115,121,116,121,117,121,118,121,121,121,123,121,124,121,125,121,126,121,127,121,130,121,131,121,134,121,135,121,136,121,137,121,139,121,140,121,141,121,142,121,144,121,145,121,146,121,32,96,61,128,197,98,57,78,85,83,248,144,184,99,198,128,230,101,46,108,70,79,238,96,225,109,222,139,57,95,203,134,83,95,33,99,90,81,97,131,99,104,0,82,99,99,72,142,18,80,155,92,119,121,252,91,48,82,59,122,188,96,83,144,215,118,183,95,151,95,132,118,108,142,111,112,123,118,73,123,170,119,243,81,147,144,36,88,78,79,244,110,234,143,76,101,27,123,196,114,164,109,223,127,225,90,181,98,149,94,48,87,130,132,44,123,29,94,31,95,18,144,20,127,160,152,130,99,199,110,152,120,185,112,120,81,91,151,171,87,53,117,67,79,56,117,151,94,230,96,96,89,192,109,191,107,137,120,252,83,213,150,203,81,1,82,137,99,10,84,147,148,3,140,204,141,57,114,159,120,118,135,237,143,13,140,224,83,147,121,148,121,149,121,150,121,151,121,152,121,153,121,155,121,156,121,157,121,158,121,159,121,160,121,161,121,162,121,163,121,164,121,165,121,166,121,168,121,169,121,170,121,171,121,172,121,173,121,174,121,175,121,176,121,177,121,178,121,180,121,181,121,182,121,183,121,184,121,188,121,191,121,194,121,196,121,197,121,199,121,200,121,202,121,204,121,206,121,207,121,208,121,211,121,212,121,214,121,215,121,217,121,218,121,219,121,220,121,221,121,222,121,224,121,225,121,226,121,229,121,232,121,234,121,236,121,238,121,241,121,242,121,243,121,244,121,245,121,246,121,247,121,249,121,250,121,252,121,254,121,255,121,1,122,4,122,5,122,7,122,8,122,9,122,10,122,12,122,15,122,16,122,17,122,18,122,19,122,21,122,22,122,24,122,25,122,27,122,28,122,1,78,239,118,238,83,137,148,118,152,14,159,45,149,154,91,162,139,34,78,28,78,172,81,99,132,194,97,168,82,11,104,151,79,107,96,187,81,30,109,92,81,150,98,151,101,97,150,70,140,23,144,216,117,253,144,99,119,210,107,138,114,236,114,251,139,53,88,121,119,76,141,92,103,64,149,154,128,166,94,33,110,146,89,239,122,237,119,59,149,181,107,173,101,14,127,6,88,81,81,31,150,249,91,169,88,40,84,114,142,102,101,127,152,228,86,157,148,254,118,65,144,135,99,198,84,26,89,58,89,155,87,178,142,53,103,250,141,53,130,65,82,240,96,21,88,254,134,232,92,69,158,196,79,157,152,185,139,37,90,118,96,132,83,124,98,79,144,2,145,127,153,105,96,12,128,63,81,51,128,20,92,117,153,49,109,140,78,29,122,31,122,33,122,34,122,36,122,37,122,38,122,39,122,40,122,41,122,42,122,43,122,44,122,45,122,46,122,47,122,48,122,49,122,50,122,52,122,53,122,54,122,56,122,58,122,62,122,64,122,65,122,66,122,67,122,68,122,69,122,71,122,72,122,73,122,74,122,75,122,76,122,77,122,78,122,79,122,80,122,82,122,83,122,84,122,85,122,86,122,88,122,89,122,90,122,91,122,92,122,93,122,94,122,95,122,96,122,97,122,98,122,99,122,100,122,101,122,102,122,103,122,104,122,105,122,106,122,107,122,108,122,109,122,110,122,111,122,113,122,114,122,115,122,117,122,123,122,124,122,125,122,126,122,130,122,133,122,135,122,137,122,138,122,139,122,140,122,142,122,143,122,144,122,147,122,148,122,153,122,154,122,155,122,158,122,161,122,162,122,48,141,209,83,90,127,79,123,16,79,79,78,0,150,213,108,208,115,233,133,6,94,106,117,251,127,10,106,254,119,146,148,65,126,225,81,230,112,205,83,212,143,3,131,41,141,175,114,109,153,219,108,74,87,179,130,185,101,170,128,63,98,50,150,168,89,255,78,191,139,186,126,62,101,242,131,94,151,97,85,222,152,165,128,42,83,253,139,32,84,186,128,159,94,184,108,57,141,172,130,90,145,41,84,27,108,6,82,183,126,95,87,26,113,126,108,137,124,75,89,253,78,255,95,36,97,170,124,48,78,1,92,171,103,2,135,240,92,11,149,206,152,175,117,253,112,34,144,175,81,29,127,189,139,73,89,228,81,91,79,38,84,43,89,119,101,164,128,117,91,118,98,194,98,144,143,69,94,31,108,38,123,15,79,216,79,13,103,163,122,164,122,167,122,169,122,170,122,171,122,174,122,175,122,176,122,177,122,178,122,180,122,181,122,182,122,183,122,184,122,185,122,186,122,187,122,188,122,189,122,190,122,192,122,193,122,194,122,195,122,196,122,197,122,198,122,199,122,200,122,201,122,202,122,204,122,205,122,206,122,207,122,208,122,209,122,210,122,211,122,212,122,213,122,215,122,216,122,218,122,219,122,220,122,221,122,225,122,226,122,228,122,231,122,232,122,233,122,234,122,235,122,236,122,238,122,240,122,241,122,242,122,243,122,244,122,245,122,246,122,247,122,248,122,251,122,252,122,254,122,0,123,1,123,2,123,5,123,7,123,9,123,12,123,13,123,14,123,16,123,18,123,19,123,22,123,23,123,24,123,26,123,28,123,29,123,31,123,33,123,34,123,35,123,39,123,41,123,45,123,110,109,170,109,143,121,177,136,23,95,43,117,154,98,133,143,239,79,220,145,167,101,47,129,81,129,156,94,80,129,116,141,111,82,134,137,75,141,13,89,133,80,216,78,28,150,54,114,121,129,31,141,204,91,163,139,68,150,135,89,26,127,144,84,118,86,14,86,229,139,57,101,130,105,153,148,214,118,137,110,114,94,24,117,70,103,209,103,255,122,157,128,118,141,31,97,198,121,98,101,99,141,136,81,26,82,162,148,56,127,155,128,178,126,151,92,47,110,96,103,217,123,139,118,216,154,143,129,148,127,213,124,30,100,80,149,63,122,74,84,229,84,76,107,1,100,8,98,61,158,243,128,153,117,114,82,105,151,91,132,60,104,228,134,1,150,148,150,236,148,42,78,4,84,217,126,57,104,223,141,21,128,244,102,154,94,185,127,47,123,48,123,50,123,52,123,53,123,54,123,55,123,57,123,59,123,61,123,63,123,64,123,65,123,66,123,67,123,68,123,70,123,72,123,74,123,77,123,78,123,83,123,85,123,87,123,89,123,92,123,94,123,95,123,97,123,99,123,100,123,101,123,102,123,103,123,104,123,105,123,106,123,107,123,108,123,109,123,111,123,112,123,115,123,116,123,118,123,120,123,122,123,124,123,125,123,127,123,129,123,130,123,131,123,132,123,134,123,135,123,136,123,137,123,138,123,139,123,140,123,142,123,143,123,145,123,146,123,147,123,150,123,152,123,153,123,154,123,155,123,158,123,159,123,160,123,163,123,164,123,165,123,174,123,175,123,176,123,178,123,179,123,181,123,182,123,183,123,185,123,186,123,187,123,188,123,189,123,190,123,191,123,192,123,194,123,195,123,196,123,194,87,63,128,151,104,229,93,59,101,159,82,109,96,154,159,155,79,172,142,108,81,171,91,19,95,233,93,94,108,241,98,33,141,113,81,169,148,254,82,159,108,223,130,215,114,162,87,132,103,45,141,31,89,156,143,199,131,149,84,141,123,48,79,189,108,100,91,209,89,19,159,228,83,202,134,168,154,55,140,161,128,69,101,126,152,250,86,199,150,46,82,220,116,80,82,225,91,2,99,2,137,86,78,208,98,42,96,250,104,115,81,152,91,160,81,194,137,161,123,134,153,80,127,239,96,76,112,47,141,73,81,127,94,27,144,112,116,196,137,45,87,69,120,82,95,159,159,250,149,104,143,60,155,225,139,120,118,66,104,220,103,234,141,53,141,61,82,138,143,218,110,205,104,5,149,237,144,253,86,156,103,249,136,199,143,200,84,197,123,200,123,201,123,202,123,203,123,205,123,206,123,207,123,208,123,210,123,212,123,213,123,214,123,215,123,216,123,219,123,220,123,222,123,223,123,224,123,226,123,227,123,228,123,231,123,232,123,233,123,235,123,236,123,237,123,239,123,240,123,242,123,243,123,244,123,245,123,246,123,248,123,249,123,250,123,251,123,253,123,255,123,0,124,1,124,2,124,3,124,4,124,5,124,6,124,8,124,9,124,10,124,13,124,14,124,16,124,17,124,18,124,19,124,20,124,21,124,23,124,24,124,25,124,26,124,27,124,28,124,29,124,30,124,32,124,33,124,34,124,35,124,36,124,37,124,40,124,41,124,43,124,44,124,45,124,46,124,47,124,48,124,49,124,50,124,51,124,52,124,53,124,54,124,55,124,57,124,58,124,59,124,60,124,61,124,62,124,66,124,184,154,105,91,119,109,38,108,165,78,179,91,135,154,99,145,168,97,175,144,233,151,43,84,181,109,210,91,253,81,138,85,85,127,240,127,188,100,77,99,241,101,190,97,141,96,10,113,87,108,73,108,47,89,109,103,42,130,213,88,142,86,106,140,235,107,221,144,125,89,23,128,247,83,105,109,117,84,157,85,119,131,207,131,56,104,190,121,140,84,85,79,8,84,210,118,137,140,2,150,179,108,184,109,107,141,16,137,100,158,58,141,63,86,209,158,213,117,136,95,224,114,104,96,252,84,168,78,42,106,97,136,82,96,112,143,196,84,216,112,121,134,63,158,42,109,143,91,24,95,162,126,137,85,175,79,52,115,60,84,154,83,25,80,14,84,124,84,78,78,253,95,90,116,246,88,107,132,225,128,116,135,208,114,202,124,86,110,67,124,68,124,69,124,70,124,71,124,72,124,73,124,74,124,75,124,76,124,78,124,79,124,80,124,81,124,82,124,83,124,84,124,85,124,86,124,87,124,88,124,89,124,90,124,91,124,92,124,93,124,94,124,95,124,96,124,97,124,98,124,99,124,100,124,101,124,102,124,103,124,104,124,105,124,106,124,107,124,108,124,109,124,110,124,111,124,112,124,113,124,114,124,117,124,118,124,119,124,120,124,121,124,122,124,126,124,127,124,128,124,129,124,130,124,131,124,132,124,133,124,134,124,135,124,136,124,138,124,139,124,140,124,141,124,142,124,143,124,144,124,147,124,148,124,150,124,153,124,154,124,155,124,160,124,161,124,163,124,166,124,167,124,168,124,169,124,171,124,172,124,173,124,175,124,176,124,180,124,181,124,182,124,183,124,184,124,186,124,187,124,39,95,78,134,44,85,164,98,146,78,170,108,55,98,177,130,215,84,78,83,62,115,209,110,59,117,18,82,22,83,221,139,208,105,138,95,0,96,238,109,79,87,34,107,175,115,83,104,216,143,19,127,98,99,163,96,36,85,234,117,98,140,21,113,163,109,166,91,123,94,82,131,76,97,196,158,250,120,87,135,39,124,135,118,240,81,246,96,76,113,67,102,76,94,77,96,14,140,112,112,37,99,137,143,189,95,98,96,212,134,222,86,193,107,148,96,103,97,73,83,224,96,102,102,63,141,253,121,26,79,233,112,71,108,179,139,242,139,216,126,100,131,15,102,90,90,66,155,81,109,247,109,65,140,59,109,25,79,107,112,183,131,22,98,209,96,13,151,39,141,120,121,251,81,62,87,250,87,58,103,120,117,61,122,239,121,149,123,191,124,192,124,194,124,195,124,196,124,198,124,201,124,203,124,206,124,207,124,208,124,209,124,210,124,211,124,212,124,216,124,218,124,219,124,221,124,222,124,225,124,226,124,227,124,228,124,229,124,230,124,231,124,233,124,234,124,235,124,236,124,237,124,238,124,240,124,241,124,242,124,243,124,244,124,245,124,246,124,247,124,249,124,250,124,252,124,253,124,254,124,255,124,0,125,1,125,2,125,3,125,4,125,5,125,6,125,7,125,8,125,9,125,11,125,12,125,13,125,14,125,15,125,16,125,17,125,18,125,19,125,20,125,21,125,22,125,23,125,24,125,25,125,26,125,27,125,28,125,29,125,30,125,31,125,33,125,35,125,36,125,37,125,38,125,40,125,41,125,42,125,44,125,45,125,46,125,48,125,49,125,50,125,51,125,52,125,53,125,54,125,140,128,101,153,249,143,192,111,165,139,33,158,236,89,233,126,9,127,9,84,129,103,216,104,145,143,77,124,198,150,202,83,37,96,190,117,114,108,115,83,201,90,167,126,36,99,224,81,10,129,241,93,223,132,128,98,128,81,99,91,14,79,109,121,66,82,184,96,78,109,196,91,194,91,161,139,176,139,226,101,204,95,69,150,147,89,231,126,170,126,9,86,183,103,57,89,115,79,182,91,160,82,90,131,138,152,62,141,50,117,190,148,71,80,60,122,247,78,182,103,126,154,193,90,124,107,209,118,90,87,22,92,58,123,244,149,78,113,124,81,169,128,112,130,120,89,4,127,39,131,192,104,236,103,177,120,119,120,227,98,97,99,128,123,237,79,106,82,207,81,80,131,219,105,116,146,245,141,49,141,193,137,46,149,173,123,246,78,55,125,56,125,57,125,58,125,59,125,60,125,61,125,62,125,63,125,64,125,65,125,66,125,67,125,68,125,69,125,70,125,71,125,72,125,73,125,74,125,75,125,76,125,77,125,78,125,79,125,80,125,81,125,82,125,83,125,84,125,85,125,86,125,87,125,88,125,89,125,90,125,91,125,92,125,93,125,94,125,95,125,96,125,97,125,98,125,99,125,100,125,101,125,102,125,103,125,104,125,105,125,106,125,107,125,108,125,109,125,111,125,112,125,113,125,114,125,115,125,116,125,117,125,118,125,120,125,121,125,122,125,123,125,124,125,125,125,126,125,127,125,128,125,129,125,130,125,131,125,132,125,133,125,134,125,135,125,136,125,137,125,138,125,139,125,140,125,141,125,142,125,143,125,144,125,145,125,146,125,147,125,148,125,149,125,150,125,151,125,152,125,101,80,48,130,81,82,111,153,16,110,133,110,167,109,250,94,245,80,220,89,6,92,70,109,95,108,134,117,139,132,104,104,86,89,178,139,32,83,113,145,77,150,73,133,18,105,1,121,38,113,246,128,164,78,202,144,71,109,132,154,7,90,188,86,5,100,240,148,235,119,165,79,26,129,225,114,210,137,122,153,52,127,222,126,127,82,89,101,117,145,127,143,131,143,235,83,150,122,237,99,165,99,134,118,248,121,87,136,54,150,42,98,171,82,130,130,84,104,112,103,119,99,107,119,237,122,1,109,211,126,227,137,208,89,18,98,201,133,165,130,76,117,31,80,203,78,165,117,235,139,74,92,254,93,75,123,164,101,209,145,202,78,37,109,95,137,39,125,38,149,197,78,40,140,219,143,115,151,75,102,129,121,209,143,236,112,120,109,153,125,154,125,155,125,156,125,157,125,158,125,159,125,160,125,161,125,162,125,163,125,164,125,165,125,167,125,168,125,169,125,170,125,171,125,172,125,173,125,175,125,176,125,177,125,178,125,179,125,180,125,181,125,182,125,183,125,184,125,185,125,186,125,187,125,188,125,189,125,190,125,191,125,192,125,193,125,194,125,195,125,196,125,197,125,198,125,199,125,200,125,201,125,202,125,203,125,204,125,205,125,206,125,207,125,208,125,209,125,210,125,211,125,212,125,213,125,214,125,215,125,216,125,217,125,218,125,219,125,220,125,221,125,222,125,223,125,224,125,225,125,226,125,227,125,228,125,229,125,230,125,231,125,232,125,233,125,234,125,235,125,236,125,237,125,238,125,239,125,240,125,241,125,242,125,243,125,244,125,245,125,246,125,247,125,248,125,249,125,250,125,61,92,178,82,70,131,98,81,14,131,91,119,118,102,184,156,172,78,202,96,190,124,179,124,207,126,149,78,102,139,111,102,136,152,89,151,131,88,108,101,92,149,132,95,201,117,86,151,223,122,222,122,192,81,175,112,152,122,234,99,118,122,160,126,150,115,237,151,69,78,120,112,93,78,82,145,169,83,81,101,231,101,252,129,5,130,142,84,49,92,154,117,160,151,216,98,217,114,189,117,69,92,121,154,202,131,64,92,128,84,233,119,62,78,174,108,90,128,210,98,110,99,232,93,119,81,221,141,30,142,47,149,241,79,229,83,231,96,172,112,103,82,80,99,67,158,31,90,38,80,55,119,119,83,226,126,133,100,43,101,137,98,152,99,20,80,53,114,201,137,179,81,192,139,221,126,71,87,204,131,167,148,155,81,27,84,251,92,251,125,252,125,253,125,254,125,255,125,0,126,1,126,2,126,3,126,4,126,5,126,6,126,7,126,8,126,9,126,10,126,11,126,12,126,13,126,14,126,15,126,16,126,17,126,18,126,19,126,20,126,21,126,22,126,23,126,24,126,25,126,26,126,27,126,28,126,29,126,30,126,31,126,32,126,33,126,34,126,35,126,36,126,37,126,38,126,39,126,40,126,41,126,42,126,43,126,44,126,45,126,46,126,47,126,48,126,49,126,50,126,51,126,52,126,53,126,54,126,55,126,56,126,57,126,58,126,60,126,61,126,62,126,63,126,64,126,66,126,67,126,68,126,69,126,70,126,72,126,73,126,74,126,75,126,76,126,77,126,78,126,79,126,80,126,81,126,82,126,83,126,84,126,85,126,86,126,87,126,88,126,89,126,90,126,91,126,92,126,93,126,202,79,227,122,90,109,225,144,143,154,128,85,150,84,97,83,175,84,0,95,233,99,119,105,239,81,104,97,10,82,42,88,216,82,78,87,13,120,11,119,183,94,119,97,224,124,91,98,151,98,162,78,149,112,3,128,247,98,228,112,96,151,119,87,219,130,239,103,245,104,213,120,151,152,209,121,243,88,179,84,239,83,52,110,75,81,59,82,162,91,254,139,175,128,67,85,166,87,115,96,81,87,45,84,122,122,80,96,84,91,167,99,160,98,227,83,99,98,199,91,175,103,237,84,159,122,230,130,119,145,147,94,228,136,56,89,174,87,14,99,232,141,239,128,87,87,119,123,169,79,235,95,189,91,62,107,33,83,80,123,194,114,70,104,255,119,54,119,247,101,181,81,143,78,212,118,191,92,165,122,117,132,78,89,65,155,128,80,94,126,95,126,96,126,97,126,98,126,99,126,100,126,101,126,102,126,103,126,104,126,105,126,106,126,107,126,108,126,109,126,110,126,111,126,112,126,113,126,114,126,115,126,116,126,117,126,118,126,119,126,120,126,121,126,122,126,123,126,124,126,125,126,126,126,127,126,128,126,129,126,131,126,132,126,133,126,134,126,135,126,136,126,137,126,138,126,139,126,140,126,141,126,142,126,143,126,144,126,145,126,146,126,147,126,148,126,149,126,150,126,151,126,152,126,153,126,154,126,156,126,157,126,158,126,174,126,180,126,187,126,188,126,214,126,228,126,236,126,249,126,10,127,16,127,30,127,55,127,57,127,59,127,60,127,61,127,62,127,63,127,64,127,65,127,67,127,70,127,71,127,72,127,73,127,74,127,75,127,76,127,77,127,78,127,79,127,82,127,83,127,136,153,39,97,131,110,100,87,6,102,70,99,240,86,236,98,105,98,211,94,20,150,131,87,201,98,135,85,33,135,74,129,163,143,102,85,177,131,101,103,86,141,221,132,106,90,15,104,230,98,238,123,17,150,112,81,156,111,48,140,253,99,200,137,210,97,6,127,194,112,229,110,5,116,148,105,252,114,202,94,206,144,23,103,106,109,94,99,179,82,98,114,1,128,108,79,229,89,106,145,217,112,157,109,210,82,80,78,247,150,109,149,126,133,202,120,47,125,33,81,146,87,194,100,139,128,123,124,234,108,241,104,94,105,183,81,152,83,168,104,129,114,206,158,241,123,248,114,187,121,19,111,6,116,78,103,204,145,164,156,60,121,137,131,84,131,15,84,23,104,61,78,137,83,177,82,62,120,134,83,41,82,136,80,139,79,208,79,86,127,89,127,91,127,92,127,93,127,94,127,96,127,99,127,100,127,101,127,102,127,103,127,107,127,108,127,109,127,111,127,112,127,115,127,117,127,118,127,119,127,120,127,122,127,123,127,124,127,125,127,127,127,128,127,130,127,131,127,132,127,133,127,134,127,135,127,136,127,137,127,139,127,141,127,143,127,144,127,145,127,146,127,147,127,149,127,150,127,151,127,152,127,153,127,155,127,156,127,160,127,162,127,163,127,165,127,166,127,168,127,169,127,170,127,171,127,172,127,173,127,174,127,177,127,179,127,180,127,181,127,182,127,183,127,186,127,187,127,190,127,192,127,194,127,195,127,196,127,198,127,199,127,200,127,201,127,203,127,205,127,207,127,208,127,209,127,210,127,211,127,214,127,215,127,217,127,218,127,219,127,220,127,221,127,222,127,226,127,227,127,226,117,203,122,146,124,165,108,182,150,155,82,131,116,233,84,233,79,84,128,178,131,222,143,112,149,201,94,28,96,159,109,24,94,91,101,56,129,254,148,75,96,188,112,195,126,174,124,201,81,129,104,177,124,111,130,36,78,134,143,207,145,126,102,174,78,5,140,169,100,74,128,218,80,151,117,206,113,229,91,189,143,102,111,134,78,130,100,99,149,214,94,153,101,23,82,194,136,200,112,163,82,14,115,51,116,151,103,247,120,22,151,52,78,187,144,222,156,203,109,219,81,65,141,29,84,206,98,178,115,241,131,246,150,132,159,195,148,54,79,154,127,204,81,117,112,117,150,173,92,134,152,230,83,228,78,156,110,9,116,180,105,107,120,143,153,89,117,24,82,36,118,65,109,243,103,109,81,153,159,75,128,153,84,60,123,191,122,228,127,231,127,232,127,234,127,235,127,236,127,237,127,239,127,242,127,244,127,245,127,246,127,247,127,248,127,249,127,250,127,253,127,254,127,255,127,2,128,7,128,8,128,9,128,10,128,14,128,15,128,17,128,19,128,26,128,27,128,29,128,30,128,31,128,33,128,35,128,36,128,43,128,44,128,45,128,46,128,47,128,48,128,50,128,52,128,57,128,58,128,60,128,62,128,64,128,65,128,68,128,69,128,71,128,72,128,73,128,78,128,79,128,80,128,81,128,83,128,85,128,86,128,87,128,89,128,91,128,92,128,93,128,94,128,95,128,96,128,97,128,98,128,99,128,100,128,101,128,102,128,103,128,104,128,107,128,108,128,109,128,110,128,111,128,112,128,114,128,115,128,116,128,117,128,118,128,119,128,120,128,121,128,122,128,123,128,124,128,125,128,134,150,132,87,226,98,71,150,124,105,4,90,2,100,211,123,15,111,75,150,166,130,98,83,133,152,144,94,137,112,179,99,100,83,79,134,129,156,147,158,140,120,50,151,239,141,66,141,127,158,94,111,132,121,85,95,70,150,46,98,116,154,21,84,221,148,163,79,197,101,101,92,97,92,21,127,81,134,47,108,139,95,135,115,228,110,255,126,230,92,27,99,106,91,230,110,117,83,113,78,160,99,101,117,161,98,110,143,38,79,209,78,166,108,182,126,186,139,29,132,186,135,87,127,59,144,35,149,169,123,161,154,248,136,61,132,27,109,134,154,220,126,136,89,187,158,155,115,1,120,130,134,108,154,130,154,27,86,23,84,203,87,112,78,166,158,86,83,200,143,9,129,146,119,146,153,238,134,225,110,19,133,252,102,98,97,43,111,126,128,129,128,130,128,133,128,136,128,138,128,141,128,142,128,143,128,144,128,145,128,146,128,148,128,149,128,151,128,153,128,158,128,163,128,166,128,167,128,168,128,172,128,176,128,179,128,181,128,182,128,184,128,185,128,187,128,197,128,199,128,200,128,201,128,202,128,203,128,207,128,208,128,209,128,210,128,211,128,212,128,213,128,216,128,223,128,224,128,226,128,227,128,230,128,238,128,245,128,247,128,249,128,251,128,254,128,255,128,0,129,1,129,3,129,4,129,5,129,7,129,8,129,11,129,12,129,21,129,23,129,25,129,27,129,28,129,29,129,31,129,32,129,33,129,34,129,35,129,36,129,37,129,38,129,39,129,40,129,41,129,42,129,43,129,45,129,46,129,48,129,51,129,52,129,53,129,55,129,57,129,58,129,59,129,60,129,61,129,63,129,41,140,146,130,43,131,242,118,19,108,217,95,189,131,43,115,5,131,26,149,219,107,219,119,198,148,111,83,2,131,146,81,61,94,140,140,56,141,72,78,171,115,154,103,133,104,118,145,9,151,100,113,161,108,9,119,146,90,65,149,207,107,142,127,39,102,208,91,185,89,154,90,232,149,247,149,236,78,12,132,153,132,172,106,223,118,48,149,27,115,166,104,95,91,47,119,154,145,97,151,220,124,247,143,28,140,37,95,115,124,216,121,197,137,204,108,28,135,198,91,66,94,201,104,32,119,245,126,149,81,77,81,201,82,41,90,5,127,98,151,215,130,207,99,132,119,208,133,210,121,58,110,153,94,153,89,17,133,109,112,17,108,191,98,191,118,79,101,175,96,253,149,14,102,159,135,35,158,237,148,13,84,125,84,44,140,120,100,64,129,65,129,66,129,67,129,68,129,69,129,71,129,73,129,77,129,78,129,79,129,82,129,86,129,87,129,88,129,91,129,92,129,93,129,94,129,95,129,97,129,98,129,99,129,100,129,102,129,104,129,106,129,107,129,108,129,111,129,114,129,115,129,117,129,118,129,119,129,120,129,129,129,131,129,132,129,133,129,134,129,135,129,137,129,139,129,140,129,141,129,142,129,144,129,146,129,147,129,148,129,149,129,150,129,151,129,153,129,154,129,158,129,159,129,160,129,161,129,162,129,164,129,165,129,167,129,169,129,171,129,172,129,173,129,174,129,175,129,176,129,177,129,178,129,180,129,181,129,182,129,183,129,184,129,185,129,188,129,189,129,190,129,191,129,196,129,197,129,199,129,200,129,201,129,203,129,205,129,206,129,207,129,208,129,209,129,210,129,211,129,121,100,17,134,33,106,156,129,232,120,105,100,84,155,185,98,43,103,171,131,168,88,216,158,171,108,32,111,222,91,76,150,11,140,95,114,208,103,199,98,97,114,169,78,198,89,205,107,147,88,174,102,85,94,223,82,85,97,40,103,238,118,102,119,103,114,70,122,255,98,234,84,80,84,160,148,163,144,28,90,179,126,22,108,67,78,118,89,16,128,72,89,87,83,55,117,190,150,202,86,32,99,17,129,124,96,249,149,214,109,98,84,129,153,133,81,233,90,253,128,174,89,19,151,42,80,229,108,60,92,223,98,96,79,63,83,123,129,6,144,186,110,43,133,200,98,116,94,190,120,181,100,123,99,245,95,24,90,127,145,31,158,63,92,79,99,66,128,125,91,110,85,74,149,77,149,133,109,168,96,224,103,222,114,221,81,129,91,212,129,213,129,214,129,215,129,216,129,217,129,218,129,219,129,220,129,221,129,222,129,223,129,224,129,225,129,226,129,228,129,229,129,230,129,232,129,233,129,235,129,238,129,239,129,240,129,241,129,242,129,245,129,246,129,247,129,248,129,249,129,250,129,253,129,255,129,3,130,7,130,8,130,9,130,10,130,11,130,14,130,15,130,17,130,19,130,21,130,22,130,23,130,24,130,25,130,26,130,29,130,32,130,36,130,37,130,38,130,39,130,41,130,46,130,50,130,58,130,60,130,61,130,63,130,64,130,65,130,66,130,67,130,69,130,70,130,72,130,74,130,76,130,77,130,78,130,80,130,81,130,82,130,83,130,84,130,85,130,86,130,87,130,89,130,91,130,92,130,93,130,94,130,96,130,97,130,98,130,99,130,100,130,101,130,102,130,103,130,105,130,231,98,222,108,91,114,109,98,174,148,189,126,19,129,83,109,156,81,4,95,116,89,170,82,18,96,115,89,150,102,80,134,159,117,42,99,230,97,239,124,250,139,230,84,39,107,37,158,180,107,213,133,85,84,118,80,164,108,106,85,180,141,44,114,21,94,21,96,54,116,205,98,146,99,76,114,152,95,67,110,62,109,0,101,88,111,216,118,208,120,252,118,84,117,36,82,219,83,83,78,158,94,193,101,42,128,214,128,155,98,134,84,40,82,174,112,141,136,209,141,225,108,120,84,218,128,249,87,244,136,84,141,106,150,77,145,105,79,155,108,183,85,198,118,48,120,168,98,249,112,142,111,109,95,236,132,218,104,124,120,247,123,168,129,11,103,79,158,103,99,176,120,111,87,18,120,57,151,121,98,171,98,136,82,53,116,215,107,106,130,107,130,108,130,109,130,113,130,117,130,118,130,119,130,120,130,123,130,124,130,128,130,129,130,131,130,133,130,134,130,135,130,137,130,140,130,144,130,147,130,148,130,149,130,150,130,154,130,155,130,158,130,160,130,162,130,163,130,167,130,178,130,181,130,182,130,186,130,187,130,188,130,191,130,192,130,194,130,195,130,197,130,198,130,201,130,208,130,214,130,217,130,218,130,221,130,226,130,231,130,232,130,233,130,234,130,236,130,237,130,238,130,240,130,242,130,243,130,245,130,246,130,248,130,250,130,252,130,253,130,254,130,255,130,0,131,10,131,11,131,13,131,16,131,18,131,19,131,22,131,24,131,25,131,29,131,30,131,31,131,32,131,33,131,34,131,35,131,36,131,37,131,38,131,41,131,42,131,46,131,48,131,50,131,55,131,59,131,61,131,100,85,62,129,178,117,174,118,57,83,222,117,251,80,65,92,108,139,199,123,79,80,71,114,151,154,216,152,2,111,226,116,104,121,135,100,165,119,252,98,145,152,43,141,193,84,88,128,82,78,106,87,249,130,13,132,115,94,237,81,246,116,196,139,79,92,97,87,252,108,135,152,70,90,52,120,68,155,235,143,149,124,86,82,81,98,250,148,198,78,134,131,97,132,233,131,178,132,212,87,52,103,3,87,110,102,102,109,49,140,221,102,17,112,31,103,58,107,22,104,26,98,187,89,3,78,196,81,6,111,210,103,143,108,118,81,203,104,71,89,103,107,102,117,14,93,16,129,80,159,215,101,72,121,65,121,145,154,119,141,130,92,94,78,1,79,47,84,81,89,12,120,104,86,20,108,196,143,3,95,125,108,227,108,171,139,144,99,62,131,63,131,65,131,66,131,68,131,69,131,72,131,74,131,75,131,76,131,77,131,78,131,83,131,85,131,86,131,87,131,88,131,89,131,93,131,98,131,112,131,113,131,114,131,115,131,116,131,117,131,118,131,121,131,122,131,126,131,127,131,128,131,129,131,130,131,131,131,132,131,135,131,136,131,138,131,139,131,140,131,141,131,143,131,144,131,145,131,148,131,149,131,150,131,151,131,153,131,154,131,157,131,159,131,161,131,162,131,163,131,164,131,165,131,166,131,167,131,172,131,173,131,174,131,175,131,181,131,187,131,190,131,191,131,194,131,195,131,196,131,198,131,200,131,201,131,203,131,205,131,206,131,208,131,209,131,210,131,211,131,213,131,215,131,217,131,218,131,219,131,222,131,226,131,227,131,228,131,230,131,231,131,232,131,235,131,236,131,237,131,112,96,61,109,117,114,102,98,142,148,197,148,67,83,193,143,126,123,223,78,38,140,126,78,212,158,177,148,179,148,77,82,92,111,99,144,69,109,52,140,17,88,76,93,32,107,73,107,170,103,91,84,84,129,140,127,153,88,55,133,58,95,162,98,71,106,57,149,114,101,132,96,101,104,167,119,84,78,168,79,231,93,152,151,172,100,216,127,237,92,207,79,141,122,7,82,4,131,20,78,47,96,131,122,166,148,181,79,178,78,230,121,52,116,228,82,185,130,210,100,189,121,221,91,129,108,82,151,123,143,34,108,62,80,127,83,5,110,206,100,116,102,48,108,197,96,119,152,247,139,134,94,60,116,119,122,203,121,24,78,177,144,3,116,66,108,218,86,75,145,197,108,139,141,58,83,198,134,242,102,175,142,72,92,113,154,32,110,238,131,239,131,243,131,244,131,245,131,246,131,247,131,250,131,251,131,252,131,254,131,255,131,0,132,2,132,5,132,7,132,8,132,9,132,10,132,16,132,18,132,19,132,20,132,21,132,22,132,23,132,25,132,26,132,27,132,30,132,31,132,32,132,33,132,34,132,35,132,41,132,42,132,43,132,44,132,45,132,46,132,47,132,48,132,50,132,51,132,52,132,53,132,54,132,55,132,57,132,58,132,59,132,62,132,63,132,64,132,65,132,66,132,67,132,68,132,69,132,71,132,72,132,73,132,74,132,75,132,76,132,77,132,78,132,79,132,80,132,82,132,83,132,84,132,85,132,86,132,88,132,93,132,94,132,95,132,96,132,98,132,100,132,101,132,102,132,103,132,104,132,106,132,110,132,111,132,112,132,114,132,116,132,119,132,121,132,123,132,124,132,214,83,54,90,139,159,163,141,187,83,8,87,167,152,67,103,155,145,201,108,104,81,202,117,243,98,172,114,56,82,157,82,58,127,148,112,56,118,116,83,74,158,183,105,110,120,192,150,217,136,164,127,54,113,195,113,137,81,211,103,228,116,228,88,24,101,183,86,169,139,118,153,112,98,213,126,249,96,237,112,236,88,193,78,186,78,205,95,231,151,251,78,164,139,3,82,138,89,171,126,84,98,205,78,229,101,14,98,56,131,201,132,99,131,141,135,148,113,182,110,185,91,210,126,151,81,201,99,212,103,137,128,57,131,21,136,18,81,122,91,130,89,177,143,115,78,93,108,101,81,37,137,111,143,46,150,74,133,94,116,16,149,240,149,166,109,229,130,49,95,146,100,18,109,40,132,110,129,195,156,94,88,91,141,9,78,193,83,125,132,126,132,127,132,128,132,129,132,131,132,132,132,133,132,134,132,138,132,141,132,143,132,144,132,145,132,146,132,147,132,148,132,149,132,150,132,152,132,154,132,155,132,157,132,158,132,159,132,160,132,162,132,163,132,164,132,165,132,166,132,167,132,168,132,169,132,170,132,171,132,172,132,173,132,174,132,176,132,177,132,179,132,181,132,182,132,183,132,187,132,188,132,190,132,192,132,194,132,195,132,197,132,198,132,199,132,200,132,203,132,204,132,206,132,207,132,210,132,212,132,213,132,215,132,216,132,217,132,218,132,219,132,220,132,222,132,225,132,226,132,228,132,231,132,232,132,233,132,234,132,235,132,237,132,238,132,239,132,241,132,242,132,243,132,244,132,245,132,246,132,247,132,248,132,249,132,250,132,251,132,253,132,254,132,0,133,1,133,2,133,30,79,99,101,81,104,211,85,39,78,20,100,154,154,107,98,194,90,95,116,114,130,169,109,238,104,231,80,142,131,2,120,64,103,57,82,153,108,177,126,187,80,101,85,94,113,91,123,82,102,202,115,235,130,73,103,113,92,32,82,125,113,107,136,234,149,85,150,197,100,97,141,179,129,132,85,85,108,71,98,46,127,146,88,36,79,70,85,79,141,76,102,10,78,26,92,243,136,162,104,78,99,13,122,231,112,141,130,250,82,246,151,17,92,232,84,181,144,205,126,98,89,74,141,199,134,12,130,13,130,102,141,68,100,4,92,81,97,137,109,62,121,190,139,55,120,51,117,123,84,56,79,171,142,241,109,32,90,197,126,94,121,136,108,161,91,118,90,26,117,190,128,78,97,23,110,240,88,31,117,37,117,114,114,71,83,243,126,3,133,4,133,5,133,6,133,7,133,8,133,9,133,10,133,11,133,13,133,14,133,15,133,16,133,18,133,20,133,21,133,22,133,24,133,25,133,27,133,28,133,29,133,30,133,32,133,34,133,35,133,36,133,37,133,38,133,39,133,40,133,41,133,42,133,45,133,46,133,47,133,48,133,49,133,50,133,51,133,52,133,53,133,54,133,62,133,63,133,64,133,65,133,66,133,68,133,69,133,70,133,71,133,75,133,76,133,77,133,78,133,79,133,80,133,81,133,82,133,83,133,84,133,85,133,87,133,88,133,90,133,91,133,92,133,93,133,95,133,96,133,97,133,98,133,99,133,101,133,102,133,103,133,105,133,106,133,107,133,108,133,109,133,110,133,111,133,112,133,113,133,115,133,117,133,118,133,119,133,120,133,124,133,125,133,127,133,128,133,129,133,1,119,219,118,105,82,220,128,35,87,8,94,49,89,238,114,189,101,127,110,215,139,56,92,113,134,65,83,243,119,254,98,246,101,192,78,223,152,128,134,158,91,198,139,242,83,226,119,127,79,78,92,118,154,203,89],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+58902);allocate([15,95,58,121,235,88,22,78,255,103,139,78,237,98,147,138,29,144,191,82,47,102,220,85,108,86,2,144,213,78,141,79,202,145,112,153,15,108,2,94,67,96,164,91,198,137,213,139,54,101,75,98,150,153,136,91,255,91,136,99,46,85,215,83,38,118,125,81,44,133,162,103,179,104,138,107,146,98,147,143,212,83,18,130,209,109,143,117,102,78,78,141,112,91,159,113,175,133,145,102,217,102,114,127,0,135,205,158,32,159,94,92,47,103,240,143,17,104,95,103,13,98,214,122,133,88,182,94,112,101,49,111,130,133,131,133,134,133,136,133,137,133,138,133,139,133,140,133,141,133,142,133,144,133,145,133,146,133,147,133,148,133,149,133,150,133,151,133,152,133,153,133,154,133,157,133,158,133,159,133,160,133,161,133,162,133,163,133,165,133,166,133,167,133,169,133,171,133,172,133,173,133,177,133,178,133,179,133,180,133,181,133,182,133,184,133,186,133,187,133,188,133,189,133,190,133,191,133,192,133,194,133,195,133,196,133,197,133,198,133,199,133,200,133,202,133,203,133,204,133,205,133,206,133,209,133,210,133,212,133,214,133,215,133,216,133,217,133,218,133,219,133,221,133,222,133,223,133,224,133,225,133,226,133,227,133,229,133,230,133,231,133,232,133,234,133,235,133,236,133,237,133,238,133,239,133,240,133,241,133,242,133,243,133,244,133,245,133,246,133,247,133,248,133,85,96,55,82,13,128,84,100,112,136,41,117,5,94,19,104,244,98,28,151,204,83,61,114,1,140,52,108,97,119,14,122,46,84,172,119,122,152,28,130,244,139,85,120,20,103,193,112,175,101,149,100,54,86,29,96,193,121,248,83,29,78,123,107,134,128,250,91,227,85,219,86,58,79,60,79,114,153,243,93,126,103,56,128,2,96,130,152,1,144,139,91,188,139,245,139,28,100,88,130,222,100,253,85,207,130,101,145,215,79,32,125,31,144,159,124,243,80,81,88,175,110,191,91,201,139,131,128,120,145,156,132,151,123,125,134,139,150,143,150,229,126,211,154,142,120,129,92,87,122,66,144,167,150,95,121,89,91,95,99,11,123,209,132,173,104,6,85,41,127,16,116,34,125,1,149,64,98,76,88,214,78,131,91,121,89,84,88,249,133,250,133,252,133,253,133,254,133,0,134,1,134,2,134,3,134,4,134,6,134,7,134,8,134,9,134,10,134,11,134,12,134,13,134,14,134,15,134,16,134,18,134,19,134,20,134,21,134,23,134,24,134,25,134,26,134,27,134,28,134,29,134,30,134,31,134,32,134,33,134,34,134,35,134,36,134,37,134,38,134,40,134,42,134,43,134,44,134,45,134,46,134,47,134,48,134,49,134,50,134,51,134,52,134,53,134,54,134,55,134,57,134,58,134,59,134,61,134,62,134,63,134,64,134,65,134,66,134,67,134,68,134,69,134,70,134,71,134,72,134,73,134,74,134,75,134,76,134,82,134,83,134,85,134,86,134,87,134,88,134,89,134,91,134,92,134,93,134,95,134,96,134,97,134,99,134,100,134,101,134,102,134,103,134,104,134,105,134,106,134,109,115,30,99,75,142,15,142,206,128,212,130,172,98,240,83,240,108,94,145,42,89,1,96,112,108,77,87,74,100,42,141,43,118,233,110,91,87,128,106,240,117,109,111,45,140,8,140,102,87,239,107,146,136,179,120,162,99,249,83,173,112,100,108,88,88,42,100,2,88,224,104,155,129,16,85,214,124,24,80,186,142,204,109,159,141,235,112,143,99,155,109,212,110,230,126,4,132,67,104,3,144,216,109,118,150,168,139,87,89,121,114,228,133,126,129,188,117,138,138,175,104,84,82,34,142,17,149,208,99,152,152,68,142,124,85,83,79,255,102,143,86,213,96,149,109,67,82,73,92,41,89,251,109,107,88,48,117,28,117,108,96,20,130,70,129,17,99,97,103,226,143,58,119,243,141,52,141,193,148,22,94,133,83,44,84,195,112,109,134,111,134,112,134,114,134,115,134,116,134,117,134,118,134,119,134,120,134,131,134,132,134,133,134,134,134,135,134,136,134,137,134,142,134,143,134,144,134,145,134,146,134,148,134,150,134,151,134,152,134,153,134,154,134,155,134,158,134,159,134,160,134,161,134,162,134,165,134,166,134,171,134,173,134,174,134,178,134,179,134,183,134,184,134,185,134,187,134,188,134,189,134,190,134,191,134,193,134,194,134,195,134,197,134,200,134,204,134,205,134,210,134,211,134,213,134,214,134,215,134,218,134,220,134,221,134,224,134,225,134,226,134,227,134,229,134,230,134,231,134,232,134,234,134,235,134,236,134,239,134,245,134,246,134,247,134,250,134,251,134,252,134,253,134,255,134,1,135,4,135,5,135,6,135,11,135,12,135,14,135,15,135,16,135,17,135,20,135,22,135,64,108,247,94,92,80,173,78,173,94,58,99,71,130,26,144,80,104,110,145,179,119,12,84,220,148,100,95,229,122,118,104,69,99,82,123,223,126,219,117,119,80,149,98,52,89,15,144,248,81,195,121,129,122,254,86,146,95,20,144,130,109,96,92,31,87,16,84,84,81,77,110,226,86,168,99,147,152,127,129,21,135,42,137,0,144,30,84,111,92,192,129,214,98,88,98,49,129,53,158,64,150,110,154,124,154,45,105,165,89,211,98,62,85,22,99,199,84,217,134,60,109,3,90,230,116,156,136,106,107,22,89,76,140,47,95,126,110,169,115,125,152,56,78,247,112,140,91,151,120,61,99,90,102,150,118,203,96,155,91,73,90,7,78,85,129,106,108,139,115,161,78,137,103,81,127,128,95,250,101,27,103,216,95,132,89,1,90,25,135,27,135,29,135,31,135,32,135,36,135,38,135,39,135,40,135,42,135,43,135,44,135,45,135,47,135,48,135,50,135,51,135,53,135,54,135,56,135,57,135,58,135,60,135,61,135,64,135,65,135,66,135,67,135,68,135,69,135,70,135,74,135,75,135,77,135,79,135,80,135,81,135,82,135,84,135,85,135,86,135,88,135,90,135,91,135,92,135,93,135,94,135,95,135,97,135,98,135,102,135,103,135,104,135,105,135,106,135,107,135,108,135,109,135,111,135,113,135,114,135,115,135,117,135,119,135,120,135,121,135,122,135,127,135,128,135,129,135,132,135,134,135,135,135,137,135,138,135,140,135,142,135,143,135,144,135,145,135,146,135,148,135,149,135,150,135,152,135,153,135,154,135,155,135,156,135,157,135,158,135,160,135,161,135,162,135,163,135,164,135,205,93,174,95,113,83,230,151,221,143,69,104,244,86,47,85,223,96,58,78,77,111,244,126,199,130,14,132,212,89,31,79,42,79,62,92,172,126,42,103,26,133,115,84,79,117,195,128,130,85,79,155,77,79,45,110,19,140,9,92,112,97,107,83,31,118,41,110,138,134,135,101,251,149,185,126,59,84,51,122,10,125,238,149,225,85,193,127,238,116,29,99,23,135,161,109,157,122,17,98,161,101,103,83,225,99,131,108,235,93,92,84,168,148,76,78,97,108,236,139,75,92,224,101,156,130,167,104,62,84,52,84,203,107,102,107,148,78,66,99,72,83,30,130,13,79,174,79,94,87,10,98,254,150,100,102,105,114,255,82,161,82,159,96,239,139,20,102,153,113,144,103,127,137,82,120,253,119,112,102,59,86,56,84,33,149,122,114,165,135,166,135,167,135,169,135,170,135,174,135,176,135,177,135,178,135,180,135,182,135,183,135,184,135,185,135,187,135,188,135,190,135,191,135,193,135,194,135,195,135,196,135,197,135,199,135,200,135,201,135,204,135,205,135,206,135,207,135,208,135,212,135,213,135,214,135,215,135,216,135,217,135,218,135,220,135,221,135,222,135,223,135,225,135,226,135,227,135,228,135,230,135,231,135,232,135,233,135,235,135,236,135,237,135,239,135,240,135,241,135,242,135,243,135,244,135,245,135,246,135,247,135,248,135,250,135,251,135,252,135,253,135,255,135,0,136,1,136,2,136,4,136,5,136,6,136,7,136,8,136,9,136,11,136,12,136,13,136,14,136,15,136,16,136,17,136,18,136,20,136,23,136,24,136,25,136,26,136,28,136,29,136,30,136,31,136,32,136,35,136,0,122,111,96,12,94,137,96,157,129,21,89,220,96,132,113,239,112,170,110,80,108,128,114,132,106,173,136,45,94,96,78,179,90,156,85,227,148,23,109,251,124,153,150,15,98,198,126,142,119,126,134,35,83,30,151,150,143,135,102,225,92,160,79,237,114,11,78,166,83,15,89,19,84,128,99,40,149,72,81,217,78,156,156,164,126,184,84,36,141,84,136,55,130,242,149,142,109,38,95,204,90,62,102,105,150,176,115,46,115,191,83,122,129,133,153,161,127,170,91,119,150,80,150,191,126,248,118,162,83,118,149,153,153,177,123,68,137,88,110,97,78,212,127,101,121,230,139,243,96,205,84,171,78,121,152,247,93,97,106,207,80,17,84,97,140,39,132,93,120,4,151,74,82,238,84,163,86,0,149,136,109,181,91,198,109,83,102,36,136,37,136,38,136,39,136,40,136,41,136,42,136,43,136,44,136,45,136,46,136,47,136,48,136,49,136,51,136,52,136,53,136,54,136,55,136,56,136,58,136,59,136,61,136,62,136,63,136,65,136,66,136,67,136,70,136,71,136,72,136,73,136,74,136,75,136,78,136,79,136,80,136,81,136,82,136,83,136,85,136,86,136,88,136,90,136,91,136,92,136,93,136,94,136,95,136,96,136,102,136,103,136,106,136,109,136,111,136,113,136,115,136,116,136,117,136,118,136,120,136,121,136,122,136,123,136,124,136,128,136,131,136,134,136,135,136,137,136,138,136,140,136,142,136,143,136,144,136,145,136,147,136,148,136,149,136,151,136,152,136,153,136,154,136,155,136,157,136,158,136,159,136,160,136,161,136,163,136,165,136,166,136,167,136,168,136,169,136,170,136,15,92,93,91,33,104,150,128,120,85,17,123,72,101,84,105,155,78,71,107,78,135,139,151,79,83,31,99,58,100,170,144,156,101,193,128,16,140,153,81,176,104,120,83,249,135,200,97,196,108,251,108,34,140,81,92,170,133,175,130,12,149,35,107,155,143,176,101,251,95,195,95,225,79,69,136,31,102,101,129,41,115,250,96,116,81,17,82,139,87,98,95,162,144,76,136,146,145,120,94,79,103,39,96,211,89,68,81,246,81,248,128,8,83,121,108,196,150,138,113,17,79,238,79,158,127,61,103,197,85,8,149,192,121,150,136,227,126,159,88,12,98,0,151,90,134,24,86,123,152,144,95,184,139,196,132,87,145,217,83,237,101,143,94,92,117,100,96,110,125,127,90,234,126,237,126,105,143,167,85,163,91,172,96,203,101,132,115,172,136,174,136,175,136,176,136,178,136,179,136,180,136,181,136,182,136,184,136,185,136,186,136,187,136,189,136,190,136,191,136,192,136,195,136,196,136,199,136,200,136,202,136,203,136,204,136,205,136,207,136,208,136,209,136,211,136,214,136,215,136,218,136,219,136,220,136,221,136,222,136,224,136,225,136,230,136,231,136,233,136,234,136,235,136,236,136,237,136,238,136,239,136,242,136,245,136,246,136,247,136,250,136,251,136,253,136,255,136,0,137,1,137,3,137,4,137,5,137,6,137,7,137,8,137,9,137,11,137,12,137,13,137,14,137,15,137,17,137,20,137,21,137,22,137,23,137,24,137,28,137,29,137,30,137,31,137,32,137,34,137,35,137,36,137,38,137,39,137,40,137,41,137,44,137,45,137,46,137,47,137,49,137,50,137,51,137,53,137,55,137,9,144,99,118,41,119,218,126,116,151,155,133,102,91,116,122,234,150,64,136,203,82,143,113,170,95,236,101,226,139,251,91,111,154,225,93,137,107,91,108,173,139,175,139,10,144,197,143,139,83,188,98,38,158,45,158,64,84,43,78,189,130,89,114,156,134,22,93,89,136,175,109,197,150,209,84,154,78,182,139,9,113,189,84,9,150,223,112,249,109,208,118,37,78,20,120,18,135,169,92,246,94,0,138,156,152,14,150,142,112,191,108,68,89,169,99,60,119,77,136,20,111,115,130,48,88,213,113,140,83,26,120,193,150,1,85,102,95,48,113,180,91,26,140,140,154,131,107,46,89,47,158,231,121,104,103,108,98,111,79,161,117,138,127,11,109,51,150,39,108,240,78,210,117,123,81,55,104,62,111,128,144,112,129,150,89,118,116,56,137,57,137,58,137,59,137,60,137,61,137,62,137,63,137,64,137,66,137,67,137,69,137,70,137,71,137,72,137,73,137,74,137,75,137,76,137,77,137,78,137,79,137,80,137,81,137,82,137,83,137,84,137,85,137,86,137,87,137,88,137,89,137,90,137,91,137,92,137,93,137,96,137,97,137,98,137,99,137,100,137,101,137,103,137,104,137,105,137,106,137,107,137,108,137,109,137,110,137,111,137,112,137,113,137,114,137,115,137,116,137,117,137,118,137,119,137,120,137,121,137,122,137,124,137,125,137,126,137,128,137,130,137,132,137,133,137,135,137,136,137,137,137,138,137,139,137,140,137,141,137,142,137,143,137,144,137,145,137,146,137,147,137,148,137,149,137,150,137,151,137,152,137,153,137,154,137,155,137,156,137,157,137,158,137,159,137,160,137,161,137,71,100,39,92,101,144,145,122,35,140,218,89,172,84,0,130,111,131,129,137,0,128,48,105,78,86,54,128,55,114,206,145,182,81,95,78,117,152,150,99,26,78,246,83,243,102,75,129,28,89,178,109,0,78,249,88,59,83,214,99,241,148,157,79,10,79,99,136,144,152,55,89,87,144,251,121,234,78,240,128,145,117,130,108,156,91,232,89,93,95,5,105,129,134,26,80,242,93,89,78,227,119,229,78,122,130,145,98,19,102,145,144,121,92,191,78,121,95,198,129,56,144,132,128,171,117,166,78,212,136,15,97,197,107,198,95,73,78,202,118,162,110,227,139,174,139,10,140,209,139,2,95,252,127,204,127,206,126,53,131,107,131,224,86,183,107,243,151,52,150,251,89,31,84,246,148,235,109,197,91,110,153,57,92,21,95,144,150,162,137,163,137,164,137,165,137,166,137,167,137,168,137,169,137,170,137,171,137,172,137,173,137,174,137,175,137,176,137,177,137,178,137,179,137,180,137,181,137,182,137,183,137,184,137,185,137,186,137,187,137,188,137,189,137,190,137,191,137,192,137,195,137,205,137,211,137,212,137,213,137,215,137,216,137,217,137,219,137,221,137,223,137,224,137,225,137,226,137,228,137,231,137,232,137,233,137,234,137,236,137,237,137,238,137,240,137,241,137,242,137,244,137,245,137,246,137,247,137,248,137,249,137,250,137,251,137,252,137,253,137,254,137,255,137,1,138,2,138,3,138,4,138,5,138,6,138,8,138,9,138,10,138,11,138,12,138,13,138,14,138,15,138,16,138,17,138,18,138,19,138,20,138,21,138,22,138,23,138,24,138,25,138,26,138,27,138,28,138,29,138,112,83,241,130,49,106,116,90,112,158,148,94,40,127,185,131,36,132,37,132,103,131,71,135,206,143,98,141,200,118,113,95,150,152,108,120,32,102,223,84,229,98,99,79,195,129,200,117,184,94,205,150,10,142,249,134,143,84,243,108,140,109,56,108,127,96,199,82,40,117,125,94,24,79,160,96,231,95,36,92,49,117,174,144,192,148,185,114,185,108,56,110,73,145,9,103,203,83,243,83,81,79,201,145,241,139,200,83,124,94,194,143,228,109,142,78,194,118,134,105,94,134,26,97,6,130,89,79,222,79,62,144,124,156,9,97,29,110,20,110,133,150,136,78,49,90,232,150,14,78,127,92,185,121,135,91,237,139,189,127,137,115,223,87,139,130,193,144,1,84,71,144,187,85,234,92,161,95,8,97,50,107,241,114,178,128,137,138,30,138,31,138,32,138,33,138,34,138,35,138,36,138,37,138,38,138,39,138,40,138,41,138,42,138,43,138,44,138,45,138,46,138,47,138,48,138,49,138,50,138,51,138,52,138,53,138,54,138,55,138,56,138,57,138,58,138,59,138,60,138,61,138,63,138,64,138,65,138,66,138,67,138,68,138,69,138,70,138,71,138,73,138,74,138,75,138,76,138,77,138,78,138,79,138,80,138,81,138,82,138,83,138,84,138,85,138,86,138,87,138,88,138,89,138,90,138,91,138,92,138,93,138,94,138,95,138,96,138,97,138,98,138,99,138,100,138,101,138,102,138,103,138,104,138,105,138,106,138,107,138,108,138,109,138,110,138,111,138,112,138,113,138,114,138,115,138,116,138,117,138,118,138,119,138,120,138,122,138,123,138,124,138,125,138,126,138,127,138,128,138,116,109,211,91,213,136,132,152,107,140,109,154,51,158,10,110,164,81,67,81,163,87,129,136,159,83,244,99,149,143,237,86,88,84,6,87,63,115,144,110,24,127,220,143,209,130,63,97,40,96,98,150,240,102,166,126,138,141,195,141,165,148,179,92,164,124,8,103,166,96,5,150,24,128,145,78,231,144,0,83,104,150,65,81,208,143,116,133,93,145,85,102,245,151,85,91,29,83,56,120,66,103,61,104,201,84,126,112,176,91,125,143,141,81,40,87,177,84,18,101,130,102,94,141,67,141,15,129,108,132,109,144,223,124,255,81,251,133,163,103,233,101,161,111,164,134,129,142,106,86,32,144,130,118,118,112,229,113,35,141,233,98,25,82,253,108,60,141,14,96,158,88,142,97,254,102,96,141,78,98,179,85,35,110,45,103,103,143,129,138,130,138,131,138,132,138,133,138,134,138,135,138,136,138,139,138,140,138,141,138,142,138,143,138,144,138,145,138,146,138,148,138,149,138,150,138,151,138,152,138,153,138,154,138,155,138,156,138,157,138,158,138,159,138,160,138,161,138,162,138,163,138,164,138,165,138,166,138,167,138,168,138,169,138,170,138,171,138,172,138,173,138,174,138,175,138,176,138,177,138,178,138,179,138,180,138,181,138,182,138,183,138,184,138,185,138,186,138,187,138,188,138,189,138,190,138,191,138,192,138,193,138,194,138,195,138,196,138,197,138,198,138,199,138,200,138,201,138,202,138,203,138,204,138,205,138,206,138,207,138,208,138,209,138,210,138,211,138,212,138,213,138,214,138,215,138,216,138,217,138,218,138,219,138,220,138,221,138,222,138,223,138,224,138,225,138,226,138,227,138,225,148,248,149,40,119,5,104,168,105,139,84,77,78,184,112,200,139,88,100,139,101,133,91,132,122,58,80,232,91,187,119,225,107,121,138,152,124,190,108,207,118,169,101,151,143,45,93,85,92,56,134,8,104,96,83,24,98,217,122,91,110,253,126,31,106,224,122,112,95,51,111,32,95,140,99,168,109,86,103,8,78,16,94,38,141,215,78,192,128,52,118,156,150,219,98,45,102,126,98,188,108,117,141,103,113,105,127,70,81,135,128,236,83,110,144,152,98,242,84,240,134,153,143,5,128,23,149,23,133,217,143,89,109,205,115,159,101,31,119,4,117,39,120,251,129,30,141,136,148,166,79,149,103,185,117,202,139,7,151,47,99,71,149,53,150,184,132,35,99,65,119,129,95,240,114,137,78,20,96,116,101,239,98,99,107,63,101,228,138,229,138,230,138,231,138,232,138,233,138,234,138,235,138,236,138,237,138,238,138,239,138,240,138,241,138,242,138,243,138,244,138,245,138,246,138,247,138,248,138,249,138,250,138,251,138,252,138,253,138,254,138,255,138,0,139,1,139,2,139,3,139,4,139,5,139,6,139,8,139,9,139,10,139,11,139,12,139,13,139,14,139,15,139,16,139,17,139,18,139,19,139,20,139,21,139,22,139,23,139,24,139,25,139,26,139,27,139,28,139,29,139,30,139,31,139,32,139,33,139,34,139,35,139,36,139,37,139,39,139,40,139,41,139,42,139,43,139,44,139,45,139,46,139,47,139,48,139,49,139,50,139,51,139,52,139,53,139,54,139,55,139,56,139,57,139,58,139,59,139,60,139,61,139,62,139,63,139,64,139,65,139,66,139,67,139,68,139,69,139,39,94,199,117,209,144,193,139,157,130,157,103,47,101,49,84,24,135,229,119,162,128,2,129,65,108,75,78,199,126,76,128,244,118,13,105,150,107,103,98,60,80,132,79,64,87,7,99,98,107,190,141,234,83,232,101,184,126,215,95,26,99,183,99,243,129,244,129,110,127,28,94,217,92,54,82,122,102,233,121,26,122,40,141,153,112,212,117,222,110,187,108,146,122,45,78,197,118,224,95,159,148,119,136,200,126,205,121,191,128,205,145,242,78,23,79,31,130,104,84,222,93,50,109,204,139,165,124,116,143,152,128,26,94,146,84,177,118,153,91,60,102,164,154,224,115,42,104,219,134,49,103,42,115,248,139,219,139,16,144,249,122,219,112,110,113,196,98,169,119,49,86,59,78,87,132,241,103,169,82,192,134,46,141,248,148,81,123,70,139,71,139,72,139,73,139,74,139,75,139,76,139,77,139,78,139,79,139,80,139,81,139,82,139,83,139,84,139,85,139,86,139,87,139,88,139,89,139,90,139,91,139,92,139,93,139,94,139,95,139,96,139,97,139,98,139,99,139,100,139,101,139,103,139,104,139,105,139,106,139,107,139,109,139,110,139,111,139,112,139,113,139,114,139,115,139,116,139,117,139,118,139,119,139,120,139,121,139,122,139,123,139,124,139,125,139,126,139,127,139,128,139,129,139,130,139,131,139,132,139,133,139,134,139,135,139,136,139,137,139,138,139,139,139,140,139,141,139,142,139,143,139,144,139,145,139,146,139,147,139,148,139,149,139,150,139,151,139,152,139,153,139,154,139,155,139,156,139,157,139,158,139,159,139,172,139,177,139,187,139,199,139,208,139,234,139,9,140,30,140,79,79,232,108,93,121,123,154,147,98,42,114,253,98,19,78,22,120,108,143,176,100,90,141,198,123,105,104,132,94,197,136,134,89,158,100,238,88,182,114,14,105,37,149,253,143,88,141,96,87,0,127,6,140,198,81,73,99,217,98,83,83,76,104,34,116,1,131,76,145,68,85,64,119,124,112,74,109,121,81,168,84,68,141,255,89,203,110,196,109,92,91,43,125,212,78,125,124,211,110,80,91,234,129,13,110,87,91,3,155,213,104,42,142,151,91,252,126,59,96,181,126,185,144,112,141,79,89,205,99,223,121,179,141,82,83,207,101,86,121,197,139,59,150,196,126,187,148,130,126,52,86,137,145,0,103,106,127,10,92,117,144,40,102,230,93,80,79,222,103,90,80,92,79,80,87,167,94,16,232,17,232,18,232,19,232,20,232,56,140,57,140,58,140,59,140,60,140,61,140,62,140,63,140,64,140,66,140,67,140,68,140,69,140,72,140,74,140,75,140,77,140,78,140,79,140,80,140,81,140,82,140,83,140,84,140,86,140,87,140,88,140,89,140,91,140,92,140,93,140,94,140,95,140,96,140,99,140,100,140,101,140,102,140,103,140,104,140,105,140,108,140,109,140,110,140,111,140,112,140,113,140,114,140,116,140,117,140,118,140,119,140,123,140,124,140,125,140,126,140,127,140,128,140,129,140,131,140,132,140,134,140,135,140,136,140,139,140,141,140,142,140,143,140,144,140,145,140,146,140,147,140,149,140,150,140,151,140,153,140,154,140,155,140,156,140,157,140,158,140,159,140,160,140,161,140,162,140,163,140,164,140,165,140,166,140,167,140,168,140,169,140,170,140,171,140,172,140,173,140,141,78,12,78,64,81,16,78,255,94,69,83,21,78,152,78,30,78,50,155,108,91,105,86,40,78,186,121,63,78,21,83,71,78,45,89,59,114,110,83,16,108,223,86,228,128,151,153,211,107,126,119,23,159,54,78,159,78,16,159,92,78,105,78,147,78,136,130,91,91,108,85,15,86,196,78,141,83,157,83,163,83,165,83,174,83,101,151,93,141,26,83,245,83,38,83,46,83,62,83,92,141,102,83,99,83,2,82,8,82,14,82,45,82,51,82,63,82,64,82,76,82,94,82,97,82,92,82,175,132,125,82,130,82,129,82,144,82,147,82,130,81,84,127,187,78,195,78,201,78,194,78,232,78,225,78,235,78,222,78,27,79,243,78,34,79,100,79,245,78,37,79,39,79,9,79,43,79,94,79,103,79,56,101,90,79,93,79,174,140,175,140,176,140,177,140,178,140,179,140,180,140,181,140,182,140,183,140,184,140,185,140,186,140,187,140,188,140,189,140,190,140,191,140,192,140,193,140,194,140,195,140,196,140,197,140,198,140,199,140,200,140,201,140,202,140,203,140,204,140,205,140,206,140,207,140,208,140,209,140,210,140,211,140,212,140,213,140,214,140,215,140,216,140,217,140,218,140,219,140,220,140,221,140,222,140,223,140,224,140,225,140,226,140,227,140,228,140,229,140,230,140,231,140,232,140,233,140,234,140,235,140,236,140,237,140,238,140,239,140,240,140,241,140,242,140,243,140,244,140,245,140,246,140,247,140,248,140,249,140,250,140,251,140,252,140,253,140,254,140,255,140,0,141,1,141,2,141,3,141,4,141,5,141,6,141,7,141,8,141,9,141,10,141,11,141,12,141,13,141,95,79,87,79,50,79,61,79,118,79,116,79,145,79,137,79,131,79,143,79,126,79,123,79,170,79,124,79,172,79,148,79,230,79,232,79,234,79,197,79,218,79,227,79,220,79,209,79,223,79,248,79,41,80,76,80,243,79,44,80,15,80,46,80,45,80,254,79,28,80,12,80,37,80,40,80,126,80,67,80,85,80,72,80,78,80,108,80,123,80,165,80,167,80,169,80,186,80,214,80,6,81,237,80,236,80,230,80,238,80,7,81,11,81,221,78,61,108,88,79,101,79,206,79,160,159,70,108,116,124,110,81,253,93,201,158,152,153,129,81,20,89,249,82,13,83,7,138,16,83,235,81,25,89,85,81,160,78,86,81,179,78,110,136,164,136,181,78,20,129,210,136,128,121,52,91,3,136,184,127,171,81,177,81,189,81,188,81,14,141,15,141,16,141,17,141,18,141,19,141,20,141,21,141,22,141,23,141,24,141,25,141,26,141,27,141,28,141,32,141,81,141,82,141,87,141,95,141,101,141,104,141,105,141,106,141,108,141,110,141,111,141,113,141,114,141,120,141,121,141,122,141,123,141,124,141,125,141,126,141,127,141,128,141,130,141,131,141,134,141,135,141,136,141,137,141,140,141,141,141,142,141,143,141,144,141,146,141,147,141,149,141,150,141,151,141,152,141,153,141,154,141,155,141,156,141,157,141,158,141,160,141,161,141,162,141,164,141,165,141,166,141,167,141,168,141,169,141,170,141,171,141,172,141,173,141,174,141,175,141,176,141,178,141,182,141,183,141,185,141,187,141,189,141,192,141,193,141,194,141,197,141,199,141,200,141,201,141,202,141,205,141,208,141,210,141,211,141,212,141,199,81,150,81,162,81,165,81,160,139,166,139,167,139,170,139,180,139,181,139,183,139,194,139,195,139,203,139,207,139,206,139,210,139,211,139,212,139,214,139,216,139,217,139,220,139,223,139,224,139,228,139,232,139,233,139,238,139,240,139,243,139,246,139,249,139,252,139,255,139,0,140,2,140,4,140,7,140,12,140,15,140,17,140,18,140,20,140,21,140,22,140,25,140,27,140,24,140,29,140,31,140,32,140,33,140,37,140,39,140,42,140,43,140,46,140,47,140,50,140,51,140,53,140,54,140,105,83,122,83,29,150,34,150,33,150,49,150,42,150,61,150,60,150,66,150,73,150,84,150,95,150,103,150,108,150,114,150,116,150,136,150,141,150,151,150,176,150,151,144,155,144,157,144,153,144,172,144,161,144,180,144,179,144,182,144,186,144,213,141,216,141,217,141,220,141,224,141,225,141,226,141,229,141,230,141,231,141,233,141,237,141,238,141,240,141,241,141,242,141,244,141,246,141,252,141,254,141,255,141,0,142,1,142,2,142,3,142,4,142,6,142,7,142,8,142,11,142,13,142,14,142,16,142,17,142,18,142,19,142,21,142,22,142,23,142,24,142,25,142,26,142,27,142,28,142,32,142,33,142,36,142,37,142,38,142,39,142,40,142,43,142,45,142,48,142,50,142,51,142,52,142,54,142,55,142,56,142,59,142,60,142,62,142,63,142,67,142,69,142,70,142,76,142,77,142,78,142,79,142,80,142,83,142,84,142,85,142,86,142,87,142,88,142,90,142,91,142,92,142,93,142,94,142,95,142,96,142,97,142,98,142,99,142,100,142,101,142,103,142,104,142,106,142,107,142,110,142,113,142,184,144,176,144,207,144,197,144,190,144,208,144,196,144,199,144,211,144,230,144,226,144,220,144,215,144,219,144,235,144,239,144,254,144,4,145,34,145,30,145,35,145,49,145,47,145,57,145,67,145,70,145,13,82,66,89,162,82,172,82,173,82,190,82,255,84,208,82,214,82,240,82,223,83,238,113,205,119,244,94,245,81,252,81,47,155,182,83,1,95,90,117,239,93,76,87,169,87,161,87,126,88,188,88,197,88,209,88,41,87,44,87,42,87,51,87,57,87,46,87,47,87,92,87,59,87,66,87,105,87,133,87,107,87,134,87,124,87,123,87,104,87,109,87,118,87,115,87,173,87,164,87,140,87,178,87,207,87,167,87,180,87,147,87,160,87,213,87,216,87,218,87,217,87,210,87,184,87,244,87,239,87,248,87,228,87,221,87,115,142,117,142,119,142,120,142,121,142,122,142,123,142,125,142,126,142,128,142,130,142,131,142,132,142,134,142,136,142,137,142,138,142,139,142,140,142,141,142,142,142,145,142,146,142,147,142,149,142,150,142,151,142,152,142,153,142,154,142,155,142,157,142,159,142,160,142,161,142,162,142,163,142,164,142,165,142,166,142,167,142,168,142,169,142,170,142,173,142,174,142,176,142,177,142,179,142,180,142,181,142,182,142,183,142,184,142,185,142,187,142,188,142,189,142,190,142,191,142,192,142,193,142,194,142,195,142,196,142,197,142,198,142,199,142,200,142,201,142,202,142,203,142,204,142,205,142,207,142,208,142,209,142,210,142,211,142,212,142,213,142,214,142,215,142,216,142,217,142,218,142,219,142,220,142,221,142,222,142,223,142,224,142,225,142,226,142,227,142,228,142,11,88,13,88,253,87,237,87,0,88,30,88,25,88,68,88,32,88,101,88,108,88,129,88,137,88,154,88,128,88,168,153,25,159,255,97,121,130,125,130,127,130,143,130,138,130,168,130,132,130,142,130,145,130,151,130,153,130,171,130,184,130,190,130,176,130,200,130,202,130,227,130,152,130,183,130,174,130,203,130,204,130,193,130,169,130,180,130,161,130,170,130,159,130,196,130,206,130,164,130,225,130,9,131,247,130,228,130,15,131,7,131,220,130,244,130,210,130,216,130,12,131,251,130,211,130,17,131,26,131,6,131,20,131,21,131,224,130,213,130,28,131,81,131,91,131,92,131,8,131,146,131,60,131,52,131,49,131,155,131,94,131,47,131,79,131,71,131,67,131,95,131,64,131,23,131,96,131,45,131,58,131,51,131,102,131,101,131,229,142,230,142,231,142,232,142,233,142,234,142,235,142,236,142,237,142,238,142,239,142,240,142,241,142,242,142,243,142,244,142,245,142,246,142,247,142,248,142,249,142,250,142,251,142,252,142,253,142,254,142,255,142,0,143,1,143,2,143,3,143,4,143,5,143,6,143,7,143,8,143,9,143,10,143,11,143,12,143,13,143,14,143,15,143,16,143,17,143,18,143,19,143,20,143,21,143,22,143,23,143,24,143,25,143,26,143,27,143,28,143,29,143,30,143,31,143,32,143,33,143,34,143,35,143,36,143,37,143,38,143,39,143,40,143,41,143,42,143,43,143,44,143,45,143,46,143,47,143,48,143,49,143,50,143,51,143,52,143,53,143,54,143,55,143,56,143,57,143,58,143,59,143,60,143,61,143,62,143,63,143,64,143,65,143,66,143,67,143,68,143,104,131,27,131,105,131,108,131,106,131,109,131,110,131,176,131,120,131,179,131,180,131,160,131,170,131,147,131,156,131,133,131,124,131,182,131,169,131,125,131,184,131,123,131,152,131,158,131,168,131,186,131,188,131,193,131,1,132,229,131,216,131,7,88,24,132,11,132,221,131,253,131,214,131,28,132,56,132,17,132,6,132,212,131,223,131,15,132,3,132,248,131,249,131,234,131,197,131,192,131,38,132,240,131,225,131,92,132,81,132,90,132,89,132,115,132,135,132,136,132,122,132,137,132,120,132,60,132,70,132,105,132,118,132,140,132,142,132,49,132,109,132,193,132,205,132,208,132,230,132,189,132,211,132,202,132,191,132,186,132,224,132,161,132,185,132,180,132,151,132,229,132,227,132,12,133,13,117,56,133,240,132,57,133,31,133,58,133,69,143,70,143,71,143,72,143,73,143,74,143,75,143,76,143,77,143,78,143,79,143,80,143,81,143,82,143,83,143,84,143,85,143,86,143,87,143,88,143,89,143,90,143,91,143,92,143,93,143,94,143,95,143,96,143,97,143,98,143,99,143,100,143,101,143,106,143,128,143,140,143,146,143,157,143,160,143,161,143,162,143,164,143,165,143,166,143,167,143,170,143,172,143,173,143,174,143,175,143,178,143,179,143,180,143,181,143,183,143,184,143,186,143,187,143,188,143,191,143,192,143,195,143,198,143,201,143,202,143,203,143,204,143,205,143,207,143,210,143,214,143,215,143,218,143,224,143,225,143,227,143,231,143,236,143,239,143,241,143,242,143,244,143,245,143,246,143,250,143,251,143,252,143,254,143,255,143,7,144,8,144,12,144,14,144,19,144,21,144,24,144,86,133,59,133,255,132,252,132,89,133,72,133,104,133,100,133,94,133,122,133,162,119,67,133,114,133,123,133,164,133,168,133,135,133,143,133,121,133,174,133,156,133,133,133,185,133,183,133,176,133,211,133,193,133,220,133,255,133,39,134,5,134,41,134,22,134,60,134,254,94,8,95,60,89,65,89,55,128,85,89,90,89,88,89,15,83,34,92,37,92,44,92,52,92,76,98,106,98,159,98,187,98,202,98,218,98,215,98,238,98,34,99,246,98,57,99,75,99,67,99,173,99,246,99,113,99,122,99,142,99,180,99,109,99,172,99,138,99,105,99,174,99,188,99,242,99,248,99,224,99,255,99,196,99,222,99,206,99,82,100,198,99,190,99,69,100,65,100,11,100,27,100,32,100,12,100,38,100,33,100,94,100,132,100,109,100,150,100,25,144,28,144,35,144,36,144,37,144,39,144,40,144,41,144,42,144,43,144,44,144,48,144,49,144,50,144,51,144,52,144,55,144,57,144,58,144,61,144,63,144,64,144,67,144,69,144,70,144,72,144,73,144,74,144,75,144,76,144,78,144,84,144,85,144,86,144,89,144,90,144,92,144,93,144,94,144,95,144,96,144,97,144,100,144,102,144,103,144,105,144,106,144,107,144,108,144,111,144,112,144,113,144,114,144,115,144,118,144,119,144,120,144,121,144,122,144,123,144,124,144,126,144,129,144,132,144,133,144,134,144,135,144,137,144,138,144,140,144,141,144,142,144,143,144,144,144,146,144,148,144,150,144,152,144,154,144,156,144,158,144,159,144,160,144,164,144,165,144,167,144,168,144,169,144,171,144,173,144,178,144,183,144,188,144,189,144,191,144,192,144,122,100,183,100,184,100,153,100,186,100,192,100,208,100,215,100,228,100,226,100,9,101,37,101,46,101,11,95,210,95,25,117,17,95,95,83,241,83,253,83,233,83,232,83,251,83,18,84,22,84,6,84,75,84,82,84,83,84,84,84,86,84,67,84,33,84,87,84,89,84,35,84,50,84,130,84,148,84,119,84,113,84,100,84,154,84,155,84,132,84,118,84,102,84,157,84,208,84,173,84,194,84,180,84,210,84,167,84,166,84,211,84,212,84,114,84,163,84,213,84,187,84,191,84,204,84,217,84,218,84,220,84,169,84,170,84,164,84,221,84,207,84,222,84,27,85,231,84,32,85,253,84,20,85,243,84,34,85,35,85,15,85,17,85,39,85,42,85,103,85,143,85,181,85,73,85,109,85,65,85,85,85,63,85,80,85,60,85,194,144,195,144,198,144,200,144,201,144,203,144,204,144,205,144,210,144,212,144,213,144,214,144,216,144,217,144,218,144,222,144,223,144,224,144,227,144,228,144,229,144,233,144,234,144,236,144,238,144,240,144,241,144,242,144,243,144,245,144,246,144,247,144,249,144,250,144,251,144,252,144,255,144,0,145,1,145,3,145,5,145,6,145,7,145,8,145,9,145,10,145,11,145,12,145,13,145,14,145,15,145,16,145,17,145,18,145,19,145,20,145,21,145,22,145,23,145,24,145,26,145,27,145,28,145,29,145,31,145,32,145,33,145,36,145,37,145,38,145,39,145,40,145,41,145,42,145,43,145,44,145,45,145,46,145,48,145,50,145,51,145,52,145,53,145,54,145,55,145,56,145,58,145,59,145,60,145,61,145,62,145,63,145,64,145,65,145,66,145,68,145,55,85,86,85,117,85,118,85,119,85,51,85,48,85,92,85,139,85,210,85,131,85,177,85,185,85,136,85,129,85,159,85,126,85,214,85,145,85,123,85,223,85,189,85,190,85,148,85,153,85,234,85,247,85,201,85,31,86,209,85,235,85,236,85,212,85,230,85,221,85,196,85,239,85,229,85,242,85,243,85,204,85,205,85,232,85,245,85,228,85,148,143,30,86,8,86,12,86,1,86,36,86,35,86,254,85,0,86,39,86,45,86,88,86,57,86,87,86,44,86,77,86,98,86,89,86,92,86,76,86,84,86,134,86,100,86,113,86,107,86,123,86,124,86,133,86,147,86,175,86,212,86,215,86,221,86,225,86,245,86,235,86,249,86,255,86,4,87,10,87,9,87,28,87,15,94,25,94,20,94,17,94,49,94,59,94,60,94,69,145,71,145,72,145,81,145,83,145,84,145,85,145,86,145,88,145,89,145,91,145,92,145,95,145,96,145,102,145,103,145,104,145,107,145,109,145,115,145,122,145,123,145,124,145,128,145,129,145,130,145,131,145,132,145,134,145,136,145,138,145,142,145,143,145,147,145,148,145,149,145,150,145,151,145,152,145,153,145,156,145,157,145,158,145,159,145,160,145,161,145,164,145,165,145,166,145,167,145,168,145,169,145,171,145,172,145,176,145,177,145,178,145,179,145,182,145,183,145,184,145,185,145,187,145,188,145,189,145,190,145,191,145,192,145,193,145,194,145,195,145,196,145,197,145,198,145,200,145,203,145,208,145,210,145,211,145,212,145,213,145,214,145,215,145,216,145,217,145,218,145,219,145,221,145,222,145,223,145,224,145,225,145,226,145,227,145,228,145,229,145,55,94,68,94,84,94,91,94,94,94,97,94,140,92,122,92,141,92,144,92,150,92,136,92,152,92,153,92,145,92,154,92,156,92,181,92,162,92,189,92,172,92,171,92,177,92,163,92,193,92,183,92,196,92,210,92,228,92,203,92,229,92,2,93,3,93,39,93,38,93,46,93,36,93,30,93,6,93,27,93,88,93,62,93,52,93,61,93,108,93,91,93,111,93,93,93,107,93,75,93,74,93,105,93,116,93,130,93,153,93,157,93,115,140,183,93,197,93,115,95,119,95,130,95,135,95,137,95,140,95,149,95,153,95,156,95,168,95,173,95,181,95,188,95,98,136,97,95,173,114,176,114,180,114,183,114,184,114,195,114,193,114,206,114,205,114,210,114,232,114,239,114,233,114,242,114,244,114,247,114,1,115,243,114,3,115,250,114,230,145,231,145,232,145,233,145,234,145,235,145,236,145,237,145,238,145,239,145,240,145,241,145,242,145,243,145,244,145,245,145,246,145,247,145,248,145,249,145,250,145,251,145,252,145,253,145,254,145,255,145,0,146,1,146,2,146,3,146,4,146,5,146,6,146,7,146,8,146,9,146,10,146,11,146,12,146,13,146,14,146,15,146,16,146,17,146,18,146,19,146,20,146,21,146,22,146,23,146,24,146,25,146,26,146,27,146,28,146,29,146,30,146,31,146,32,146,33,146,34,146,35,146,36,146,37,146,38,146,39,146,40,146,41,146,42,146,43,146,44,146,45,146,46,146,47,146,48,146,49,146,50,146,51,146,52,146,53,146,54,146,55,146,56,146,57,146,58,146,59,146,60,146,61,146,62,146,63,146,64,146,65,146,66,146,67,146,68,146,69,146,251,114,23,115,19,115,33,115,10,115,30,115,29,115,21,115,34,115,57,115,37,115,44,115,56,115,49,115,80,115,77,115,87,115,96,115,108,115,111,115,126,115,27,130,37,89,231,152,36,89,2,89,99,153,103,153,104,153,105,153,106,153,107,153,108,153,116,153,119,153,125,153,128,153,132,153,135,153,138,153,141,153,144,153,145,153,147,153,148,153,149,153,128,94,145,94,139,94,150,94,165,94,160,94,185,94,181,94,190,94,179,94,83,141,210,94,209,94,219,94,232,94,234,94,186,129,196,95,201,95,214,95,207,95,3,96,238,95,4,96,225,95,228,95,254,95,5,96,6,96,234,95,237,95,248,95,25,96,53,96,38,96,27,96,15,96,13,96,41,96,43,96,10,96,63,96,33,96,120,96,121,96,123,96,122,96,66,96,70,146,71,146,72,146,73,146,74,146,75,146,76,146,77,146,78,146,79,146,80,146,81,146,82,146,83,146,84,146,85,146,86,146,87,146,88,146,89,146,90,146,91,146,92,146,93,146,94,146,95,146,96,146,97,146,98,146,99,146,100,146,101,146,102,146,103,146,104,146,105,146,106,146,107,146,108,146,109,146,110,146,111,146,112,146,113,146,114,146,115,146,117,146,118,146,119,146,120,146,121,146,122,146,123,146,124,146,125,146,126,146,127,146,128,146,129,146,130,146,131,146,132,146,133,146,134,146,135,146,136,146,137,146,138,146,139,146,140,146,141,146,143,146,144,146,145,146,146,146,147,146,148,146,149,146,150,146,151,146,152,146,153,146,154,146,155,146,156,146,157,146,158,146,159,146,160,146,161,146,162,146,163,146,164,146,165,146,166,146,167,146,106,96,125,96,150,96,154,96,173,96,157,96,131,96,146,96,140,96,155,96,236,96,187,96,177,96,221,96,216,96,198,96,218,96,180,96,32,97,38,97,21,97,35,97,244,96,0,97,14,97,43,97,74,97,117,97,172,97,148,97,167,97,183,97,212,97,245,97,221,95,179,150,233,149,235,149,241,149,243,149,245,149,246,149,252,149,254,149,3,150,4,150,6,150,8,150,10,150,11,150,12,150,13,150,15,150,18,150,21,150,22,150,23,150,25,150,26,150,44,78,63,114,21,98,53,108,84,108,92,108,74,108,163,108,133,108,144,108,148,108,140,108,104,108,105,108,116,108,118,108,134,108,169,108,208,108,212,108,173,108,247,108,248,108,241,108,215,108,178,108,224,108,214,108,250,108,235,108,238,108,177,108,211,108,239,108,254,108,168,146,169,146,170,146,171,146,172,146,173,146,175,146,176,146,177,146,178,146,179,146,180,146,181,146,182,146,183,146,184,146,185,146,186,146,187,146,188,146,189,146,190,146,191,146,192,146,193,146,194,146,195,146,196,146,197,146,198,146,199,146,201,146,202,146,203,146,204,146,205,146,206,146,207,146,208,146,209,146,210,146,211,146,212,146,213,146,214,146,215,146,216,146,217,146,218,146,219,146,220,146,221,146,222,146,223,146,224,146,225,146,226,146,227,146,228,146,229,146,230,146,231,146,232,146,233,146,234,146,235,146,236,146,237,146,238,146,239,146,240,146,241,146,242,146,243,146,244,146,245,146,246,146,247,146,248,146,249,146,250,146,251,146,252,146,253,146,254,146,255,146,0,147,1,147,2,147,3,147,4,147,5,147,6,147,7,147,8,147,9,147,57,109,39,109,12,109,67,109,72,109,7,109,4,109,25,109,14,109,43,109,77,109,46,109,53,109,26,109,79,109,82,109,84,109,51,109,145,109,111,109,158,109,160,109,94,109,147,109,148,109,92,109,96,109,124,109,99,109,26,110,199,109,197,109,222,109,14,110,191,109,224,109,17,110,230,109,221,109,217,109,22,110,171,109,12,110,174,109,43,110,110,110,78,110,107,110,178,110,95,110,134,110,83,110,84,110,50,110,37,110,68,110,223,110,177,110,152,110,224,110,45,111,226,110,165,110,167,110,189,110,187,110,183,110,215,110,180,110,207,110,143,110,194,110,159,110,98,111,70,111,71,111,36,111,21,111,249,110,47,111,54,111,75,111,116,111,42,111,9,111,41,111,137,111,141,111,140,111,120,111,114,111,124,111,122,111,209,111,10,147,11,147,12,147,13,147,14,147,15,147,16,147,17,147,18,147,19,147,20,147,21,147,22,147,23,147,24,147,25,147,26,147,27,147,28,147,29,147,30,147,31,147,32,147,33,147,34,147,35,147,36,147,37,147,38,147,39,147,40,147,41,147,42,147,43,147,44,147,45,147,46,147,47,147,48,147,49,147,50,147,51,147,52,147,53,147,54,147,55,147,56,147,57,147,58,147,59,147,60,147,61,147,63,147,64,147,65,147,66,147,67,147,68,147,69,147,70,147,71,147,72,147,73,147,74,147,75,147,76,147,77,147,78,147,79,147,80,147,81,147,82,147,83,147,84,147,85,147,86,147,87,147,88,147,89,147,90,147,91,147,92,147,93,147,94,147,95,147,96,147,97,147,98,147,99,147,100,147,101,147,102,147,103,147,104,147,105,147,107,147,201,111,167,111,185,111,182,111,194,111,225,111,238,111,222,111,224,111,239,111,26,112,35,112,27,112,57,112,53,112,79,112,94,112,128,91],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+69142);allocate([132,91,149,91,147,91,165,91,184,91,47,117,158,154,52,100,228,91,238,91,48,137,240,91,71,142,7,139,182,143,211,143,213,143,229,143,238,143,228,143,233,143,230,143,243,143,232,143,5,144,4,144,11,144,38,144,17,144,13,144,22,144,33,144,53,144,54,144,45,144,47,144,68,144,81,144,82,144,80,144,104,144,88,144,98,144,91,144,185,102,116,144,125,144,130,144,136,144,131,144,139,144,80,95,87,95,86,95,88,95,59,92,171,84,80,92,89,92,113,91,99,92,102,92,188,127,42,95,41,95,45,95,116,130,60,95,59,155,110,92,129,89,131,89,141,89,169,89,170,89,163,89,108,147,109,147,110,147,111,147,112,147,113,147,114,147,115,147,116,147,117,147,118,147,119,147,120,147,121,147,122,147,123,147,124,147,125,147,126,147,127,147,128,147,129,147,130,147,131,147,132,147,133,147,134,147,135,147,136,147,137,147,138,147,139,147,140,147,141,147,142,147,144,147,145,147,146,147,147,147,148,147,149,147,150,147,151,147,152,147,153,147,154,147,155,147,156,147,157,147,158,147,159,147,160,147,161,147,162,147,163,147,164,147,165,147,166,147,167,147,168,147,169,147,170,147,171,147,172,147,173,147,174,147,175,147,176,147,177,147,178,147,179,147,180,147,181,147,182,147,183,147,184,147,185,147,186,147,187,147,188,147,189,147,190,147,191,147,192,147,193,147,194,147,195,147,196,147,197,147,198,147,199,147,200,147,201,147,203,147,204,147,205,147,151,89,202,89,171,89,158,89,164,89,210,89,178,89,175,89,215,89,190,89,5,90,6,90,221,89,8,90,227,89,216,89,249,89,12,90,9,90,50,90,52,90,17,90,35,90,19,90,64,90,103,90,74,90,85,90,60,90,98,90,117,90,236,128,170,90,155,90,119,90,122,90,190,90,235,90,178,90,210,90,212,90,184,90,224,90,227,90,241,90,214,90,230,90,216,90,220,90,9,91,23,91,22,91,50,91,55,91,64,91,21,92,28,92,90,91,101,91,115,91,81,91,83,91,98,91,117,154,119,154,120,154,122,154,127,154,125,154,128,154,129,154,133,154,136,154,138,154,144,154,146,154,147,154,150,154,152,154,155,154,156,154,157,154,159,154,160,154,162,154,163,154,165,154,167,154,159,126,161,126,163,126,165,126,168,126,169,126,206,147,207,147,208,147,209,147,210,147,211,147,212,147,213,147,215,147,216,147,217,147,218,147,219,147,220,147,221,147,222,147,223,147,224,147,225,147,226,147,227,147,228,147,229,147,230,147,231,147,232,147,233,147,234,147,235,147,236,147,237,147,238,147,239,147,240,147,241,147,242,147,243,147,244,147,245,147,246,147,247,147,248,147,249,147,250,147,251,147,252,147,253,147,254,147,255,147,0,148,1,148,2,148,3,148,4,148,5,148,6,148,7,148,8,148,9,148,10,148,11,148,12,148,13,148,14,148,15,148,16,148,17,148,18,148,19,148,20,148,21,148,22,148,23,148,24,148,25,148,26,148,27,148,28,148,29,148,30,148,31,148,32,148,33,148,34,148,35,148,36,148,37,148,38,148,39,148,40,148,41,148,42,148,43,148,44,148,45,148,46,148,173,126,176,126,190,126,192,126,193,126,194,126,201,126,203,126,204,126,208,126,212,126,215,126,219,126,224,126,225,126,232,126,235,126,238,126,239,126,241,126,242,126,13,127,246,126,250,126,251,126,254,126,1,127,2,127,3,127,7,127,8,127,11,127,12,127,15,127,17,127,18,127,23,127,25,127,28,127,27,127,31,127,33,127,34,127,35,127,36,127,37,127,38,127,39,127,42,127,43,127,44,127,45,127,47,127,48,127,49,127,50,127,51,127,53,127,122,94,127,117,219,93,62,117,149,144,142,115,145,115,174,115,162,115,159,115,207,115,194,115,209,115,183,115,179,115,192,115,201,115,200,115,229,115,217,115,124,152,10,116,233,115,231,115,222,115,186,115,242,115,15,116,42,116,91,116,38,116,37,116,40,116,48,116,46,116,44,116,47,148,48,148,49,148,50,148,51,148,52,148,53,148,54,148,55,148,56,148,57,148,58,148,59,148,60,148,61,148,63,148,64,148,65,148,66,148,67,148,68,148,69,148,70,148,71,148,72,148,73,148,74,148,75,148,76,148,77,148,78,148,79,148,80,148,81,148,82,148,83,148,84,148,85,148,86,148,87,148,88,148,89,148,90,148,91,148,92,148,93,148,94,148,95,148,96,148,97,148,98,148,99,148,100,148,101,148,102,148,103,148,104,148,105,148,106,148,108,148,109,148,110,148,111,148,112,148,113,148,114,148,115,148,116,148,117,148,118,148,119,148,120,148,121,148,122,148,123,148,124,148,125,148,126,148,127,148,128,148,129,148,130,148,131,148,132,148,145,148,150,148,152,148,199,148,207,148,211,148,212,148,218,148,230,148,251,148,28,149,32,149,27,116,26,116,65,116,92,116,87,116,85,116,89,116,119,116,109,116,126,116,156,116,142,116,128,116,129,116,135,116,139,116,158,116,168,116,169,116,144,116,167,116,210,116,186,116,234,151,235,151,236,151,76,103,83,103,94,103,72,103,105,103,165,103,135,103,106,103,115,103,152,103,167,103,117,103,168,103,158,103,173,103,139,103,119,103,124,103,240,103,9,104,216,103,10,104,233,103,176,103,12,104,217,103,181,103,218,103,179,103,221,103,0,104,195,103,184,103,226,103,14,104,193,103,253,103,50,104,51,104,96,104,97,104,78,104,98,104,68,104,100,104,131,104,29,104,85,104,102,104,65,104,103,104,64,104,62,104,74,104,73,104,41,104,181,104,143,104,116,104,119,104,147,104,107,104,194,104,110,105,252,104,31,105,32,105,249,104,39,149,51,149,61,149,67,149,72,149,75,149,85,149,90,149,96,149,110,149,116,149,117,149,119,149,120,149,121,149,122,149,123,149,124,149,125,149,126,149,128,149,129,149,130,149,131,149,132,149,133,149,134,149,135,149,136,149,137,149,138,149,139,149,140,149,141,149,142,149,143,149,144,149,145,149,146,149,147,149,148,149,149,149,150,149,151,149,152,149,153,149,154,149,155,149,156,149,157,149,158,149,159,149,160,149,161,149,162,149,163,149,164,149,165,149,166,149,167,149,168,149,169,149,170,149,171,149,172,149,173,149,174,149,175,149,176,149,177,149,178,149,179,149,180,149,181,149,182,149,183,149,184,149,185,149,186,149,187,149,188,149,189,149,190,149,191,149,192,149,193,149,194,149,195,149,196,149,197,149,198,149,199,149,200,149,201,149,202,149,203,149,36,105,240,104,11,105,1,105,87,105,227,104,16,105,113,105,57,105,96,105,66,105,93,105,132,105,107,105,128,105,152,105,120,105,52,105,204,105,135,105,136,105,206,105,137,105,102,105,99,105,121,105,155,105,167,105,187,105,171,105,173,105,212,105,177,105,193,105,202,105,223,105,149,105,224,105,141,105,255,105,47,106,237,105,23,106,24,106,101,106,242,105,68,106,62,106,160,106,80,106,91,106,53,106,142,106,121,106,61,106,40,106,88,106,124,106,145,106,144,106,169,106,151,106,171,106,55,115,82,115,129,107,130,107,135,107,132,107,146,107,147,107,141,107,154,107,155,107,161,107,170,107,107,143,109,143,113,143,114,143,115,143,117,143,118,143,120,143,119,143,121,143,122,143,124,143,126,143,129,143,130,143,132,143,135,143,139,143,204,149,205,149,206,149,207,149,208,149,209,149,210,149,211,149,212,149,213,149,214,149,215,149,216,149,217,149,218,149,219,149,220,149,221,149,222,149,223,149,224,149,225,149,226,149,227,149,228,149,229,149,230,149,231,149,236,149,255,149,7,150,19,150,24,150,27,150,30,150,32,150,35,150,36,150,37,150,38,150,39,150,40,150,41,150,43,150,44,150,45,150,47,150,48,150,55,150,56,150,57,150,58,150,62,150,65,150,67,150,74,150,78,150,79,150,81,150,82,150,83,150,86,150,87,150,88,150,89,150,90,150,92,150,93,150,94,150,96,150,99,150,101,150,102,150,107,150,109,150,110,150,111,150,112,150,113,150,115,150,120,150,121,150,122,150,123,150,124,150,125,150,126,150,127,150,128,150,129,150,130,150,131,150,132,150,135,150,137,150,138,150,141,143,142,143,143,143,152,143,154,143,206,142,11,98,23,98,27,98,31,98,34,98,33,98,37,98,36,98,44,98,231,129,239,116,244,116,255,116,15,117,17,117,19,117,52,101,238,101,239,101,240,101,10,102,25,102,114,103,3,102,21,102,0,102,133,112,247,102,29,102,52,102,49,102,54,102,53,102,6,128,95,102,84,102,65,102,79,102,86,102,97,102,87,102,119,102,132,102,140,102,167,102,157,102,190,102,219,102,220,102,230,102,233,102,50,141,51,141,54,141,59,141,61,141,64,141,69,141,70,141,72,141,73,141,71,141,77,141,85,141,89,141,199,137,202,137,203,137,204,137,206,137,207,137,208,137,209,137,110,114,159,114,93,114,102,114,111,114,126,114,127,114,132,114,139,114,141,114,143,114,146,114,8,99,50,99,176,99,140,150,142,150,145,150,146,150,147,150,149,150,150,150,154,150,155,150,157,150,158,150,159,150,160,150,161,150,162,150,163,150,164,150,165,150,166,150,168,150,169,150,170,150,171,150,172,150,173,150,174,150,175,150,177,150,178,150,180,150,181,150,183,150,184,150,186,150,187,150,191,150,194,150,195,150,200,150,202,150,203,150,208,150,209,150,211,150,212,150,214,150,215,150,216,150,217,150,218,150,219,150,220,150,221,150,222,150,223,150,225,150,226,150,227,150,228,150,229,150,230,150,231,150,235,150,236,150,237,150,238,150,240,150,241,150,242,150,244,150,245,150,248,150,250,150,251,150,252,150,253,150,255,150,2,151,3,151,5,151,10,151,11,151,12,151,16,151,17,151,18,151,20,151,21,151,23,151,24,151,25,151,26,151,27,151,29,151,31,151,32,151,63,100,216,100,4,128,234,107,243,107,253,107,245,107,249,107,5,108,7,108,6,108,13,108,21,108,24,108,25,108,26,108,33,108,41,108,36,108,42,108,50,108,53,101,85,101,107,101,77,114,82,114,86,114,48,114,98,134,22,82,159,128,156,128,147,128,188,128,10,103,189,128,177,128,171,128,173,128,180,128,183,128,231,128,232,128,233,128,234,128,219,128,194,128,196,128,217,128,205,128,215,128,16,103,221,128,235,128,241,128,244,128,237,128,13,129,14,129,242,128,252,128,21,103,18,129,90,140,54,129,30,129,44,129,24,129,50,129,72,129,76,129,83,129,116,129,89,129,90,129,113,129,96,129,105,129,124,129,125,129,109,129,103,129,77,88,181,90,136,129,130,129,145,129,213,110,163,129,170,129,204,129,38,103,202,129,187,129,33,151,34,151,35,151,36,151,37,151,38,151,39,151,40,151,41,151,43,151,44,151,46,151,47,151,49,151,51,151,52,151,53,151,54,151,55,151,58,151,59,151,60,151,61,151,63,151,64,151,65,151,66,151,67,151,68,151,69,151,70,151,71,151,72,151,73,151,74,151,75,151,76,151,77,151,78,151,79,151,80,151,81,151,84,151,85,151,87,151,88,151,90,151,92,151,93,151,95,151,99,151,100,151,102,151,103,151,104,151,106,151,107,151,108,151,109,151,110,151,111,151,112,151,113,151,114,151,117,151,119,151,120,151,121,151,122,151,123,151,125,151,126,151,127,151,128,151,129,151,130,151,131,151,132,151,134,151,135,151,136,151,137,151,138,151,140,151,142,151,143,151,144,151,147,151,149,151,150,151,151,151,153,151,154,151,155,151,156,151,157,151,193,129,166,129,36,107,55,107,57,107,67,107,70,107,89,107,209,152,210,152,211,152,213,152,217,152,218,152,179,107,64,95,194,107,243,137,144,101,81,159,147,101,188,101,198,101,196,101,195,101,204,101,206,101,210,101,214,101,128,112,156,112,150,112,157,112,187,112,192,112,183,112,171,112,177,112,232,112,202,112,16,113,19,113,22,113,47,113,49,113,115,113,92,113,104,113,69,113,114,113,74,113,120,113,122,113,152,113,179,113,181,113,168,113,160,113,224,113,212,113,231,113,249,113,29,114,40,114,108,112,24,113,102,113,185,113,62,98,61,98,67,98,72,98,73,98,59,121,64,121,70,121,73,121,91,121,92,121,83,121,90,121,98,121,87,121,96,121,111,121,103,121,122,121,133,121,138,121,154,121,167,121,179,121,209,95,208,95,158,151,159,151,161,151,162,151,164,151,165,151,166,151,167,151,168,151,169,151,170,151,172,151,174,151,176,151,177,151,179,151,181,151,182,151,183,151,184,151,185,151,186,151,187,151,188,151,189,151,190,151,191,151,192,151,193,151,194,151,195,151,196,151,197,151,198,151,199,151,200,151,201,151,202,151,203,151,204,151,205,151,206,151,207,151,208,151,209,151,210,151,211,151,212,151,213,151,214,151,215,151,216,151,217,151,218,151,219,151,220,151,221,151,222,151,223,151,224,151,225,151,226,151,227,151,228,151,229,151,232,151,238,151,239,151,240,151,241,151,242,151,244,151,247,151,248,151,249,151,250,151,251,151,252,151,253,151,254,151,255,151,0,152,1,152,2,152,3,152,4,152,5,152,6,152,7,152,8,152,9,152,10,152,11,152,12,152,13,152,14,152,60,96,93,96,90,96,103,96,65,96,89,96,99,96,171,96,6,97,13,97,93,97,169,97,157,97,203,97,209,97,6,98,128,128,127,128,147,108,246,108,252,109,246,119,248,119,0,120,9,120,23,120,24,120,17,120,171,101,45,120,28,120,29,120,57,120,58,120,59,120,31,120,60,120,37,120,44,120,35,120,41,120,78,120,109,120,86,120,87,120,38,120,80,120,71,120,76,120,106,120,155,120,147,120,154,120,135,120,156,120,161,120,163,120,178,120,185,120,165,120,212,120,217,120,201,120,236,120,242,120,5,121,244,120,19,121,36,121,30,121,52,121,155,159,249,158,251,158,252,158,241,118,4,119,13,119,249,118,7,119,8,119,26,119,34,119,25,119,45,119,38,119,53,119,56,119,80,119,81,119,71,119,67,119,90,119,104,119,15,152,16,152,17,152,18,152,19,152,20,152,21,152,22,152,23,152,24,152,25,152,26,152,27,152,28,152,29,152,30,152,31,152,32,152,33,152,34,152,35,152,36,152,37,152,38,152,39,152,40,152,41,152,42,152,43,152,44,152,45,152,46,152,47,152,48,152,49,152,50,152,51,152,52,152,53,152,54,152,55,152,56,152,57,152,58,152,59,152,60,152,61,152,62,152,63,152,64,152,65,152,66,152,67,152,68,152,69,152,70,152,71,152,72,152,73,152,74,152,75,152,76,152,77,152,78,152,79,152,80,152,81,152,82,152,83,152,84,152,85,152,86,152,87,152,88,152,89,152,90,152,91,152,92,152,93,152,94,152,95,152,96,152,97,152,98,152,99,152,100,152,101,152,102,152,103,152,104,152,105,152,106,152,107,152,108,152,109,152,110,152,98,119,101,119,127,119,141,119,125,119,128,119,140,119,145,119,159,119,160,119,176,119,181,119,189,119,58,117,64,117,78,117,75,117,72,117,91,117,114,117,121,117,131,117,88,127,97,127,95,127,72,138,104,127,116,127,113,127,121,127,129,127,126,127,205,118,229,118,50,136,133,148,134,148,135,148,139,148,138,148,140,148,141,148,143,148,144,148,148,148,151,148,149,148,154,148,155,148,156,148,163,148,164,148,171,148,170,148,173,148,172,148,175,148,176,148,178,148,180,148,182,148,183,148,184,148,185,148,186,148,188,148,189,148,191,148,196,148,200,148,201,148,202,148,203,148,204,148,205,148,206,148,208,148,209,148,210,148,213,148,214,148,215,148,217,148,216,148,219,148,222,148,223,148,224,148,226,148,228,148,229,148,231,148,232,148,234,148,111,152,112,152,113,152,114,152,115,152,116,152,139,152,142,152,146,152,149,152,153,152,163,152,168,152,169,152,170,152,171,152,172,152,173,152,174,152,175,152,176,152,177,152,178,152,179,152,180,152,181,152,182,152,183,152,184,152,185,152,186,152,187,152,188,152,189,152,190,152,191,152,192,152,193,152,194,152,195,152,196,152,197,152,198,152,199,152,200,152,201,152,202,152,203,152,204,152,205,152,207,152,208,152,212,152,214,152,215,152,219,152,220,152,221,152,224,152,225,152,226,152,227,152,228,152,229,152,230,152,233,152,234,152,235,152,236,152,237,152,238,152,239,152,240,152,241,152,242,152,243,152,244,152,245,152,246,152,247,152,248,152,249,152,250,152,251,152,252,152,253,152,254,152,255,152,0,153,1,153,2,153,3,153,4,153,5,153,6,153,7,153,233,148,235,148,238,148,239,148,243,148,244,148,245,148,247,148,249,148,252,148,253,148,255,148,3,149,2,149,6,149,7,149,9,149,10,149,13,149,14,149,15,149,18,149,19,149,20,149,21,149,22,149,24,149,27,149,29,149,30,149,31,149,34,149,42,149,43,149,41,149,44,149,49,149,50,149,52,149,54,149,55,149,56,149,60,149,62,149,63,149,66,149,53,149,68,149,69,149,70,149,73,149,76,149,78,149,79,149,82,149,83,149,84,149,86,149,87,149,88,149,89,149,91,149,94,149,95,149,93,149,97,149,98,149,100,149,101,149,102,149,103,149,104,149,105,149,106,149,107,149,108,149,111,149,113,149,114,149,115,149,58,149,231,119,236,119,201,150,213,121,237,121,227,121,235,121,6,122,71,93,3,122,2,122,30,122,20,122,8,153,9,153,10,153,11,153,12,153,14,153,15,153,17,153,18,153,19,153,20,153,21,153,22,153,23,153,24,153,25,153,26,153,27,153,28,153,29,153,30,153,31,153,32,153,33,153,34,153,35,153,36,153,37,153,38,153,39,153,40,153,41,153,42,153,43,153,44,153,45,153,47,153,48,153,49,153,50,153,51,153,52,153,53,153,54,153,55,153,56,153,57,153,58,153,59,153,60,153,61,153,62,153,63,153,64,153,65,153,66,153,67,153,68,153,69,153,70,153,71,153,72,153,73,153,74,153,75,153,76,153,77,153,78,153,79,153,80,153,81,153,82,153,83,153,86,153,87,153,88,153,89,153,90,153,91,153,92,153,93,153,94,153,95,153,96,153,97,153,98,153,100,153,102,153,115,153,120,153,121,153,123,153,126,153,130,153,131,153,137,153,57,122,55,122,81,122,207,158,165,153,112,122,136,118,142,118,147,118,153,118,164,118,222,116,224,116,44,117,32,158,34,158,40,158,41,158,42,158,43,158,44,158,50,158,49,158,54,158,56,158,55,158,57,158,58,158,62,158,65,158,66,158,68,158,70,158,71,158,72,158,73,158,75,158,76,158,78,158,81,158,85,158,87,158,90,158,91,158,92,158,94,158,99,158,102,158,103,158,104,158,105,158,106,158,107,158,108,158,113,158,109,158,115,158,146,117,148,117,150,117,160,117,157,117,172,117,163,117,179,117,180,117,184,117,196,117,177,117,176,117,195,117,194,117,214,117,205,117,227,117,232,117,230,117,228,117,235,117,231,117,3,118,241,117,252,117,255,117,16,118,0,118,5,118,12,118,23,118,10,118,37,118,24,118,21,118,25,118,140,153,142,153,154,153,155,153,156,153,157,153,158,153,159,153,160,153,161,153,162,153,163,153,164,153,166,153,167,153,169,153,170,153,171,153,172,153,173,153,174,153,175,153,176,153,177,153,178,153,179,153,180,153,181,153,182,153,183,153,184,153,185,153,186,153,187,153,188,153,189,153,190,153,191,153,192,153,193,153,194,153,195,153,196,153,197,153,198,153,199,153,200,153,201,153,202,153,203,153,204,153,205,153,206,153,207,153,208,153,209,153,210,153,211,153,212,153,213,153,214,153,215,153,216,153,217,153,218,153,219,153,220,153,221,153,222,153,223,153,224,153,225,153,226,153,227,153,228,153,229,153,230,153,231,153,232,153,233,153,234,153,235,153,236,153,237,153,238,153,239,153,240,153,241,153,242,153,243,153,244,153,245,153,246,153,247,153,248,153,249,153,27,118,60,118,34,118,32,118,64,118,45,118,48,118,63,118,53,118,67,118,62,118,51,118,77,118,94,118,84,118,92,118,86,118,107,118,111,118,202,127,230,122,120,122,121,122,128,122,134,122,136,122,149,122,166,122,160,122,172,122,168,122,173,122,179,122,100,136,105,136,114,136,125,136,127,136,130,136,162,136,198,136,183,136,188,136,201,136,226,136,206,136,227,136,229,136,241,136,26,137,252,136,232,136,254,136,240,136,33,137,25,137,19,137,27,137,10,137,52,137,43,137,54,137,65,137,102,137,123,137,139,117,229,128,178,118,180,118,220,119,18,128,20,128,22,128,28,128,32,128,34,128,37,128,38,128,39,128,41,128,40,128,49,128,11,128,53,128,67,128,70,128,77,128,82,128,105,128,113,128,131,137,120,152,128,152,131,152,250,153,251,153,252,153,253,153,254,153,255,153,0,154,1,154,2,154,3,154,4,154,5,154,6,154,7,154,8,154,9,154,10,154,11,154,12,154,13,154,14,154,15,154,16,154,17,154,18,154,19,154,20,154,21,154,22,154,23,154,24,154,25,154,26,154,27,154,28,154,29,154,30,154,31,154,32,154,33,154,34,154,35,154,36,154,37,154,38,154,39,154,40,154,41,154,42,154,43,154,44,154,45,154,46,154,47,154,48,154,49,154,50,154,51,154,52,154,53,154,54,154,55,154,56,154,57,154,58,154,59,154,60,154,61,154,62,154,63,154,64,154,65,154,66,154,67,154,68,154,69,154,70,154,71,154,72,154,73,154,74,154,75,154,76,154,77,154,78,154,79,154,80,154,81,154,82,154,83,154,84,154,85,154,86,154,87,154,88,154,89,154,137,152,140,152,141,152,143,152,148,152,154,152,155,152,158,152,159,152,161,152,162,152,165,152,166,152,77,134,84,134,108,134,110,134,127,134,122,134,124,134,123,134,168,134,141,134,139,134,172,134,157,134,167,134,163,134,170,134,147,134,169,134,182,134,196,134,181,134,206,134,176,134,186,134,177,134,175,134,201,134,207,134,180,134,233,134,241,134,242,134,237,134,243,134,208,134,19,135,222,134,244,134,223,134,216,134,209,134,3,135,7,135,248,134,8,135,10,135,13,135,9,135,35,135,59,135,30,135,37,135,46,135,26,135,62,135,72,135,52,135,49,135,41,135,55,135,63,135,130,135,34,135,125,135,126,135,123,135,96,135,112,135,76,135,110,135,139,135,83,135,99,135,124,135,100,135,89,135,101,135,147,135,175,135,168,135,210,135,90,154,91,154,92,154,93,154,94,154,95,154,96,154,97,154,98,154,99,154,100,154,101,154,102,154,103,154,104,154,105,154,106,154,107,154,114,154,131,154,137,154,141,154,142,154,148,154,149,154,153,154,166,154,169,154,170,154,171,154,172,154,173,154,174,154,175,154,178,154,179,154,180,154,181,154,185,154,187,154,189,154,190,154,191,154,195,154,196,154,198,154,199,154,200,154,201,154,202,154,205,154,206,154,207,154,208,154,210,154,212,154,213,154,214,154,215,154,217,154,218,154,219,154,220,154,221,154,222,154,224,154,226,154,227,154,228,154,229,154,231,154,232,154,233,154,234,154,236,154,238,154,240,154,241,154,242,154,243,154,244,154,245,154,246,154,247,154,248,154,250,154,252,154,253,154,254,154,255,154,0,155,1,155,2,155,4,155,5,155,6,155,198,135,136,135,133,135,173,135,151,135,131,135,171,135,229,135,172,135,181,135,179,135,203,135,211,135,189,135,209,135,192,135,202,135,219,135,234,135,224,135,238,135,22,136,19,136,254,135,10,136,27,136,33,136,57,136,60,136,54,127,66,127,68,127,69,127,16,130,250,122,253,122,8,123,3,123,4,123,21,123,10,123,43,123,15,123,71,123,56,123,42,123,25,123,46,123,49,123,32,123,37,123,36,123,51,123,62,123,30,123,88,123,90,123,69,123,117,123,76,123,93,123,96,123,110,123,123,123,98,123,114,123,113,123,144,123,166,123,167,123,184,123,172,123,157,123,168,123,133,123,170,123,156,123,162,123,171,123,180,123,209,123,193,123,204,123,221,123,218,123,229,123,230,123,234,123,12,124,254,123,252,123,15,124,22,124,11,124,7,155,9,155,10,155,11,155,12,155,13,155,14,155,16,155,17,155,18,155,20,155,21,155,22,155,23,155,24,155,25,155,26,155,27,155,28,155,29,155,30,155,32,155,33,155,34,155,36,155,37,155,38,155,39,155,40,155,41,155,42,155,43,155,44,155,45,155,46,155,48,155,49,155,51,155,52,155,53,155,54,155,55,155,56,155,57,155,58,155,61,155,62,155,63,155,64,155,70,155,74,155,75,155,76,155,78,155,80,155,82,155,83,155,85,155,86,155,87,155,88,155,89,155,90,155,91,155,92,155,93,155,94,155,95,155,96,155,97,155,98,155,99,155,100,155,101,155,102,155,103,155,104,155,105,155,106,155,107,155,108,155,109,155,110,155,111,155,112,155,113,155,114,155,115,155,116,155,117,155,118,155,119,155,120,155,121,155,122,155,123,155,31,124,42,124,38,124,56,124,65,124,64,124,254,129,1,130,2,130,4,130,236,129,68,136,33,130,34,130,35,130,45,130,47,130,40,130,43,130,56,130,59,130,51,130,52,130,62,130,68,130,73,130,75,130,79,130,90,130,95,130,104,130,126,136,133,136,136,136,216,136,223,136,94,137,157,127,159,127,167,127,175,127,176,127,178,127,124,124,73,101,145,124,157,124,156,124,158,124,162,124,178,124,188,124,189,124,193,124,199,124,204,124,205,124,200,124,197,124,215,124,232,124,110,130,168,102,191,127,206,127,213,127,229,127,225,127,230,127,233,127,238,127,243,127,248,124,119,125,166,125,174,125,71,126,155,126,184,158,180,158,115,141,132,141,148,141,145,141,177,141,103,141,109,141,71,140,73,140,74,145,80,145,78,145,79,145,100,145,124,155,125,155,126,155,127,155,128,155,129,155,130,155,131,155,132,155,133,155,134,155,135,155,136,155,137,155,138,155,139,155,140,155,141,155,142,155,143,155,144,155,145,155,146,155,147,155,148,155,149,155,150,155,151,155,152,155,153,155,154,155,155,155,156,155,157,155,158,155,159,155,160,155,161,155,162,155,163,155,164,155,165,155,166,155,167,155,168,155,169,155,170,155,171,155,172,155,173,155,174,155,175,155,176,155,177,155,178,155,179,155,180,155,181,155,182,155,183,155,184,155,185,155,186,155,187,155,188,155,189,155,190,155,191,155,192,155,193,155,194,155,195,155,196,155,197,155,198,155,199,155,200,155,201,155,202,155,203,155,204,155,205,155,206,155,207,155,208,155,209,155,210,155,211,155,212,155,213,155,214,155,215,155,216,155,217,155,218,155,219,155,98,145,97,145,112,145,105,145,111,145,125,145,126,145,114,145,116,145,121,145,140,145,133,145,144,145,141,145,145,145,162,145,163,145,170,145,173,145,174,145,175,145,181,145,180,145,186,145,85,140,126,158,184,141,235,141,5,142,89,142,105,142,181,141,191,141,188,141,186,141,196,141,214,141,215,141,218,141,222,141,206,141,207,141,219,141,198,141,236,141,247,141,248,141,227,141,249,141,251,141,228,141,9,142,253,141,20,142,29,142,31,142,44,142,46,142,35,142,47,142,58,142,64,142,57,142,53,142,61,142,49,142,73,142,65,142,66,142,81,142,82,142,74,142,112,142,118,142,124,142,111,142,116,142,133,142,143,142,148,142,144,142,156,142,158,142,120,140,130,140,138,140,133,140,152,140,148,140,155,101,214,137,222,137,218,137,220,137,220,155,221,155,222,155,223,155,224,155,225,155,226,155,227,155,228,155,229,155,230,155,231,155,232,155,233,155,234,155,235,155,236,155,237,155,238,155,239,155,240,155,241,155,242,155,243,155,244,155,245,155,246,155,247,155,248,155,249,155,250,155,251,155,252,155,253,155,254,155,255,155,0,156,1,156,2,156,3,156,4,156,5,156,6,156,7,156,8,156,9,156,10,156,11,156,12,156,13,156,14,156,15,156,16,156,17,156,18,156,19,156,20,156,21,156,22,156,23,156,24,156,25,156,26,156,27,156,28,156,29,156,30,156,31,156,32,156,33,156,34,156,35,156,36,156,37,156,38,156,39,156,40,156,41,156,42,156,43,156,44,156,45,156,46,156,47,156,48,156,49,156,50,156,51,156,52,156,53,156,54,156,55,156,56,156,57,156,58,156,59,156,229,137,235,137,239,137,62,138,38,139,83,151,233,150,243,150,239,150,6,151,1,151,8,151,15,151,14,151,42,151,45,151,48,151,62,151,128,159,131,159,133,159,134,159,135,159,136,159,137,159,138,159,140,159,254,158,11,159,13,159,185,150,188,150,189,150,206,150,210,150,191,119,224,150,142,146,174,146,200,146,62,147,106,147,202,147,143,147,62,148,107,148,127,156,130,156,133,156,134,156,135,156,136,156,35,122,139,156,142,156,144,156,145,156,146,156,148,156,149,156,154,156,155,156,158,156,159,156,160,156,161,156,162,156,163,156,165,156,166,156,167,156,168,156,169,156,171,156,173,156,174,156,176,156,177,156,178,156,179,156,180,156,181,156,182,156,183,156,186,156,187,156,188,156,189,156,196,156,197,156,198,156,199,156,202,156,203,156,60,156,61,156,62,156,63,156,64,156,65,156,66,156,67,156,68,156,69,156,70,156,71,156,72,156,73,156,74,156,75,156,76,156,77,156,78,156,79,156,80,156,81,156,82,156,83,156,84,156,85,156,86,156,87,156,88,156,89,156,90,156,91,156,92,156,93,156,94,156,95,156,96,156,97,156,98,156,99,156,100,156,101,156,102,156,103,156,104,156,105,156,106,156,107,156,108,156,109,156,110,156,111,156,112,156,113,156,114,156,115,156,116,156,117,156,118,156,119,156,120,156,121,156,122,156,123,156,125,156,126,156,128,156,131,156,132,156,137,156,138,156,140,156,143,156,147,156,150,156,151,156,152,156,153,156,157,156,170,156,172,156,175,156,185,156,190,156,191,156,192,156,193,156,194,156,200,156,201,156,209,156,210,156,218,156,219,156,224,156,225,156,204,156,205,156,206,156,207,156,208,156,211,156,212,156,213,156,215,156,216,156,217,156,220,156,221,156,223,156,226,156,124,151,133,151,145,151,146,151,148,151,175,151,171,151,163,151,178,151,180,151,177,154,176,154,183,154,88,158,182,154,186,154,188,154,193,154,192,154,197,154,194,154,203,154,204,154,209,154,69,155,67,155,71,155,73,155,72,155,77,155,81,155,232,152,13,153,46,153,85,153,84,153,223,154,225,154,230,154,239,154,235,154,251,154,237,154,249,154,8,155,15,155,19,155,31,155,35,155,189,158,190,158,59,126,130,158,135,158,136,158,139,158,146,158,214,147,157,158,159,158,219,158,220,158,221,158,224,158,223,158,226,158,233,158,231,158,229,158,234,158,239,158,34,159,44,159,47,159,57,159,55,159,61,159,62,159,68,159,227,156,228,156,229,156,230,156,231,156,232,156,233,156,234,156,235,156,236,156,237,156,238,156,239,156,240,156,241,156,242,156,243,156,244,156,245,156,246,156,247,156,248,156,249,156,250,156,251,156,252,156,253,156,254,156,255,156,0,157,1,157,2,157,3,157,4,157,5,157,6,157,7,157,8,157,9,157,10,157,11,157,12,157,13,157,14,157,15,157,16,157,17,157,18,157,19,157,20,157,21,157,22,157,23,157,24,157,25,157,26,157,27,157,28,157,29,157,30,157,31,157,32,157,33,157,34,157,35,157,36,157,37,157,38,157,39,157,40,157,41,157,42,157,43,157,44,157,45,157,46,157,47,157,48,157,49,157,50,157,51,157,52,157,53,157,54,157,55,157,56,157,57,157,58,157,59,157,60,157,61,157,62,157,63,157,64,157,65,157,66,157,52,226,53,226,54,226,55,226,56,226,57,226,58,226,59,226,60,226,61,226,62,226,63,226,64,226,65,226,66,226,67,226,68,226,69,226,70,226,71,226,72,226,73,226,74,226,75,226,76,226,77,226,78,226,79,226,80,226,81,226,82,226,83,226,84,226,85,226,86,226,87,226,88,226,89,226,90,226,91,226,92,226,93,226,94,226,95,226,96,226,97,226,98,226,99,226,100,226,101,226,102,226,103,226,104,226,105,226,106,226,107,226,108,226,109,226,110,226,111,226,112,226,113,226,114,226,115,226,116,226,117,226,118,226,119,226,120,226,121,226,122,226,123,226,124,226,125,226,126,226,127,226,128,226,129,226,130,226,131,226,132,226,133,226,134,226,135,226,136,226,137,226,138,226,139,226,140,226,141,226,142,226,143,226,144,226,145,226,67,157,68,157,69,157,70,157,71,157,72,157,73,157,74,157,75,157,76,157,77,157,78,157,79,157,80,157,81,157,82,157,83,157,84,157,85,157,86,157,87,157,88,157,89,157,90,157,91,157,92,157,93,157,94,157,95,157,96,157,97,157,98,157,99,157,100,157,101,157,102,157,103,157,104,157,105,157,106,157,107,157,108,157,109,157,110,157,111,157,112,157,113,157,114,157,115,157,116,157,117,157,118,157,119,157,120,157,121,157,122,157,123,157,124,157,125,157,126,157,127,157,128,157,129,157,130,157,131,157,132,157,133,157,134,157,135,157,136,157,137,157,138,157,139,157,140,157,141,157,142,157,143,157,144,157,145,157,146,157,147,157,148,157,149,157,150,157,151,157,152,157,153,157,154,157,155,157,156,157,157,157,158,157,159,157,160,157,161,157,162,157,146,226,147,226,148,226,149,226,150,226,151,226,152,226,153,226,154,226,155,226,156,226,157,226,158,226,159,226,160,226,161,226,162,226,163,226,164,226,165,226,166,226,167,226,168,226,169,226,170,226,171,226,172,226,173,226,174,226,175,226,176,226,177,226,178,226,179,226,180,226,181,226,182,226,183,226,184,226,185,226,186,226,187,226,188,226,189,226,190,226,191,226,192,226,193,226,194,226,195,226,196,226,197,226,198,226,199,226,200,226,201,226,202,226,203,226,204,226,205,226,206,226,207,226,208,226,209,226,210,226,211,226,212,226,213,226,214,226,215,226,216,226,217,226,218,226,219,226,220,226,221,226,222,226,223,226,224,226,225,226,226,226,227,226,228,226,229,226,230,226,231,226,232,226,233,226,234,226,235,226,236,226,237,226,238,226,239,226,163,157,164,157,165,157,166,157,167,157,168,157,169,157,170,157,171,157,172,157,173,157,174,157,175,157,176,157,177,157,178,157,179,157,180,157,181,157,182,157,183,157,184,157,185,157,186,157,187,157,188,157,189,157,190,157,191,157,192,157,193,157,194,157,195,157,196,157,197,157,198,157,199,157,200,157,201,157,202,157,203,157,204,157,205,157,206,157,207,157,208,157,209,157,210,157,211,157,212,157,213,157,214,157,215,157,216,157,217,157,218,157,219,157,220,157,221,157,222,157,223,157,224,157,225,157,226,157,227,157,228,157,229,157,230,157,231,157,232,157,233,157,234,157,235,157,236,157,237,157,238,157,239,157,240,157,241,157,242,157,243,157,244,157,245,157,246,157,247,157,248,157,249,157,250,157,251,157,252,157,253,157,254,157,255,157,0,158,1,158,2,158,240,226,241,226,242,226,243,226,244,226,245,226,246,226,247,226,248,226,249,226,250,226,251,226,252,226,253,226,254,226,255,226,0,227,1,227,2,227,3,227,4,227,5,227,6,227,7,227,8,227,9,227,10,227,11,227,12,227,13,227,14,227,15,227,16,227,17,227,18,227,19,227,20,227,21,227,22,227,23,227,24,227,25,227,26,227,27,227,28,227,29,227,30,227,31,227,32,227,33,227,34,227,35,227,36,227,37,227,38,227,39,227,40,227,41,227,42,227,43,227,44,227,45,227,46,227,47,227,48,227,49,227,50,227,51,227,52,227,53,227,54,227,55,227,56,227,57,227,58,227,59,227,60,227,61,227,62,227,63,227,64,227,65,227,66,227,67,227,68,227,69,227,70,227,71,227,72,227,73,227,74,227,75,227,76,227,77,227,3,158,4,158,5,158,6,158,7,158,8,158,9,158,10,158,11,158,12,158,13,158,14,158,15,158,16,158,17,158,18,158,19,158,20,158,21,158,22,158,23,158,24,158,25,158,26,158,27,158,28,158,29,158,30,158,36,158,39,158,46,158,48,158,52,158,59,158,60,158,64,158,77,158,80,158,82,158,83,158,84,158,86,158,89,158,93,158,95,158,96,158,97,158,98,158,101,158,110,158,111,158,114,158,116,158,117,158,118,158,119,158,120,158,121,158,122,158,123,158,124,158,125,158,128,158,129,158,131,158,132,158,133,158,134,158,137,158,138,158,140,158,141,158,142,158,143,158,144,158,145,158,148,158,149,158,150,158,151,158,152,158,153,158,154,158,155,158,156,158,158,158,160,158,161,158,162,158,163,158,164,158,165,158,167,158,168,158,169,158,170,158,78,227,79,227,80,227,81,227,82,227,83,227,84,227,85,227,86,227,87,227,88,227,89,227,90,227,91,227,92,227,93,227,94,227,95,227,96,227,97,227,98,227,99,227,100,227,101,227,102,227,103,227,104,227,105,227,106,227,107,227,108,227,109,227,110,227,111,227,112,227,113,227,114,227,115,227,116,227,117,227,118,227,119,227,120,227,121,227,122,227,123,227,124,227,125,227,126,227,127,227,128,227,129,227,130,227,131,227,132,227,133,227,134,227,135,227,136,227,137,227,138,227,139,227,140,227,141,227,142,227,143,227,144,227,145,227,146,227,147,227,148,227,149,227,150,227,151,227,152,227,153,227,154,227,155,227,156,227,157,227,158,227,159,227,160,227,161,227,162,227,163,227,164,227,165,227,166,227,167,227,168,227,169,227,170,227,171,227,171,158,172,158,173,158,174,158,175,158,176,158,177,158,178,158,179,158,181,158,182,158,183,158,185,158,186,158,188,158,191,158,192,158,193,158,194,158,195,158,197,158,198,158,199,158,200,158,202,158,203,158,204,158,208,158,210,158,211,158,213,158,214,158,215,158,217,158,218,158,222,158,225,158,227,158,228,158,230,158,232,158,235,158,236,158,237,158,238,158,240,158,241,158,242,158,243,158,244,158,245,158,246,158,247,158,248,158,250,158,253,158,255,158,0,159,1,159,2,159,3,159,4,159,5,159,6,159,7,159,8,159,9,159,10,159,12,159,15,159,17,159,18,159,20,159,21,159,22,159,24,159,26,159,27,159,28,159,29,159,30,159,31,159,33,159,35,159,36,159,37,159,38,159,39,159,40,159,41,159,42,159,43,159,45,159,46,159,48,159,49,159,172,227,173,227,174,227,175,227,176,227,177,227,178,227,179,227,180,227,181,227,182,227,183,227,184,227,185,227,186,227,187,227,188,227,189,227,190,227,191,227,192,227,193,227,194,227,195,227,196,227,197,227,198,227,199,227,200,227,201,227,202,227,203,227,204,227,205,227,206,227,207,227,208,227,209,227,210,227,211,227,212,227,213,227,214,227,215,227,216,227,217,227,218,227,219,227,220,227,221,227,222,227,223,227,224,227,225,227,226,227,227,227,228,227,229,227,230,227,231,227,232,227,233,227,234,227,235,227,236,227,237,227,238,227,239,227,240,227,241,227,242,227,243,227,244,227,245,227,246,227,247,227,248,227,249,227,250,227,251,227,252,227,253,227,254,227,255,227,0,228,1,228,2,228,3,228,4,228,5,228,6,228,7,228,8,228,9,228,50,159,51,159,52,159,53,159,54,159,56,159,58,159,60,159,63,159,64,159,65,159,66,159,67,159,69,159,70,159,71,159,72,159,73,159,74,159,75,159,76,159,77,159,78,159,79,159,82,159,83,159,84,159,85,159,86,159,87,159,88,159,89,159,90,159,91,159,92,159,93,159,94,159,95,159,96,159,97,159,98,159,99,159,100,159,101,159,102,159,103,159,104,159,105,159,106,159,107,159,108,159,109,159,110,159,111,159,112,159,113,159,114,159,115,159,116,159,117,159,118,159,119,159,120,159,121,159,122,159,123,159,124,159,125,159,126,159,129,159,130,159,141,159,142,159,143,159,144,159,145,159,146,159,147,159,148,159,149,159,150,159,151,159,152,159,156,159,157,159,158,159,161,159,162,159,163,159,164,159,165,159,44,249,121,249,149,249,231,249,241,249,10,228,11,228,12,228,13,228,14,228,15,228,16,228,17,228,18,228,19,228,20,228,21,228,22,228,23,228,24,228,25,228,26,228,27,228,28,228,29,228,30,228,31,228,32,228,33,228,34,228,35,228,36,228,37,228,38,228,39,228,40,228,41,228,42,228,43,228,44,228,45,228,46,228,47,228,48,228,49,228,50,228,51,228,52,228,53,228,54,228,55,228,56,228,57,228,58,228,59,228,60,228,61,228,62,228,63,228,64,228,65,228,66,228,67,228,68,228,69,228,70,228,71,228,72,228,73,228,74,228,75,228,76,228,77,228,78,228,79,228,80,228,81,228,82,228,83,228,84,228,85,228,86,228,87,228,88,228,89,228,90,228,91,228,92,228,93,228,94,228,95,228,96,228,97,228,98,228,99,228,100,228,101,228,102,228,103,228,12,250,13,250,14,250,15,250,17,250,19,250,20,250,24,250,31,250,32,250,33,250,35,250,36,250,39,250,40,250,41,250,129,46,22,232,23,232,24,232,132,46,115,52,71,52,136,46,139,46,30,232,158,53,26,54,14,54,140,46,151,46,110,57,24,57,38,232,207,57,223,57,115,58,208,57,43,232,44,232,78,59,110,60,224,60,167,46,49,232,50,232,170,46,86,64,95,65,174,46,55,67,179,46,182,46,183,46,59,232,177,67,172,67,187,46,221,67,214,68,97,70,76,70,67,232,35,71,41,71,124,71,141,71,202,46,71,73,122,73,125,73,130,73,131,73,133,73,134,73,159,73,155,73,183,73,182,73,84,232,85,232,163,76,159,76,160,76,161,76,119,76,162,76,19,77,20,77,21,77,22,77,23,77,24,77,25,77,174,77,100,232,104,228,105,228,106,228,107,228,108,228,109,228,110,228,111,228,112,228,113,228,114,228,115,228,116,228,117,228,118,228,119,228,120,228,121,228,122,228,123,228,124,228,125,228,126,228,127,228,128,228,129,228,130,228,131,228,132,228,133,228,134,228,135,228,136,228,137,228,138,228,139,228,140,228,141,228,142,228,143,228,144,228,145,228,146,228,147,228,148,228,149,228,150,228,151,228,152,228,153,228,154,228,155,228,156,228,157,228,158,228,159,228,160,228,161,228,162,228,163,228,164,228,165,228,166,228,167,228,168,228,169,228,170,228,171,228,172,228,173,228,174,228,175,228,176,228,177,228,178,228,179,228,180,228,181,228,182,228,183,228,184,228,185,228,186,228,187,228,188,228,189,228,190,228,191,228,192,228,193,228,194,228,195,228,196,228,197,228,240,67,50,76,3,70,166,69,120,69,103,114,119,77,179,69,177,124,226,76,197,124,149,59,54,71,68,71,71,76,64,76,191,66,23,54,82,115,139,110,210,112,87,76,81,163,79,71,218,69,133,76,108,124,7,77,164,74,161,70,35,107,37,114,84,90,99,26,6,62,97,63,77,102,251,86,0,0,149,125,29,89,185,139,244,61,52,151,239,123,219,91,94,29,164,90,37,54,176,158,209,90,183,91,252,92,110,103,147,133,69,153,97,116,157,116,117,56,83,29,158,54,33,96,236,62,222,88,245,58,252,122,151,159,97,65,13,137,234,49,138,10,94,50,10,67,132,132,150,159,47,148,48,73,19,134,150,88,74,151,24,146,208,121,50,122,96,102,41,106,157,136,76,116,197,123,130,103,44,122,79,82,70,144,230,52,196,115,185,93,198,116,199,159,179,87,47,73,76,84,49,65,142,54,24,88,114,122,101,123,143,139,174,70,136,110,129,65,153,93,174,123,188,36,200,159,193,36,201,36,204,36,201,159,4,133,187,53,180,64,202,159,225,68,255,173,193,98,110,112,203,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,49,193,49,194,49,195,49,196,49,12,1,197,49,209,0,205,0,198,49,199,49,203,0,232,31,200,49,202,0,201,49,202,49,203,49,204,49,14,1,205,49,206,49,0,1,193,0,205,1,192,0,18,1,201,0,26,1,200,0,76,1,211,0,209,1,210,0,0,220,190,30,4,220,192,30,202,0,1,1,225,0,206,1,224,0,81,2,19,1,233,0,27,1,232,0,43,1,237,0,208,1,236,0,77,1,243,0,210,1,242,0,107,1,250,0,212,1,249,0,214,1,216,1,218,1,220,1,252,0,8,220,191,30,12,220,193,30,234,0,97,2,218,35,219,35],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+79382);allocate([169,163,69,17,0,0,10,101,0,0,0,0,61,78,221,110,78,157,223,145,0,0,0,0,53,119,145,100,26,79,40,79,168,79,86,81,116,81,156,81,228,81,161,82,168,82,59,83,78,83,209,83,216,83,226,86,240,88,4,89,7,89,50,89,52,89,102,91,158,91,159,91,154,92,134,94,59,96,137,101,254,103,4,104,101,104,78,109,188,112,53,117,164,126,172,126,186,126,199,126,207,126,223,126,6,127,55,127,122,130,207,130,111,131,198,137,190,139,226,139,102,143,103,143,110,143,17,116,252,124,205,125,70,105,201,122,39,82,0,0,0,0,0,0,0,0,140,145,184,120,94,145,188,128,0,0,11,141,246,128,231,9,0,0,0,0,159,128,199,158,205,76,201,157,12,158,62,76,246,157,14,112,10,158,51,161,193,53,0,0,154,110,62,130,25,117,0,0,17,73,108,154,143,154,153,159,135,121,108,132,202,29,208,5,230,42,36,78,129,78,128,78,135,78,191,78,235,78,55,79,76,52,189,79,72,62,3,80,136,80,125,52,147,52,165,52,134,81,5,89,219,81,252,81,5,82,137,78,121,82,144,82,39,83,199,53,169,83,81,53,176,83,83,53,194,83,35,84,109,53,114,53,129,54,147,84,163,84,180,84,185,84,208,84,239,84,24,85,35,85,40,85,152,53,63,85,165,53,191,53,215,85,197,53,132,125,37,85,0,0,66,12,21,13,43,81,144,85,198,44,236,57,65,3,70,142,184,77,229,148,83,64,190,128,122,119,56,44,52,58,213,71,93,129,242,105,234,77,221,100,124,13,180,15,213,12,244,16,141,100,126,142,150,14,11,12,100,15,169,44,86,130,211,68,0,0,70,13,77,154,233,128,244,71,167,78,194,44,178,154,103,58,244,149,237,63,6,53,199,82,212,151,200,120,68,45,110,157,21,152,0,0,217,67,165,96,180,100,227,84,76,45,202,43,119,16,251,57,111,16,218,102,22,103,160,121,234,100,82,80,67,12,104,142,161,33,76,139,49,7,0,0,11,72,169,1,250,63,115,88,141,45,0,0,200,69,252,4,151,96,76,15,150,13,121,85,187,64,186,67,0,0,180,74,102,42,157,16,170,129,245,152,156,13,121,99,254,57,117,39,192,141,161,86,124,100,67,62,0,0,1,166,9,14,207,42,201,44,0,0,200,16,194,57,146,57,6,58,155,130,120,53,73,94,199,32,82,86,49,15,178,44,32,151,188,52,61,108,59,78,0,0,0,0,116,117,139,46,8,34,91,166,205,140,122,14,52,12,28,104,147,127,207,16,3,40,57,41,251,53,227,81,140,14,141,15,170,14,147,63,48,15,71,13,79,17,76,14,0,0,171,14,169,11,72,13,192,16,61,17,249,63,150,38,50,100,173,15,244,51,57,118,206,43,126,13,127,13,81,44,85,44,24,58,152,14,199,16,46,15,50,166,80,107,210,140,153,141,202,140,170,149,204,84,196,130,185,85,0,0,195,158,38,156,182,154,94,119,238,45,64,113,109,129,236,128,28,92,114,101,52,129,151,55,95,83,189,128,182,145,250,14,15,14,119,14,251,14,221,53,235,77,9,54,214,12,175,86,181,39,201,16,16,14,120,14,120,16,72,17,7,130,85,20,121,14,80,78,164,45,84,90,29,16,30,16,245,16,246,16,156,87,17,14,148,118,205,130,181,15,123,14,126,81,3,55,182,15,128,17,216,82,189,162,218,73,58,24,119,65,124,130,153,88,104,82,26,54,61,87,178,123,104,91,0,72,44,75,39,159,231,73,31,156,141,155,116,91,61,49,251,85,242,53,137,86,40,78,2,89,193,27,120,248,81,151,134,0,91,78,187,78,62,53,35,92,81,95,196,95,250,56,76,98,53,101,122,107,53,108,58,108,108,112,43,114,44,78,173,114,233,72,82,127,59,121,249,124,83,127,106,98,193,52,0,0,75,99,2,128,128,128,18,102,81,105,93,83,100,136,193,137,178,120,160,139,29,141,133,148,120,149,127,149,232,149,15,142,230,151,117,152,206,152,222,152,99,153,16,152,124,156,31,158,196,158,111,107,7,249,55,78,135,0,29,150,55,98,162,148,0,0,59,80,254,109,115,156,166,159,201,61,143,136,78,65,119,112,245,92,32,75,205,81,89,53,48,93,34,97,50,138,167,143,246,145,145,113,25,103,186,115,129,50,7,161,139,60,128,25,16,75,228,120,2,116,174,81,15,135,9,64,99,106,186,162,35,66,15,134,111,10,42,122,71,153,234,138,85,151,77,112,36,83,126,32,244,147,217,118,227,137,167,159,221,119,163,78,240,79,188,80,47,78,23,79,168,159,52,84,139,125,146,88,208,88,182,29,146,94,153,94,194,95,18,39,139,101,249,51,25,105,67,106,99,60,255,108,0,0,0,114,5,69,140,115,219,62,19,74,21,91,185,116,131,139,164,92,149,86,147,122,236,123,195,124,108,126,248,130,151,133,169,159,144,136,170,159,185,142,171,159,207,143,95,133,224,153,33,146,172,159,185,141,63,20,113,64,162,66,26,90,0,0,0,0,0,0,104,152,107,103,118,66,61,87,0,0,214,133,123,73,191,130,13,113,129,76,116,109,123,93,21,107,190,111,173,159,174,159,150,91,175,159,231,102,91,126,87,110,202,121,136,61,195,68,86,50,150,39,154,67,54,69,0,0,213,92,26,59,249,138,120,92,18,61,81,53,120,93,178,159,87,113,88,69,236,64,35,30,119,76,120,57,74,52,164,1,65,108,204,138,180,79,57,2,191,89,108,129,86,152,250,152,59,95,159,11,0,0,193,33,109,137,2,65,187,70,121,144,7,63,179,159,181,161,248,64,214,55,247,70,70,108,124,65,178,134,255,115,109,69,212,56,154,84,97,69,27,69,137,77,123,76,118,77,234,69,200,63,15,75,97,54,222,68,189,68,237,65,62,93,72,93,86,93,252,61,15,56,164,93,185,93,32,56,56,56,66,94,189,94,37,95,131,95,8,57,20,57,63,57,77,57,215,96,61,97,229,92,137,57,183,97,185,97,207,97,184,57,44,98,144,98,229,98,24,99,248,57,177,86,3,58,226,99,251,99,7,100,90,100,75,58,192,100,21,93,33,86,159,159,151,58,134,101,189,58,255,101,83,102,242,58,146,102,34,59,22,103,66,59,164,103,0,104,88,59,74,104,132,104,114,59,113,59,123,59,9,105,67,105,92,114,100,105,159,105,133,105,188,59,214,105,221,59,101,106,116,106,113,106,130,106,236,59,153,106,242,59,171,106,181,106,212,106,246,106,129,107,193,107,234,107,117,108,170,108,203,60,2,109,6,109,38,109,129,109,239,60,164,109,177,109,21,110,24,110,41,110,134,110,192,137,187,110,226,110,218,110,127,159,232,110,233,110,36,111,52,111,70,61,65,63,129,111,190,111,106,61,117,61,183,113,153,92,138,61,44,112,145,61,80,112,84,112,111,112,127,112,137,112,37,3,193,67,241,53,216,14,215,62,190,87,211,110,62,113,224,87,78,54,162,105,233,139,116,91,73,122,225,88,217,148,101,122,125,122,172,89,187,122,176,122,194,122,195,122,209,113,141,100,202,65,218,122,221,122,234,122,239,65,178,84,1,92,11,123,85,123,41,123,14,83,254,92,162,123,111,123,156,131,180,91,127,108,208,123,33,132,146,123,0,0,32,93,173,61,101,92,146,132,250,123,0,0,53,124,193,92,68,124,131,124,130,72,166,124,125,102,120,69,201,124,199,124,230,124,116,124,243,124,245,124,0,0,103,126,29,69,68,110,93,125,214,110,141,116,137,125,171,125,53,113,179,125,0,0,87,64,41,96,228,125,19,61,245,125,249,23,229,125,109,131,0,0,33,97,90,97,110,126,146,126,43,67,108,148,39,126,64,127,65,127,71,127,54,121,208,98,225,153,151,127,81,99,163,127,97,22,104,0,92,69,102,55,3,69,58,131,250,127,137,100,0,0,8,128,29,128,0,0,47,128,135,160,195,108,59,128,60,128,97,128,20,39,137,73,38,102,227,61,232,102,37,103,167,128,72,138,7,129,26,129,176,88,246,38,127,108,152,100,184,79,231,100,138,20,24,130,94,24,83,106,101,74,149,74,122,68,41,130,13,11,82,106,126,61,249,79,253,20,226,132,98,131,10,107,167,73,48,53,115,23,248,61,170,130,27,105,148,249,219,65,75,133,208,130,26,131,22,14,180,23,193,54,125,49,90,53,123,130,226,130,24,131,139,62,163,109,5,107,151,107,206,53,191,61,29,131,236,85,133,131,11,69,165,109,172,131,0,0,211,131,126,52,212,110,87,106,90,133,150,52,66,110,239,46,88,132,228,91,113,132,211,61,228,68,167,106,74,132,181,60,88,121,0,0,150,107,119,110,67,110,222,132,0,0,145,131,160,68,147,132,228,132,145,92,64,66,192,92,67,69,52,133,242,90,153,110,39,69,115,133,22,69,191,103,22,134,37,134,59,134,193,133,136,112,2,134,130,21,205,112,178,249,106,69,40,134,72,54,162,24,247,83,154,115,126,134,113,135,248,160,238,135,39,44,177,135,218,135,15,136,97,86,108,134,86,104,15,70,69,136,70,136,224,117,185,61,228,117,94,136,156,136,91,70,180,136,181,136,193,99,197,136,119,119,15,119,135,137,138,137,0,0,0,0,167,137,188,137,37,138,231,137,36,121,189,122,156,138,147,119,254,145,144,138,89,122,233,122,58,123,143,63,19,71,56,123,124,113,12,139,31,139,48,84,101,85,63,139,76,139,77,139,169,138,122,74,144,139,155,139,175,138,223,22,21,70,79,136,155,140,84,125,143,125,212,249,37,55,83,125,214,140,152,125,189,125,18,141,3,141,16,25,219,140,92,112,17,141,201,76,208,62,0,0,169,141,2,128,20,16,138,73,124,59,188,129,12,113,231,122,173,142,182,142,195,142,212,146,25,143,45,143,101,131,18,132,165,143,3,147,159,162,80,10,179,143,42,73,222,137,61,133,187,61,248,94,98,50,249,143,20,160,188,134,1,133,37,35,128,57,215,110,55,144,60,133,190,122,97,144,108,133,11,134,168,144,19,135,196,144,230,134,174,144,0,0,103,145,240,58,169,145,196,145,172,124,51,137,137,30,14,146,159,108,65,146,98,146,185,85,0,0,198,138,155,60,12,139,219,85,49,13,44,147,107,147,225,138,235,139,143,112,195,90,226,138,229,138,101,73,68,146,236,139,57,140,255,139,115,147,91,148,188,142,133,149,166,149,38,148,160,149,246,111,185,66,122,38,216,134,124,18,46,62,223,73,28,108,123,150,150,150,108,65,163,150,213,110,218,97,182,150,245,120,224,138,189,150,204,83,161,73,184,108,116,2,16,100,175,144,229,144,209,74,21,25,10,51,49,151,66,134,54,151,15,74,61,69,133,69,233,74,117,112,65,91,27,151,0,0,213,145,87,151,74,91,235,145,95,151,37,148,208,80,183,48,188,48,137,151,159,151,177,151,190,151,192,151,210,151,224,151,108,84,238,151,28,116,51,148,0,0,245,151,29,148,122,121,209,74,52,152,51,152,75,152,102,152,14,59,117,113,81,61,48,6,92,65,6,87,202,152,183,152,200,152,199,152,255,74,39,109,211,22,176,85,225,152,230,152,236,152,120,147,57,153,41,74,114,75,87,152,5,153,245,153,12,154,59,154,16,154,88,154,37,87,196,54,177,144,213,155,224,154,226,154,5,155,244,154,14,76,20,155,45,155,0,134,52,80,52,155,168,105,195,56,125,48,80,155,64,155,62,157,69,90,99,24,142,155,75,66,2,156,255,155,12,156,104,158,212,157,183,159,146,161,171,161,225,160,35,161,223,161,126,157,131,157,52,161,14,158,136,104,196,157,91,33,147,161,32,162,59,25,51,162,57,157,185,160,180,162,144,158,149,158,158,158,162,158,52,77,170,158,175,158,100,67,193,158,96,59,229,57,29,61,50,79,190,55,43,140,2,159,8,159,150,75,36,148,162,109,23,159,0,0,57,159,159,86,138,86,69,159,184,153,139,144,242,151,127,132,98,159,105,159,220,122,142,159,22,114,190,75,117,73,187,73,119,113,248,73,72,67,81,74,158,115,218,139,250,24,159,121,126,137,54,142,105,147,243,147,68,138,236,146,129,147,203,147,108,137,185,68,23,114,235,62,114,119,67,122,208,112,115,68,248,67,126,113,239,23,163,112,190,24,153,53,199,62,133,24,47,84,248,23,34,55,251,22,57,24,225,54,116,23,209,24,75,95,35,55,192,22,91,87,37,74,254,19,168,18,198,19,182,20,3,133,166,54,0,0,85,132,148,73,101,113,49,62,92,85,251,62,82,112,244,68,238,54,157,153,38,111,249,103,51,55,21,60,231,61,108,88,34,25,16,104,87,64,63,55,225,64,139,64,15,65,33,108,203,84,158,86,177,102,146,86,223,15,168,11,13,14,198,147,19,139,156,147,248,78,43,81,25,56,54,68,188,78,101,4,127,3,75,79,138,79,81,86,104,90,171,1,203,3,153,57,10,3,20,4,53,52,41,79,192,2,179,142,117,2,218,138,12,2,152,78,205,80,13,81,162,79,3,79,14,74,138,62,66,79,46,80,108,80,129,80,204,79,229,79,88,80,252,80,0,0,0,0,0,0,0,0,118,110,149,53,57,62,191,62,114,109,132,24,137,62,168,81,195,81,224,5,221,68,163,4,146,4,145,4,122,141,156,138,14,7,89,82,164,82,115,8,225,82,0,0,122,70,140,113,140,67,32,12,172,73,228,16,209,105,29,14,0,0,222,62,153,116,20,116,86,116,152,115,142,75,188,74,141,64,208,83,132,53,15,114,201,64,180,85,69,3,205,84,198,11,29,87,93,146,244,150,102,147,221,87,141,87,127,87,62,54,203,88,153,90,70,138,250,22,111,23,16,23,44,90,184,89,143,146,126,90,207,90,18,90,70,89,243,25,97,24,149,66,245,54,5,109,67,116,33,90,131,94,129,90,215,139,19,4,224,147,140,116,3,19,5,113,114,73,8,148,251,137,189,147,160,55,30,92,158,92,94,94,72,94,150,25,124,25,238,58,205,94,79,91,3,25,4,25,1,55,160,24,221,54,254,22,211,54,42,129,71,138,186,29,114,52,168,137,12,95,14,95,39,25,171,23,107,90,59,23,68,91,20,134,253,117,96,136,126,96,96,40,43,38,219,95,184,62,175,37,190,37,136,144,115,111,192,97,62,0,70,0,27,38,153,97,152,97,117,96,155,44,7,45,212,70,77,145,113,100,101,70,106,43,41,58,34,43,80,52,234,152,120,46,55,99,91,164,182,100,49,99,209,99,227,73,103,45,164,98,161,44,59,100,107,101,114,105,244,59,142,48,173,50,137,73,171,50,13,85,224,50,217,24,63,148,206,102,137,50,179,49,224,58,144,65,132,85,34,139,143,85,252,22,91,85,37,84,238,120,3,49,42,24,52,50,100,52,15,50,130,49,201,66,142,102,36,109,107,102,147,75,48,102,112,120,235,29,99,102,210,50,225,50,30,102,114,88,209,56,58,56,188,55,153,59,162,55,254,51,208,116,150,59,143,103,42,70,182,104,30,104,196,59,190,106,99,56,213,55,135,68,51,106,82,106,201,106,5,107,18,25,17,101,152,104,76,106,215,59,122,106,87,107,192,63,154,60,160,147,242,146,234,139,203,138,137,146,30,128,220,137,103,148,165,109,11,111,236,73,0,0,127,63,143,61,4,110,60,64,61,90,10,110,71,88,36,109,66,120,59,113,26,67,118,66,241,112,80,114,135,114,148,114,143,71,37,71,121,81,164,74,235,5,122,116,248,62,95,54,74,74,23,73,225,95,6,63,177,62,223,74,35,140,53,63,167,96,243,62,204,116,60,116,135,147,55,116,159,68,234,109,81,69,131,117,99,63,217,76,6,77,88,63,85,117,115,118,198,165,25,59,104,116,204,138,171,73,142,73,251,58,205,61,78,74,255,62,197,73,243,72,250,145,50,87,66,147,227,138,100,24,223,80,33,82,231,81,120,119,50,50,14,119,15,119,123,119,151,70,129,55,94,58,240,72,56,116,155,116,191,62,186,74,199,74,200,64,150,74,174,97,7,147,129,85,30,120,141,120,136,120,210,120,208,115,89,121,65,119,227,86,14,65,0,0,150,132,165,121,45,106,250,62,58,122,244,121,110,65,230,22,50,65,53,146,241,121,76,13,140,73,153,2,186,61,110,23,151,53,107,85,112,53,170,54,212,1,13,12,226,122,89,90,245,38,175,90,156,90,13,90,91,2,240,120,42,90,198,91,254,122,249,65,93,124,109,124,17,66,179,91,188,94,166,94,205,124,249,73,176,23,142,124,124,124,174,124,178,106,220,125,7,126,211,125,78,127,97,98,92,97,72,123,151,125,130,94,106,66,117,107,22,9,214,103,78,0,207,53,196,87,18,100,248,99,98,73,221,127,39,123,44,8,233,90,67,93,12,123,14,94,230,153,69,134,99,154,28,106,63,52,226,57,247,73,173,101,31,154,160,101,128,132,39,113,209,108,234,68,55,129,2,68,198,128,9,129,66,129,180,103,195,152,66,106,98,130,101,130,81,106,83,132,167,109,16,134,27,114,134,90,127,65,64,24,43,91,161,24,228,90,216,24,160,134,188,249,143,61,45,136,34,116,2,90,110,136,69,79,135,136,191,136,230,136,101,137,77,137,131,86,84,137,133,119,132,119,245,139,217,139,156,139,249,137,173,62,163,132,245,70,207,70,242,55,61,138,28,138,72,148,77,95,43,146,132,66,212,101,41,113,196,112,69,24,109,157,159,140,233,140,220,125,154,89,195,119,240,89,110,67,212,54,42,142,167,142,9,76,48,143,74,143,244,66,88,108,187,111,33,35,155,72,121,111,139,110,218,23,233,155,181,54,47,73,187,144,0,0,113,85,6,73,187,145,4,148,75,138,98,64,252,138,39,148,29,140,59,140,229,132,43,138,153,149,167,149,151,149,150,149,52,141,69,116,194,62,255,72,66,74,234,67,231,62,37,50,143,150,231,142,102,142,101,142,204,62,237,73,120,74,238,63,18,116,107,116,252,62,65,151,176,144,71,104,29,74,147,144,223,87,0,0,104,147,137,137,38,140,47,139,190,99,186,146,17,91,105,139,60,73,249,115,27,66,155,151,113,151,56,153,38,15,193,93,197,139,178,74,31,152,218,148,246,146,215,149,229,145,192,68,80,139,103,74,100,139,220,152,69,138,0,63,42,146,37,73,20,132,59,153,77,153,6,123,253,61,155,153,111,75,170,153,92,154,101,139,200,88,143,106,33,154,254,90,47,154,241,152,144,75,72,153,188,153,189,75,151,75,125,147,114,88,2,19,34,88,184,73,232,20,68,120,31,39,184,61,197,104,125,61,88,148,39,57,80,97,129,39,107,41,7,97,79,156,83,156,123,156,53,156,16,156,127,155,207,155,45,158,159,155,245,161,254,160,33,157,174,76,4,65,24,158,176,76,12,157,180,161,237,160,243,160,47,153,165,157,189,132,18,110,223,111,130,107,252,133,51,69,164,109,132,110,240,109,32,132,238,133,0,110,215,55,100,96,226,121,156,53,64,54,45,73,222,73,98,61,219,147,190,146,72,147,191,2,185,120,119,146,77,148,228,79,64,52,100,144,93,85,61,120,84,120,182,120,75,120,87,23,201,49,65,73,154,54,114,79,218,111,217,111,0,0,30,112,20,84,181,65,187,87,243,88,138,87,22,157,215,87,52,113,175,52,172,65,235,113,64,108,151,79,0,0,181,23,73,138,12,97,206,90,11,90,188,66,136,68,44,55,123,75,252,137,187,147,184,147,214,24,29,15,114,132,192,108,19,20,250,66,38,44,193,67,148,89,183,61,65,103,168,125,91,97,164,96,185,73,139,73,250,137,229,146,226,115,233,62,180,116,99,139,159,24,225,62,179,74,216,106,243,115,251,115,214,62,62,74,148,74,217,23,102,74,167,3,36,20,229,73,72,116,22,73,165,112,118,73,132,146,230,115,95,147,254,4,49,147,206,138,22,138,134,147,231,139,213,85,53,73,130,138,107,113,67,73,255,12,164,86,26,6,235,11,184,12,2,85,196,121,250,23,254,125,194,22,80,74,82,24,46,69,1,148,10,55,192,138,173,73,176,89,191,24,131,24,132,116,161,90,226,54,91,61,176,54,95,146,121,90,129,138,98,24,116,147,205,60,180,10,150,74,138,57,244,80,105,61,76,61,156,19,117,113,251,66,24,130,15,110,228,144,235,68,87,109,79,126,103,112,175,108,214,60,237,63,45,62,2,110,12,111,111,61,245,3,81,117,188,54,200,52,128,70,218,62,113,72,196,89,110,146,62,73,65,143,28,140,192,107,18,88,200,87,214,54,82,20,254,112,98,67,113,74,227,47,176,18,189,35,185,104,103,105,152,19,229,52,244,123,223,54,131,138,214,55,250,51,159,76,26,106,173,54,183,108,62,132,223,68,206,68,38,109,81,109,130,108,222,111,23,111,9,113,61,131,58,23,237,131,128,108,83,112,219,23,137,89,130,90,179,23,97,90,113,90,5,25,252,65,45,55,239,89,60,23,199,54,142,113,144,147,154,102,165,66,110,90,43,90,147,66,43,106,249,62,54,119,91,68,202,66,29,113,89,66,225,137,176,79,40,109,194,92,206,68,77,126,189,67,12,106,86,66,4,19,166,112,51,113,233,67,165,61,223,108,37,248,79,74,101,126,235,89,47,93,243,61,92,95,93,74,223,23,164,125,38,132,133,84,250,58,0,51,20,2,126,87,213,8,25,6,229,63,158,31,182,162,3,112,91,145,112,93,143,115,211,124,89,138,32,148,200,79,231,127,205,114,16,115,244,122,56,115,57,115,246,86,65,115,72,115,169,62,24,123,108,144,245,113,242,72,225,115,246,129,202,62,12,119,209,62,162,108,253,86,25,116,30,116,31,116,226,62,240,62,244,62,250,62,211,116,14,63,83,63,66,117,109,117,114,117,141,117,124,63,200,117,220,117,192,63,77,118,215,63,116,118,220,63,122,118,92,79,136,113,35,86,128,137,105,88,29,64,67,119,57,64,97,103,69,64,219,53,152,119,106,64,111,64,94,92,190,119,203,119,242,88,24,120,185,112,28,120,168,64,57,120,71,120,81,120,102,120,72,132,53,85,51,121,3,104,50,121,3,65,9,65,145,121,153,121,187,143,6,122,188,143,103,65,145,122,178,65,188,122,121,130,196,65,207,122,219,122,207,65,33,78,98,123,108,123,123,123,18,124,27,124,96,66,122,66,123,124,156,124,140,66,184,124,148,66,237,124,147,143,192,112,207,12,207,125,212,125,208,125,253,125,174,127,180,127,159,114,151,67,32,128,37,128,57,123,46,128,49,128,84,128,204,61,180,87,160,112,183,128,233,128,237,67,12,129,42,115,14,129,18,129,96,117,20,129,1,68,57,59,86,129,89,129,90,129,19,68,58,88,124,129,132,129,37,68,147,129,45,68,165,129,239,87,193,129,228,129,84,130,143,68,166,130,118,130,202,130,216,130,255,130,176,68,87,131,105,150,138,105,5,132,245,112,100,132,227,96,136,132,4,69,190,132,225,132,248,132,16,133,56,133,82,133,59,69,111,133,112,133,224,133,119,69,114,134,146,134,178,134,239,134,69,150,139,135,6,70,23,70,174,136,255,136,36,137,71,137,145,137,103,121,41,138,56,138,148,138,180,138,81,140,212,140,242,140,28,141,152,71,95,88,195,141,237,71,238,78,58,142,216,85,84,87,113,142,245,85,176,142,55,72,206,142,226,142,228,142,237,142,242,142,183,143,193,143,202,143,204,143,51,144,196,153,173,72,224,152,19,146,30,73,40,146,88,146,107,146,177,146,174,146,191,146,227,146,235,146,243,146,244,146,253,146,67,147,132,147,173,147,69,73,81,73,191,158,23,148,1,83,29,148,45,148,62,148,106,73,84,148,121,148,45,149,162,149,167,73,244,149,51,150,229,73,160,103,36,74,64,151,53,74,178,151,194,151,84,86,228,74,232,96,185,152,25,75,241,152,68,88,14,153,25,153,180,81,28,153,55,153,66,153,93,153,98,153,112,75,197,153,157,75,60,154,15,155,131,122,105,155,129,155,221,155,241,155,244,155,109,76,32,156,111,55,194,27,73,157,58,156,254,158,80,86,147,157,189,157,192,157,252,157,246,148,182,143,123,158,172,158,177,158,189,158,198,158,220,148,226,158,241,158,248,158,200,122,68,159,148,0,183,2,160,3,26,105,195,148,172,89,215,4,64,88,193,148,185,55,213,5,21,6,118,6,186,22,87,87,115,113,194,10,205,10,191,11,106,84,59,248,203,11,158,84,251,11,59,12,83,12,101,12,124,12,231,96,141,12,122,86,181,12,221,12,237,12,111,13,178,13,200,13,85,105,47,156,165,135,4,14,14,14,215,14,144,15,45,15,115,14,32,92,188,15,11,94,92,16,79,16,118,16,30,103,123,16,136,16,150,16,71,54,191,16,211,16,47,17,59,17,100,83,173,132,227,18,117,19,54,19,129,139,119,21,25,22,195,23,199,23,120,78,187,112,45,24,106,25,45,26,69,26,42,28,112,28,172,28,200,30,195,98,213,30,21,31,152,113,85,104,69,32,233,105,200,54,124,34,215,35,250,35,42,39,113,40,79,41,253,130,103,41,147,41,213,42,165,137,232,42,160,143,14,43,184,151,63,43,71,152,189,154,76,44,0,0,136,44,183,44,232,91,8,45,18,45,183,45,149,45,66,46,116,47,204,47,51,48,102,48,31,51,222,51,177,95,72,102,191,102,121,122,103,53,243,53,0,0,186,73,0,0,26,54,22,55,0,0,70,3,181,88,14,103,24,105,167,58,87,118,226,95,17,62,185,62,254,117,154,32,208,72,184,74,25,65,154,138,238,66,13,67,59,64,52,67,150,67,69,74,202,5,210,81,17,6,159,89,168,30,190,59,255,60,4,68,214,68,136,87,116,70,155,57,47,71,232,133,201,153,98,55,195,33,94,139,78,139,0,0,18,72,251,72,21,74,9,114,192,74,120,12,101,89,165,78,134,79,121,7,218,142,44,80,143,82,63,87,113,113,153,82,25,84,74,63,167,74,188,85,70,84,110,84,82,107,0,0,115,52,63,85,50,118,94,85,24,71,98,85,102,85,199,87,63,73,93,88,102,80,251,52,204,51,0,0,3,89,124,71,72,137,174,90,137,91,6,92,144,29,161,87,81,113,0,0,2,97,18,124,86,144,178,97,154,79,98,139,2,100,74,100,91,93,247,107,0,0,132,100,28,25,234,138,246,73,136,100,239,63,18,101,192,75,191,101,181,102,27,39,101,148,225,87,149,97,39,90,205,248,0,0,185,86,33,69,252,102,106,78,52,73,86,150,143,109,189,108,24,54,119,137,153,103,110,104,17,100,94,104,0,0,199,104,66,123,192,144,17,10,38,105,0,0,57,105,69,122,0,0,250,105,38,154,45,106,95,54,105,100,33,0,131,121,52,106,91,107,44,93,25,53,0,0,157,107,208,70,164,108,59,117,101,136,174,109,182,88,28,55,141,37,75,112,205,113,84,60,128,114,133,114,129,146,122,33,139,114,48,147,230,114,208,73,57,108,159,148,80,116,248,14,39,136,245,136,38,41,115,132,177,23,184,110,42,74,32,24,164,57,185,54,0,0,0,0,63,69,182,102,173,156,164,152,67,137,204,119,88,120,214,86,223,64,10,22,161,57,47,55,232,128,197,19,173,113,102,131,221,121,168,145,0,0,183,76,175,112,171,137,253,121,10,122,11,123,102,125,122,65,67,123,126,121,9,128,181,111,223,162,3,106,24,131,162,83,7,110,191,147,54,104,93,151,111,129,35,128,181,105,237,19,47,50,72,128,133,93,48,140,131,128,21,87,35,152,73,137,171,93,136,73,190,101,213,105,210,83,165,74,129,63,17,60,54,103,144,128,244,128,46,129,161,31,79,129,137,129,175,129,26,130,6,131,47,131,138,131,202,53,104,132,170,134,250,72,230,99,86,137,8,120,85,146,184,137,242,67,231,137,223,67,232,137,70,139,212,139,248,89,9,140,0,0,197,143,236,144,0,0,16,145,60,145,247,61,94,145,202,74,208,143,143,114,139,86,231,148,233,149,176,149,184,149,50,151,209,152,73,153,106,153,195,153,40,154,14,155,90,157,155,157,159,126,248,158,35,159,164,76,71,149,147,162,162,113,255,162,145,77,18,144,203,165,156,77,156,12,190,143,193,85,186,143,176,36,185,143,147,74,9,69,127,126,86,111,177,106,234,78,228,52,44,139,157,120,58,55,128,142,245,23,36,128,108,139,153,139,62,122,175,102,235,61,85,118,183,60,53,86,86,89,154,78,129,94,88,98,191,86,109,14,14,142,109,91,136,62,158,76,222,99,0,0,246,23,123,24,48,101,45,86,74,92,26,84,17,83,198,61,152,157,125,76,34,86,30,86,73,127,216,94,117,89,64,61,112,135,28,78,234,15,73,13,186,54,23,129,94,157,24,141,59,118,69,156,78,118,185,119,69,147,50,84,72,129,247,130,37,86,50,129,24,132,189,128,234,85,98,121,67,86,22,84,157,14,206,53,5,86,241,85,241,102,226,130,45,54,52,117,240,85,186,85,151,84,114,85,65,12,150,12,208,94,72,81,118,14,98,44,162,14,171,158,90,125,222,85,117,16,157,98,109,151,148,84,205,140,246,113,118,145,252,99,185,99,254,99,105,85,67,43,114,156,179,46,154,81,223,52,167,13,167,81,77,84,30,85,19,85,102,118,45,142,138,104,177,117,182,128,4,136,134,135,199,136,182,129,28,132,193,16,236,68,4,115,6,71,144,91,11,131,147,104,123,86,244,38,47,125,163,65,115,125,208,110,182,114,112,145,217,17,8,146,252,60,169,166,172,14,249,14,102,114,162,28,78,71,194,79,249,127,235,15,250,64,93,156,31,101,160,45,243,72,224,71,124,157,236,15,10,14,0,0,163,117,237,15,0,0,72,96,135,17,163,113,142,126,80,157,26,78,4,78,119,53,13,91,178,108,103,83,172,54,220,57,125,83,165,54,24,70,154,88,110,75,45,130,75,84,170,87,149,90,121,9,0,0,82,58,101,36,116,115,172,158,9,77,237,155,254,60,48,159,91,76,169,79,158,149,222,159,92,132,182,61,178,114,179,103,32,55,46,99,37,125,247,62,44,62,42,58,8,144,204,82,116,62,122,54,233,69,142,4,64,118,240,90,182,14,122,120,46,127,167,88,191,64,124,86,139,155,116,93,84,118,52,164,133,158,225,76,0,0,251,55,25,97,218,48,242,67,0,0,93,86,169,18,167,87,99,73,6,158,52,82,174,112,173,53,0,0,124,157,86,124,57,155,222,87,108,23,83,92,211,100,208,148,53,99,100,113,173,134,40,13,34,109,226,74,113,13,0,0,254,81,15,31,142,93,3,151,209,29,129,158,76,144,31,123,2,155,209,92,163,123,104,98,53,99,255,154,207,123,42,155,126,124,0,0,66,124,134,124,21,156,252,123,9,155,0,0,27,156,62,73,90,159,115,85,195,91,253,79,152,158,242,79,96,82,6,62,209,82,103,87,86,80,183,89,18,94,200,151,171,157,92,143,105,84,180,151,64,153,186,151,44,83,48,97,44,105,218,83,10,156,2,157,59,76,65,150,128,105,166,80,70,117,109,23,218,153,115,82,0,0,89,145,129,150,92,145,0,0,81,145,151,142,127,99,35,109,202,106,17,86,142,145,122,117,133,98,252,3,79,115,112,124,33,92,253,60,0,0,25,73,214,118,157,155,42,78,212,12,190,131,66,136,0,0,74,92,192,105,0,0,122,87,31,82,245,93,206,78,49,108,242,1,57,79,156,84,218,84,154,82,130,141,254,53,0,0,243,53,0,0,82,107,124,145,165,159,151,155,46,152,180,152,186,154,168,158,132,158,122,113,20,123,0,0,250,107,24,136,120,127,0,0,32,86,74,166,119,142,83,159,0,0,212,141,79,142,28,158,1,142,130,98,125,131,40,142,117,142,211,122,119,74,62,122,216,120,234,108,103,138,7,118,90,138,38,159,206,108,214,135,195,117,178,162,83,120,64,248,12,141,226,114,113,115,45,139,2,115,241,116,235,140,187,74,47,134,186,95,160,136,183,68,0,0,59,24,5,110,0,0,126,138,27,37,0,0,253,96,103,118,215,154,68,157,110,147,143,155,245,135,0,0,0,0,247,140,44,115,33,151,176,155,214,53,178,114,7,76,81,124,74,153,89,97,89,97,4,76,150,158,125,97,0,0,95,87,111,97,166,98,57,98,0,0,92,58,226,97,170,83,245,51,100,99,2,104,210,53,87,93,194,139,218,143,57,142,0,0,217,80,70,29,6,121,50,83,56,150,59,15,101,64,0,0,254,119,0,0,194,124,26,95,218,124,45,122,102,128,99,128,77,125,5,117,242,116,148,137,26,130,12,103,98,128,134,116,91,128,240,116,3,129,36,119,137,137,204,103,83,117,209,110,169,135,206,135,200,129,140,135,73,138,173,140,67,139,43,119,248,116,218,132,53,54,178,105,166,141,0,0,169,137,0,0,185,109,193,135,17,64,231,116,219,61,118,113,164,96,156,97,209,60,0,0,119,96,0,0,113,127,45,139,0,0,233,96,126,75,32,82,24,60,199,60,215,94,86,118,49,85,68,25,254,18,3,153,220,109,173,112,193,92,173,97,15,138,119,54,238,0,70,104,14,79,98,69,31,91,76,99,80,159,166,158,107,98,71,5,219,146,223,5,197,63,76,133,181,66,239,115,181,81,73,54,66,73,228,137,68,147,219,25,238,130,200,60,60,120,68,103,223,98,51,73,170,137,160,2,179,107,5,19,171,79,237,36,8,80,41,109,132,122,0,54,177,74,19,37,0,0,126,3,164,95,128,3,71,3,219,110,31,4,0,0,1,81,122,52,14,81,108,152,67,55,22,132,164,73,135,4,96,81,180,51,106,81,255,11,252,32,229,2,48,37,142,5,51,50,131,25,130,91,125,135,179,5,153,60,178,81,184,81,52,157,201,81,207,81,209,81,220,60,211,81,166,74,179,81,226,81,66,83,237,81,205,131,62,105,45,55,123,95,11,82,38,82,60,82,181,82,87,82,148,82,185,82,197,82,21,124,66,133,224,82,13,134,19,107,0,0,222,138,73,85,217,110,128,63,84,9,236,63,51,83,0,0,226,11,203,108,38,23,27,104,213,115,74,96,170,62,204,56,232,22,221,113,162,68,109,83,116,83,171,134,126,83,0,0,150,21,19,22,230,119,147,83,155,138,160,83,171,83,174,83,167,115,114,87,89,63,156,115,193,83,197,83,73,108,73,78,254,87,217,83,171,58,143,11,224,83,235,63,163,45,246,83,119,12,19,84,121,112,43,85,87,102,91,109,109,84,83,107,116,13,93,85,143,84,164,84,166,71,13,23,221,14,180,61,77,13,188,137,152,38,71,85,237,76,47,84,23,116,134,85,169,85,0,0,215,24,58,64,82,69,53,68,179,102,180,16,55,86,205,102,138,50,164,102,173,102,77,86,79,86,241,120,241,86,135,151,254,83,0,87,239,86,237,86,102,139,35,54,79,18,70,87,165,65,110,108,139,112,66,87,177,54,126,108,230,87,22,20,3,88,84,20,99,67,38,88,245,75,92,88,170,88,97,53,224,88,220,88,60,18,251,88,255,91,67,87,80,161,120,66,211,147,161,53,31,89,166,104,195,54,89,110,62,22,36,90,83,85,146,22,5,133,201,89,78,13,129,108,42,109,220,23,217,89,251,23,178,23,166,109,113,109,40,24,213,22,249,89,69,110,171,90,99,90,230,54,169,73,0,0,8,55,150,90,101,116,211,90,161,111,84,37,133,61,17,25,50,55,184,22,131,94,208,82,118,91,136,101,124,91,14,122,4,64,93,72,4,2,213,91,96,97,52,26,204,89,165,5,243,91,157,91,16,77,5,92,68,27,19,92,206,115,20,92,165,28,40,107,73,92,221,72,133,92,233,92,239,92,139,93,249,29,55,30,16,93,24,93,70,93,164,30,186,92,215,93,252,130,45,56,1,73,73,32,115,33,135,130,54,56,194,59,46,94,138,106,0,0,122,94,188,68,211,12,166,83,183,78,0,0,168,83,113,23,9,94,244,94,130,132,249,94,251,94,160,56,252,94,62,104,27,148,13,95,193,1,148,248,222,58,174,72,58,19,58,95,136,104,208,35,0,0,113,36,99,95,189,151,110,110,114,95,64,147,54,138,167,95,182,93,95,61,80,82,106,31,248,112,104,38,214,145,158,2,41,138,49,96,133,102,119,24,99,57,199,61,57,54,144,87,180,39,113,121,64,62,158,96,0,0,179,96,130,73,143,73,83,122,164,116,225,80,160,90,100,97,36,132,66,97,166,248,210,110,129,97,244,81,86,6,135,97,170,91,183,63,95,40,211,97,157,139,93,153,208,97,50,57,128,41,193,40,35,96,92,97,30,101,139,99,24,1,197,98,112,23,213,98,13,46,108,99,223,73,23,58,56,100,248,99,142,19,252,23,0,0,138,111,54,46,20,152,140,64,29,87,225,100,229,100,123,148,102,58,58,100,87,58,77,101,22,111,40,74,35,74,133,101,109,101,95,101,126,48,181,101,64,73,55,75,209,101,216,64,41,24,224,101,227,101,223,95,0,52,24,102,247,49,248,49,68,102,164,49,165,49,75,102,117,14,103,102,230,81,115,102,0,0,61,30,49,50,244,133,200,49,19,83,197,119,247,40,164,153,2,103,156,67,33,74,43,59,250,105,194,55,0,0,103,103,98,103,205,65,237,144,215,103,233,68,34,104,80,110,60,146,1,104,230,51,160,109,93,104,111,52,225,105,11,106,223,138,115,105,195,104,205,53,1,105,0,105,50,61,1,58,60,54,128,59,172,103,97,105,74,138,252,66,54,105,152,105,161,59,201,3,99,131,144,80,249,105,89,54,42,33,69,106,3,55,157,106,243,59,177,103,200,106,156,145,13,60,29,107,35,9,222,96,53,107,116,107,205,39,181,110,219,58,181,3,88,25,64,55,33,84,90,59,225,107,252,62,220,107,55,108,139,36,241,72,81,107,90,108,38,130,121,108,188,61,197,68,189,61,164,65,12,73,0,73,201,60,229,54,235,60,50,13,131,155,249,49,145,36,143,127,55,104,37,109,161,109,235,109,150,109,92,109,124,110,4,111,127,73,133,64,114,110,51,133,116,111,199,81,0,0,0,0,46,132,33,139,0,0,47,62,83,116,130,63,204,121,79,110,145,90,75,48,248,111,13,55,157,111,48,62,250,110,151,20,61,64,85,69,240,147,68,111,92,111,78,61,116,111,112,145,59,61,159,111,68,65,211,111,145,64,85,65,57,64,240,63,180,63,63,65,223,81,86,65,87,65,64,65,221,97,75,112,126,112,167,112,129,112,204,112,213,112,214,112,223,112,4,65,232,61,180,113,150,113,119,66,43,113,69,113,136,90,74,113,0,0,156,92,101,67,79,113,98,147,193,66,44,113,90,68,39,74,34,74,186,113,232,139,189,112,14,114,66,148,21,114,17,89,67,148,36,114,65,147,5,86,46,114,64,114,116,73,189,104,85,114,87,114,85,62,68,48,13,104,61,111,130,114,0,0,43,115,35,72,43,136,237,72,4,136,40,115,46,115,207,115,170,115,58,12,46,106,201,115,73,116,226,65,231,22,36,74,35,102,197,54,183,73,141,73,251,73,247,115,21,116,3,105,38,74,57,116,195,5,215,62,0,0,173,40,96,116,178,142,71,116,228,115,118,116,185,131,108,116,48,55,116,116,241,147,44,106,130,116,83,73,140,74,95,65,121,74,143,139,70,91,3,140,158,24,200,116,136,25,14,117,0,0,30,117,217,142,75,26,215,91,172,142,133,147,77,117,74,117,103,117,110,117,130,79,4,63,19,77,142,117,93,116,158,117,180,117,2,118,44,118,81,118,79,118,111,118,118,118,245,99,144,118,239,129,248,55,17,105,14,105,161,118,165,118,183,118,204,118,159,111,98,132,157,80,125,81,28,30,30,119,38,119,64,119,175,100,32,82,88,119,172,50,175,119,100,137,104,137,193,22,244,119,0,0,118,19,18,74,202,104,175,120,199,120,211,120,165,150,46,121,224,85,215,120,52,121,177,120,12,118,184,143,132,136,43,139,131,96,28,38,134,121,0,137,2,105,128,121,87,88,157,121,57,123,60,121,169,121,42,110,38,113,168,62,198,121,13,145,212,121,32,5,95,68,15,82,130,184,248,0,0,64,32,169,78,4,0,0,0,0,52,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,64,0,0,0,0,0,0,0,0,4,88,0,60,0,0,0,0,0,128,92,173,220,243,187,201,67,238,237,164,15,38,193,155,118,242,239,222,251,250,247,15,50,68,175,254,239,253,254,17,96,176,0,0,33,25,129,32,16,136,168,96,33,105,36,0,68,137,196,0,0,3,64,53,0,67,132,49,81,147,104,2,2,0,0,0,0,0,0,0,0,0,0,0,64,0,1,128,172,100,130,64,140,161,144,4,80,96,212,0,210,42,24,157,104,53,151,79,216,248,32,196,130,28,40,130,117,148,2,56,64,160,161,197,16,113,77,196,13,152,185,94,91,1,67,159,153,3,120,32,226,31,8,137,1,201,64,7,3,13,154,144,82,209,79,124,3,2,33,32,192,110,19,131,181,219,245,229,119,144,79,23,154,54,23,12,0,110,186,9,47,96,84,0,30,120,104,34,112,86,158,37,243,142,183,23,11,239,230,119,23,91,27,193,16,152,141,18,24,182,207,1,49,114,26,91,44,182,192,32,226,195,92,130,27,224,218,206,133,214,64,169,84,11,208,15,72,68,64,16,9,212,64,174,59,100,30,68,43,23,8,134,130,54,24,160,137,231,156,91,8,132,3,2,218,144,236,219,135,133,191,162,173,157,142,157,152,32,37,70,0,70,159,127,227,213,201,132,244,214,77,6,227,182,24,18,9,0,0,0,4,0,0,32,0,0,0,0,2,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,142,120,110,95,63,126,221,61,247,252,155,252,174,210,255,143,107,241,231,191,186,174,110,23,239,220,167,62,182,181,119,201,146,215,165,182,74,110,155,185,129,77,103,254,84,241,155,98,254,111,82,215,54,254,191,41,69,129,249,189,101,166,66,57,0,0,66,96,143,0,148,64,64,210,175,215,209,219,0,160,152,178,123,6,82,32,152,22,200,61,9,0,0,1,0,0,0,1,10,178,8,128,0,0,0,4,136,32,20,16,76,0,0,4,0,161,68,16,0,65,1,0,8,64,240,223,79,54,88,241,245,181,128,245,103,128,64,0,80,78,65,200,132,0,90,96,216,1,43,1,80,161,22,196,64,242,110,17,172,32,57,196,192,8,7,12,9,152,150,196,155,16,28,152,108,134,42,166,1,70,17,109,229,203,196,192,146,16,33,22,18,157,114,244,105,14,23,42,162,129,244,123,0,8,164,11,144,16,44,204,57,74,1,240,22,11,10,64,12,29,234,12,68,14,69,2,0,0,48,12,255,1,48,2,48,14,255,39,32,27,255,26,255,31,255,1,255,48,254,38,32,37,32,80,254,81,254,82,254,183,0,84,254,85,254,86,254,87,254,92,255,19,32,49,254,20,32,51,254,116,37,52,254,79,254,8,255,9,255,53,254,54,254,91,255,93,255,55,254,56,254,20,48,21,48,57,254,58,254,16,48,17,48,59,254,60,254,10,48,11,48,61,254,62,254,8,48,9,48,63,254,64,254,12,48,13,48,65,254,66,254,14,48,15,48,67,254,68,254,89,254,90,254,91,254,92,254,93,254,94,254,24,32,25,32,28,32,29,32,29,48,30,48,53,32,50,32,3,255,6,255,10,255,59,32,167,0,3,48,203,37,207,37,179,37,178,37,206,37,6,38,5,38,199,37,198,37,161,37,160,37,189,37,188,37,163,50,5,33,175,0,227,255,63,255,205,2,73,254,74,254,77,254,78,254,75,254,76,254,95,254,96,254,97,254,11,255,13,255,215,0,247,0,177,0,26,34,28,255,30,255,29,255,102,34,103,34,96,34,30,34,82,34,97,34,98,254,99,254,100,254,101,254,102,254,94,255,41,34,42,34,165,34,32,34,31,34,191,34,210,51,209,51,43,34,46,34,53,34,52,34,64,38,66,38,149,34,153,34,145,33,147,33,144,33,146,33,150,33,151,33,153,33,152,33,37,34,35,34,15,255,60,255,21,34,104,254,4,255,229,255,18,48,224,255,225,255,5,255,32,255,3,33,9,33,105,254,106,254,107,254,213,51,156,51,157,51,158,51,206,51,161,51,142,51,143,51,196,51,176,0,89,81,91,81,94,81,93,81,97,81,99,81,231,85,233,116,206,124,129,37,130,37,131,37,132,37,133,37,134,37,135,37,136,37,143,37,142,37,141,37,140,37,139,37,138,37,137,37,60,37,52,37,44,37,36,37,28,37,148,37,0,37,2,37,149,37,12,37,16,37,20,37,24,37,109,37,110,37,112,37,111,37,80,37,94,37,106,37,97,37,226,37,227,37,229,37,228,37,113,37,114,37,115,37,16,255,17,255,18,255,19,255,20,255,21,255,22,255,23,255,24,255,25,255,96,33,97,33,98,33,99,33,100,33,101,33,102,33,103,33,104,33,105,33,33,48,34,48,35,48,36,48,37,48,38,48,39,48,40,48],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+89662);allocate([41,48,65,83,68,83,69,83,33,255,34,255,35,255,36,255,37,255,38,255,39,255,40,255,41,255,42,255,43,255,44,255,45,255,46,255,47,255,48,255,49,255,50,255,51,255,52,255,53,255,54,255,55,255,56,255,57,255,58,255,65,255,66,255,67,255,68,255,69,255,70,255,71,255,72,255,73,255,74,255,75,255,76,255,77,255,78,255,79,255,80,255,81,255,82,255,83,255,84,255,85,255,86,255,87,255,88,255,89,255,90,255,145,3,146,3,147,3,148,3,149,3,150,3,151,3,152,3,153,3,154,3,155,3,156,3,157,3,158,3,159,3,160,3,161,3,163,3,164,3,165,3,166,3,167,3,168,3,169,3,177,3,178,3,179,3,180,3,181,3,182,3,183,3,184,3,185,3,186,3,187,3,188,3,189,3,190,3,191,3,192,3,193,3,195,3,196,3,197,3,198,3,199,3,200,3,201,3,5,49,6,49,7,49,8,49,9,49,10,49,11,49,12,49,13,49,14,49,15,49,16,49,17,49,18,49,19,49,20,49,21,49,22,49,23,49,24,49,25,49,26,49,27,49,28,49,29,49,30,49,31,49,32,49,33,49,34,49,35,49,36,49,37,49,38,49,39,49,40,49,41,49,217,2,201,2,202,2,199,2,203,2,0,36,1,36,2,36,3,36,4,36,5,36,6,36,7,36,8,36,9,36,10,36,11,36,12,36,13,36,14,36,15,36,16,36,17,36,18,36,19,36,20,36,21,36,22,36,23,36,24,36,25,36,26,36,27,36,28,36,29,36,30,36,31,36,33,36,172,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,89,78,1,78,3,78,67,78,93,78,134,78,140,78,186,78,63,81,101,81,107,81,224,81,0,82,1,82,155,82,21,83,65,83,92,83,200,83,9,78,11,78,8,78,10,78,43,78,56,78,225,81,69,78,72,78,95,78,94,78,142,78,161,78,64,81,3,82,250,82,67,83,201,83,227,83,31,87,235,88,21,89,39,89,115,89,80,91,81,91,83,91,248,91,15,92,34,92,56,92,113,92,221,93,229,93,241,93,242,93,243,93,254,93,114,94,254,94,11,95,19,95,77,98,17,78,16,78,13,78,45,78,48,78,57,78,75,78,57,92,136,78,145,78,149,78,146,78,148,78,162,78,193,78,192,78,195,78,198,78,199,78,205,78,202,78,203,78,196,78,67,81,65,81,103,81,109,81,110,81,108,81,151,81,246,81,6,82,7,82,8,82,251,82,254,82,255,82,22,83,57,83,72,83,71,83,69,83,94,83,132,83,203,83,202,83,205,83,236,88,41,89,43,89,42,89,45,89,84,91,17,92,36,92,58,92,111,92,244,93,123,94,255,94,20,95,21,95,195,95,8,98,54,98,75,98,78,98,47,101,135,101,151,101,164,101,185,101,229,101,240,102,8,103,40,103,32,107,98,107,121,107,203,107,212,107,219,107,15,108,52,108,107,112,42,114,54,114,59,114,71,114,89,114,91,114,172,114,139,115,25,78,22,78,21,78,20,78,24,78,59,78,77,78,79,78,78,78,229,78,216,78,212,78,213,78,214,78,215,78,227,78,228,78,217,78,222,78,69,81,68,81,137,81,138,81,172,81,249,81,250,81,248,81,10,82,160,82,159,82,5,83,6,83,23,83,29,83,223,78,74,83,73,83,97,83,96,83,111,83,110,83,187,83,239,83,228,83,243,83,236,83,238,83,233,83,232,83,252,83,248,83,245,83,235,83,230,83,234,83,242,83,241,83,240,83,229,83,237,83,251,83,219,86,218,86,22,89,46,89,49,89,116,89,118,89,85,91,131,91,60,92,232,93,231,93,230,93,2,94,3,94,115,94,124,94,1,95,24,95,23,95,197,95,10,98,83,98,84,98,82,98,81,98,165,101,230,101,46,103,44,103,42,103,43,103,45,103,99,107,205,107,17,108,16,108,56,108,65,108,64,108,62,108,175,114,132,115,137,115,220,116,230,116,24,117,31,117,40,117,41,117,48,117,49,117,50,117,51,117,139,117,125,118,174,118,191,118,238,118,219,119,226,119,243,119,58,121,190,121,116,122,203,122,30,78,31,78,82,78,83,78,105,78,153,78,164,78,166,78,165,78,255,78,9,79,25,79,10,79,21,79,13,79,16,79,17,79,15,79,242,78,246,78,251,78,240,78,243,78,253,78,1,79,11,79,73,81,71,81,70,81,72,81,104,81,113,81,141,81,176,81,23,82,17,82,18,82,14,82,22,82,163,82,8,83,33,83,32,83,112,83,113,83,9,84,15,84,12,84,10,84,16,84,1,84,11,84,4,84,17,84,13,84,8,84,3,84,14,84,6,84,18,84,224,86,222,86,221,86,51,87,48,87,40,87,45,87,44,87,47,87,41,87,25,89,26,89,55,89,56,89,132,89,120,89,131,89,125,89,121,89,130,89,129,89,87,91,88,91,135,91,136,91,133,91,137,91,250,91,22,92,121,92,222,93,6,94,118,94,116,94,15,95,27,95,217,95,214,95,14,98,12,98,13,98,16,98,99,98,91,98,88,98,54,101,233,101,232,101,236,101,237,101,242,102,243,102,9,103,61,103,52,103,49,103,53,103,33,107,100,107,123,107,22,108,93,108,87,108,89,108,95,108,96,108,80,108,85,108,97,108,91,108,77,108,78,108,112,112,95,114,93,114,126,118,249,122,115,124,248,124,54,127,138,127,189,127,1,128,3,128,12,128,18,128,51,128,127,128,137,128,139,128,140,128,227,129,234,129,243,129,252,129,12,130,27,130,31,130,110,130,114,130,126,130,107,134,64,136,76,136,99,136,127,137,33,150,50,78,168,78,77,79,79,79,71,79,87,79,94,79,52,79,91,79,85,79,48,79,80,79,81,79,61,79,58,79,56,79,67,79,84,79,60,79,70,79,99,79,92,79,96,79,47,79,78,79,54,79,89,79,93,79,72,79,90,79,76,81,75,81,77,81,117,81,182,81,183,81,37,82,36,82,41,82,42,82,40,82,171,82,169,82,170,82,172,82,35,83,115,83,117,83,29,84,45,84,30,84,62,84,38,84,78,84,39,84,70,84,67,84,51,84,72,84,66,84,27,84,41,84,74,84,57,84,59,84,56,84,46,84,53,84,54,84,32,84,60,84,64,84,49,84,43,84,31,84,44,84,234,86,240,86,228,86,235,86,74,87,81,87,64,87,77,87,71,87,78,87,62,87,80,87,79,87,59,87,239,88,62,89,157,89,146,89,168,89,158,89,163,89,153,89,150,89,141,89,164,89,147,89,138,89,165,89,93,91,92,91,90,91,91,91,140,91,139,91,143,91,44,92,64,92,65,92,63,92,62,92,144,92,145,92,148,92,140,92,235,93,12,94,143,94,135,94,138,94,247,94,4,95,31,95,100,95,98,95,119,95,121,95,216,95,204,95,215,95,205,95,241,95,235,95,248,95,234,95,18,98,17,98,132,98,151,98,150,98,128,98,118,98,137,98,109,98,138,98,124,98,126,98,121,98,115,98,146,98,111,98,152,98,110,98,149,98,147,98,145,98,134,98,57,101,59,101,56,101,241,101,244,102,95,103,78,103,79,103,80,103,81,103,92,103,86,103,94,103,73,103,70,103,96,103,83,103,87,103,101,107,207,107,66,108,94,108,153,108,129,108,136,108,137,108,133,108,155,108,106,108,122,108,144,108,112,108,140,108,104,108,150,108,146,108,125,108,131,108,114,108,126,108,116,108,134,108,118,108,141,108,148,108,152,108,130,108,118,112,124,112,125,112,120,112,98,114,97,114,96,114,196,114,194,114,150,115,44,117,43,117,55,117,56,117,130,118,239,118,227,119,193,121,192,121,191,121,118,122,251,124,85,127,150,128,147,128,157,128,152,128,155,128,154,128,178,128,111,130,146,130,139,130,141,130,139,137,210,137,0,138,55,140,70,140,85,140,157,140,100,141,112,141,179,141,171,142,202,142,155,143,176,143,194,143,198,143,197,143,196,143,225,93,145,144,162,144,170,144,166,144,163,144,73,145,198,145,204,145,50,150,46,150,49,150,42,150,44,150,38,78,86,78,115,78,139,78,155,78,158,78,171,78,172,78,111,79,157,79,141,79,115,79,127,79,108,79,155,79,139,79,134,79,131,79,112,79,117,79,136,79,105,79,123,79,150,79,126,79,143,79,145,79,122,79,84,81,82,81,85,81,105,81,119,81,118,81,120,81,189,81,253,81,59,82,56,82,55,82,58,82,48,82,46,82,54,82,65,82,190,82,187,82,82,83,84,83,83,83,81,83,102,83,119,83,120,83,121,83,214,83,212,83,215,83,115,84,117,84,150,84,120,84,149,84,128,84,123,84,119,84,132,84,146,84,134,84,124,84,144,84,113,84,118,84,140,84,154,84,98,84,104,84,139,84,125,84,142,84,250,86,131,87,119,87,106,87,105,87,97,87,102,87,100,87,124,87,28,89,73,89,71,89,72,89,68,89,84,89,190,89,187,89,212,89,185,89,174,89,209,89,198,89,208,89,205,89,203,89,211,89,202,89,175,89,179,89,210,89,197,89,95,91,100,91,99,91,151,91,154,91,152,91,156,91,153,91,155,91,26,92,72,92,69,92,70,92,183,92,161,92,184,92,169,92,171,92,177,92,179,92,24,94,26,94,22,94,21,94,27,94,17,94,120,94,154,94,151,94,156,94,149,94,150,94,246,94,38,95,39,95,41,95,128,95,129,95,127,95,124,95,221,95,224,95,253,95,245,95,255,95,15,96,20,96,47,96,53,96,22,96,42,96,21,96,33,96,39,96,41,96,43,96,27,96,22,98,21,98,63,98,62,98,64,98,127,98,201,98,204,98,196,98,191,98,194,98,185,98,210,98,219,98,171,98,211,98,212,98,203,98,200,98,168,98,189,98,188,98,208,98,217,98,199,98,205,98,181,98,218,98,177,98,216,98,214,98,215,98,198,98,172,98,206,98,62,101,167,101,188,101,250,101,20,102,19,102,12,102,6,102,2,102,14,102,0,102,15,102,21,102,10,102,7,102,13,103,11,103,109,103,139,103,149,103,113,103,156,103,115,103,119,103,135,103,157,103,151,103,111,103,112,103,127,103,137,103,126,103,144,103,117,103,154,103,147,103,124,103,106,103,114,103,35,107,102,107,103,107,127,107,19,108,27,108,227,108,232,108,243,108,177,108,204,108,229,108,179,108,189,108,190,108,188,108,226,108,171,108,213,108,211,108,184,108,196,108,185,108,193,108,174,108,215,108,197,108,241,108,191,108,187,108,225,108,219,108,202,108,172,108,239,108,220,108,214,108,224,108,149,112,142,112,146,112,138,112,153,112,44,114,45,114,56,114,72,114,103,114,105,114,192,114,206,114,217,114,215,114,208,114,169,115,168,115,159,115,171,115,165,115,61,117,157,117,153,117,154,117,132,118,194,118,242,118,244,118,229,119,253,119,62,121,64,121,65,121,201,121,200,121,122,122,121,122,250,122,254,124,84,127,140,127,139,127,5,128,186,128,165,128,162,128,177,128,161,128,171,128,169,128,180,128,170,128,175,128,229,129,254,129,13,130,179,130,157,130,153,130,173,130,189,130,159,130,185,130,177,130,172,130,165,130,175,130,184,130,163,130,176,130,190,130,183,130,78,134,113,134,29,82,104,136,203,142,206,143,212,143,209,143,181,144,184,144,177,144,182,144,199,145,209,145,119,149,128,149,28,150,64,150,63,150,59,150,68,150,66,150,185,150,232,150,82,151,94,151,159,78,173,78,174,78,225,79,181,79,175,79,191,79,224,79,209,79,207,79,221,79,195,79,182,79,216,79,223,79,202,79,215,79,174,79,208,79,196,79,194,79,218,79,206,79,222,79,183,79,87,81,146,81,145,81,160,81,78,82,67,82,74,82,77,82,76,82,75,82,71,82,199,82,201,82,195,82,193,82,13,83,87,83,123,83,154,83,219,83,172,84,192,84,168,84,206,84,201,84,184,84,166,84,179,84,199,84,194,84,189,84,170,84,193,84,196,84,200,84,175,84,171,84,177,84,187,84,169,84,167,84,191,84,255,86,130,87,139,87,160,87,163,87,162,87,206,87,174,87,147,87,85,89,81,89,79,89,78,89,80,89,220,89,216,89,255,89,227,89,232,89,3,90,229,89,234,89,218,89,230,89,1,90,251,89,105,91,163,91,166,91,164,91,162,91,165,91,1,92,78,92,79,92,77,92,75,92,217,92,210,92,247,93,29,94,37,94,31,94,125,94,160,94,166,94,250,94,8,95,45,95,101,95,136,95,133,95,138,95,139,95,135,95,140,95,137,95,18,96,29,96,32,96,37,96,14,96,40,96,77,96,112,96,104,96,98,96,70,96,67,96,108,96,107,96,106,96,100,96,65,98,220,98,22,99,9,99,252,98,237,98,1,99,238,98,253,98,7,99,241,98,247,98,239,98,236,98,254,98,244,98,17,99,2,99,63,101,69,101,171,101,189,101,226,101,37,102,45,102,32,102,39,102,47,102,31,102,40,102,49,102,36,102,247,102,255,103,211,103,241,103,212,103,208,103,236,103,182,103,175,103,245,103,233,103,239,103,196,103,209,103,180,103,218,103,229,103,184,103,207,103,222,103,243,103,176,103,217,103,226,103,221,103,210,103,106,107,131,107,134,107,181,107,210,107,215,107,31,108,201,108,11,109,50,109,42,109,65,109,37,109,12,109,49,109,30,109,23,109,59,109,61,109,62,109,54,109,27,109,245,108,57,109,39,109,56,109,41,109,46,109,53,109,14,109,43,109,171,112,186,112,179,112,172,112,175,112,173,112,184,112,174,112,164,112,48,114,114,114,111,114,116,114,233,114,224,114,225,114,183,115,202,115,187,115,178,115,205,115,192,115,179,115,26,117,45,117,79,117,76,117,78,117,75,117,171,117,164,117,165,117,162,117,163,117,120,118,134,118,135,118,136,118,200,118,198,118,195,118,197,118,1,119,249,118,248,118,9,119,11,119,254,118,252,118,7,119,220,119,2,120,20,120,12,120,13,120,70,121,73,121,72,121,71,121,185,121,186,121,209,121,210,121,203,121,127,122,129,122,255,122,253,122,125,124,2,125,5,125,0,125,9,125,7,125,4,125,6,125,56,127,142,127,191,127,4,128,16,128,13,128,17,128,54,128,214,128,229,128,218,128,195,128,196,128,204,128,225,128,219,128,206,128,222,128,228,128,221,128,244,129,34,130,231,130,3,131,5,131,227,130,219,130,230,130,4,131,229,130,2,131,9,131,210,130,215,130,241,130,1,131,220,130,212,130,209,130,222,130,211,130,223,130,239,130,6,131,80,134,121,134,123,134,122,134,77,136,107,136,129,137,212,137,8,138,2,138,3,138,158,140,160,140,116,141,115,141,180,141,205,142,204,142,240,143,230,143,226,143,234,143,229,143,237,143,235,143,228,143,232,143,202,144,206,144,193,144,195,144,75,145,74,145,205,145,130,149,80,150,75,150,76,150,77,150,98,151,105,151,203,151,237,151,243,151,1,152,168,152,219,152,223,152,150,153,153,153,88,78,179,78,12,80,13,80,35,80,239,79,38,80,37,80,248,79,41,80,22,80,6,80,60,80,31,80,26,80,18,80,17,80,250,79,0,80,20,80,40,80,241,79,33,80,11,80,25,80,24,80,243,79,238,79,45,80,42,80,254,79,43,80,9,80,124,81,164,81,165,81,162,81,205,81,204,81,198,81,203,81,86,82,92,82,84,82,91,82,93,82,42,83,127,83,159,83,157,83,223,83,232,84,16,85,1,85,55,85,252,84,229,84,242,84,6,85,250,84,20,85,233,84,237,84,225,84,9,85,238,84,234,84,230,84,39,85,7,85,253,84,15,85,3,87,4,87,194,87,212,87,203,87,195,87,9,88,15,89,87,89,88,89,90,89,17,90,24,90,28,90,31,90,27,90,19,90,236,89,32,90,35,90,41,90,37,90,12,90,9,90,107,91,88,92,176,91,179,91,182,91,180,91,174,91,181,91,185,91,184,91,4,92,81,92,85,92,80,92,237,92,253,92,251,92,234,92,232,92,240,92,246,92,1,93,244,92,238,93,45,94,43,94,171,94,173,94,167,94,49,95,146,95,145,95,144,95,89,96,99,96,101,96,80,96,85,96,109,96,105,96,111,96,132,96,159,96,154,96,141,96,148,96,140,96,133,96,150,96,71,98,243,98,8,99,255,98,78,99,62,99,47,99,85,99,66,99,70,99,79,99,73,99,58,99,80,99,61,99,42,99,43,99,40,99,77,99,76,99,72,101,73,101,153,101,193,101,197,101,66,102,73,102,79,102,67,102,82,102,76,102,69,102,65,102,248,102,20,103,21,103,23,103,33,104,56,104,72,104,70,104,83,104,57,104,66,104,84,104,41,104,179,104,23,104,76,104,81,104,61,104,244,103,80,104,64,104,60,104,67,104,42,104,69,104,19,104,24,104,65,104,138,107,137,107,183,107,35,108,39,108,40,108,38,108,36,108,240,108,106,109,149,109,136,109,135,109,102,109,120,109,119,109,89,109,147,109,108,109,137,109,110,109,90,109,116,109,105,109,140,109,138,109,121,109,133,109,101,109,148,109,202,112,216,112,228,112,217,112,200,112,207,112,57,114,121,114,252,114,249,114,253,114,248,114,247,114,134,115,237,115,9,116,238,115,224,115,234,115,222,115,84,117,93,117,92,117,90,117,89,117,190,117,197,117,199,117,178,117,179,117,189,117,188,117,185,117,194,117,184,117,139,118,176,118,202,118,205,118,206,118,41,119,31,119,32,119,40,119,233,119,48,120,39,120,56,120,29,120,52,120,55,120,37,120,45,120,32,120,31,120,50,120,85,121,80,121,96,121,95,121,86,121,94,121,93,121,87,121,90,121,228,121,227,121,231,121,223,121,230,121,233,121,216,121,132,122,136,122,217,122,6,123,17,123,137,124,33,125,23,125,11,125,10,125,32,125,34,125,20,125,16,125,21,125,26,125,28,125,13,125,25,125,27,125,58,127,95,127,148,127,197,127,193,127,6,128,24,128,21,128,25,128,23,128,61,128,63,128,241,128,2,129,240,128,5,129,237,128,244,128,6,129,248,128,243,128,8,129,253,128,10,129,252,128,239,128,237,129,236,129,0,130,16,130,42,130,43,130,40,130,44,130,187,130,43,131,82,131,84,131,74,131,56,131,80,131,73,131,53,131,52,131,79,131,50,131,57,131,54,131,23,131,64,131,49,131,40,131,67,131,84,134,138,134,170,134,147,134,164,134,169,134,140,134,163,134,156,134,112,136,119,136,129,136,130,136,125,136,121,136,24,138,16,138,14,138,12,138,21,138,10,138,23,138,19,138,22,138,15,138,17,138,72,140,122,140,121,140,161,140,162,140,119,141,172,142,210,142,212,142,207,142,177,143,1,144,6,144,247,143,0,144,250,143,244,143,3,144,253,143,5,144,248,143,149,144,225,144,221,144,226,144,82,145,77,145,76,145,216,145,221,145,215,145,220,145,217,145,131,149,98,150,99,150,97,150,91,150,93,150,100,150,88,150,94,150,187,150,226,152,172,153,168,154,216,154,37,155,50,155,60,155,126,78,122,80,125,80,92,80,71,80,67,80,76,80,90,80,73,80,101,80,118,80,78,80,85,80,117,80,116,80,119,80,79,80,15,80,111,80,109,80,92,81,149,81,240,81,106,82,111,82,210,82,217,82,216,82,213,82,16,83,15,83,25,83,63,83,64,83,62,83,195,83,252,102,70,85,106,85,102,85,68,85,94,85,97,85,67,85,74,85,49,85,86,85,79,85,85,85,47,85,100,85,56,85,46,85,92,85,44,85,99,85,51,85,65,85,87,85,8,87,11,87,9,87,223,87,5,88,10,88,6,88,224,87,228,87,250,87,2,88,53,88,247,87,249,87,32,89,98,89,54,90,65,90,73,90,102,90,106,90,64,90,60,90,98,90,90,90,70,90,74,90,112,91,199,91,197,91,196,91,194,91,191,91,198,91,9,92,8,92,7,92,96,92,92,92,93,92,7,93,6,93,14,93,27,93,22,93,34,93,17,93,41,93,20,93,25,93,36,93,39,93,23,93,226,93,56,94,54,94,51,94,55,94,183,94,184,94,182,94,181,94,190,94,53,95,55,95,87,95,108,95,105,95,107,95,151,95,153,95,158,95,152,95,161,95,160,95,156,95,127,96,163,96,137,96,160,96,168,96,203,96,180,96,230,96,189,96,197,96,187,96,181,96,220,96,188,96,216,96,213,96,198,96,223,96,184,96,218,96,199,96,26,98,27,98,72,98,160,99,167,99,114,99,150,99,162,99,165,99,119,99,103,99,152,99,170,99,113,99,169,99,137,99,131,99,155,99,107,99,168,99,132,99,136,99,153,99,161,99,172,99,146,99,143,99,128,99,123,99,105,99,104,99,122,99,93,101,86,101,81,101,89,101,87,101,95,85,79,101,88,101,85,101,84,101,156,101,155,101,172,101,207,101,203,101,204,101,206,101,93,102,90,102,100,102,104,102,102,102,94,102,249,102,215,82,27,103,129,104,175,104,162,104,147,104,181,104,127,104,118,104,177,104,167,104,151,104,176,104,131,104,196,104,173,104,134,104,133,104,148,104,157,104,168,104,159,104,161,104,130,104,50,107,186,107,235,107,236,107,43,108,142,109,188,109,243,109,217,109,178,109,225,109,204,109,228,109,251,109,250,109,5,110,199,109,203,109,175,109,209,109,174,109,222,109,249,109,184,109,247,109,245,109,197,109,210,109,26,110,181,109,218,109,235,109,216,109,234,109,241,109,238,109,232,109,198,109,196,109,170,109,236,109,191,109,230,109,249,112,9,113,10,113,253,112,239,112,61,114,125,114,129,114,28,115,27,115,22,115,19,115,25,115,135,115,5,116,10,116,3,116,6,116,254,115,13,116,224,116,246,116,247,116,28,117,34,117,101,117,102,117,98,117,112,117,143,117,212,117,213,117,181,117,202,117,205,117,142,118,212,118,210,118,219,118,55,119,62,119,60,119,54,119,56,119,58,119,107,120,67,120,78,120,101,121,104,121,109,121,251,121,146,122,149,122,32,123,40,123,27,123,44,123,38,123,25,123,30,123,46,123,146,124,151,124,149,124,70,125,67,125,113,125,46,125,57,125,60,125,64,125,48,125,51,125,68,125,47,125,66,125,50,125,49,125,61,127,158,127,154,127,204,127,206,127,210,127,28,128,74,128,70,128,47,129,22,129,35,129,43,129,41,129,48,129,36,129,2,130,53,130,55,130,54,130,57,130,142,131,158,131,152,131,120,131,162,131,150,131,189,131,171,131,146,131,138,131,147,131,137,131,160,131,119,131,123,131,124,131,134,131,167,131,85,134,106,95,199,134,192,134,182,134,196,134,181,134,198,134,203,134,177,134,175,134,201,134,83,136,158,136,136,136,171,136,146,136,150,136,141,136,139,136,147,137,143,137,42,138,29,138,35,138,37,138,49,138,45,138,31,138,27,138,34,138,73,140,90,140,169,140,172,140,171,140,168,140,170,140,167,140,103,141,102,141,190,141,186,141,219,142,223,142,25,144,13,144,26,144,23,144,35,144,31,144,29,144,16,144,21,144,30,144,32,144,15,144,34,144,22,144,27,144,20,144,232,144,237,144,253,144,87,145,206,145,245,145,230,145,227,145,231,145,237,145,233,145,137,149,106,150,117,150,115,150,120,150,112,150,116,150,118,150,119,150,108,150,192,150,234,150,233,150,224,122,223,122,2,152,3,152,90,155,229,156,117,158,127,158,165,158,187,158,162,80,141,80,133,80,153,80,145,80,128,80,150,80,152,80,154,80,0,103,241,81,114,82,116,82,117,82,105,82,222,82,221,82,219,82,90,83,165,83,123,85,128,85,167,85,124,85,138,85,157,85,152,85,130,85,156,85,170,85,148,85,135,85,139,85,131,85,179,85,174,85,159,85,62,85,178,85,154,85,187,85,172,85,177,85,126,85,137,85,171,85,153,85,13,87,47,88,42,88,52,88,36,88,48,88,49,88,33,88,29,88,32,88,249,88,250,88,96,89,119,90,154,90,127,90,146,90,155,90,167,90,115,91,113,91,210,91,204,91,211,91,208,91,10,92,11,92,49,92,76,93,80,93,52,93,71,93,253,93,69,94,61,94,64,94,67,94,126,94,202,94,193,94,194,94,196,94,60,95,109,95,169,95,170,95,168,95,209,96,225,96,178,96,182,96,224,96,28,97,35,97,250,96,21,97,240,96,251,96,244,96,104,97,241,96,14,97,246,96,9,97,0,97,18,97,31,98,73,98,163,99,140,99,207,99,192,99,233,99,201,99,198,99,205,99,210,99,227,99,208,99,225,99,214,99,237,99,238,99,118,99,244,99,234,99,219,99,82,100,218,99,249,99,94,101,102,101,98,101,99,101,145,101,144,101,175,101,110,102,112,102,116,102,118,102,111,102,145,102,122,102,126,102,119,102,254,102,255,102,31,103,29,103,250,104,213,104,224,104,216,104,215,104,5,105,223,104,245,104,238,104,231,104,249,104,210,104,242,104,227,104,203,104,205,104,13,105,18,105,14,105,201,104,218,104,110,105,251,104,62,107,58,107,61,107,152,107,150,107,188,107,239,107,46,108,47,108,44,108,47,110,56,110,84,110,33,110,50,110,103,110,74,110,32,110,37,110,35,110,27,110,91,110,88,110,36,110,86,110,110,110,45,110,38,110,111,110,52,110,77,110,58,110,44,110,67,110,29,110,62,110,203,110,137,110,25,110,78,110,99,110,68,110,114,110,105,110,95,110,25,113,26,113,38,113,48,113,33,113,54,113,110,113,28,113,76,114,132,114,128,114,54,115,37,115,52,115,41,115,58,116,42,116,51,116,34,116,37,116,53,116,54,116,52,116,47,116,27,116,38,116,40,116,37,117,38,117,107,117,106,117,226,117,219,117,227,117,217,117,216,117,222,117,224,117,123,118,124,118,150,118,147,118,180,118,220,118,79,119,237,119,93,120,108,120,111,120,13,122,8,122,11,122,5,122,0,122,152,122,151,122,150,122,229,122,227,122,73,123,86,123,70,123,80,123,82,123,84,123,77,123,75,123,79,123,81,123,159,124,165,124,94,125,80,125,104,125,85,125,43,125,110,125,114,125,97,125,102,125,98,125,112,125,115,125,132,85,212,127,213,127,11,128,82,128,133,128,85,129,84,129,75,129,81,129,78,129,57,129,70,129,62,129,76,129,83,129,116,129,18,130,28,130,233,131,3,132,248,131,13,132,224,131,197,131,11,132,193,131,239,131,241,131,244,131,87,132,10,132,240,131,12,132,204,131,253,131,242,131,202,131,56,132,14,132,4,132,220,131,7,132,212,131,223,131,91,134,223,134,217,134,237,134,212,134,219,134,228,134,208,134,222,134,87,136,193,136,194,136,177,136,131,137,150,137,59,138,96,138,85,138,94,138,60,138,65,138,84,138,91,138,80,138,70,138,52,138,58,138,54,138,86,138,97,140,130,140,175,140,188,140,179,140,189,140,193,140,187,140,192,140,180,140,183,140,182,140,191,140,184,140,138,141,133,141,129,141,206,141,221,141,203,141,218,141,209,141,204,141,219,141,198,141,251,142,248,142,252,142,156,143,46,144,53,144,49,144,56,144,50,144,54,144,2,145,245,144,9,145,254,144,99,145,101,145,207,145,20,146,21,146,35,146,9,146,30,146,13,146,16,146,7,146,17,146,148,149,143,149,139,149,145,149,147,149,146,149,142,149,138,150,142,150,139,150,125,150,133,150,134,150,141,150,114,150,132,150,193,150,197,150,196,150,198,150,199,150,239,150,242,150,204,151,5,152,6,152,8,152,231,152,234,152,239,152,233,152,242,152,237,152,174,153,173,153,195,158,205,158,209,158,130,78,173,80,181,80,178,80,179,80,197,80,190,80,172,80,183,80,187,80,175,80,199,80,127,82,119,82,125,82,223,82,230,82,228,82,226,82,227,82,47,83,223,85,232,85,211,85,230,85,206,85,220,85,199,85,209,85,227,85,228,85,239,85,218,85,225,85,197,85,198,85,229,85,201,85,18,87,19,87,94,88,81,88,88,88,87,88,90,88,84,88,107,88,76,88,109,88,74,88,98,88,82,88,75,88,103,89,193,90,201,90,204,90,190,90,189,90,188,90,179,90,194,90,178,90,105,93,111,93,76,94,121,94,201,94,200,94,18,95,89,95,172,95,174,95,26,97,15,97,72,97,31,97,243,96,27,97,249,96,1,97,8,97,78,97,76,97,68,97,77,97,62,97,52,97,39,97,13,97,6,97,55,97,33,98,34,98,19,100,62,100,30,100,42,100,45,100,61,100,44,100,15,100,28,100,20,100,13,100,54,100,22,100,23,100,6,100,108,101,159,101,176,101,151,102,137,102,135,102,136,102,150,102,132,102,152,102,141,102,3,103,148,105,109,105,90,105,119,105,96,105,84,105,117,105,48,105,130,105,74,105,104,105,107,105,94,105,83,105,121,105,134,105,93,105,99,105,91,105,71,107,114,107,192,107,191,107,211,107,253,107,162,110,175,110,211,110,182,110,194,110,144,110,157,110,199,110,197,110,165,110,152,110,188,110,186,110,171,110,209,110,150,110,156,110,196,110,212,110,170,110,167,110,180,110,78,113,89,113,105,113,100,113,73,113,103,113,92,113,108,113,102,113,76,113,101,113,94,113,70,113,104,113,86,113,58,114,82,114,55,115,69,115,63,115,62,115,111,116,90,116,85,116,95,116,94,116,65,116,63,116,89,116,91,116,92,116,118,117,120,117,0,118,240,117,1,118,242,117,241,117,250,117,255,117,244,117,243,117,222,118,223,118,91,119,107,119,102,119,94,119,99,119,121,119,106,119,108,119,92,119,101,119,104,119,98,119,238,119,142,120,176,120,151,120,152,120,140,120,137,120,124,120,145,120,147,120,127,120,122,121,127,121,129,121,44,132,189,121,28,122,26,122,32,122,20,122,31,122,30,122,159,122,160,122,119,123,192,123,96,123,110,123,103,123,177,124,179,124,181,124,147,125,121,125,145,125,129,125,143,125,91,125,110,127,105,127,106,127,114,127,169,127,168,127,164,127,86,128,88,128,134,128,132,128,113,129,112,129,120,129,101,129,110,129,115,129,107,129,121,129,122,129,102,129,5,130,71,130,130,132,119,132,61,132,49,132,117,132,102,132,107,132,73,132,108,132,91,132,60,132,53,132,97,132,99,132,105,132,109,132,70,132,94,134,92,134,95,134,249,134,19,135,8,135,7,135,0,135,254,134,251,134,2,135,3,135,6,135,10,135,89,136,223,136,212,136,217,136,220,136,216,136,221,136,225,136,202,136,213,136,210,136,156,137,227,137,107,138,114,138,115,138,102,138,105,138,112,138,135,138,124,138,99,138,160,138,113,138,133,138,109,138,98,138,110,138,108,138,121,138,123,138,62,138,104,138,98,140,138,140,137,140,202,140,199,140,200,140,196,140,178,140,195,140,194,140,197,140,225,141,223,141,232,141,239,141,243,141,250,141,234,141,228,141,230,141,178,142,3,143,9,143,254,142,10,143,159,143,178,143,75,144,74,144,83,144,66,144,84,144,60,144,85,144,80,144,71,144,79,144,78,144,77,144,81,144,62,144,65,144,18,145,23,145,108,145,106,145,105,145,201,145,55,146,87,146,56,146,61,146,64,146,62,146,91,146,75,146,100,146,81,146,52,146,73,146,77,146,69,146,57,146,63,146,90,146,152,149,152,150,148,150,149,150,205,150,203,150,201,150,202,150,247,150,251,150,249,150,246,150,86,151,116,151,118,151,16,152,17,152,19,152,10,152,18,152,12,152,252,152,244,152,253,152,254,152,179,153,177,153,180,153,225,154,233,156,130,158,14,159,19,159,32,159,231,80,238,80,229,80,214,80,237,80,218,80,213,80,207,80,209,80,241,80,206,80,233,80,98,81,243,81,131,82,130,82,49,83,173,83,254,85,0,86,27,86,23,86,253,85,20,86,6,86,9,86,13,86,14,86,247,85,22,86,31,86,8,86,16,86,246,85,24,87,22,87,117,88,126,88,131,88,147,88,138,88,121,88,133,88,125,88,253,88,37,89,34,89,36,89,106,89,105,89,225,90,230,90,233,90,215,90,214,90,216,90,227,90,117,91,222,91,231,91,225,91,229,91,230,91,232,91,226,91,228,91,223,91,13,92,98,92,132,93,135,93,91,94,99,94,85,94,87,94,84,94,211,94,214,94,10,95,70,95,112,95,185,95,71,97,63,97,75,97,119,97,98,97,99,97,95,97,90,97,88,97,117,97,42,98,135,100,88,100,84,100,164,100,120,100,95,100,122,100,81,100,103,100,52,100,109,100,123,100,114,101,161,101,215,101,214,101,162,102,168,102,157,102,156,105,168,105,149,105,193,105,174,105,211,105,203,105,155,105,183,105,187,105,171,105,180,105,208,105,205,105,173,105,204,105,166,105,195,105,163,105,73,107,76,107,51,108,51,111,20,111,254,110,19,111,244,110,41,111,62,111,32,111,44,111,15,111,2,111,34,111,255,110,239,110,6,111,49,111,56,111,50,111,35,111,21,111,43,111,47,111,136,111,42,111,236,110,1,111,242,110,204,110,247,110,148,113,153,113,125,113,138,113,132,113,146,113,62,114,146,114,150,114,68,115,80,115,100,116,99,116,106,116,112,116,109,116,4,117,145,117,39,118,13,118,11,118,9,118,19,118,225,118,227,118,132,119,125,119,127,119,97,119,193,120,159,120,167,120,179,120,169,120,163,120,142,121,143,121,141,121,46,122,49,122,170,122,169,122,237,122,239,122,161,123,149,123,139,123,117,123,151,123,157,123,148,123,143,123,184,123,135,123,132,123,185,124,189,124,190,124,187,125,176,125,156,125,189,125,190,125,160,125,202,125,180,125,178,125,177,125,186,125,162,125,191,125,181,125,184,125,173,125,210,125,199,125,172,125,112,127,224,127,225,127,223,127,94,128,90,128,135,128,80,129,128,129,143,129,136,129,138,129,127,129,130,129,231,129,250,129,7,130,20,130,30,130,75,130,201,132,191,132,198,132,196,132,153,132,158,132,178,132,156,132,203,132,184,132,192,132,211,132,144,132,188,132,209,132,202,132,63,135,28,135,59,135,34,135,37,135,52,135,24,135,85,135,55,135,41,135,243,136,2,137,244,136,249,136,248,136,253,136,232,136,26,137,239,136,166,138,140,138,158,138,163,138,141,138,161,138,147,138,164,138,170,138,165,138,168,138,152,138,145,138,154,138,167,138,106,140,141,140,140,140,211,140,209,140,210,140,107,141,153,141,149,141,252,141,20,143,18,143,21,143,19,143,163,143,96,144,88,144,92,144,99,144,89,144,94,144,98,144,93,144,91,144,25,145,24,145,30,145,117,145,120,145,119,145,116,145,120,146,128,146,133,146,152,146,150,146,123,146,147,146,156,146,168,146,124,146,145,146,161,149,168,149,169,149,163,149,165,149,164,149,153,150,156,150,155,150,204,150,210,150,0,151,124,151,133,151,246,151,23,152,24,152,175,152,177,152,3,153,5,153,12,153,9,153,193,153,175,154,176,154,230,154,65,155,66,155,244,156,246,156,243,156,188,158,59,159,74,159,4,81,0,81,251,80,245,80,249,80,2,81,8,81,9,81,5,81,220,81,135,82,136,82,137,82,141,82,138,82,240,82,178,83,46,86,59,86,57,86,50,86,63,86,52,86,41,86,83,86,78,86,87,86,116,86,54,86,47,86,48,86,128,88,159,88,158,88,179,88,156,88,174,88,169,88,166,88,109,89,9,91,251,90,11,91,245,90,12,91,8,91,238,91,236,91,233,91,235,91,100,92,101,92,157,93,148,93,98,94,95,94,97,94,226,94,218,94,223,94,221,94,227,94,224,94,72,95,113,95,183,95,181,95,118,97,103,97,110,97,93,97,85,97,130,97,124,97,112,97,107,97,126,97,167,97,144,97,171,97,142,97,172,97,154,97,164,97,148,97,174,97,46,98,105,100,111,100,121,100,158,100,178,100,136,100,144,100,176,100,165,100,147,100,149,100,169,100,146,100,174,100,173,100,171,100,154,100,172,100,153,100,162,100,179,100,117,101,119,101,120,101,174,102,171,102,180,102,177,102,35,106,31,106,232,105,1,106,30,106,25,106,253,105,33,106,19,106,10,106,243,105,2,106,5,106,237,105,17,106,80,107,78,107,164,107,197,107,198,107,63,111,124,111,132,111,81,111,102,111,84,111,134,111,109,111,91,111,120,111,110,111,142,111,122,111,112,111,100,111,151,111,88,111,213,110,111,111,96,111,95,111,159,113,172,113,177,113,168,113,86,114,155,114,78,115,87,115,105,116,139,116,131,116,126,116,128,116,127,117,32,118,41,118,31,118,36,118,38,118,33,118,34,118,154,118,186,118,228,118,142,119,135,119,140,119,145,119,139,119,203,120,197,120,186,120,202,120,190,120,213,120,188,120,208,120,63,122,60,122,64,122,61,122,55,122,59,122,175,122,174,122,173,123,177,123,196,123,180,123,198,123,199,123,193,123,160,123,204,123,202,124,224,125,244,125,239,125,251,125,216,125,236,125,221,125,232,125,227,125,218,125,222,125,233,125,158,125,217,125,242,125,249,125,117,127,119,127,175,127,233,127,38,128,155,129,156,129,157,129,160,129,154,129,152,129,23,133,61,133,26,133,238,132,44,133,45,133,19,133,17,133,35,133,33,133,20,133,236,132,37,133,255,132,6,133,130,135,116,135,118,135,96,135,102,135,120,135,104,135,89,135,87,135,76,135,83,135,91,136,93,136,16,137,7,137,18,137,19,137,21,137,10,137,188,138,210,138,199,138,196,138,149,138,203,138,248,138,178,138,201,138,194,138,191,138,176,138,214,138,205,138,182,138,185,138,219,138,76,140,78,140,108,140,224,140,222,140,230,140,228,140,236,140,237,140,226,140,227,140,220,140,234,140,225,140,109,141,159,141,163,141,43,142,16,142,29,142,34,142,15,142,41,142,31,142,33,142,30,142,186,142,29,143,27,143,31,143,41,143,38,143,42,143,28,143,30,143,37,143,105,144,110,144,104,144,109,144,119,144,48,145,45,145,39,145,49,145,135,145,137,145,139,145,131,145,197,146,187,146,183,146,234,146,172,146,228,146,193,146,179,146,188,146,210,146,199,146,240,146,178,146,173,149,177,149,4,151,6,151,7,151,9,151,96,151,141,151,139,151,143,151,33,152,43,152,28,152,179,152,10,153,19,153,18,153,24,153,221,153,208,153,223,153,219,153,209,153,213,153,210,153,217,153,183,154,238,154,239,154,39,155,69,155,68,155,119,155,111,155,6,157,9,157,3,157,169,158,190,158,206,158,168,88,82,159,18,81,24,81,20,81,16,81,21,81,128,81,170,81,221,81,145,82,147,82,243,82,89,86,107,86,121,86,105,86,100,86,120,86,106,86,104,86,101,86,113,86,111,86,108,86,98,86,118,86,193,88,190,88,199,88,197,88,110,89,29,91,52,91,120,91,240,91,14,92,74,95,178,97,145,97,169,97,138,97,205,97,182,97,190,97,202,97,200,97,48,98,197,100,193,100,203,100,187,100,188,100,218,100,196,100,199,100,194,100,205,100,191,100,210,100,212,100,190,100,116,101,198,102,201,102,185,102,196,102,199,102,184,102,61,106,56,106,58,106,89,106,107,106,88,106,57,106,68,106,98,106,97,106,75,106,71,106,53,106,95,106,72,106,89,107,119,107,5,108,194,111,177,111,161,111,195,111,164,111,193,111,167,111,179,111,192,111,185,111,182,111,166,111,160,111,180,111,190,113,201,113,208,113,210,113,200,113,213,113,185,113,206,113,217,113,220,113,195,113,196,113,104,115,156,116,163,116,152,116,159,116,158,116,226,116,12,117,13,117,52,118,56,118,58,118,231,118,229,118,160,119,158,119,159,119,165,119,232,120,218,120,236,120,231,120,166,121,77,122,78,122,70,122,76,122,75,122,186,122,217,123,17,124,201,123,228,123,219,123,225,123,233,123,230,123,213,124,214,124,10,126,17,126,8,126,27,126,35,126,30,126,29,126,9,126,16,126,121,127,178,127,240,127,241,127,238,127,40,128,179,129,169,129,168,129,251,129,8,130,88,130,89,130,74,133,89,133,72,133,104,133,105,133,67,133,73,133,109,133,106,133,94,133,131,135,159,135,158,135,162,135,141,135,97,136,42,137,50,137,37,137,43,137,33,137,170,137,166,137,230,138,250,138,235,138,241,138,0,139,220,138,231,138,238,138,254,138,1,139,2,139,247,138,237,138,243,138,246,138,252,138,107,140,109,140,147,140,244,140,68,142,49,142,52,142,66,142,57,142,53,142,59,143,47,143,56,143,51,143,168,143,166,143,117,144,116,144,120,144,114,144,124,144,122,144,52,145,146,145,32,147,54,147,248,146,51,147,47,147,34,147,252,146,43,147,4,147,26,147,16,147,38,147,33,147,21,147,46,147,25,147,187,149,167,150,168,150,170,150,213,150,14,151,17,151,22,151,13,151,19,151,15,151,91,151,92,151,102,151,152,151,48,152,56,152,59,152,55,152,45,152,57,152,36,152,16,153,40,153,30,153,27,153,33,153,26,153,237,153,226,153,241,153,184,154,188,154,251,154,237,154,40,155,145,155,21,157,35,157,38,157,40,157,18,157,27,157,216,158,212,158,141,159,156,159,42,81,31,81,33,81,50,81,245,82,142,86,128,86,144,86,133,86,135,86,143,86,213,88,211,88,209,88,206,88,48,91,42,91,36,91,122,91,55,92,104,92,188,93,186,93,189,93,184,93,107,94,76,95,189,95,201,97,194,97,199,97,230,97,203,97,50,98,52,98,206,100,202,100,216,100,224,100,240,100,230,100,236,100,241,100,226,100,237,100,130,101,131,101,217,102,214,102,128,106,148,106,132,106,162,106,156,106,219,106,163,106,126,106,151,106,144,106,160,106,92,107,174,107,218,107,8,108,216,111,241,111,223,111,224,111,219,111,228,111,235,111,239,111,128,111,236,111,225,111,233,111,213,111,238,111,240,111,231,113,223,113,238,113,230,113,229,113,237,113,236,113,244,113,224,113,53,114,70,114,112,115,114,115,169,116,176,116,166,116,168,116,70,118,66,118,76,118,234,118,179,119,170,119,176,119,172,119,167,119,173,119,239,119,247,120,250,120,244,120,239,120,1,121,167,121,170,121,87,122,191,122,7,124,13,124,254,123,247,123,12,124,224,123,224,124,220,124,222,124,226,124,223,124,217,124,221,124,46,126,62,126,70,126,55,126,50,126,67,126,43,126,61,126,49,126,69,126,65,126,52,126,57,126,72,126,53,126,63,126,47,126,68,127,243,127,252,127,113,128,114,128,112,128,111,128,115,128,198,129,195,129,186,129,194,129,192,129,191,129,189,129,201,129,190,129,232,129,9,130,113,130,170,133,132,133,126,133,156,133,145,133,148,133,175,133,155,133,135,133,168,133,138,133,103,134,192,135,209,135,179,135,210,135,198,135,171,135,187,135,186,135,200,135,203,135,59,137,54,137,68,137,56,137,61,137,172,137,14,139,23,139,25,139,27,139,10,139,32,139,29,139,4,139,16,139,65,140,63,140,115,140,250,140,253,140,252,140,248,140,251,140,168,141,73,142,75,142,72,142,74,142,68,143,62,143,66,143,69,143,63,143,127,144,125,144,132,144,129,144,130,144,128,144,57,145,163,145,158,145,156,145,77,147,130,147,40,147,117,147,74,147,101,147,75,147,24,147,126,147,108,147,91,147,112,147,90,147,84,147,202,149,203,149,204,149,200,149,198,149,177,150,184,150,214,150,28,151,30,151,160,151,211,151,70,152,182,152,53,153,1,154,255,153,174,155,171,155,170,155,173,155,59,157,63,157,139,158,207,158,222,158,220,158,221,158,219,158,62,159,75,159,226,83,149,86,174,86,217,88,216,88,56,91,93,95,227,97,51,98,244,100,242,100,254,100,6,101,250,100,251,100,247,100,183,101,220,102,38,103,179,106,172,106,195,106,187,106,184,106,194,106,174,106,175,106,95,107,120,107,175,107,9,112,11,112,254,111,6,112,250,111,17,112,15,112,251,113,252,113,254,113,248,113,119,115,117,115,167,116,191,116,21,117,86,118,88,118,82,118,189,119,191,119,187,119,188,119,14,121,174,121,97,122,98,122,96,122,196,122,197,122,43,124,39,124,42,124,30,124,35,124,33,124,231,124,84,126,85,126,94,126,90,126,97,126,82,126,89,126,72,127,249,127,251,127,119,128,118,128,205,129,207,129,10,130,207,133,169,133,205,133,208,133,201,133,176,133,186,133,185,133,166,133,239,135,236,135,242,135,224,135,134,137,178,137,244,137,40,139,57,139,44,139,43,139,80,140,5,141,89,142,99,142,102,142,100,142,95,142,85,142,192,142,73,143,77,143,135,144,131,144,136,144,171,145,172,145,208,145,148,147,138,147,150,147,162,147,179,147,174,147,172,147,176,147,152,147,154,147,151,147,212,149,214,149,208,149,213,149,226,150,220,150,217,150,219,150,222,150,36,151,163,151,166,151,173,151,249,151,77,152,79,152,76,152,78,152,83,152,186,152,62,153,63,153,61,153,46,153,165,153,14,154,193,154,3,155,6,155,79,155,78,155,77,155,202,155,201,155,253,155,200,155,192,155,81,157,93,157,96,157,224,158,21,159,44,159,51,81,165,86,222,88,223,88,226,88,245,91,144,159,236,94,242,97,247,97,246,97,245,97,0,101],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+99902);allocate([15,101,224,102,221,102,229,106,221,106,218,106,211,106,27,112,31,112,40,112,26,112,29,112,21,112,24,112,6,114,13,114,88,114,162,114,120,115,122,115,189,116,202,116,227,116,135,117,134,117,95,118,97,118,199,119,25,121,177,121,107,122,105,122,62,124,63,124,56,124,61,124,55,124,64,124,107,126,109,126,121,126,105,126,106,126,133,127,115,126,182,127,185,127,184,127,216,129,233,133,221,133,234,133,213,133,228,133,229,133,247,133,251,135,5,136,13,136,249,135,254,135,96,137,95,137,86,137,94,137,65,139,92,139,88,139,73,139,90,139,78,139,79,139,70,139,89,139,8,141,10,141,124,142,114,142,135,142,118,142,108,142,122,142,116,142,84,143,78,143,173,143,138,144,139,144,177,145,174,145,225,147,209,147,223,147,195,147,200,147,220,147,221,147,214,147,226,147,205,147,216,147,228,147,215,147,232,147,220,149,180,150,227,150,42,151,39,151,97,151,220,151,251,151,94,152,88,152,91,152,188,152,69,153,73,153,22,154,25,154,13,155,232,155,231,155,214,155,219,155,137,157,97,157,114,157,106,157,108,157,146,158,151,158,147,158,180,158,248,82,168,86,183,86,182,86,180,86,188,86,228,88,64,91,67,91,125,91,246,91,201,93,248,97,250,97,24,101,20,101,25,101,230,102,39,103,236,106,62,112,48,112,50,112,16,114,123,115,207,116,98,118,101,118,38,121,42,121,44,121,43,121,199,122,246,122,76,124,67,124,77,124,239,124,240,124,174,143,125,126,124,126,130,126,76,127,0,128,218,129,102,130,251,133,249,133,17,134,250,133,6,134,11,134,7,134,10,134,20,136,21,136,100,137,186,137,248,137,112,139,108,139,102,139,111,139,95,139,107,139,15,141,13,141,137,142,129,142,133,142,130,142,180,145,203,145,24,148,3,148,253,147,225,149,48,151,196,152,82,153,81,153,168,153,43,154,48,154,55,154,53,154,19,156,13,156,121,158,181,158,232,158,47,159,95,159,99,159,97,159,55,81,56,81,193,86,192,86,194,86,20,89,108,92,205,93,252,97,254,97,29,101,28,101,149,101,233,102,251,106,4,107,250,106,178,107,76,112,27,114,167,114,214,116,212,116,105,118,211,119,80,124,143,126,140,126,188,127,23,134,45,134,26,134,35,136,34,136,33,136,31,136,106,137,108,137,189,137,116,139,119,139,125,139,19,141,138,142,141,142,139,142,95,143,175,143,186,145,46,148,51,148,53,148,58,148,56,148,50,148,43,148,226,149,56,151,57,151,50,151,255,151,103,152,101,152,87,153,69,154,67,154,64,154,62,154,207,154,84,155,81,155,45,156,37,156,175,157,180,157,194,157,184,157,157,158,239,158,25,159,92,159,102,159,103,159,60,81,59,81,200,86,202,86,201,86,127,91,212,93,210,93,78,95,255,97,36,101,10,107,97,107,81,112,88,112,128,115,228,116,138,117,110,118,108,118,179,121,96,124,95,124,126,128,125,128,223,129,114,137,111,137,252,137,128,139,22,141,23,141,145,142,147,142,97,143,72,145,68,148,81,148,82,148,61,151,62,151,195,151,193,151,107,152,85,153,85,154,77,154,210,154,26,155,73,156,49,156,62,156,59,156,211,157,215,157,52,159,108,159,106,159,148,159,204,86,214,93,0,98,35,101,43,101,42,101,236,102,16,107,218,116,202,122,100,124,99,124,101,124,147,126,150,126,148,126,226,129,56,134,63,134,49,136,138,139,144,144,143,144,99,148,96,148,100,148,104,151,111,152,92,153,90,154,91,154,87,154,211,154,212,154,209,154,84,156,87,156,86,156,229,157,159,158,244,158,209,86,233,88,44,101,94,112,113,118,114,118,215,119,80,127,136,127,54,136,57,136,98,136,147,139,146,139,150,139,119,130,27,141,192,145,106,148,66,151,72,151,68,151,198,151,112,152,95,154,34,155,88,155,95,156,249,157,250,157,124,158,125,158,7,159,119,159,114,159,243,94,22,107,99,112,108,124,110,124,59,136,192,137,161,142,193,145,114,148,112,148,113,152,94,153,214,154,35,155,204,158,100,112,218,119,154,139,119,148,201,151,98,154,101,154,156,126,156,139,170,142,197,145,125,148,126,148,124,148,119,156,120,156,247,158,84,140,127,148,26,158,40,114,106,154,49,155,27,158,30,158,114,124,96,36,97,36,98,36,99,36,100,36,101,36,102,36,103,36,104,36,105,36,116,36,117,36,118,36,119,36,120,36,121,36,122,36,123,36,124,36,125,36,112,33,113,33,114,33,115,33,116,33,117,33,118,33,119,33,120,33,121,33,54,78,63,78,133,78,160,78,130,81,150,81,171,81,249,82,56,83,105,83,182,83,10,89,128,91,219,93,122,94,127,94,244,94,80,95,97,95,52,101,224,101,146,117,118,118,181,143,182,150,168,0,198,2,253,48,254,48,157,48,158,48,0,0,0,0,5,48,6,48,7,48,252,48,59,255,61,255,61,39,65,48,66,48,67,48,68,48,69,48,70,48,71,48,72,48,73,48,74,48,75,48,76,48,77,48,78,48,79,48,80,48,81,48,82,48,83,48,84,48,85,48,86,48,87,48,88,48,89,48,90,48,91,48,92,48,93,48,94,48,95,48,96,48,97,48,98,48,99,48,100,48,101,48,102,48,103,48,104,48,105,48,106,48,107,48,108,48,109,48,110,48,111,48,112,48,113,48,114,48,115,48,116,48,117,48,118,48,119,48,120,48,121,48,122,48,123,48,124,48,125,48,126,48,127,48,128,48,129,48,130,48,131,48,132,48,133,48,134,48,135,48,136,48,137,48,138,48,139,48,140,48,141,48,142,48,143,48,144,48,145,48,146,48,147,48,161,48,162,48,163,48,164,48,165,48,166,48,167,48,168,48,169,48,170,48,171,48,172,48,173,48,174,48,175,48,176,48,177,48,178,48,179,48,180,48,181,48,182,48,183,48,184,48,185,48,186,48,187,48,188,48,189,48,190,48,191,48,192,48,193,48,194,48,195,48,196,48,197,48,198,48,199,48,200,48,201,48,202,48,203,48,204,48,205,48,206,48,207,48,208,48,209,48,210,48,211,48,212,48,213,48,214,48,215,48,216,48,217,48,218,48,219,48,220,48,221,48,222,48,223,48,224,48,225,48,226,48,227,48,228,48,229,48,230,48,231,48,232,48,233,48,234,48,235,48,236,48,237,48,238,48,239,48,240,48,241,48,242,48,243,48,244,48,245,48,246,48,16,4,17,4,18,4,19,4,20,4,21,4,1,4,22,4,23,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,4,37,4,38,4,39,4,40,4,41,4,42,4,43,4,44,4,45,4,46,4,47,4,48,4,49,4,50,4,51,4,52,4,53,4,81,4,54,4,55,4,56,4,57,4,58,4,59,4,60,4,61,4,62,4,63,4,64,4,65,4,66,4,67,4,68,4,69,4,70,4,71,4,72,4,73,4,74,4,75,4,76,4,77,4,78,4,79,4,231,33,184,33,185,33,207,49,204,0,90,78,138,0,2,82,145,68,176,159,136,81,177,159,7,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,255,228,255,7,255,2,255,49,50,22,33,33,33,155,48,156,48,128,46,132,46,134,46,135,46,136,46,138,46,140,46,141,46,149,46,156,46,157,46,165,46,167,46,170,46,172,46,174,46,182,46,188,46,190,46,198,46,202,46,204,46,205,46,207,46,214,46,215,46,222,46,227,46,0,0,0,0,0,0,131,2,80,2,91,2,84,2,117,2,83,1,248,0,75,1,138,2,106,2,66,78,92,78,245,81,26,83,130,83,7,78,12,78,71,78,141,78,215,86,12,250,110,92,115,95,15,78,135,81,14,78,46,78,147,78,194,78,201,78,200,78,152,81,252,82,108,83,185,83,32,87,3,89,44,89,16,92,255,93,225,101,179,107,204,107,20,108,63,114,49,78,60,78,232,78,220,78,233,78,225,78,221,78,218,78,12,82,28,83,76,83,34,87,35,87,23,89,47,89,129,91,132,91,18,92,59,92,116,92,115,92,4,94,128,94,130,94,201,95,9,98,80,98,21,108,54,108,67,108,63,108,59,108,174,114,176,114,138,115,184,121,138,128,30,150,14,79,24,79,44,79,245,78,20,79,241,78,0,79,247,78,8,79,29,79,2,79,5,79,34,79,19,79,4,79,244,78,18,79,177,81,19,82,9,82,16,82,166,82,34,83,31,83,77,83,138,83,7,84,225,86,223,86,46,87,42,87,52,87,60,89,128,89,124,89,133,89,123,89,126,89,119,89,127,89,86,91,21,92,37,92,124,92,122,92,123,92,126,92,223,93,117,94,132,94,2,95,26,95,116,95,213,95,212,95,207,95,92,98,94,98,100,98,97,98,102,98,98,98,89,98,96,98,90,98,101,98,239,101,238,101,62,103,57,103,56,103,59,103,58,103,63,103,60,103,51,103,24,108,70,108,82,108,92,108,79,108,74,108,84,108,75,108,76,108,113,112,94,114,180,114,181,114,142,115,42,117,127,118,117,122,81,127,120,130,124,130,128,130,125,130,127,130,77,134,126,137,153,144,151,144,152,144,155,144,148,144,34,150,36,150,32,150,35,150,86,79,59,79,98,79,73,79,83,79,100,79,62,79,103,79,82,79,95,79,65,79,88,79,45,79,51,79,63,79,97,79,143,81,185,81,28,82,30,82,33,82,173,82,174,82,9,83,99,83,114,83,142,83,143,83,48,84,55,84,42,84,84,84,69,84,25,84,28,84,37,84,24,84,61,84,79,84,65,84,40,84,36,84,71,84,238,86,231,86,229,86,65,87,69,87,76,87,73,87,75,87,82,87,6,89,64,89,166,89,152,89,160,89,151,89,142,89,162,89,144,89,143,89,167,89,161,89,142,91,146,91,40,92,42,92,141,92,143,92,136,92,139,92,137,92,146,92,138,92,134,92,147,92,149,92,224,93,10,94,14,94,139,94,137,94,140,94,136,94,141,94,5,95,29,95,120,95,118,95,210,95,209,95,208,95,237,95,232,95,238,95,243,95,225,95,228,95,227,95,250,95,239,95,247,95,251,95,0,96,244,95,58,98,131,98,140,98,142,98,143,98,148,98,135,98,113,98,123,98,122,98,112,98,129,98,136,98,119,98,125,98,114,98,116,98,55,101,240,101,244,101,243,101,242,101,245,101,69,103,71,103,89,103,85,103,76,103,72,103,93,103,77,103,90,103,75,103,208,107,25,108,26,108,120,108,103,108,107,108,132,108,139,108,143,108,113,108,111,108,105,108,154,108,109,108,135,108,149,108,156,108,102,108,115,108,101,108,123,108,142,108,116,112,122,112,99,114,191,114,189,114,195,114,198,114,193,114,186,114,197,114,149,115,151,115,147,115,148,115,146,115,58,117,57,117,148,117,149,117,129,118,61,121,52,128,149,128,153,128,144,128,146,128,156,128,144,130,143,130,133,130,142,130,145,130,147,130,138,130,131,130,132,130,120,140,201,143,191,143,159,144,161,144,165,144,158,144,167,144,160,144,48,150,40,150,47,150,45,150,51,78,152,79,124,79,133,79,125,79,128,79,135,79,118,79,116,79,137,79,132,79,119,79,76,79,151,79,106,79,154,79,121,79,129,79,120,79,144,79,156,79,148,79,158,79,146,79,130,79,149,79,107,79,110,79,158,81,188,81,190,81,53,82,50,82,51,82,70,82,49,82,188,82,10,83,11,83,60,83,146,83,148,83,135,84,127,84,129,84,145,84,130,84,136,84,107,84,122,84,126,84,101,84,108,84,116,84,102,84,141,84,111,84,97,84,96,84,152,84,99,84,103,84,100,84,247,86,249,86,111,87,114,87,109,87,107,87,113,87,112,87,118,87,128,87,117,87,123,87,115,87,116,87,98,87,104,87,125,87,12,89,69,89,181,89,186,89,207,89,206,89,178,89,204,89,193,89,182,89,188,89,195,89,214,89,177,89,189,89,192,89,200,89,180,89,199,89,98,91,101,91,147,91,149,91,68,92,71,92,174,92,164,92,160,92,181,92,175,92,168,92,172,92,159,92,163,92,173,92,162,92,170,92,167,92,157,92,165,92,182,92,176,92,166,92,23,94,20,94,25,94,40,95,34,95,35,95,36,95,84,95,130,95,126,95,125,95,222,95,229,95,45,96,38,96,25,96,50,96,11,96,52,96,10,96,23,96,51,96,26,96,30,96,44,96,34,96,13,96,16,96,46,96,19,96,17,96,12,96,9,96,28,96,20,98,61,98,173,98,180,98,209,98,190,98,170,98,182,98,202,98,174,98,179,98,175,98,187,98,169,98,176,98,184,98,61,101,168,101,187,101,9,102,252,101,4,102,18,102,8,102,251,101,3,102,11,102,13,102,5,102,253,101,17,102,16,102,246,102,10,103,133,103,108,103,142,103,146,103,118,103,123,103,152,103,134,103,132,103,116,103,141,103,140,103,122,103,159,103,145,103,153,103,131,103,125,103,129,103,120,103,121,103,148,103,37,107,128,107,126,107,222,107,29,108,147,108,236,108,235,108,238,108,217,108,182,108,212,108,173,108,231,108,183,108,208,108,194,108,186,108,195,108,198,108,237,108,242,108,210,108,221,108,180,108,138,108,157,108,128,108,222,108,192,108,48,109,205,108,199,108,176,108,249,108,207,108,233,108,209,108,148,112,152,112,133,112,147,112,134,112,132,112,145,112,150,112,130,112,154,112,131,112,106,114,214,114,203,114,216,114,201,114,220,114,210,114,212,114,218,114,204,114,209,114,164,115,161,115,173,115,166,115,162,115,160,115,172,115,157,115,221,116,232,116,63,117,64,117,62,117,140,117,152,117,175,118,243,118,241,118,240,118,245,118,248,119,252,119,249,119,251,119,250,119,247,119,66,121,63,121,197,121,120,122,123,122,251,122,117,124,253,124,53,128,143,128,174,128,163,128,184,128,181,128,173,128,32,130,160,130,192,130,171,130,154,130,152,130,155,130,181,130,167,130,174,130,188,130,158,130,186,130,180,130,168,130,161,130,169,130,194,130,164,130,195,130,182,130,162,130,112,134,111,134,109,134,110,134,86,140,210,143,203,143,211,143,205,143,214,143,213,143,215,143,178,144,180,144,175,144,179,144,176,144,57,150,61,150,60,150,58,150,67,150,205,79,197,79,211,79,178,79,201,79,203,79,193,79,212,79,220,79,217,79,187,79,179,79,219,79,199,79,214,79,186,79,192,79,185,79,236,79,68,82,73,82,192,82,194,82,61,83,124,83,151,83,150,83,153,83,152,83,186,84,161,84,173,84,165,84,207,84,195,84,13,131,183,84,174,84,214,84,182,84,197,84,198,84,160,84,112,84,188,84,162,84,190,84,114,84,222,84,176,84,181,87,158,87,159,87,164,87,140,87,151,87,157,87,155,87,148,87,152,87,143,87,153,87,165,87,154,87,149,87,244,88,13,89,83,89,225,89,222,89,238,89,0,90,241,89,221,89,250,89,253,89,252,89,246,89,228,89,242,89,247,89,219,89,233,89,243,89,245,89,224,89,254,89,244,89,237,89,168,91,76,92,208,92,216,92,204,92,215,92,203,92,219,92,222,92,218,92,201,92,199,92,202,92,214,92,211,92,212,92,207,92,200,92,198,92,206,92,223,92,248,92,249,93,33,94,34,94,35,94,32,94,36,94,176,94,164,94,162,94,155,94,163,94,165,94,7,95,46,95,86,95,134,95,55,96,57,96,84,96,114,96,94,96,69,96,83,96,71,96,73,96,91,96,76,96,64,96,66,96,95,96,36,96,68,96,88,96,102,96,110,96,66,98,67,98,207,98,13,99,11,99,245,98,14,99,3,99,235,98,249,98,15,99,12,99,248,98,246,98,0,99,19,99,20,99,250,98,21,99,251,98,240,98,65,101,67,101,170,101,191,101,54,102,33,102,50,102,53,102,28,102,38,102,34,102,51,102,43,102,58,102,29,102,52,102,57,102,46,102,15,103,16,103,193,103,242,103,200,103,186,103,220,103,187,103,248,103,216,103,192,103,183,103,197,103,235,103,228,103,223,103,181,103,205,103,179,103,247,103,246,103,238,103,227,103,194,103,185,103,206,103,231,103,240,103,178,103,252,103,198,103,237,103,204,103,174,103,230,103,219,103,250,103,201,103,202,103,195,103,234,103,203,103,40,107,130,107,132,107,182,107,214,107,216,107,224,107,32,108,33,108,40,109,52,109,45,109,31,109,60,109,63,109,18,109,10,109,218,108,51,109,4,109,25,109,58,109,26,109,17,109,0,109,29,109,66,109,1,109,24,109,55,109,3,109,15,109,64,109,7,109,32,109,44,109,8,109,34,109,9,109,16,109,183,112,159,112,190,112,177,112,176,112,161,112,180,112,181,112,169,112,65,114,73,114,74,114,108,114,112,114,115,114,110,114,202,114,228,114,232,114,235,114,223,114,234,114,230,114,227,114,133,115,204,115,194,115,200,115,197,115,185,115,182,115,181,115,180,115,235,115,191,115,199,115,190,115,195,115,198,115,184,115,203,115,236,116,238,116,46,117,71,117,72,117,167,117,170,117,121,118,196,118,8,119,3,119,4,119,5,119,10,119,247,118,251,118,250,118,231,119,232,119,6,120,17,120,18,120,5,120,16,120,15,120,14,120,9,120,3,120,19,120,74,121,76,121,75,121,69,121,68,121,213,121,205,121,207,121,214,121,206,121,128,122,126,122,209,122,0,123,1,123,122,124,120,124,121,124,127,124,128,124,129,124,3,125,8,125,1,125,88,127,145,127,141,127,190,127,7,128,14,128,15,128,20,128,55,128,216,128,199,128,224,128,209,128,200,128,194,128,208,128,197,128,227,128,217,128,220,128,202,128,213,128,201,128,207,128,215,128,230,128,205,128,255,129,33,130,148,130,217,130,254,130,249,130,7,131,232,130,0,131,213,130,58,131,235,130,214,130,244,130,236,130,225,130,242,130,245,130,12,131,251,130,246,130,240,130,234,130,228,130,224,130,250,130,243,130,237,130,119,134,116,134,124,134,115,134,65,136,78,136,103,136,106,136,105,136,211,137,4,138,7,138,114,141,227,143,225,143,238,143,224,143,241,144,189,144,191,144,213,144,197,144,190,144,199,144,203,144,200,144,212,145,211,145,84,150,79,150,81,150,83,150,74,150,78,150,30,80,5,80,7,80,19,80,34,80,48,80,27,80,245,79,244,79,51,80,55,80,44,80,246,79,247,79,23,80,28,80,32,80,39,80,53,80,47,80,49,80,14,80,90,81,148,81,147,81,202,81,196,81,197,81,200,81,206,81,97,82,90,82,82,82,94,82,95,82,85,82,98,82,205,82,14,83,158,83,38,85,226,84,23,85,18,85,231,84,243,84,228,84,26,85,255,84,4,85,8,85,235,84,17,85,5,85,241,84,10,85,251,84,247,84,248,84,224,84,14,85,3,85,11,85,1,87,2,87,204,87,50,88,213,87,210,87,186,87,198,87,189,87,188,87,184,87,182,87,191,87,199,87,208,87,185,87,193,87,14,89,74,89,25,90,22,90,45,90,46,90,21,90,15,90,23,90,10,90,30,90,51,90,108,91,167,91,173,91,172,91,3,92,86,92,84,92,236,92,255,92,238,92,241,92,247,92,0,93,249,92,41,94,40,94,168,94,174,94,170,94,172,94,51,95,48,95,103,95,93,96,90,96,103,96,65,96,162,96,136,96,128,96,146,96,129,96,157,96,131,96,149,96,155,96,151,96,135,96,156,96,142,96,25,98,70,98,242,98,16,99,86,99,44,99,68,99,69,99,54,99,67,99,228,99,57,99,75,99,74,99,60,99,41,99,65,99,52,99,88,99,84,99,89,99,45,99,71,99,51,99,90,99,81,99,56,99,87,99,64,99,72,99,74,101,70,101,198,101,195,101,196,101,194,101,74,102,95,102,71,102,81,102,18,103,19,103,31,104,26,104,73,104,50,104,51,104,59,104,75,104,79,104,22,104,49,104,28,104,53,104,43,104,45,104,47,104,78,104,68,104,52,104,29,104,18,104,20,104,38,104,40,104,46,104,77,104,58,104,37,104,32,104,44,107,47,107,45,107,49,107,52,107,109,107,130,128,136,107,230,107,228,107,232,107,227,107,226,107,231,107,37,108,122,109,99,109,100,109,118,109,13,109,97,109,146,109,88,109,98,109,109,109,111,109,145,109,141,109,239,109,127,109,134,109,94,109,103,109,96,109,151,109,112,109,124,109,95,109,130,109,152,109,47,109,104,109,139,109,126,109,128,109,132,109,22,109,131,109,123,109,125,109,117,109,144,109,220,112,211,112,209,112,221,112,203,112,57,127,226,112,215,112,210,112,222,112,224,112,212,112,205,112,197,112,198,112,199,112,218,112,206,112,225,112,66,114,120,114,119,114,118,114,0,115,250,114,244,114,254,114,246,114,243,114,251,114,1,115,211,115,217,115,229,115,214,115,188,115,231,115,227,115,233,115,220,115,210,115,219,115,212,115,221,115,218,115,215,115,216,115,232,115,222,116,223,116,244,116,245,116,33,117,91,117,95,117,176,117,193,117,187,117,196,117,192,117,191,117,182,117,186,117,138,118,201,118,29,119,27,119,16,119,19,119,18,119,35,119,17,119,21,119,25,119,26,119,34,119,39,119,35,120,44,120,34,120,53,120,47,120,40,120,46,120,43,120,33,120,41,120,51,120,42,120,49,120,84,121,91,121,79,121,92,121,83,121,82,121,81,121,235,121,236,121,224,121,238,121,237,121,234,121,220,121,222,121,221,121,134,122,137,122,133,122,139,122,140,122,138,122,135,122,216,122,16,123,4,123,19,123,5,123,15,123,8,123,10,123,14,123,9,123,18,123,132,124,145,124,138,124,140,124,136,124,141,124,133,124,30,125,29,125,17,125,14,125,24,125,22,125,19,125,31,125,18,125,15,125,12,125,92,127,97,127,94,127,96,127,93,127,91,127,150,127,146,127,195,127,194,127,192,127,22,128,62,128,57,128,250,128,242,128,249,128,245,128,1,129,251,128,0,129,1,130,47,130,37,130,51,131,45,131,68,131,25,131,81,131,37,131,86,131,63,131,65,131,38,131,28,131,34,131,66,131,78,131,27,131,42,131,8,131,60,131,77,131,22,131,36,131,32,131,55,131,47,131,41,131,71,131,69,131,76,131,83,131,30,131,44,131,75,131,39,131,72,131,83,134,82,134,162,134,168,134,150,134,141,134,145,134,158,134,135,134,151,134,134,134,139,134,154,134,133,134,165,134,153,134,161,134,167,134,149,134,152,134,142,134,157,134,144,134,148,134,67,136,68,136,109,136,117,136,118,136,114,136,128,136,113,136,127,136,111,136,131,136,126,136,116,136,124,136,18,138,71,140,87,140,123,140,164,140,163,140,118,141,120,141,181,141,183,141,182,141,209,142,211,142,254,143,245,143,2,144,255,143,251,143,4,144,252,143,246,143,214,144,224,144,217,144,218,144,227,144,223,144,229,144,216,144,219,144,215,144,220,144,228,144,80,145,78,145,79,145,213,145,226,145,218,145,92,150,95,150,188,150,227,152,223,154,47,155,127,78,112,80,106,80,97,80,94,80,96,80,83,80,75,80,93,80,114,80,72,80,77,80,65,80,91,80,74,80,98,80,21,80,69,80,95,80,105,80,107,80,99,80,100,80,70,80,64,80,110,80,115,80,87,80,81,80,208,81,107,82,109,82,108,82,110,82,214,82,211,82,45,83,156,83,117,85,118,85,60,85,77,85,80,85,52,85,42,85,81,85,98,85,54,85,53,85,48,85,82,85,69,85,12,85,50,85,101,85,78,85,57,85,72,85,45,85,59,85,64,85,75,85,10,87,7,87,251,87,20,88,226,87,246,87,220,87,244,87,0,88,237,87,253,87,8,88,248,87,11,88,243,87,207,87,7,88,238,87,227,87,242,87,229,87,236,87,225,87,14,88,252,87,16,88,231,87,1,88,12,88,241,87,233,87,240,87,13,88,4,88,92,89,96,90,88,90,85,90,103,90,94,90,56,90,53,90,109,90,80,90,95,90,101,90,108,90,83,90,100,90,87,90,67,90,93,90,82,90,68,90,91,90,72,90,142,90,62,90,77,90,57,90,76,90,112,90,105,90,71,90,81,90,86,90,66,90,92,90,114,91,110,91,193,91,192,91,89,92,30,93,11,93,29,93,26,93,32,93,12,93,40,93,13,93,38,93,37,93,15,93,48,93,18,93,35,93,31,93,46,93,62,94,52,94,177,94,180,94,185,94,178,94,179,94,54,95,56,95,155,95,150,95,159,95,138,96,144,96,134,96,190,96,176,96,186,96,211,96,212,96,207,96,228,96,217,96,221,96,200,96,177,96,219,96,183,96,202,96,191,96,195,96,205,96,192,96,50,99,101,99,138,99,130,99,125,99,189,99,158,99,173,99,157,99,151,99,171,99,142,99,111,99,135,99,144,99,110,99,175,99,117,99,156,99,109,99,174,99,124,99,164,99,59,99,159,99,120,99,133,99,129,99,145,99,141,99,112,99,83,101,205,101,101,102,97,102,91,102,89,102,92,102,98,102,24,103,121,104,135,104,144,104,156,104,109,104,110,104,174,104,171,104,86,105,111,104,163,104,172,104,169,104,117,104,116,104,178,104,143,104,119,104,146,104,124,104,107,104,114,104,170,104,128,104,113,104,126,104,155,104,150,104,139,104,160,104,137,104,164,104,120,104,123,104,145,104,140,104,138,104,125,104,54,107,51,107,55,107,56,107,145,107,143,107,141,107,142,107,140,107,42,108,192,109,171,109,180,109,179,109,116,110,172,109,233,109,226,109,183,109,246,109,212,109,0,110,200,109,224,109,223,109,214,109,190,109,229,109,220,109,221,109,219,109,244,109,202,109,189,109,237,109,240,109,186,109,213,109,194,109,207,109,201,109,208,109,242,109,211,109,253,109,215,109,205,109,227,109,187,109,250,112,13,113,247,112,23,113,244,112,12,113,240,112,4,113,243,112,16,113,252,112,255,112,6,113,19,113,0,113,248,112,246,112,11,113,2,113,14,113,126,114,123,114,124,114,127,114,29,115,23,115,7,115,17,115,24,115,10,115,8,115,255,114,15,115,30,115,136,115,246,115,248,115,245,115,4,116,1,116,253,115,7,116,0,116,250,115,252,115,255,115,12,116,11,116,244,115,8,116,100,117,99,117,206,117,210,117,207,117,203,117,204,117,209,117,208,117,143,118,137,118,211,118,57,119,47,119,45,119,49,119,50,119,52,119,51,119,61,119,37,119,59,119,53,119,72,120,82,120,73,120,77,120,74,120,76,120,38,120,69,120,80,120,100,121,103,121,105,121,106,121,99,121,107,121,97,121,187,121,250,121,248,121,246,121,247,121,143,122,148,122,144,122,53,123,71,123,52,123,37,123,48,123,34,123,36,123,51,123,24,123,42,123,29,123,49,123,43,123,45,123,47,123,50,123,56,123,26,123,35,123,148,124,152,124,150,124,163,124,53,125,61,125,56,125,54,125,58,125,69,125,44,125,41,125,65,125,71,125,62,125,63,125,74,125,59,125,40,125,99,127,149,127,156,127,157,127,155,127,202,127,203,127,205,127,208,127,209,127,199,127,207,127,201,127,31,128,30,128,27,128,71,128,67,128,72,128,24,129,37,129,25,129,27,129,45,129,31,129,44,129,30,129,33,129,21,129,39,129,29,129,34,129,17,130,56,130,51,130,58,130,52,130,50,130,116,130,144,131,163,131,168,131,141,131,122,131,115,131,164,131,116,131,143,131,129,131,149,131,153,131,117,131,148,131,169,131,125,131,131,131,140,131,157,131,155,131,170,131,139,131,126,131,165,131,175,131,136,131,151,131,176,131,127,131,166,131,135,131,174,131,118,131,154,131,89,134,86,134,191,134,183,134,194,134,193,134,197,134,186,134,176,134,200,134,185,134,179,134,184,134,204,134,180,134,187,134,188,134,195,134,189,134,190,134,82,136,137,136,149,136,168,136,162,136,170,136,154,136,145,136,161,136,159,136,152,136,167,136,153,136,155,136,151,136,164,136,172,136,140,136,147,136,142,136,130,137,214,137,217,137,213,137,48,138,39,138,44,138,30,138,57,140,59,140,92,140,93,140,125,140,165,140,125,141,123,141,121,141,188,141,194,141,185,141,191,141,193,141,216,142,222,142,221,142,220,142,215,142,224,142,225,142,36,144,11,144,17,144,28,144,12,144,33,144,239,144,234,144,240,144,244,144,242,144,243,144,212,144,235,144,236,144,233,144,86,145,88,145,90,145,83,145,85,145,236,145,244,145,241,145,243,145,248,145,228,145,249,145,234,145,235,145,247,145,232,145,238,145,122,149,134,149,136,149,124,150,109,150,107,150,113,150,111,150,191,150,106,151,4,152,229,152,151,153,155,80,149,80,148,80,158,80,139,80,163,80,131,80,140,80,142,80,157,80,104,80,156,80,146,80,130,80,135,80,95,81,212,81,18,83,17,83,164,83,167,83,145,85,168,85,165,85,173,85,119,85,69,86,162,85,147,85,136,85,143,85,181,85,129,85,163,85,146,85,164,85,125,85,140,85,166,85,127,85,149,85,161,85,142,85,12,87,41,88,55,88,25,88,30,88,39,88,35,88,40,88,245,87,72,88,37,88,28,88,27,88,51,88,63,88,54,88,46,88,57,88,56,88,45,88,44,88,59,88,97,89,175,90,148,90,159,90,122,90,162,90,158,90,120,90,166,90,124,90,165,90,172,90,149,90,174,90,55,90,132,90,138,90,151,90,131,90,139,90,169,90,123,90,125,90,140,90,156,90,143,90,147,90,157,90,234,91,205,91,203,91,212,91,209,91,202,91,206,91,12,92,48,92,55,93,67,93,107,93,65,93,75,93,63,93,53,93,81,93,78,93,85,93,51,93,58,93,82,93,61,93,49,93,89,93,66,93,57,93,73,93,56,93,60,93,50,93,54,93,64,93,69,93,68,94,65,94,88,95,166,95,165,95,171,95,201,96,185,96,204,96,226,96,206,96,196,96,20,97,242,96,10,97,22,97,5,97,245,96,19,97,248,96,252,96,254,96,193,96,3,97,24,97,29,97,16,97,255,96,4,97,11,97,74,98,148,99,177,99,176,99,206,99,229,99,232,99,239,99,195,99,157,100,243,99,202,99,224,99,246,99,213,99,242,99,245,99,97,100,223,99,190,99,221,99,220,99,196,99,216,99,211,99,194,99,199,99,204,99,203,99,200,99,240,99,215,99,217,99,50,101,103,101,106,101,100,101,92,101,104,101,101,101,140,101,157,101,158,101,174,101,208,101,210,101,124,102,108,102,123,102,128,102,113,102,121,102,106,102,114,102,1,103,12,105,211,104,4,105,220,104,42,105,236,104,234,104,241,104,15,105,214,104,247,104,235,104,228,104,246,104,19,105,16,105,243,104,225,104,7,105,204,104,8,105,112,105,180,104,17,105,239,104,198,104,20,105,248,104,208,104,253,104,252,104,232,104,11,105,10,105,23,105,206,104,200,104,221,104,222,104,230,104,244,104,209,104,6,105,212,104,233,104,21,105,37,105,199,104,57,107,59,107,63,107,60,107,148,107,151,107,153,107,149,107,189,107,240,107,242,107,243,107,48,108,252,109,70,110,71,110,31,110,73,110,136,110,60,110,61,110,69,110,98,110,43,110,63,110,65,110,93,110,115,110,28,110,51,110,75,110,64,110,81,110,59,110,3,110,46,110,94,110,104,110,92,110,97,110,49,110,40,110,96,110,113,110,107,110,57,110,34,110,48,110,83,110,101,110,39,110,120,110,100,110,119,110,85,110,121,110,82,110,102,110,53,110,54,110,90,110,32,113,30,113,47,113,251,112,46,113,49,113,35,113,37,113,34,113,50,113,31,113,40,113,58,113,27,113,75,114,90,114,136,114,137,114,134,114,133,114,139,114,18,115,11,115,48,115,34,115,49,115,51,115,39,115,50,115,45,115,38,115,35,115,53,115,12,115,46,116,44,116,48,116,43,116,22,116,26,116,33,116,45,116,49,116,36,116,35,116,29,116,41,116,32,116,50,116,251,116,47,117,111,117,108,117,231,117,218,117,225,117,230,117,221,117,223,117,228,117,215,117,149,118,146,118,218,118,70,119,71,119,68,119,77,119,69,119,74,119,78,119,75,119,76,119,222,119,236,119,96,120,100,120,101,120,92,120,109,120,113,120,106,120,110,120,112,120,105,120,104,120,94,120,98,120,116,121,115,121,114,121,112,121,2,122,10,122,3,122,12,122,4,122,153,122,230,122,228,122,74,123,59,123,68,123,72,123,76,123,78,123,64,123,88,123,69,123,162,124,158,124,168,124,161,124,88,125,111,125,99,125,83,125,86,125,103,125,106,125,79,125,109,125,92,125,107,125,82,125,84,125,105,125,81,125,95,125,78,125,62,127,63,127,101,127,102,127,162,127,160,127,161,127,215,127,81,128,79,128,80,128,254,128,212,128,67,129,74,129,82,129,79,129,71,129,61,129,77,129,58,129,230,129,238,129,247,129,248,129,249,129,4,130,60,130,61,130,63,130,117,130,59,131,207,131,249,131,35,132,192,131,232,131,18,132,231,131,228,131,252,131,246,131,16,132,198,131,200,131,235,131,227,131,191,131,1,132,221,131,229,131,216,131,255,131,225,131,203,131,206,131,214,131,245,131,201,131,9,132,15,132,222,131,17,132,6,132,194,131,243,131,213,131,250,131,199,131,209,131,234,131,19,132,195,131,236,131,238,131,196,131,251,131,215,131,226,131,27,132,219,131,254,131,216,134,226,134,230,134,211,134,227,134,218,134,234,134,221,134,235,134,220,134,236,134,233,134,215,134,232,134,209,134,72,136,86,136,85,136,186,136,215,136,185,136,184,136,192,136,190,136,182,136,188,136,183,136,189,136,178,136,1,137,201,136,149,137,152,137,151,137,221,137,218,137,219,137,78,138,77,138,57,138,89,138,64,138,87,138,88,138,68,138,69,138,82,138,72,138,81,138,74,138,76,138,79,138,95,140,129,140,128,140,186,140,190,140,176,140,185,140,181,140,132,141,128,141,137,141,216,141,211,141,205,141,199,141,214,141,220,141,207,141,213,141,217,141,200,141,215,141,197,141,239,142,247,142,250,142,249,142,230,142,238,142,229,142,245,142,231,142,232,142,246,142,235,142,241,142,236,142,244,142,233,142,45,144,52,144,47,144,6,145,44,145,4,145,255,144,252,144,8,145,249,144,251,144,1,145,0,145,7,145,5,145,3,145,97,145,100,145,95,145,98,145,96,145,1,146,10,146,37,146,3,146,26,146,38,146,15,146,12,146,0,146,18,146,255,145,253,145,6,146,4,146,39,146,2,146,28,146,36,146,25,146,23,146,5,146,22,146,123,149,141,149,140,149,144,149,135,150,126,150,136,150,137,150,131,150,128,150,194,150,200,150,195,150,241,150,240,150,108,151,112,151,110,151,7,152,169,152,235,152,230,156,249,158,131,78,132,78,182,78,189,80,191,80,198,80,174,80,196,80,202,80,180,80,200,80,194,80,176,80,193,80,186,80,177,80,203,80,201,80,182,80,184,80,215,81,122,82,120,82,123,82,124,82,195,85,219,85,204,85,208,85,203,85,202,85,221,85,192,85,212,85,196,85,233,85,191,85,210,85,141,85,207,85,213,85,226,85,214,85,200,85,242,85,205,85,217,85,194,85,20,87,83,88,104,88,100,88,79,88,77,88,73,88,111,88,85,88,78,88,93,88,89,88,101,88,91,88,61,88,99,88,113,88,252,88,199,90,196,90,203,90,186,90,184,90,177,90,181,90,176,90,191,90,200,90,187,90,198,90,183,90,192,90,202,90,180,90,182,90,205,90,185,90,144,90,214,91,216,91,217,91,31,92,51,92,113,93,99,93,74,93,101,93,114,93,108,93,94,93,104,93,103,93,98,93,240,93,79,94,78,94,74,94,77,94,75,94,197,94,204,94,198,94,203,94,199,94,64,95,175,95,173,95,247,96,73,97,74,97,43,97,69,97,54,97,50,97,46,97,70,97,47,97,79,97,41,97,64,97,32,98,104,145,35,98,37,98,36,98,197,99,241,99,235,99,16,100,18,100,9,100,32,100,36,100,51,100,67,100,31,100,21,100,24,100,57,100,55,100,34,100,35,100,12,100,38,100,48,100,40,100,65,100,53,100,47,100,10,100,26,100,64,100,37,100,39,100,11,100,231,99,27,100,46,100,33,100,14,100,111,101,146,101,211,101,134,102,140,102,149,102,144,102,139,102,138,102,153,102,148,102,120,102,32,103,102,105,95,105,56,105,78,105,98,105,113,105,63,105,69,105,106,105,57,105,66,105,87,105,89,105,122,105,72,105,73,105,53,105,108,105,51,105,61,105,101,105,240,104,120,105,52,105,105,105,64,105,111,105,68,105,118,105,88,105,65,105,116,105,76,105,59,105,75,105,55,105,92,105,79,105,81,105,50,105,82,105,47,105,123,105,60,105,70,107,69,107,67,107,66,107,72,107,65,107,155,107,13,250,251,107,252,107,249,107,247,107,248,107,155,110,214,110,200,110,143,110,192,110,159,110,147,110,148,110,160,110,177,110,185,110,198,110,210,110,189,110,193,110,158,110,201,110,183,110,176,110,205,110,166,110,207,110,178,110,190,110,195,110,220,110,216,110,153,110,146,110,142,110,141,110,164,110,161,110,191,110,179,110,208,110,202,110,151,110,174,110,163,110,71,113,84,113,82,113,99,113,96,113,65,113,93,113,98,113,114,113,120,113,106,113,97,113,66,113,88,113,67,113,75,113,112,113,95,113,80,113,83,113,68,113,77,113,90,113,79,114,141,114,140,114,145,114,144,114,142,114,60,115,66,115,59,115,58,115,64,115,74,115,73,115,68,116,74,116,75,116,82,116,81,116,87,116,64,116,79,116,80,116,78,116,66,116,70,116,77,116,84,116,225,116,255,116,254,116,253,116,29,117,121,117,119,117,131,105,239,117,15,118,3,118,247,117,254,117,252,117,249,117,248,117,16,118,251,117,246,117,237,117,245,117,253,117,153,118,181,118,221,118,85,119,95,119,96,119,82,119,86,119,90,119,105,119,103,119,84,119,89,119,109,119,224,119,135,120,154,120,148,120,143,120,132,120,149,120,133,120,134,120,161,120,131,120,121,120,153,120,128,120,150,120,123,120,124,121,130,121,125,121,121,121,17,122,24,122,25,122,18,122,23,122,21,122,34,122,19,122,27,122,16,122,163,122,162,122,158,122,235,122,102,123,100,123,109,123,116,123,105,123,114,123,101,123,115,123,113,123,112,123,97,123,120,123,118,123,99,123,178,124,180,124,175,124,136,125,134,125,128,125,141,125,127,125,133,125,122,125,142,125,123,125,131,125,124,125,140,125,148,125,132,125,125,125,146,125,109,127,107,127,103,127,104,127,108,127,166,127,165,127,167,127,219,127,220,127,33,128,100,129,96,129,119,129,92,129,105,129,91,129,98,129,114,129,33,103,94,129,118,129,103,129,111,129,68,129,97,129,29,130,73,130,68,130,64,130,66,130,69,130,241,132,63,132,86,132,118,132,121,132,143,132,141,132,101,132,81,132,64,132,134,132,103,132,48,132,77,132,125,132,90,132,89,132,116,132,115,132,93,132,7,133,94,132,55,132,58,132,52,132,122,132,67,132,120,132,50,132,69,132,41,132,217,131,75,132,47,132,66,132,45,132,95,132,112,132,57,132,78,132,76,132,82,132,111,132,197,132,142,132,59,132,71,132,54,132,51,132,104,132,126,132,68,132,43,132,96,132,84,132,110,132,80,132,11,135,4,135,247,134,12,135,250,134,214,134,245,134,77,135,248,134,14,135,9,135,1,135,246,134,13,135,5,135,214,136,203,136,205,136,206,136,222,136,219,136,218,136,204,136,208,136,133,137,155,137,223,137,229,137,228,137,225,137,224,137,226,137,220,137,230,137,118,138,134,138,127,138,97,138,63,138,119,138,130,138,132,138,117,138,131,138,129,138,116,138,122,138,60,140,75,140,74,140,101,140,100,140,102,140,134,140,132,140,133,140,204,140,104,141,105,141,145,141,140,141,142,141,143,141,141,141,147,141,148,141,144,141,146,141,240,141,224,141,236,141,241,141,238,141,208,141,233,141,227,141,226,141,231,141,242,141,235,141,244,141,6,143,255,142,1,143,0,143,5,143,7,143,8,143,2,143,11,143,82,144,63,144,68,144,73,144,61,144,16,145,13,145,15,145,17,145,22,145,20,145,11,145,14,145,110,145,111,145,72,146,82,146,48,146,58,146,102,146,51,146,101,146,94,146,131,146,46,146,74,146,70,146,109,146,108,146,79,146,96,146,103,146,111,146,54,146,97,146,112,146,49,146,84,146,99,146,80,146,114,146,78,146,83,146,76,146,86,146,50,146,159,149,156,149,158,149,155,149,146,150,147,150,145,150,151,150,206,150,250,150,253,150,248,150,245,150,115,151,119,151,120,151,114,151,15,152,13,152,14,152,172,152,246,152,249,152,175,153,178,153,176,153,181,153,173,154,171,154,91,155,234,156,237,156,231,156,128,158,253,158,230,80,212,80,215,80,232,80,243,80,219,80,234,80,221,80,228,80,211,80,236,80,240,80,239,80,227,80,224,80,216,81,128,82,129,82,233,82,235,82,48,83,172,83,39,86,21,86,12,86,18,86,252,85,15,86,28,86,1,86,19,86,2,86,250,85,29,86,4,86,255,85,249,85,137,88,124,88,144,88,152,88,134,88,129,88,127,88,116,88,139,88,122,88,135,88,145,88,142,88,118,88,130,88,136,88,123,88,148,88,143,88,254,88,107,89,220,90,238,90,229,90,213,90,234,90,218,90,237,90,235,90,243,90,226,90,224,90,219,90,236,90,222,90,221,90,217,90,232,90,223,90,119,91,224,91,227,91,99,92,130,93,128,93,125,93,134,93,122,93,129,93,119,93,138,93,137,93,136,93,126,93,124,93,141,93,121,93,127,93,88,94,89,94,83,94,216,94,209,94,215,94,206,94,220,94,213,94,217,94,210,94,212,94,68,95,67,95,111,95,182,95,44,97,40,97,65,97,94,97,113,97,115,97,82,97,83,97,114,97,108,97,128,97,116,97,84,97,122,97,91,97,101,97,59,97,106,97,97,97,86,97,41,98,39,98,43,98,43,100,77,100,91,100,93,100,116,100,118,100,114,100,115,100,125,100,117,100,102,100,166,100,78,100,130,100,94,100,92,100,75,100,83,100,96,100,80,100,127,100,63,100,108,100,107,100,89,100,101,100,119,100,115,101,160,101,161,102,160,102,159,102,5,103,4,103,34,103,177,105,182,105,201,105,160,105,206,105,150,105,176,105,172,105,188,105,145,105,153,105,142,105,167,105,141,105,169,105,190,105,175,105,191,105,196,105,189,105,164,105,212,105,185,105,202,105,154,105,207,105,179,105,147,105,170,105,161,105,158,105,217,105,151,105,144,105,194,105,181,105,165,105,198,105,74,107,77,107,75,107,158,107,159,107,160,107,195,107,196,107,254,107,206,110,245,110,241,110,3,111,37,111,248,110,55,111,251,110,46,111,9,111,78,111,25,111,26,111,39,111,24,111,59,111,18,111,237,110,10,111,54,111,115,111,249,110,238,110,45,111,64,111,48,111,60,111,53,111,235,110,7,111,14,111,67,111,5,111,253,110,246,110,57,111,28,111,252,110,58,111,31,111,13,111,30,111,8,111,33,111,135,113,144,113,137,113,128,113,133,113,130,113,143,113,123,113,134,113,129,113,151,113,68,114,83,114,151,114,149,114,147,114,67,115,77,115,81,115,76,115,98,116,115,116,113,116,117,116,114,116,103,116,110,116,0,117,2,117,3,117,125,117,144,117,22,118,8,118,12,118,21,118,17,118,10,118,20,118,184,118,129,119,124,119,133,119,130,119,110,119,128,119,111,119,126,119,131,119,178,120,170,120,180,120,173,120,168,120,126,120,171,120,158,120,165,120,160,120,172,120,162,120,164,120,152,121,138,121,139,121,150,121,149,121,148,121,147,121,151,121,136,121,146,121,144,121,43,122,74,122,48,122,47,122,40,122,38,122,168,122,171,122,172,122,238,122,136,123,156,123,138,123,145,123,144,123,150,123,141,123,140,123,155,123,142,123,133,123,152,123,132,82,153,123,164,123,130,123,187,124,191,124,188,124,186,124,167,125,183,125,194,125,163,125,170,125,193,125,192,125,197,125,157,125,206,125,196,125,198,125,203,125,204,125,175,125,185,125,150,125,188,125,159,125,166,125,174,125,169,125,161,125,201,125,115,127,226,127,227,127,229,127,222,127,36,128,93,128,92,128,137,129,134,129,131,129,135,129,141,129,140,129,139,129,21,130,151,132,164,132,161,132,159,132,186,132,206,132,194,132,172,132,174,132,171,132,185,132,180,132,193,132,205,132,170,132,154,132,177,132,208,132,157,132,167,132,187,132,162,132,148,132,199,132,204,132,155,132,169,132,175,132,168,132,214,132,152,132,182,132,207,132,160,132,215,132,212,132,210,132,219,132,176,132,145,132,97,134,51,135,35,135,40,135,107,135,64,135,46,135,30,135,33,135,25,135,27,135,67,135,44,135,65,135,62,135,70,135,32,135,50,135,42,135,45,135,60,135,18,135,58,135,49,135,53,135,66,135],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+110142);allocate([38,135,39,135,56,135,36,135,26,135,48,135,17,135,247,136,231,136,241,136,242,136,250,136,254,136,238,136,252,136,246,136,251,136,240,136,236,136,235,136,157,137,161,137,159,137,158,137,233,137,235,137,232,137,171,138,153,138,139,138,146,138,143,138,150,138,61,140,104,140,105,140,213,140,207,140,215,140,150,141,9,142,2,142,255,141,13,142,253,141,10,142,3,142,7,142,6,142,5,142,254,141,0,142,4,142,16,143,17,143,14,143,13,143,35,145,28,145,32,145,34,145,31,145,29,145,26,145,36,145,33,145,27,145,122,145,114,145,121,145,115,145,165,146,164,146,118,146,155,146,122,146,160,146,148,146,170,146,141,146,166,146,154,146,171,146,121,146,151,146,127,146,163,146,238,146,142,146,130,146,149,146,162,146,125,146,136,146,161,146,138,146,134,146,140,146,153,146,167,146,126,146,135,146,169,146,157,146,139,146,45,146,158,150,161,150,255,150,88,151,125,151,122,151,126,151,131,151,128,151,130,151,123,151,132,151,129,151,127,151,206,151,205,151,22,152,173,152,174,152,2,153,0,153,7,153,157,153,156,153,195,153,185,153,187,153,186,153,194,153,189,153,199,153,177,154,227,154,231,154,62,155,63,155,96,155,97,155,95,155,241,156,242,156,245,156,167,158,255,80,3,81,48,81,248,80,6,81,7,81,246,80,254,80,11,81,12,81,253,80,10,81,139,82,140,82,241,82,239,82,72,86,66,86,76,86,53,86,65,86,74,86,73,86,70,86,88,86,90,86,64,86,51,86,61,86,44,86,62,86,56,86,42,86,58,86,26,87,171,88,157,88,177,88,160,88,163,88,175,88,172,88,165,88,161,88,255,88,255,90,244,90,253,90,247,90,246,90,3,91,248,90,2,91,249,90,1,91,7,91,5,91,15,91,103,92,153,93,151,93,159,93,146,93,162,93,147,93,149,93,160,93,156,93,161,93,154,93,158,93,105,94,93,94,96,94,92,94,243,125,219,94,222,94,225,94,73,95,178,95,139,97,131,97,121,97,177,97,176,97,162,97,137,97,155,97,147,97,175,97,173,97,159,97,146,97,170,97,161,97,141,97,102,97,179,97,45,98,110,100,112,100,150,100,160,100,133,100,151,100,156,100,143,100,139,100,138,100,140,100,163,100,159,100,104,100,177,100,152,100,118,101,122,101,121,101,123,101,178,101,179,101,181,102,176,102,169,102,178,102,183,102,170,102,175,102,0,106,6,106,23,106,229,105,248,105,21,106,241,105,228,105,32,106,255,105,236,105,226,105,27,106,29,106,254,105,39,106,242,105,238,105,20,106,247,105,231,105,64,106,8,106,230,105,251,105,13,106,252,105,235,105,9,106,4,106,24,106,37,106,15,106,246,105,38,106,7,106,244,105,22,106,81,107,165,107,163,107,162,107,166,107,1,108,0,108,255,107,2,108,65,111,38,111,126,111,135,111,198,111,146,111,141,111,137,111,140,111,98,111,79,111,133,111,90,111,150,111,118,111,108,111,130,111,85,111,114,111,82,111,80,111,87,111,148,111,147,111,93,111,0,111,97,111,107,111,125,111,103,111,144,111,83,111,139,111,105,111,127,111,149,111,99,111,119,111,106,111,123,111,178,113,175,113,155,113,176,113,160,113,154,113,169,113,181,113,157,113,165,113,158,113,164,113,161,113,170,113,156,113,167,113,179,113,152,114,154,114,88,115,82,115,94,115,95,115,96,115,93,115,91,115,97,115,90,115,89,115,98,115,135,116,137,116,138,116,134,116,129,116,125,116,133,116,136,116,124,116,121,116,8,117,7,117,126,117,37,118,30,118,25,118,29,118,28,118,35,118,26,118,40,118,27,118,156,118,157,118,158,118,155,118,141,119,143,119,137,119,136,119,205,120,187,120,207,120,204,120,209,120,206,120,212,120,200,120,195,120,196,120,201,120,154,121,161,121,160,121,156,121,162,121,155,121,118,107,57,122,178,122,180,122,179,122,183,123,203,123,190,123,172,123,206,123,175,123,185,123,202,123,181,123,197,124,200,124,204,124,203,124,247,125,219,125,234,125,231,125,215,125,225,125,3,126,250,125,230,125,246,125,241,125,240,125,238,125,223,125,118,127,172,127,176,127,173,127,237,127,235,127,234,127,236,127,230,127,232,127,100,128,103,128,163,129,159,129,158,129,149,129,162,129,153,129,151,129,22,130,79,130,83,130,82,130,80,130,78,130,81,130,36,133,59,133,15,133,0,133,41,133,14,133,9,133,13,133,31,133,10,133,39,133,28,133,251,132,43,133,250,132,8,133,12,133,244,132,42,133,242,132,21,133,247,132,235,132,243,132,252,132,18,133,234,132,233,132,22,133,254,132,40,133,29,133,46,133,2,133,253,132,30,133,246,132,49,133,38,133,231,132,232,132,240,132,239,132,249,132,24,133,32,133,48,133,11,133,25,133,47,133,98,134,86,135,99,135,100,135,119,135,225,135,115,135,88,135,84,135,91,135,82,135,97,135,90,135,81,135,94,135,109,135,106,135,80,135,78,135,95,135,93,135,111,135,108,135,122,135,110,135,92,135,101,135,79,135,123,135,117,135,98,135,103,135,105,135,90,136,5,137,12,137,20,137,11,137,23,137,24,137,25,137,6,137,22,137,17,137,14,137,9,137,162,137,164,137,163,137,237,137,240,137,236,137,207,138,198,138,184,138,211,138,209,138,212,138,213,138,187,138,215,138,190,138,192,138,197,138,216,138,195,138,186,138,189,138,217,138,62,140,77,140,143,140,229,140,223,140,217,140,232,140,218,140,221,140,231,140,160,141,156,141,161,141,155,141,32,142,35,142,37,142,36,142,46,142,21,142,27,142,22,142,17,142,25,142,38,142,39,142,20,142,18,142,24,142,19,142,28,142,23,142,26,142,44,143,36,143,24,143,26,143,32,143,35,143,22,143,23,143,115,144,112,144,111,144,103,144,107,144,47,145,43,145,41,145,42,145,50,145,38,145,46,145,133,145,134,145,138,145,129,145,130,145,132,145,128,145,208,146,195,146,196,146,192,146,217,146,182,146,207,146,241,146,223,146,216,146,233,146,215,146,221,146,204,146,239,146,194,146,232,146,202,146,200,146,206,146,230,146,205,146,213,146,201,146,224,146,222,146,231,146,209,146,211,146,181,146,225,146,198,146,180,146,124,149,172,149,171,149,174,149,176,149,164,150,162,150,211,150,5,151,8,151,2,151,90,151,138,151,142,151,136,151,208,151,207,151,30,152,29,152,38,152,41,152,40,152,32,152,27,152,39,152,178,152,8,153,250,152,17,153,20,153,22,153,23,153,21,153,220,153,205,153,207,153,211,153,212,153,206,153,201,153,214,153,216,153,203,153,215,153,204,153,179,154,236,154,235,154,243,154,242,154,241,154,70,155,67,155,103,155,116,155,113,155,102,155,118,155,117,155,112,155,104,155,100,155,108,155,252,156,250,156,253,156,255,156,247,156,7,157,0,157,249,156,251,156,8,157,5,157,4,157,131,158,211,158,15,159,16,159,28,81,19,81,23,81,26,81,17,81,222,81,52,83,225,83,112,86,96,86,110,86,115,86,102,86,99,86,109,86,114,86,94,86,119,86,28,87,27,87,200,88,189,88,201,88,191,88,186,88,194,88,188,88,198,88,23,91,25,91,27,91,33,91,20,91,19,91,16,91,22,91,40,91,26,91,32,91,30,91,239,91,172,93,177,93,169,93,167,93,181,93,176,93,174,93,170,93,168,93,178,93,173,93,175,93,180,93,103,94,104,94,102,94,111,94,233,94,231,94,230,94,232,94,229,94,75,95,188,95,157,97,168,97,150,97,197,97,180,97,198,97,193,97,204,97,186,97,191,97,184,97,140,97,215,100,214,100,208,100,207,100,201,100,189,100,137,100,195,100,219,100,243,100,217,100,51,101,127,101,124,101,162,101,200,102,190,102,192,102,202,102,203,102,207,102,189,102,187,102,186,102,204,102,35,103,52,106,102,106,73,106,103,106,50,106,104,106,62,106,93,106,109,106,118,106,91,106,81,106,40,106,90,106,59,106,63,106,65,106,106,106,100,106,80,106,79,106,84,106,111,106,105,106,96,106,60,106,94,106,86,106,85,106,77,106,78,106,70,106,85,107,84,107,86,107,167,107,170,107,171,107,200,107,199,107,4,108,3,108,6,108,173,111,203,111,163,111,199,111,188,111,206,111,200,111,94,111,196,111,189,111,158,111,202,111,168,111,4,112,165,111,174,111,186,111,172,111,170,111,207,111,191,111,184,111,162,111,201,111,171,111,205,111,175,111,178,111,176,111,197,113,194,113,191,113,184,113,214,113,192,113,193,113,203,113,212,113,202,113,199,113,207,113,189,113,216,113,188,113,198,113,218,113,219,113,157,114,158,114,105,115,102,115,103,115,108,115,101,115,107,115,106,115,127,116,154,116,160,116,148,116,146,116,149,116,161,116,11,117,128,117,47,118,45,118,49,118,61,118,51,118,60,118,53,118,50,118,48,118,187,118,230,118,154,119,157,119,161,119,156,119,155,119,162,119,163,119,149,119,153,119,151,119,221,120,233,120,229,120,234,120,222,120,227,120,219,120,225,120,226,120,237,120,223,120,224,120,164,121,68,122,72,122,71,122,182,122,184,122,181,122,177,122,183,122,222,123,227,123,231,123,221,123,213,123,229,123,218,123,232,123,249,123,212,123,234,123,226,123,220,123,235,123,216,123,223,123,210,124,212,124,215,124,208,124,209,124,18,126,33,126,23,126,12,126,31,126,32,126,19,126,14,126,28,126,21,126,26,126,34,126,11,126,15,126,22,126,13,126,20,126,37,126,36,126,67,127,123,127,124,127,122,127,177,127,239,127,42,128,41,128,108,128,177,129,166,129,174,129,185,129,181,129,171,129,176,129,172,129,180,129,178,129,183,129,167,129,242,129,85,130,86,130,87,130,86,133,69,133,107,133,77,133,83,133,97,133,88,133,64,133,70,133,100,133,65,133,98,133,68,133,81,133,71,133,99,133,62,133,91,133,113,133,78,133,110,133,117,133,85,133,103,133,96,133,140,133,102,133,93,133,84,133,101,133,108,133,99,134,101,134,100,134,155,135,143,135,151,135,147,135,146,135,136,135,129,135,150,135,152,135,121,135,135,135,163,135,133,135,144,135,145,135,157,135,132,135,148,135,156,135,154,135,137,135,30,137,38,137,48,137,45,137,46,137,39,137,49,137,34,137,41,137,35,137,47,137,44,137,31,137,241,137,224,138,226,138,242,138,244,138,245,138,221,138,20,139,228,138,223,138,240,138,200,138,222,138,225,138,232,138,255,138,239,138,251,138,145,140,146,140,144,140,245,140,238,140,241,140,240,140,243,140,108,141,110,141,165,141,167,141,51,142,62,142,56,142,64,142,69,142,54,142,60,142,61,142,65,142,48,142,63,142,189,142,54,143,46,143,53,143,50,143,57,143,55,143,52,143,118,144,121,144,123,144,134,144,250,144,51,145,53,145,54,145,147,145,144,145,145,145,141,145,143,145,39,147,30,147,8,147,31,147,6,147,15,147,122,147,56,147,60,147,27,147,35,147,18,147,1,147,70,147,45,147,14,147,13,147,203,146,29,147,250,146,37,147,19,147,249,146,247,146,52,147,2,147,36,147,255,146,41,147,57,147,53,147,42,147,20,147,12,147,11,147,254,146,9,147,0,147,251,146,22,147,188,149,205,149,190,149,185,149,186,149,182,149,191,149,181,149,189,149,169,150,212,150,11,151,18,151,16,151,153,151,151,151,148,151,240,151,248,151,53,152,47,152,50,152,36,153,31,153,39,153,41,153,158,153,238,153,236,153,229,153,228,153,240,153,227,153,234,153,233,153,231,153,185,154,191,154,180,154,187,154,246,154,250,154,249,154,247,154,51,155,128,155,133,155,135,155,124,155,126,155,123,155,130,155,147,155,146,155,144,155,122,155,149,155,125,155,136,155,37,157,23,157,32,157,30,157,20,157,41,157,29,157,24,157,34,157,16,157,25,157,31,157,136,158,134,158,135,158,174,158,173,158,213,158,214,158,250,158,18,159,61,159,38,81,37,81,34,81,36,81,32,81,41,81,244,82,147,86,140,86,141,86,134,86,132,86,131,86,126,86,130,86,127,86,129,86,214,88,212,88,207,88,210,88,45,91,37,91,50,91,35,91,44,91,39,91,38,91,47,91,46,91,123,91,241,91,242,91,183,93,108,94,106,94,190,95,187,95,195,97,181,97,188,97,231,97,224,97,229,97,228,97,232,97,222,97,239,100,233,100,227,100,235,100,228,100,232,100,129,101,128,101,182,101,218,101,210,102,141,106,150,106,129,106,165,106,137,106,159,106,155,106,161,106,158,106,135,106,147,106,142,106,149,106,131,106,168,106,164,106,145,106,127,106,166,106,154,106,133,106,140,106,146,106,91,107,173,107,9,108,204,111,169,111,244,111,212,111,227,111,220,111,237,111,231,111,230,111,222,111,242,111,221,111,226,111,232,111,225,113,241,113,232,113,242,113,228,113,240,113,226,113,115,115,110,115,111,115,151,116,178,116,171,116,144,116,170,116,173,116,177,116,165,116,175,116,16,117,17,117,18,117,15,117,132,117,67,118,72,118,73,118,71,118,164,118,233,118,181,119,171,119,178,119,183,119,182,119,180,119,177,119,168,119,240,119,243,120,253,120,2,121,251,120,252,120,242,120,5,121,249,120,254,120,4,121,171,121,168,121,92,122,91,122,86,122,88,122,84,122,90,122,190,122,192,122,193,122,5,124,15,124,242,123,0,124,255,123,251,123,14,124,244,123,11,124,243,123,2,124,9,124,3,124,1,124,248,123,253,123,6,124,240,123,241,123,16,124,10,124,232,124,45,126,60,126,66,126,51,126,72,152,56,126,42,126,73,126,64,126,71,126,41,126,76,126,48,126,59,126,54,126,68,126,58,126,69,127,127,127,126,127,125,127,244,127,242,127,44,128,187,129,196,129,204,129,202,129,197,129,199,129,188,129,233,129,91,130,90,130,92,130,131,133,128,133,143,133,167,133,149,133,160,133,139,133,163,133,123,133,164,133,154,133,158,133,119,133,124,133,137,133,161,133,122,133,120,133,87,133,142,133,150,133,134,133,141,133,153,133,157,133,129,133,162,133,130,133,136,133,133,133,121,133,118,133,152,133,144,133,159,133,104,134,190,135,170,135,173,135,197,135,176,135,172,135,185,135,181,135,188,135,174,135,201,135,195,135,194,135,204,135,183,135,175,135,196,135,202,135,180,135,182,135,191,135,184,135,189,135,222,135,178,135,53,137,51,137,60,137,62,137,65,137,82,137,55,137,66,137,173,137,175,137,174,137,242,137,243,137,30,139,24,139,22,139,17,139,5,139,11,139,34,139,15,139,18,139,21,139,7,139,13,139,8,139,6,139,28,139,19,139,26,139,79,140,112,140,114,140,113,140,111,140,149,140,148,140,249,140,111,141,78,142,77,142,83,142,80,142,76,142,71,142,67,143,64,143,133,144,126,144,56,145,154,145,162,145,155,145,153,145,159,145,161,145,157,145,160,145,161,147,131,147,175,147,100,147,86,147,71,147,124,147,88,147,92,147,118,147,73,147,80,147,81,147,96,147,109,147,143,147,76,147,106,147,121,147,87,147,85,147,82,147,79,147,113,147,119,147,123,147,97,147,94,147,99,147,103,147,128,147,78,147,89,147,199,149,192,149,201,149,195,149,197,149,183,149,174,150,176,150,172,150,32,151,31,151,24,151,29,151,25,151,154,151,161,151,156,151,158,151,157,151,213,151,212,151,241,151,65,152,68,152,74,152,73,152,69,152,67,152,37,153,43,153,44,153,42,153,51,153,50,153,47,153,45,153,49,153,48,153,152,153,163,153,161,153,2,154,250,153,244,153,247,153,249,153,248,153,246,153,251,153,253,153,254,153,252,153,3,154,190,154,254,154,253,154,1,155,252,154,72,155,154,155,168,155,158,155,155,155,166,155,161,155,165,155,164,155,134,155,162,155,160,155,175,155,51,157,65,157,103,157,54,157,46,157,47,157,49,157,56,157,48,157,69,157,66,157,67,157,62,157,55,157,64,157,61,157,245,127,45,157,138,158,137,158,141,158,176,158,200,158,218,158,251,158,255,158,36,159,35,159,34,159,84,159,160,159,49,81,45,81,46,81,152,86,156,86,151,86,154,86,157,86,153,86,112,89,60,91,105,92,106,92,192,93,109,94,110,94,216,97,223,97,237,97,238,97,241,97,234,97,240,97,235,97,214,97,233,97,255,100,4,101,253,100,248,100,1,101,3,101,252,100,148,101,219,101,218,102,219,102,216,102,197,106,185,106,189,106,225,106,198,106,186,106,182,106,183,106,199,106,180,106,173,106,94,107,201,107,11,108,7,112,12,112,13,112,1,112,5,112,20,112,14,112,255,111,0,112,251,111,38,112,252,111,247,111,10,112,1,114,255,113,249,113,3,114,253,113,118,115,184,116,192,116,181,116,193,116,190,116,182,116,187,116,194,116,20,117,19,117,92,118,100,118,89,118,80,118,83,118,87,118,90,118,166,118,189,118,236,118,194,119,186,119,255,120,12,121,19,121,20,121,9,121,16,121,18,121,17,121,173,121,172,121,95,122,28,124,41,124,25,124,32,124,31,124,45,124,29,124,38,124,40,124,34,124,37,124,48,124,92,126,80,126,86,126,99,126,88,126,98,126,95,126,81,126,96,126,87,126,83,126,181,127,179,127,247,127,248,127,117,128,209,129,210,129,208,129,95,130,94,130,180,133,198,133,192,133,195,133,194,133,179,133,181,133,189,133,199,133,196,133,191,133,203,133,206,133,200,133,197,133,177,133,182,133,210,133,36,134,184,133,183,133,190,133,105,134,231,135,230,135,226,135,219,135,235,135,234,135,229,135,223,135,243,135,228,135,212,135,220,135,211,135,237,135,216,135,227,135,164,135,215,135,217,135,1,136,244,135,232,135,221,135,83,137,75,137,79,137,76,137,70,137,80,137,81,137,73,137,42,139,39,139,35,139,51,139,48,139,53,139,71,139,47,139,60,139,62,139,49,139,37,139,55,139,38,139,54,139,46,139,36,139,59,139,61,139,58,139,66,140,117,140,153,140,152,140,151,140,254,140,4,141,2,141,0,141,92,142,98,142,96,142,87,142,86,142,94,142,101,142,103,142,91,142,90,142,97,142,93,142,105,142,84,142,70,143,71,143,72,143,75,143,40,145,58,145,59,145,62,145,168,145,165,145,167,145,175,145,170,145,181,147,140,147,146,147,183,147,155,147,157,147,137,147,167,147,142,147,170,147,158,147,166,147,149,147,136,147,153,147,159,147,141,147,177,147,145,147,178,147,164,147,168,147,180,147,163,147,165,147,210,149,211,149,209,149,179,150,215,150,218,150,194,93,223,150,216,150,221,150,35,151,34,151,37,151,172,151,174,151,168,151,171,151,164,151,170,151,162,151,165,151,215,151,217,151,214,151,216,151,250,151,80,152,81,152,82,152,184,152,65,153,60,153,58,153,15,154,11,154,9,154,13,154,4,154,17,154,10,154,5,154,7,154,6,154,192,154,220,154,8,155,4,155,5,155,41,155,53,155,74,155,76,155,75,155,199,155,198,155,195,155,191,155,193,155,181,155,184,155,211,155,182,155,196,155,185,155,189,155,92,157,83,157,79,157,74,157,91,157,75,157,89,157,86,157,76,157,87,157,82,157,84,157,95,157,88,157,90,157,142,158,140,158,223,158,1,159,0,159,22,159,37,159,43,159,42,159,41,159,40,159,76,159,85,159,52,81,53,81,150,82,247,82,180,83,171,86,173,86,166,86,167,86,170,86,172,86,218,88,221,88,219,88,18,89,61,91,62,91,63,91,195,93,112,94,191,95,251,97,7,101,16,101,13,101,9,101,12,101,14,101,132,101,222,101,221,101,222,102,231,106,224,106,204,106,209,106,217,106,203,106,223,106,220,106,208,106,235,106,207,106,205,106,222,106,96,107,176,107,12,108,25,112,39,112,32,112,22,112,43,112,33,112,34,112,35,112,41,112,23,112,36,112,28,112,42,112,12,114,10,114,7,114,2,114,5,114,165,114,166,114,164,114,163,114,161,114,203,116,197,116,183,116,195,116,22,117,96,118,201,119,202,119,196,119,241,119,29,121,27,121,33,121,28,121,23,121,30,121,176,121,103,122,104,122,51,124,60,124,57,124,44,124,59,124,236,124,234,124,118,126,117,126,120,126,112,126,119,126,111,126,122,126,114,126,116,126,104,126,75,127,74,127,131,127,134,127,183,127,253,127,254,127,120,128,215,129,213,129,100,130,97,130,99,130,235,133,241,133,237,133,217,133,225,133,232,133,218,133,215,133,236,133,242,133,248,133,216,133,223,133,227,133,220,133,209,133,240,133,230,133,239,133,222,133,226,133,0,136,250,135,3,136,246,135,247,135,9,136,12,136,11,136,6,136,252,135,8,136,255,135,10,136,2,136,98,137,90,137,91,137,87,137,97,137,92,137,88,137,93,137,89,137,136,137,183,137,182,137,246,137,80,139,72,139,74,139,64,139,83,139,86,139,84,139,75,139,85,139,81,139,66,139,82,139,87,139,67,140,119,140,118,140,154,140,6,141,7,141,9,141,172,141,170,141,173,141,171,141,109,142,120,142,115,142,106,142,111,142,123,142,194,142,82,143,81,143,79,143,80,143,83,143,180,143,64,145,63,145,176,145,173,145,222,147,199,147,207,147,194,147,218,147,208,147,249,147,236,147,204,147,217,147,169,147,230,147,202,147,212,147,238,147,227,147,213,147,196,147,206,147,192,147,210,147,231,147,125,149,218,149,219,149,225,150,41,151,43,151,44,151,40,151,38,151,179,151,183,151,182,151,221,151,222,151,223,151,92,152,89,152,93,152,87,152,191,152,189,152,187,152,190,152,72,153,71,153,67,153,166,153,167,153,26,154,21,154,37,154,29,154,36,154,27,154,34,154,32,154,39,154,35,154,30,154,28,154,20,154,194,154,11,155,10,155,14,155,12,155,55,155,234,155,235,155,224,155,222,155,228,155,230,155,226,155,240,155,212,155,215,155,236,155,220,155,217,155,229,155,213,155,225,155,218,155,119,157,129,157,138,157,132,157,136,157,113,157,128,157,120,157,134,157,139,157,140,157,125,157,107,157,116,157,117,157,112,157,105,157,133,157,115,157,123,157,130,157,111,157,121,157,127,157,135,157,104,157,148,158,145,158,192,158,252,158,45,159,64,159,65,159,77,159,86,159,87,159,88,159,55,83,178,86,181,86,179,86,227,88,69,91,198,93,199,93,238,94,239,94,192,95,193,95,249,97,23,101,22,101,21,101,19,101,223,101,232,102,227,102,228,102,243,106,240,106,234,106,232,106,249,106,241,106,238,106,239,106,60,112,53,112,47,112,55,112,52,112,49,112,66,112,56,112,63,112,58,112,57,112,64,112,59,112,51,112,65,112,19,114,20,114,168,114,125,115,124,115,186,116,171,118,170,118,190,118,237,118,204,119,206,119,207,119,205,119,242,119,37,121,35,121,39,121,40,121,36,121,41,121,178,121,110,122,108,122,109,122,247,122,73,124,72,124,74,124,71,124,69,124,238,124,123,126,126,126,129,126,128,126,186,127,255,127,121,128,219,129,217,129,11,130,104,130,105,130,34,134,255,133,1,134,254,133,27,134,0,134,246,133,4,134,9,134,5,134,12,134,253,133,25,136,16,136,17,136,23,136,19,136,22,136,99,137,102,137,185,137,247,137,96,139,106,139,93,139,104,139,99,139,101,139,103,139,109,139,174,141,134,142,136,142,132,142,89,143,86,143,87,143,85,143,88,143,90,143,141,144,67,145,65,145,183,145,181,145,178,145,179,145,11,148,19,148,251,147,32,148,15,148,20,148,254,147,21,148,16,148,40,148,25,148,13,148,245,147,0,148,247,147,7,148,14,148,22,148,18,148,250,147,9,148,248,147,10,148,255,147,252,147,12,148,246,147,17,148,6,148,222,149,224,149,223,149,46,151,47,151,185,151,187,151,253,151,254,151,96,152,98,152,99,152,95,152,193,152,194,152,80,153,78,153,89,153,76,153,75,153,83,153,50,154,52,154,49,154,44,154,42,154,54,154,41,154,46,154,56,154,45,154,199,154,202,154,198,154,16,155,18,155,17,155,11,156,8,156,247,155,5,156,18,156,248,155,64,156,7,156,14,156,6,156,23,156,20,156,9,156,159,157,153,157,164,157,157,157,146,157,152,157,144,157,155,157,160,157,148,157,156,157,170,157,151,157,161,157,154,157,162,157,168,157,158,157,163,157,191,157,169,157,150,157,166,157,167,157,153,158,155,158,154,158,229,158,228,158,231,158,230,158,48,159,46,159,91,159,96,159,94,159,93,159,89,159,145,159,58,81,57,81,152,82,151,82,195,86,189,86,190,86,72,91,71,91,203,93,207,93,241,94,253,97,27,101,2,107,252,106,3,107,248,106,0,107,67,112,68,112,74,112,72,112,73,112,69,112,70,112,29,114,26,114,25,114,126,115,23,117,106,118,208,119,45,121,49,121,47,121,84,124,83,124,242,124,138,126,135,126,136,126,139,126,134,126,141,126,77,127,187,127,48,128,221,129,24,134,42,134,38,134,31,134,35,134,28,134,25,134,39,134,46,134,33,134,32,134,41,134,30,134,37,134,41,136,29,136,27,136,32,136,36,136,28,136,43,136,74,136,109,137,105,137,110,137,107,137,250,137,121,139,120,139,69,139,122,139,123,139,16,141,20,141,175,141,142,142,140,142,94,143,91,143,93,143,70,145,68,145,69,145,185,145,63,148,59,148,54,148,41,148,61,148,60,148,48,148,57,148,42,148,55,148,44,148,64,148,49,148,229,149,228,149,227,149,53,151,58,151,191,151,225,151,100,152,201,152,198,152,192,152,88,153,86,153,57,154,61,154,70,154,68,154,66,154,65,154,58,154,63,154,205,154,21,155,23,155,24,155,22,155,58,155,82,155,43,156,29,156,28,156,44,156,35,156,40,156,41,156,36,156,33,156,183,157,182,157,188,157,193,157,199,157,202,157,207,157,190,157,197,157,195,157,187,157,181,157,206,157,185,157,186,157,172,157,200,157,177,157,173,157,204,157,179,157,205,157,178,157,122,158,156,158,235,158,238,158,237,158,27,159,24,159,26,159,49,159,78,159,101,159,100,159,146,159,185,78,198,86,197,86,203,86,113,89,75,91,76,91,213,93,209,93,242,94,33,101,32,101,38,101,34,101,11,107,8,107,9,107,13,108,85,112,86,112,87,112,82,112,30,114,31,114,169,114,127,115,216,116,213,116,217,116,215,116,109,118,173,118,53,121,180,121,112,122,113,122,87,124,92,124,89,124,91,124,90,124,244,124,241,124,145,126,79,127,135,127,222,129,107,130,52,134,53,134,51,134,44,134,50,134,54,134,44,136,40,136,38,136,42,136,37,136,113,137,191,137,190,137,251,137,126,139,132,139,130,139,134,139,133,139,127,139,21,141,149,142,148,142,154,142,146,142,144,142,150,142,151,142,96,143,98,143,71,145,76,148,80,148,74,148,75,148,79,148,71,148,69,148,72,148,73,148,70,148,63,151,227,151,106,152,105,152,203,152,84,153,91,153,78,154,83,154,84,154,76,154,79,154,72,154,74,154,73,154,82,154,80,154,208,154,25,155,43,155,59,155,86,155,85,155,70,156,72,156,63,156,68,156,57,156,51,156,65,156,60,156,55,156,52,156,50,156,61,156,54,156,219,157,210,157,222,157,218,157,203,157,208,157,220,157,209,157,223,157,233,157,217,157,216,157,214,157,245,157,213,157,221,157,182,158,240,158,53,159,51,159,50,159,66,159,107,159,149,159,162,159,61,81,153,82,232,88,231,88,114,89,77,91,216,93,47,136,79,95,1,98,3,98,4,98,41,101,37,101,150,101,235,102,17,107,18,107,15,107,202,107,91,112,90,112,34,114,130,115,129,115,131,115,112,118,212,119,103,124,102,124,149,126,108,130,58,134,64,134,57,134,60,134,49,134,59,134,62,134,48,136,50,136,46,136,51,136,118,137,116,137,115,137,254,137,140,139,142,139,139,139,136,139,69,140,25,141,152,142,100,143,99,143,188,145,98,148,85,148,93,148,87,148,94,148,196,151,197,151,0,152,86,154,89,154,30,155,31,155,32,155,82,156,88,156,80,156,74,156,77,156,75,156,85,156,89,156,76,156,78,156,251,157,247,157,239,157,227,157,235,157,248,157,228,157,246,157,225,157,238,157,230,157,242,157,240,157,226,157,236,157,244,157,243,157,232,157,237,157,194,158,208,158,242,158,243,158,6,159,28,159,56,159,55,159,54,159,67,159,79,159,113,159,112,159,110,159,111,159,211,86,205,86,78,91,109,92,45,101,237,102,238,102,19,107,95,112,97,112,93,112,96,112,35,114,219,116,229,116,213,119,56,121,183,121,182,121,106,124,151,126,137,127,109,130,67,134,56,136,55,136,53,136,75,136,148,139,149,139,158,142,159,142,160,142,157,142,190,145,189,145,194,145,107,148,104,148,105,148,229,150,70,151,67,151,71,151,199,151,229,151,94,154,213,154,89,155,99,156,103,156,102,156,98,156,94,156,96,156,2,158,254,157,7,158,3,158,6,158,5,158,0,158,1,158,9,158,255,157,253,157,4,158,160,158,30,159,70,159,116,159,117,159,118,159,212,86,46,101,184,101,24,107,25,107,23,107,26,107,98,112,38,114,170,114,216,119,217,119,57,121,105,124,107,124,246,124,154,126,152,126,155,126,153,126,224,129,225,129,70,134,71,134,72,134,121,137,122,137,124,137,123,137,255,137,152,139,153,139,165,142,164,142,163,142,110,148,109,148,111,148,113,148,115,148,73,151,114,152,95,153,104,156,110,156,109,156,11,158,13,158,16,158,15,158,18,158,17,158,161,158,245,158,9,159,71,159,120,159,123,159,122,159,121,159,30,87,102,112,111,124,60,136,178,141,166,142,195,145,116,148,120,148,118,148,117,148,96,154,116,156,115,156,113,156,117,156,20,158,19,158,246,158,10,159,164,159,104,112,101,112,247,124,106,134,62,136,61,136,63,136,158,139,156,140,169,142,201,142,75,151,115,152,116,152,204,152,97,153,171,153,100,154,102,154,103,154,36,155,21,158,23,158,72,159,7,98,30,107,39,114,76,134,168,142,130,148,128,148,129,148,105,154,104,154,46,155,25,158,41,114,75,134,159,139,131,148,121,156,183,158,117,118,107,154,122,156,29,158,105,112,106,112,164,158,126,159,73,159,152,159,129,120,185,146,207,136,187,88,82,96,167,124,250,90,84,37,102,37,87,37,96,37,108,37,99,37,90,37,105,37,93,37,82,37,100,37,85,37,94,37,106,37,97,37,88,37,103,37,91,37,83,37,101,37,86,37,95,37,107,37,98,37,89,37,104,37,92,37,81,37,80,37,109,37,110,37,112,37,111,37,147,37,0,48,1,48,2,48,183,0,37,32,38,32,168,0,3,48,173,0,21,32,37,34,60,255,60,34,24,32,25,32,28,32,29,32,20,48,21,48,8,48,9,48,10,48,11,48,12,48,13,48,14,48,15,48,16,48,17,48,177,0,215,0,247,0,96,34,100,34,101,34,30,34,52,34,176,0,50,32,51,32,3,33,43,33,224,255,225,255,229,255,66,38,64,38,32,34,165,34,18,35,2,34,7,34,97,34,82,34,167,0,59,32,6,38,5,38,203,37,207,37,206,37,199,37,198,37,161,37,160,37,179,37,178,37,189,37,188,37,146,33,144,33,145,33,147,33,148,33,19,48,106,34,107,34,26,34,61,34,29,34,53,34,43,34,44,34,8,34,11,34,134,34,135,34,130,34,131,34,42,34,41,34,39,34,40,34,226,255,210,33,212,33,0,34,3,34,180,0,94,255,199,2,216,2,221,2,218,2,217,2,184,0,219,2,161,0,191,0,208,2,46,34,17,34,15,34,164,0,9,33,48,32,193,37,192,37,183,37,182,37,100,38,96,38,97,38,101,38,103,38,99,38,153,34,200,37,163,37,208,37,209,37,146,37,164,37,165,37,168,37,167,37,166,37,169,37,104,38,15,38,14,38,28,38,30,38,182,0,32,32,33,32,149,33,151,33,153,33,150,33,152,33,109,38,105,38,106,38,108,38,127,50,28,50,22,33,199,51,34,33,194,51,216,51,33,33,172,32,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,255,2,255,3,255,4,255,5,255,6,255,7,255,8,255,9,255,10,255,11,255,12,255,13,255,14,255,15,255,16,255,17,255,18,255,19,255,20,255,21,255,22,255,23,255,24,255,25,255,26,255,27,255,28,255,29,255,30,255,31,255,32,255,33,255,34,255,35,255,36,255,37,255,38,255,39,255,40,255,41,255,42,255,43,255,44,255,45,255,46,255,47,255,48,255,49,255,50,255,51,255,52,255,53,255,54,255,55,255,56,255,57,255,58,255,59,255,230,255,61,255,62,255,63,255,64,255,65,255,66,255,67,255,68,255,69,255,70,255,71,255,72,255,73,255,74,255,75,255,76,255,77,255,78,255,79,255,80,255,81,255,82,255,83,255,84,255,85,255,86,255,87,255,88,255,89,255,90,255,91,255,92,255,93,255,227,255,49,49,50,49,51,49,52,49,53,49,54,49,55,49,56,49,57,49,58,49,59,49,60,49,61,49,62,49,63,49,64,49,65,49,66,49,67,49,68,49,69,49,70,49,71,49,72,49,73,49,74,49,75,49,76,49,77,49,78,49,79,49,80,49,81,49,82,49,83,49,84,49,85,49,86,49,87,49,88,49,89,49,90,49,91,49,92,49,93,49,94,49,95,49,96,49,97,49,98,49,99,49,100,49,101,49,102,49,103,49,104,49,105,49,106,49,107,49,108,49,109,49,110,49,111,49,112,49,113,49,114,49,115,49,116,49,117,49,118,49,119,49,120,49,121,49,122,49,123,49,124,49,125,49,126,49,127,49,128,49,129,49,130,49,131,49,132,49,133,49,134,49,135,49,136,49,137,49,138,49,139,49,140,49,141,49,142,49,112,33,113,33,114,33,115,33,116,33,117,33,118,33,119,33,120,33,121,33,0,0,0,0,0,0,0,0,0,0,96,33,97,33,98,33,99,33,100,33,101,33,102,33,103,33,104,33,105,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,3,146,3,147,3,148,3,149,3,150,3,151,3,152,3,153,3,154,3,155,3,156,3,157,3,158,3,159,3,160,3,161,3,163,3,164,3,165,3,166,3,167,3,168,3,169,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,3,178,3,179,3,180,3,181,3,182,3,183,3,184,3,185,3,186,3,187,3,188,3,189,3,190,3,191,3,192,3,193,3,195,3,196,3,197,3,198,3,199,3,200,3,201,3,0,0,0,0,0,0,0,0,0,0,0,0,0,37,2,37,12,37,16,37,24,37,20,37,28,37,44,37,36,37,52,37,60,37,1,37,3,37,15,37,19,37,27,37,23,37,35,37,51,37,43,37,59,37,75,37,32,37,47,37,40,37,55,37,63,37,29,37,48,37,37,37,56,37,66,37,18,37,17,37,26,37,25,37,22,37,21,37,14,37,13,37,30,37,31,37,33,37,34,37,38,37,39,37,41,37,42,37,45,37,46,37,49,37,50,37,53,37,54,37,57,37,58,37,61,37,62,37,64,37,65,37,67,37,68,37,69,37,70,37,71,37,72,37,73,37,74,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,51,150,51,151,51,19,33,152,51,196,51,163,51,164,51,165,51,166,51,153,51,154,51,155,51,156,51,157,51,158,51,159,51,160,51,161,51,162,51,202,51,141,51,142,51,143,51,207,51,136,51,137,51,200,51,167,51,168,51,176,51,177,51,178,51,179,51,180,51,181,51,182,51,183,51,184,51,185,51,128,51,129,51,130,51,131,51,132,51,186,51,187,51,188,51,189,51,190,51,191,51,144,51,145,51,146,51,147,51,148,51,38,33,192,51,193,51,138,51,139,51,140,51,214,51,197,51,173,51,174,51,175,51,219,51,169,51,170,51,171,51,172,51,221,51,208,51,211,51,195,51,201,51,220,51,198,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,198,0,208,0,170,0,38,1,0,0,50,1,0,0,63,1,65,1,216,0,82,1,186,0,222,0,102,1,74,1,0,0,96,50,97,50,98,50,99,50,100,50,101,50,102,50,103,50,104,50,105,50,106,50,107,50,108,50,109,50,110,50,111,50,112,50,113,50,114,50,115,50,116,50,117,50,118,50,119,50,120,50,121,50,122,50,123,50,208,36,209,36,210,36,211,36,212,36,213,36,214,36,215,36,216,36,217,36,218,36,219,36,220,36,221,36,222,36,223,36,224,36,225,36,226,36,227,36,228,36,229,36,230,36,231,36,232,36,233,36,96,36,97,36,98,36,99,36,100,36,101,36,102,36,103,36,104,36,105,36,106,36,107,36,108,36,109,36,110,36,189,0,83,33,84,33,188,0,190,0,91,33,92,33,93,33,94,33,230,0,17,1,240,0,39,1,49,1,51,1,56,1,64,1,66,1,248,0,83,1,223,0,254,0,103,1,75,1,73,1,0,50,1,50,2,50,3,50,4,50,5,50,6,50,7,50,8,50,9,50,10,50,11,50,12,50,13,50,14,50,15,50,16,50,17,50,18,50,19,50,20,50,21,50,22,50,23,50,24,50,25,50,26,50,27,50,156,36,157,36,158,36,159,36,160,36,161,36,162,36,163,36,164,36,165,36,166,36,167,36,168,36,169,36,170,36,171,36,172,36,173,36,174,36,175,36,176,36,177,36,178,36,179,36,180,36,181,36,116,36,117,36,118,36,119,36,120,36,121,36,122,36,123,36,124,36,125,36,126,36,127,36,128,36,129,36,130,36,185,0,178,0,179,0,116,32,127,32,129,32,130,32,131,32,132,32,65,48,66,48,67,48,68,48,69,48,70,48,71,48,72,48,73,48,74,48,75,48,76,48,77,48,78,48,79,48,80,48,81,48,82,48,83,48,84,48,85,48,86,48,87,48,88,48,89,48,90,48,91,48,92,48,93,48,94,48,95,48,96,48,97,48,98,48,99,48,100,48,101,48,102,48,103,48,104,48,105,48,106,48,107,48,108,48,109,48,110,48,111,48,112,48,113,48,114,48,115,48,116,48,117,48,118,48,119,48,120,48,121,48,122,48,123,48,124,48,125,48,126,48,127,48,128,48,129,48,130,48,131,48,132,48,133,48,134,48,135,48,136,48,137,48,138,48,139,48,140,48,141,48,142,48,143,48,144,48,145,48,146,48,147,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,161,48,162,48,163,48,164,48,165,48,166,48,167,48,168,48,169,48,170,48,171,48,172,48,173,48,174,48,175,48,176,48,177,48,178,48,179,48,180,48,181,48,182,48,183,48,184,48,185,48,186,48,187,48,188,48,189,48,190,48,191,48,192,48,193,48,194,48,195,48,196,48,197,48,198,48,199,48,200,48,201,48,202,48,203,48,204,48,205,48,206,48,207,48,208,48,209,48,210,48,211,48,212,48,213,48,214,48,215,48,216,48,217,48,218,48,219,48,220,48,221,48,222,48,223,48,224,48,225,48,226,48,227,48,228,48,229,48,230,48,231,48,232,48,233,48,234,48,235,48,236,48,237,48,238,48,239,48,240,48,241,48,242,48,243,48,244,48,245,48,246,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,4,17,4,18,4,19,4,20,4,21,4,1,4,22,4,23,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,4,37,4,38,4,39,4,40,4,41,4,42,4,43,4,44,4,45,4,46,4,47,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,4,49,4,50,4,51,4,52,4,53,4,81,4,54,4,55,4,56,4,57,4,58,4,59,4,60,4,61,4,62,4,63,4,64,4,65,4,66,4,67,4,68,4,69,4,70,4,71,4,72,4,73,4,74,4,75,4,76,4,77,4,78,4,79,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,1,172,4,172,7,172,8,172,9,172,10,172,16,172,17,172,18,172,19,172,20,172,21,172,22,172,23,172,25,172,26,172,27,172,28,172,29,172,32,172,36,172,44,172,45,172,47,172,48,172,49,172,56,172,57,172,60,172,64,172,75,172,77,172,84,172,88,172,92,172,112,172,113,172,116,172,119,172,120,172,122,172,128,172,129,172,131,172,132,172,133,172,134,172,137,172,138,172,139,172,140,172,144,172,148,172,156,172,157,172,159,172,160,172,161,172,168,172,169,172,170,172,172,172,175,172,176,172,184,172,185,172,187,172,188,172,189,172,193,172,196,172,200,172,204,172,213,172,215,172,224,172,225,172,228,172,231,172,232,172,234,172,236,172,239,172,240,172,241,172,243,172,245,172,246,172,252,172,253,172,0,173,4,173,6,173,12,173,13,173,15,173,17,173,24,173,28,173,32,173,41,173,44,173,45,173,52,173,53,173,56,173,60,173,68,173,69,173,71,173,73,173,80,173,84,173,88,173,97,173,99,173,108,173,109,173,112,173,115,173,116,173,117,173,118,173,123,173,124,173,125,173,127,173,129,173,130,173,136,173,137,173,140,173,144,173,156,173,157,173,164,173,183,173,192,173,193,173,196,173,200,173,208,173,209,173,211,173,220,173,224,173,228,173,248,173,249,173,252,173,255,173,0,174,1,174,8,174,9,174,11,174,13,174,20,174,48,174,49,174,52,174,55,174,56,174,58,174,64,174,65,174,67,174,69,174,70,174,74,174,76,174,77,174,78,174,80,174,84,174,86,174,92,174,93,174,95,174,96,174,97,174,101,174,104,174,105,174,108,174,112,174,120,174,121,174,123,174,124,174,125,174,132,174,133,174,140,174,188,174,189,174,190,174,192,174,196,174,204,174,205,174,207,174,208,174,209,174,216,174,217,174,220,174,232,174,235,174,237,174,244,174,248,174,252,174,7,175,8,175,13,175,16,175,44,175,45,175,48,175,50,175,52,175,60,175,61,175,63,175,65,175,66,175,67,175,72,175,73,175,80,175,92,175,93,175,100,175,101,175,121,175,128,175,132,175],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+120382);allocate([136,175,144,175,145,175,149,175,156,175,184,175,185,175,188,175,192,175,199,175,200,175,201,175,203,175,205,175,206,175,212,175,220,175,232,175,233,175,240,175,241,175,244,175,248,175,0,176,1,176,4,176,12,176,16,176,20,176,28,176,29,176,40,176,68,176,69,176,72,176,74,176,76,176,78,176,83,176,84,176,85,176,87,176,89,176,93,176,124,176,125,176,128,176,132,176,140,176,141,176,143,176,145,176,152,176,153,176,154,176,156,176,159,176,160,176,161,176,162,176,168,176,169,176,171,176,172,176,173,176,174,176,175,176,177,176,179,176,180,176,181,176,184,176,188,176,196,176,197,176,199,176,200,176,201,176,208,176,209,176,212,176,216,176,224,176,229,176,8,177,9,177,11,177,12,177,16,177,18,177,19,177,24,177,25,177,27,177,28,177,29,177,35,177,36,177,37,177,40,177,44,177,52,177,53,177,55,177,56,177,57,177,64,177,65,177,68,177,72,177,80,177,81,177,84,177,85,177,88,177,92,177,96,177,120,177,121,177,124,177,128,177,130,177,136,177,137,177,139,177,141,177,146,177,147,177,148,177,152,177,156,177,168,177,204,177,208,177,212,177,220,177,221,177,223,177,232,177,233,177,236,177,240,177,249,177,251,177,253,177,4,178,5,178,8,178,11,178,12,178,20,178,21,178,23,178,25,178,32,178,52,178,60,178,88,178,92,178,96,178,104,178,105,178,116,178,117,178,124,178,132,178,133,178,137,178,144,178,145,178,148,178,152,178,153,178,154,178,160,178,161,178,163,178,165,178,166,178,170,178,172,178,176,178,180,178,200,178,201,178,204,178,208,178,210,178,216,178,217,178,219,178,221,178,226,178,228,178,229,178,230,178,232,178,235,178,236,178,237,178,238,178,239,178,243,178,244,178,245,178,247,178,248,178,249,178,250,178,251,178,255,178,0,179,1,179,4,179,8,179,16,179,17,179,19,179,20,179,21,179,28,179,84,179,85,179,86,179,88,179,91,179,92,179,94,179,95,179,100,179,101,179,103,179,105,179,107,179,110,179,112,179,113,179,116,179,120,179,128,179,129,179,131,179,132,179,133,179,140,179,144,179,148,179,160,179,161,179,168,179,172,179,196,179,197,179,200,179,203,179,204,179,206,179,208,179,212,179,213,179,215,179,217,179,219,179,221,179,224,179,228,179,232,179,252,179,16,180,24,180,28,180,32,180,40,180,41,180,43,180,52,180,80,180,81,180,84,180,88,180,96,180,97,180,99,180,101,180,108,180,128,180,136,180,157,180,164,180,168,180,172,180,181,180,183,180,185,180,192,180,196,180,200,180,208,180,213,180,220,180,221,180,224,180,227,180,228,180,230,180,236,180,237,180,239,180,241,180,248,180,20,181,21,181,24,181,27,181,28,181,36,181,37,181,39,181,40,181,41,181,42,181,48,181,49,181,52,181,56,181,64,181,65,181,67,181,68,181,69,181,75,181,76,181,77,181,80,181,84,181,92,181,93,181,95,181,96,181,97,181,160,181,161,181,164,181,168,181,170,181,171,181,176,181,177,181,179,181,180,181,181,181,187,181,188,181,189,181,192,181,196,181,204,181,205,181,207,181,208,181,209,181,216,181,236,181,16,182,17,182,20,182,24,182,37,182,44,182,52,182,72,182,100,182,104,182,156,182,157,182,160,182,164,182,171,182,172,182,177,182,212,182,240,182,244,182,248,182,0,183,1,183,5,183,40,183,41,183,44,183,47,183,48,183,56,183,57,183,59,183,68,183,72,183,76,183,84,183,85,183,96,183,100,183,104,183,112,183,113,183,115,183,117,183,124,183,125,183,128,183,132,183,140,183,141,183,143,183,144,183,145,183,146,183,150,183,151,183,152,183,153,183,156,183,160,183,168,183,169,183,171,183,172,183,173,183,180,183,181,183,184,183,199,183,201,183,236,183,237,183,240,183,244,183,252,183,253,183,255,183,0,184,1,184,7,184,8,184,9,184,12,184,16,184,24,184,25,184,27,184,29,184,36,184,37,184,40,184,44,184,52,184,53,184,55,184,56,184,57,184,64,184,68,184,81,184,83,184,92,184,93,184,96,184,100,184,108,184,109,184,111,184,113,184,120,184,124,184,141,184,168,184,176,184,180,184,184,184,192,184,193,184,195,184,197,184,204,184,208,184,212,184,221,184,223,184,225,184,232,184,233,184,236,184,240,184,248,184,249,184,251,184,253,184,4,185,24,185,32,185,60,185,61,185,64,185,68,185,76,185,79,185,81,185,88,185,89,185,92,185,96,185,104,185,105,185,107,185,109,185,116,185,117,185,120,185,124,185,132,185,133,185,135,185,137,185,138,185,141,185,142,185,172,185,173,185,176,185,180,185,188,185,189,185,191,185,193,185,200,185,201,185,204,185,206,185,207,185,208,185,209,185,210,185,216,185,217,185,219,185,221,185,222,185,225,185,227,185,228,185,229,185,232,185,236,185,244,185,245,185,247,185,248,185,249,185,250,185,0,186,1,186,8,186,21,186,56,186,57,186,60,186,64,186,66,186,72,186,73,186,75,186,77,186,78,186,83,186,84,186,85,186,88,186,92,186,100,186,101,186,103,186,104,186,105,186,112,186,113,186,116,186,120,186,131,186,132,186,133,186,135,186,140,186,168,186,169,186,171,186,172,186,176,186,178,186,184,186,185,186,187,186,189,186,196,186,200,186,216,186,217,186,252,186,0,187,4,187,13,187,15,187,17,187,24,187,28,187,32,187,41,187,43,187,52,187,53,187,54,187,56,187,59,187,60,187,61,187,62,187,68,187,69,187,71,187,73,187,77,187,79,187,80,187,84,187,88,187,97,187,99,187,108,187,136,187,140,187,144,187,164,187,168,187,172,187,180,187,183,187,192,187,196,187,200,187,208,187,211,187,248,187,249,187,252,187,255,187,0,188,2,188,8,188,9,188,11,188,12,188,13,188,15,188,17,188,20,188,21,188,22,188,23,188,24,188,27,188,28,188,29,188,30,188,31,188,36,188,37,188,39,188,41,188,45,188,48,188,49,188,52,188,56,188,64,188,65,188,67,188,68,188,69,188,73,188,76,188,77,188,80,188,93,188,132,188,133,188,136,188,139,188,140,188,142,188,148,188,149,188,151,188,153,188,154,188,160,188,161,188,164,188,167,188,168,188,176,188,177,188,179,188,180,188,181,188,188,188,189,188,192,188,196,188,205,188,207,188,208,188,209,188,213,188,216,188,220,188,244,188,245,188,246,188,248,188,252,188,4,189,5,189,7,189,9,189,16,189,20,189,36,189,44,189,64,189,72,189,73,189,76,189,80,189,88,189,89,189,100,189,104,189,128,189,129,189,132,189,135,189,136,189,137,189,138,189,144,189,145,189,147,189,149,189,153,189,154,189,156,189,164,189,176,189,184,189,212,189,213,189,216,189,220,189,233,189,240,189,244,189,248,189,0,190,3,190,5,190,12,190,13,190,16,190,20,190,28,190,29,190,31,190,68,190,69,190,72,190,76,190,78,190,84,190,85,190,87,190,89,190,90,190,91,190,96,190,97,190,100,190,104,190,106,190,112,190,113,190,115,190,116,190,117,190,123,190,124,190,125,190,128,190,132,190,140,190,141,190,143,190,144,190,145,190,152,190,153,190,168,190,208,190,209,190,212,190,215,190,216,190,224,190,227,190,228,190,229,190,236,190,1,191,8,191,9,191,24,191,25,191,27,191,28,191,29,191,64,191,65,191,68,191,72,191,80,191,81,191,85,191,148,191,176,191,197,191,204,191,205,191,208,191,212,191,220,191,223,191,225,191,60,192,81,192,88,192,92,192,96,192,104,192,105,192,144,192,145,192,148,192,152,192,160,192,161,192,163,192,165,192,172,192,173,192,175,192,176,192,179,192,180,192,181,192,182,192,188,192,189,192,191,192,192,192,193,192,197,192,200,192,201,192,204,192,208,192,216,192,217,192,219,192,220,192,221,192,228,192,229,192,232,192,236,192,244,192,245,192,247,192,249,192,0,193,4,193,8,193,16,193,21,193,28,193,29,193,30,193,31,193,32,193,35,193,36,193,38,193,39,193,44,193,45,193,47,193,48,193,49,193,54,193,56,193,57,193,60,193,64,193,72,193,73,193,75,193,76,193,77,193,84,193,85,193,88,193,92,193,100,193,101,193,103,193,104,193,105,193,112,193,116,193,120,193,133,193,140,193,141,193,142,193,144,193,148,193,150,193,156,193,157,193,159,193,161,193,165,193,168,193,169,193,172,193,176,193,189,193,196,193,200,193,204,193,212,193,215,193,216,193,224,193,228,193,232,193,240,193,241,193,243,193,252,193,253,193,0,194,4,194,12,194,13,194,15,194,17,194,24,194,25,194,28,194,31,194,32,194,40,194,41,194,43,194,45,194,47,194,49,194,50,194,52,194,72,194,80,194,81,194,84,194,88,194,96,194,101,194,108,194,109,194,112,194,116,194,124,194,125,194,127,194,129,194,136,194,137,194,144,194,152,194,155,194,157,194,164,194,165,194,168,194,172,194,173,194,180,194,181,194,183,194,185,194,220,194,221,194,224,194,227,194,228,194,235,194,236,194,237,194,239,194,241,194,246,194,248,194,249,194,251,194,252,194,0,195,8,195,9,195,12,195,13,195,19,195,20,195,21,195,24,195,28,195,36,195,37,195,40,195,41,195,69,195,104,195,105,195,108,195,112,195,114,195,120,195,121,195,124,195,125,195,132,195,136,195,140,195,192,195,216,195,217,195,220,195,223,195,224,195,226,195,232,195,233,195,237,195,244,195,245,195,248,195,8,196,16,196,36,196,44,196,48,196,52,196,60,196,61,196,72,196,100,196,101,196,104,196,108,196,116,196,117,196,121,196,128,196,148,196,156,196,184,196,188,196,233,196,240,196,241,196,244,196,248,196,250,196,255,196,0,197,1,197,12,197,16,197,20,197,28,197,40,197,41,197,44,197,48,197,56,197,57,197,59,197,61,197,68,197,69,197,72,197,73,197,74,197,76,197,77,197,78,197,83,197,84,197,85,197,87,197,88,197,89,197,93,197,94,197,96,197,97,197,100,197,104,197,112,197,113,197,115,197,116,197,117,197,124,197,125,197,128,197,132,197,135,197,140,197,141,197,143,197,145,197,149,197,151,197,152,197,156,197,160,197,169,197,180,197,181,197,184,197,185,197,187,197,188,197,189,197,190,197,196,197,197,197,198,197,199,197,200,197,201,197,202,197,204,197,206,197,208,197,209,197,212,197,216,197,224,197,225,197,227,197,229,197,236,197,237,197,238,197,240,197,244,197,246,197,247,197,252,197,253,197,254,197,255,197,0,198,1,198,5,198,6,198,7,198,8,198,12,198,16,198,24,198,25,198,27,198,28,198,36,198,37,198,40,198,44,198,45,198,46,198,48,198,51,198,52,198,53,198,55,198,57,198,59,198,64,198,65,198,68,198,72,198,80,198,81,198,83,198,84,198,85,198,92,198,93,198,96,198,108,198,111,198,113,198,120,198,121,198,124,198,128,198,136,198,137,198,139,198,141,198,148,198,149,198,152,198,156,198,164,198,165,198,167,198,169,198,176,198,177,198,180,198,184,198,185,198,186,198,192,198,193,198,195,198,197,198,204,198,205,198,208,198,212,198,220,198,221,198,224,198,225,198,232,198,233,198,236,198,240,198,248,198,249,198,253,198,4,199,5,199,8,199,12,199,20,199,21,199,23,199,25,199,32,199,33,199,36,199,40,199,48,199,49,199,51,199,53,199,55,199,60,199,61,199,64,199,68,199,74,199,76,199,77,199,79,199,81,199,82,199,83,199,84,199,85,199,86,199,87,199,88,199,92,199,96,199,104,199,107,199,116,199,117,199,120,199,124,199,125,199,126,199,131,199,132,199,133,199,135,199,136,199,137,199,138,199,142,199,144,199,145,199,148,199,150,199,151,199,152,199,154,199,160,199,161,199,163,199,164,199,165,199,166,199,172,199,173,199,176,199,180,199,188,199,189,199,191,199,192,199,193,199,200,199,201,199,204,199,206,199,208,199,216,199,221,199,228,199,232,199,236,199,0,200,1,200,4,200,8,200,10,200,16,200,17,200,19,200,21,200,22,200,28,200,29,200,32,200,36,200,44,200,45,200,47,200,49,200,56,200,60,200,64,200,72,200,73,200,76,200,77,200,84,200,112,200,113,200,116,200,120,200,122,200,128,200,129,200,131,200,133,200,134,200,135,200,139,200,140,200,141,200,148,200,157,200,159,200,161,200,168,200,188,200,189,200,196,200,200,200,204,200,212,200,213,200,215,200,217,200,224,200,225,200,228,200,245,200,252,200,253,200,0,201,4,201,5,201,6,201,12,201,13,201,15,201,17,201,24,201,44,201,52,201,80,201,81,201,84,201,88,201,96,201,97,201,99,201,108,201,112,201,116,201,124,201,136,201,137,201,140,201,144,201,152,201,153,201,155,201,157,201,192,201,193,201,196,201,199,201,200,201,202,201,208,201,209,201,211,201,213,201,214,201,217,201,218,201,220,201,221,201,224,201,226,201,228,201,231,201,236,201,237,201,239,201,240,201,241,201,248,201,249,201,252,201,0,202,8,202,9,202,11,202,12,202,13,202,20,202,24,202,41,202,76,202,77,202,80,202,84,202,92,202,93,202,95,202,96,202,97,202,104,202,125,202,132,202,152,202,188,202,189,202,192,202,196,202,204,202,205,202,207,202,209,202,211,202,216,202,217,202,224,202,236,202,244,202,8,203,16,203,20,203,24,203,32,203,33,203,65,203,72,203,73,203,76,203,80,203,88,203,89,203,93,203,100,203,120,203,121,203,156,203,184,203,212,203,228,203,231,203,233,203,12,204,13,204,16,204,20,204,28,204,29,204,33,204,34,204,39,204,40,204,41,204,44,204,46,204,48,204,56,204,57,204,59,204,60,204,61,204,62,204,68,204,69,204,72,204,76,204,84,204,85,204,87,204,88,204,89,204,96,204,100,204,102,204,104,204,112,204,117,204,152,204,153,204,156,204,160,204,168,204,169,204,171,204,172,204,173,204,180,204,181,204,184,204,188,204,196,204,197,204,199,204,201,204,208,204,212,204,228,204,236,204,240,204,1,205,8,205,9,205,12,205,16,205,24,205,25,205,27,205,29,205,36,205,40,205,44,205,57,205,92,205,96,205,100,205,108,205,109,205,111,205,113,205,120,205,136,205,148,205,149,205,152,205,156,205,164,205,165,205,167,205,169,205,176,205,196,205,204,205,208,205,232,205,236,205,240,205,248,205,249,205,251,205,253,205,4,206,8,206,12,206,20,206,25,206,32,206,33,206,36,206,40,206,48,206,49,206,51,206,53,206,88,206,89,206,92,206,95,206,96,206,97,206,104,206,105,206,107,206,109,206,116,206,117,206,120,206,124,206,132,206,133,206,135,206,137,206,144,206,145,206,148,206,152,206,160,206,161,206,163,206,164,206,165,206,172,206,173,206,193,206,228,206,229,206,232,206,235,206,236,206,244,206,245,206,247,206,248,206,249,206,0,207,1,207,4,207,8,207,16,207,17,207,19,207,21,207,28,207,32,207,36,207,44,207,45,207,47,207,48,207,49,207,56,207,84,207,85,207,88,207,92,207,100,207,101,207,103,207,105,207,112,207,113,207,116,207,120,207,128,207,133,207,140,207,161,207,168,207,176,207,196,207,224,207,225,207,228,207,232,207,240,207,241,207,243,207,245,207,252,207,0,208,4,208,17,208,24,208,45,208,52,208,53,208,56,208,60,208,68,208,69,208,71,208,73,208,80,208,84,208,88,208,96,208,108,208,109,208,112,208,116,208,124,208,125,208,129,208,164,208,165,208,168,208,172,208,180,208,181,208,183,208,185,208,192,208,193,208,196,208,200,208,201,208,208,208,209,208,211,208,212,208,213,208,220,208,221,208,224,208,228,208,236,208,237,208,239,208,240,208,241,208,248,208,13,209,48,209,49,209,52,209,56,209,58,209,64,209,65,209,67,209,68,209,69,209,76,209,77,209,80,209,84,209,92,209,93,209,95,209,97,209,104,209,108,209,124,209,132,209,136,209,160,209,161,209,164,209,168,209,176,209,177,209,179,209,181,209,186,209,188,209,192,209,216,209,244,209,248,209,7,210,9,210,16,210,44,210,45,210,48,210,52,210,60,210,61,210,63,210,65,210,72,210,92,210,100,210,128,210,129,210,132,210,136,210,144,210,145,210,149,210,156,210,160,210,164,210,172,210,177,210,184,210,185,210,188,210,191,210,192,210,194,210,200,210,201,210,203,210,212,210,216,210,220,210,228,210,229,210,240,210,241,210,244,210,248,210,0,211,1,211,3,211,5,211,12,211,13,211,14,211,16,211,20,211,22,211,28,211,29,211,31,211,32,211,33,211,37,211,40,211,41,211,44,211,48,211,56,211,57,211,59,211,60,211,61,211,68,211,69,211,124,211,125,211,128,211,132,211,140,211,141,211,143,211,144,211,145,211,152,211,153,211,156,211,160,211,168,211,169,211,171,211,173,211,180,211,184,211,188,211,196,211,197,211,200,211,201,211,208,211,216,211,225,211,227,211,236,211,237,211,240,211,244,211,252,211,253,211,255,211,1,212,8,212,29,212,64,212,68,212,92,212,96,212,100,212,109,212,111,212,120,212,121,212,124,212,127,212,128,212,130,212,136,212,137,212,139,212,141,212,148,212,169,212,204,212,208,212,212,212,220,212,223,212,232,212,236,212,240,212,248,212,251,212,253,212,4,213,8,213,12,213,20,213,21,213,23,213,60,213,61,213,64,213,68,213,76,213,77,213,79,213,81,213,88,213,89,213,92,213,96,213,101,213,104,213,105,213,107,213,109,213,116,213,117,213,120,213,124,213,132,213,133,213,135,213,136,213,137,213,144,213,165,213,200,213,201,213,204,213,208,213,210,213,216,213,217,213,219,213,221,213,228,213,229,213,232,213,236,213,244,213,245,213,247,213,249,213,0,214,1,214,4,214,8,214,16,214,17,214,19,214,20,214,21,214,28,214,32,214,36,214,45,214,56,214,57,214,60,214,64,214,69,214,72,214,73,214,75,214,77,214,81,214,84,214,85,214,88,214,92,214,103,214,105,214,112,214,113,214,116,214,131,214,133,214,140,214,141,214,144,214,148,214,157,214,159,214,161,214,168,214,172,214,176,214,185,214,187,214,196,214,197,214,200,214,204,214,209,214,212,214,215,214,217,214,224,214,228,214,232,214,240,214,245,214,252,214,253,214,0,215,4,215,17,215,24,215,25,215,28,215,32,215,40,215,41,215,43,215,45,215,52,215,53,215,56,215,60,215,68,215,71,215,73,215,80,215,81,215,84,215,86,215,87,215,88,215,89,215,96,215,97,215,99,215,101,215,105,215,108,215,112,215,116,215,124,215,125,215,129,215,136,215,137,215,140,215,144,215,152,215,153,215,155,215,157,215,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,79,115,79,71,80,249,80,160,82,239,83,117,84,229,84,9,86,193,90,182,91,135,102,182,103,183,103,239,103,76,107,194,115,194,117,60,122,219,130,4,131,87,136,136,136,54,138,200,140,207,141,251,142,230,143,213,153,59,82,116,83,4,84,106,96,100,97,188,107,207,115,26,129,186,137,210,137,163,149,131,79,10,82,190,88,120,89,230,89,114,94,121,94,199,97,192,99,70,103,236,103,127,104,151,111,78,118,11,119,245,120,8,122,255,122,33,124,157,128,110,130,113,130,235,138,147,149,107,78,157,85,247,102,52,110,163,120,237,122,91,132,16,137,78,135,168,151,216,82,78,87,42,88,76,93,31,97,190,97,33,98,98,101,209,103,68,106,27,110,24,117,179,117,227,118,176,119,58,125,175,144,81,148,82,148,149,159,35,83,172,92,50,117,219,128,64,146,152,149,91,82,8,88,220,89,161,92,23,93,183,94,58,95,74,95,119,97,95,108,122,117,134,117,224,124,115,125,177,125,140,127,84,129,33,130,145,133,65,137,27,139,252,146,77,150,71,156,203,78,247,78,11,80,241,81,79,88,55,97,62,97,104,97,57,101,234,105,17,111,165,117,134,118,214,118,135,123,165,130,203,132,0,249,167,147,139,149,128,85,162,91,81,87,1,249,179,124,185,127,181,145,40,80,187,83,69,92,232,93,210,98,110,99,218,100,231,100,32,110,172,112,91,121,221,141,30,142,2,249,125,144,69,146,248,146,126,78,246,78,101,80,254,93,250,94,6,97,87,105,113,129,84,134,71,142,117,147,43,154,94,78,145,80,112,103,64,104,9,81,141,82,146,82,162,106,188,119,16,146,212,158,171,82,47,96,242,143,72,80,169,97,237,99,202,100,60,104,132,106,192,111,136,129,161,137,148,150,5,88,125,114,172,114,4,117,121,125,109,126,169,128,139,137,116,139,99,144,81,157,137,98,122,108,84,111,80,125,58,127,35,138,124,81,74,97,157,123,25,139,87,146,140,147,172,78,211,79,30,80,190,80,6,81,193,82,205,82,127,83,112,87,131,88,154,94,145,95,118,97,172,97,206,100,108,101,111,102,187,102,244,102,151,104,135,109,133,112,241,112,159,116,165,116,202,116,217,117,108,120,236,120,223,122,246,122,69,125,147,125,21,128,63,128,27,129,150,131,102,139,21,143,21,144,225,147,3,152,56,152,90,154,232,155,194,79,83,85,58,88,81,89,99,91,70,92,184,96,18,98,66,104,176,104,232,104,170,110,76,117,120,118,206,120,61,122,251,124,107,126,124,126,8,138,161,138,63,140,142,150,196,157,228,83,233,83,74,84,113,84,250,86,209,89,100,91,59,92,171,94,247,98,55,101,69,101,114,101,160,102,175,103,193,105,189,108,252,117,144,118,126,119,63,122,148,127,3,128,161,128,143,129,230,130,253,130,240,131,193,133,49,136,180,136,165,138,3,249,156,143,46,147,199,150,103,152,216,154,19,159,237,84,155,101,242,102,143,104,64,122,55,140,96,157,240,86,100,87,17,93,6,102,177,104,205,104,254,110,40,116,158,136,228,155,104,108,4,249,168,154,155,79,108,81,113,81,159,82,84,91,229,93,80,96,109,96,241,98,167,99,59,101,217,115,122,122,163,134,162,140,143,151,50,78,225,91,8,98,156,103,220,116,209,121,211,131,135,138,178,138,232,141,78,144,75,147,70,152,211,94,232,105,255,133,237,144,5,249,160,81,152,91,236,91,99,97,250,104,62,107,76,112,47,116,216,116,161,123,80,127,197,131,192,137,171,140,220,149,40,153,46,82,93,96,236,98,2,144,138,79,73,81,33,83,217,88,227,94,224,102,56,109,154,112,194,114,214,115,80,123,241,128,91,148,102,83,155,99,107,127,86,78,128,80,74,88,222,88,42,96,39,97,208,98,208,105,65,155,143,91,24,125,177,128,95,143,164,78,209,80,172,84,172,85,12,91,160,93,231,93,42,101,78,101,33,104,75,106,225,114,142,118,239,119,94,125,249,127,160,129,78,133,223,134,3,143,78,143,202,144,3,153,85,154,171,155,24,78,69,78,93,78,199,78,241,79,119,81,254,82,64,83,227,83,229,83,142,84,20,86,117,87,162,87,199,91,135,93,208,94,252,97,216,98,81,101,184,103,233,103,203,105,80,107,198,107,236,107,66,108,157,110,120,112,215,114,150,115,3,116,191,119,233,119,118,122,127,125,9,128,252,129,5,130,10,130,223,130,98,136,51,139,252,140,192,142,17,144,177,144,100,146,182,146,210,153,69,154,233,156,215,157,156,159,11,87,64,92,202,131,160,151,171,151,180,158,27,84,152,122,164,127,217,136,205,142,225,144,0,88,72,92,152,99,159,122,174,91,19,95,121,122,174,122,142,130,172,142,38,80,56,82,248,82,119,83,8,87,243,98,114,99,10,107,195,109,55,119,165,83,87,115,104,133,118,142,213,149,58,103,195,106,112,111,109,138,204,142,75,153,6,249,119,102,120,107,180,140,60,155,7,249,235,83,45,87,78,89,198,99,251,105,234,115,69,120,186,122,197,122,254,124,117,132,143,137,115,141,53,144,168,149,251,82,71,87,71,117,96,123,204,131,30,146,8,249,88,106,75,81,75,82,135,82,31,98,216,104,117,105,153,150,197,80,164,82,228,82,195,97,164,101,57,104,255,105,126,116,75,123,185,130,235,131,178,137,57,139,209,143,73,153,9,249,202,78,151,89,210,100,17,102,142,106,52,116,129,121,189,121,169,130,126,136,127,136,95,137,10,249,38,147,11,79,202,83,37,96,113,98,114,108,26,125,102,125,152,78,98,81,220,119,175,128,1,79,14,79,118,81,128,81,220,85,104,86,59,87,250,87,252,87,20,89,71,89,147,89,196,91,144,92,14,93,241,93,126,94,204,95,128,98,215,101,227,101,30,103,31,103,94,103,203,104,196,104,95,106,58,107,35,108,125,108,130,108,199,109,152,115,38,116,42,116,130,116,163,116,120,117,127,117,129,120,239,120,65,121,71,121,72,121,122,121,149,123,0,125,186,125,136,127,6,128,45,128,140,128,24,138,79,139,72,140,119,141,33,147,36,147,226,152,81,153,14,154,15,154,101,154,146,158,202,125,118,79,9,84,238,98,84,104,209,145,171,85,58,81,11,249,12,249,28,90,230,97,13,249,207,98,255,98,14,249,15,249,16,249,17,249,18,249,19,249,163,144,20,249,21,249,22,249,23,249,24,249,254,138,25,249,26,249,27,249,28,249,150,102,29,249,86,113,30,249,31,249,227,150,32,249,79,99,122,99,87,83,33,249,143,103,96,105,115,110,34,249,55,117,35,249,36,249,37,249,13,125,38,249,39,249,114,136,202,86,24,90,40,249,41,249,42,249,43,249,44,249,67,78,45,249,103,81,72,89,240,103,16,128,46,249,115,89,116,94,154,100,202,121,245,95,108,96,200,98,123,99,231,91,215,91,170,82,47,249,116,89,41,95,18,96,48,249,49,249,50,249,89,116,51,249,52,249,53,249,54,249,55,249,56,249,209,153,57,249,58,249,59,249,60,249,61,249,62,249,63,249,64,249,65,249,66,249,67,249,195,111,68,249,69,249,191,129,178,143,241,96,70,249,71,249,102,129,72,249,73,249,63,92,74,249,75,249,76,249,77,249,78,249,79,249,80,249,81,249,233,90,37,138,123,103,16,125,82,249,83,249,84,249,85,249,86,249,87,249,253,128,88,249,89,249,60,92,229,108,63,83,186,110,26,89,54,131,57,78,182,78,70,79,174,85,24,87,199,88,86,95,183,101,230,101,128,106,181,107,77,110,237,119,239,122,30,124,222,125,203,134,146,136,50,145,91,147,187,100,190,111,122,115,184,117,84,144,86,85,77,87,186,97,212,100,199,102,225,109,91,110,109,111,185,111,240,117,67,128,189,129,65,133,131,137,199,138,90,139,31,147,147,108,83,117,84,123,15,142,93,144,16,85,2,88,88,88,98,94,7,98,158,100,224,104,118,117,214,124,179,135,232,158,227,78,136,87,110,87,39,89,13,92,177,92,54,94,133,95,52,98,225,100,179,115,250,129,139,136,184,140,138,150,219,158,133,91,183,95,179,96,18,80,0,82,48,82,22,87,53,88,87,88,14,92,96,92,246,92,139,93,166,94,146,95,188,96,17,99,137,99,23,100,67,104,249,104,194,106,216,109,33,110,212,110,228,111,254,113,220,118,121,119,177,121,59,122,4,132,169,137,237,140,243,141,72,142,3,144,20,144,83,144,253,144,77,147,118,150,220,151,210,107,6,112,88,114,162,114,104,115,99,119,191,121,228,123,155,126,128,139,169,88,199,96,102,101,253,101,190,102,140,108,30,113,201,113,90,140,19,152,109,78,129,122,221,78,172,81,205,81,213,82,12,84,167,97,113,103,80,104,223,104,30,109,124,111,188,117,179,119,229,122,244,128,99,132,133,146,92,81,151,101,92,103,147,103,216,117,199,122,115,131,90,249,70,140,23,144,45,152,111,92,192,129,154,130,65,144,111,144,13,146,151,95,157,93,89,106,200,113,123,118,73,123,228,133,4,139,39,145,48,154,135,85,246,97,91,249,105,118,133,127,63,134,186,135,248,136,143,144,92,249,27,109,217,112,222,115,97,125,61,132,93,249,106,145,241,153,94,249,130,78,117,83,4,107,18,107,62,112,27,114,45,134,30,158,76,82,163,143,80,93,229,100,44,101,22,107,235,111,67,124,156,126,205,133,100,137,189,137,201,98,216,129,31,136,202,94,23,103,106,109,252,114,5,116,111,116,130,135,222,144,134,79,13,93,160,95,10,132,183,81,160,99,101,117,174,78,6,80,105,81,201,81,129,104,17,106,174,124,177,124,231,124,111,130,210,138,27,143,207,145,182,79,55,81,245,82,66,84,236,94,110,97,62,98,197,101,218,106,254,111,42,121,220,133,35,136,173,149,98,154,106,154,151,158,206,158,155,82,198,102,119,107,29,112,43,121,98,143,66,151,144,97,0,98,35,101,35,111,73,113,137,116,244,125,111,128,238,132,38,143,35,144,74,147,189,81,23,82,163,82,12,109,200,112,194,136,201,94,130,101,174,107,194,111,62,124,117,115,228,78,54,79,249,86,95,249,186,92,186,93,28,96,178,115,45,123,154,127,206,127,70,128,30,144,52,146,246,150,72,151,24,152,97,159,139,79,167,111,174,121,180,145,183,150,222,82,96,249,136,100,196,100,211,106,94,111,24,112,16,114,231,118,1,128,6,134,92,134,239,141,5,143,50,151,111,155,250,157,117,158,140,120,127,121,160,125,201,131,4,147,127,158,147,158,214,138,223,88,4,95,39,103,39,112,207,116,96,124,126,128,33,81,40,112,98,114,202,120,194,140,218,140,244,140,247,150,134,78,218,80,238,91,214,94,153,101,206,113,66,118,173,119,74,128,252,132,124,144,39,155,141,159,216,88,65,90,98,92,19,106,218,109,15,111,59,118,47,125,55,126,30,133,56,137,228,147,75,150,137,82,210,101,243,103,180,105,65,109,156,110,15,112,9,116,96,116,89,117,36,118,107,120,44,139,94,152,109,81,46,98,120,150,150,79,43,80,25,93,234,109,184,125,42,143,139,95,68,97,23,104,97,249,134,150,210,82,139,128,220,81,204,81,94,105,28,122,190,125,241,131,117,150,218,79,41,82,152,83,15,84,14,85,101,92,167,96,78,103,168,104,108,109,129,114,248,114,6,116,131,116,98,249,226,117,108,124,121,127,184,127,137,131,207,136,225,136,204,145,208,145,226,150,201,155,29,84,126,111,208,113,152,116,250,133,170,142,163,150,87,156,159,158,151,103,203,109,51,116,232,129,22,151,44,120,203,122,32,123,146,124,105,100,106,116,242,117,188,120,232,120,172,153,84,155,187,158,222,91,85,94,32,111,156,129,171,131,136,144,7,78,77,83,41,90,210,93,78,95,98,97,61,99,105,102,252,102,255,110,43,111,99,112,158,119,44,132,19,133,59,136,19,143,69,153,59,156,28,85,185,98,43,103,171,108,9,131,106,137,122,151,161,78,132,89,216,95,217,95,27,103,178,125,84,127,146,130,43,131,189,131,30,143,153,144,203,87,185,89,146,90,208,91,39,102,154,103,133,104,207,107,100,113,117,127,183,140,227,140,129,144,69,155,8,129,138,140,76,150,64,154,165,158,95,91,19,108,27,115,242,118,223,118,12,132,170,81,147,137,77,81,149,81,201,82,201,104,148,108,4,119,32,119,191,125,236,125,98,151,181,158,197,110,17,133,165,81,13,84,125,84,14,102,157,102,39,105,159,110,191,118,145,119,23,131,194,132,159,135,105,145,152,146,244,156,130,136,174,79,146,81,223,82,198,89,61,94,85,97,120,100,121,100,174,102,208,103,33,106,205,107,219,107,95,114,97,114,65,116,56,119,219,119,23,128,188,130,5,131,0,139,40,139,140,140,40,103,144,108,103,114,238,118,102,119,70,122,169,157,127,107,146,108,34,89,38,103,153,132,111,83,147,88,153,89,223,94,207,99,52,102,115,103,58,110,43,115,215,122,215,130,40,147,217,82,235,93,174,97,203,97,10,98,199,98,171,100,224,101,89,105,102,107,203,107,33,113,247,115,93,117,70,126,30,130,2,131,106,133,163,138,191,140,39,151,97,157,168,88,216,158,17,80,14,82,59,84,79,85,135,101,118,108,10,125,11,125,94,128,138,134,128,149,239,150,255,82,149,108,105,114,115,84,154,90,62,92,75,93,76,95,174,95,42,103,182,104,99,105,60,110,68,110,9,119,115,124,142,127,135,133,14,139,247,143,97,151,244,158,183,92,182,96,13,97,171,97,79,101,251,101,252,101,17,108,239,108,159,115,201,115,225,125,148,149,198,91,28,135,16,139,93,82,90,83,205,98,15,100,178,100,52,103,56,106,202,108,192,115,158,116,148,123,149,124,27,126,138,129,54,130,132,133,235,143,249,150,193,153,52,79,74,83,205,83,219,83,204,98,44,100,0,101,145,101,195,105,238,108,88,111,237,115,84,117,34,118,228,118,252,118,208,120,251,120,44,121,70,125,44,130,224,135,212,143,18,152,239,152,195,82,212,98,165,100,36,110,81,111,124,118,203,141,177,145,98,146,238,154,67,155,35,80,141,80,74,87,168,89,40,92,71,94,119,95,63,98,62,101,185,101,193,101,9,102,139,103,156,105,194,110,197,120,33,125,170,128,128,129,43,130,179,130,161,132,140,134,42,138,23,139,166,144,50,150,144,159,13,80,243,79,99,249,249,87,152,95,220,98,146,99,111,103,67,110,25,113,195,118,204,128,218,128,244,136,245,136,25,137,224,140,41,143,77,145,106,150,47,79,112,79,27,94,207,103,34,104,125,118,126,118,68,155,97,94,10,106,105,113,212,113,106,117,100,249,65,126,67,133,233,133,220,152,16,79,79,123,112,127,165,149,225,81,6,94,181,104,62,108,78,108,219,108,175,114,196,123,3,131,213,108,58,116,251,80,136,82,193,88,216,100,151,106,167,116,86,118,167,120,23,134,226,149,57,151,101,249,94,83,1,95,138,139,168,143,175,143,138,144,37,82,165,119,73,156,8,159,25,78,2,80,117,81,91,92,119,94,30,102,58,102,196,103,197,104,179,112,1,117,197,117,201,121,221,122,39,143,32,153,8,154,221,79,33,88,49,88,246,91,110,102,101,107,17,109,122,110,125,111,228,115,43,117,233,131,220,136,19,137,92,139,20,143,15,79,213,80,16,83,92,83,147,91,169,95,13,103,143,121,121,129,47,131,20,133,7,137,134,137,57,143,59,143,165,153,18,156,44,103,118,78,248,79,73,89,1,92,239,92,240,92,103,99,210,104,253,112,162,113,43,116,43,126,236,132,2,135,34,144,210,146,243,156,13,78,216,78,239,79,133,80,86,82,111,82,38,84,144,84,224,87,43,89,102,90,90,91,117,91,204,91,156,94,102,249,118,98,119,101,167,101,110,109,165,110,54,114,38,123,63,124,54,127,80,129,81,129,154,129,64,130,153,130,169,131,3,138,160,140,230,140,251,140,116,141,186,141,232,144,220,145,28,150,68,150,217,153,231,156,23,83,6,82,41,84,116,86,179,88,84,89,110,89,255,95,164,97,110,98,16,102,126,108,26,113,198,118,137,124,222,124,27,125,172,130,193,140,240,150,103,249,91,79,23,95,127,95,194,98,41,93,11,103,218,104,124,120,67,126,108,157,21,78,153,80,21,83,42,83,81,83,131,89,98,90,135,94,178,96,138,97,73,98,121,98,144,101,135,103,167,105,212,107,214,107,215,107,216,107,184,108,104,249,53,116,250,117,18,120,145,120,213,121,216,121,131,124,203,125,225,127,165,128,62,129,194,129,242,131,26,135,232,136,185,138,108,139,187,140,25,145,94,151,219,152,59,159,172,86,42,91,108,95,140,101,179,106,175,107,92,109,241,111,21,112,93,114,173,115,167,140,211,140,59,152,145,97,55,108,88,128,1,154,77,78,139,78,155,78,213,78,58,79,60,79,127,79,223,79,255,80,242,83,248,83,6,85,227,85,219,86,235,88,98,89,17,90,235,91,250,91,4,92,243,93,43,94,153,95,29,96,104,99,156,101,175,101,246,103,251,103,173,104,123,107,153,108,215,108,35,110,9,112,69,115,2,120,62,121,64,121,96,121,193,121,233,123,23,125,114,125,134,128,13,130,142,131,209,132,199,134,223,136,80,138,94,138,29,139,220,140,102,141,173,143,170,144,252,152,223,153,157,158,74,82,105,249,20,103,106,249,152,80,42,82,113,92,99,101,85,108,202,115,35,117,157,117,151,123,156,132,120,145,48,151,119,78,146,100,186,107,94,113,169,133,9,78,107,249,73,103,238,104,23,110,159,130,24,133,107,136,247,99,129,111,18,146,175,152,10,78,183,80,207,80,31,81,70,85,170,85,23,86,64,91,25,92,224,92,56,94,138,94,160,94,194,94,243,96,81,104,97,106,88,110,61,114,64,114,192,114,248,118,101,121,177,123,212,127,243,136,244,137,115,138,97,140,222,140,28,151,94,88,189,116,253,140,199,85,108,249,97,122,34,125,114,130,114,114,31,117,37,117,109,249,25,123,133,88,251,88,188,93,143,94,182,94,144,95,85,96,146,98,127,99,77,101,145,102,217,102,248,102,22,104,242,104,128,114,94,116,110,123,110,125,214,125,114,127,229,128,18,130,175,133,127,137,147,138,29,144,228,146,205,158,32,159,21,89,109,89,45,94,220,96,20,102,115,102,144,103,80,108,197,109,95,111,243,119,169,120,198,132,203,145,43,147,217,78,202,80,72,81,132,85,11,91,163,91,71,98,126,101,203,101,50,110,125,113,1,116,68,116,135,116,191,116,108,118,170,121,218,125,85,126,168,127,122,129,179,129,57,130,26,134,236,135,117,138,227,141,120,144,145,146,37,148,77,153,174,155,104,83,81,92,84,105,196,108,41,109,43,110,12,130,155,133,59,137,45,138,170,138,234,150,103,159,97,82,185,102,178,107,150,126,254,135,13,141,131,149,93,150,29,101,137,109,238,113,110,249,206,87,211,89,172,91,39,96,250,96,16,98,31,102,95,102,41,115,249,115,219,118,1,119,108,123,86,128,114,128,101,129,160,138,146,145,22,78,226,82,114,107,23,109,5,122,57,123,48,125,111,249,176,140,236,83,47,86,81,88,181,91,15,92,17,92,226,93,64,98,131,99,20,100,45,102,179,104,188,108,136,109,175,110,31,112,164,112,210,113,38,117,143,117,142,117,25,118,17,123,224,123,43,124,32,125,57,125,44,133,109,133,7,134,52,138,13,144,97,144,181,144,183,146,246,151,55,154,215,79,108,92,95,103,145,109,159,124,140,126,22,139,22,141,31,144,107,91,253,93,13,100,192,132,92,144,225,152,135,115,139,91,154,96,126,103,222,109,31,138,166,138,1,144,12,152,55,82,112,249,81,112,142,120,150,147,112,136,215,145,238,79,215,83,253,85,218,86,130,87,253,88,194,90,136,91,171,92,192,92,37,94,1,97,13,98,75,98,136,99,28,100,54,101,120,101,57,106,138,107,52,108,25,109,49,111,231,113,233,114,120,115,7,116,178,116,38,118,97,119,192,121,87,122,234,122,185,124,143,125,172,125,97,126,158,127,41,129,49,131,144,132,218,132,234,133,150,136,176,138,144,139,56,143,66,144,131,144,108,145,150,146,185,146,139,150,167,150,168,150,214,150,0,151,8,152,150,153,211,154,26,155,212,83,126,88,25,89,112,91,191,91,209,109,90,111,159,113,33,116,185,116,133,128,253,131,225,93,135,95,170,95,66,96,236,101,18,104,111,105,83,106,137,107,53,109,243,109,227,115,254,118,172,119,77,123,20,125,35,129,28,130,64,131,244,132,99,133,98,138,196,138,135,145,30,147,6,152,180,153,12,98,83,136,240,143,101,146,7,93,39,93,105,93,95,116,157,129,104,135,213,111,254,98,210,127,54,137,114,137,30,78,88,78,231,80,221,82,71,83,127,98,7,102,105,126,5,136,94,150,141,79,25,83,54,86,203,89,164,90,56,92,78,92,77,92,2,94,17,95,67,96,189,101,47,102,66,102,190,103,244,103,28,115,226,119,58,121,197,127,148,132,205,132,150,137,102,138,105,138,225,138,85,140,122,140,244,87,212,91,15,95,111,96,237,98,13,105,150,107,92,110,132,113,210,123,85,135,88,139,254,142,223,152,254,152,56,79,129,79,225,79,123,84,32,90,184,91,60,97,176,101,104,102,252,113,51,117,94,121,51,125,78,129,227,129,152,131,170,133,206,133,3,135,10,138,171,142,155,143,113,249,197,143,49,89,164,91,230,91,137,96,233,91,11,92,195,95,129,108,114,249,241,109,11,112,26,117,175,130,246,138,192,78,65,83,115,249,217,150,15,108,158,78,196,79,82,81,94,85,37,90,232,92,17,98,89,114,189,130,170,131,254,134,89,136,29,138,63,150,197,150,19,153,9,157,93,157,10,88,179,92,189,93,68,94,225,96,21,97,225,99,2,106,37,110,2,145,84,147,78,152,16,156,119,159,137,91,184,92,9,99,79,102,72,104,60,119,193,150,141,151,84,152,159,155,161,101,1,139,203,142,188,149,53,85,169,92,214,93,181,94,151,102,76,118,244,131,199,149,211,88,188,98,206,114,40,157,240,78,46,89,15,96,59,102,131,107,231,121,38,157,147,83,192,84,195,87,22,93,27,97,214,102,175,109,141,120,126,130,152,150,68,151,132,83,124,98,150,99,178,109,10,126,75,129,77,152,251,106,76,127,175,157,26,158,95,78,59,80,182,81,28,89,249,96,246,99,48,105,58,114,54,128,116,249,206,145,49,95,117,249,118,249,4,125,229,130,111,132,187,132,229,133,141,142,119,249,111,79,120,249,121,249,228,88,67,91,89,96,218,99,24,101,109,101,152,102,122,249,74,105,35,106,11,109,1,112,108,113,210,117,13,118,179,121,112,122,123,249,138,127,124,249,68,137,125,249,147,139,192,145,125,150,126,249,10,153,4,87,161,95,188,101,1,111,0,118,166,121,158,138,173,153,90,155,108,159,4,81,182,97,145,98,141,106,198,129,67,80,48,88,102,95,9,113,0,138,250,138,124,91,22,134,250,79,60,81,180,86,68,89,169,99,249,109,170,93,109,105,134,81,136,78,89,79,127,249,128,249,129,249,130,89,130,249,131,249,95,107,93,108,132,249,181,116,22,121,133,249,7,130,69,130,57,131,63,143,93,143,134,249,24,153,135,249,136,249,137,249,166,78,138,249,223,87,121,95,19,102,139,249,140,249,171,117,121,126,111,139,141,249,6,144,91,154,165,86,39,88,248,89,31,90,180,91,142,249,246,94,143,249,144,249,80,99,59,99,145,249,61,105,135,108,191,108,142,109,147,109,245,109,20,111,146,249,223,112,54,113,89,113,147,249,195,113,213,113,148,249,79,120,111,120,149,249,117,123,227,125,150,249,47,126,151,249,77,136,223,142,152,249,153,249,154,249,91,146,155,249,246,156,156,249,157,249,158,249,133,96,133,109,159,249,177,113,160,249,161,249,177,149,173,83,162,249,163,249,164,249,211,103,165,249,142,112,48,113,48,116,118,130,210,130,166,249,187,149,229,154,125,158,196,102,167,249,193,113,73,132,168,249,169,249,75,88,170,249,171,249,184,93,113,95,172,249,32,102,142,102,121,105,174,105,56,108,243,108,54,110,65,111,218,111,27,112,47,112,80,113,223,113,112,115,173,249,91,116,174,249,212,116,200,118,78,122,147,126,175,249,176,249,241,130,96,138,206,143,177,249,72,147,178,249,25,151,179,249,180,249,66,78,42,80,181,249,8,82,225,83,243,102,109,108,202,111,10,115,127,119,98,122,174,130,221,133,2,134,182,249,212,136,99,138,125,139,107,140,183,249,179,146,184,249,19,151,16,152,148,78,13,79,201,79,178,80,72,83,62,84,51,84,218,85,98,88,186,88,103,89,27,90,228,91,159,96,185,249,202,97,86,101,255,101,100,102,167,104,90,108,179,111,207,112,172,113,82,115,125,123,8,135,164,138,50,156,7,159,75,92,131,108,68,115,137,115,58,146,171,110,101,116,31,118,105,122,21,126,10,134,64,81,197,88,193,100,238,116,21,117,112,118,193,127,149,144,205,150,84,153,38,110,230,116,169,122,170,122,229,129,217,134,120,135,27,138,73,90,140,91,155,91,161,104,0,105,99,109,169,115,19,116,44,116,151,120,233,125,235,127,24,129,85,129,158,131,76,140,46,150,17,152,240,102,128,95,250,101,137,103,106,108,139,115,45,80,3,90,106,107,238,119,22,89,108,93,205,93,37,115,79,117,186,249,187,249,229,80,249,81,47,88,45,89,150,89,218,89,229,91,188,249,189,249,162,93,215,98,22,100,147,100,254,100,190,249,220,102,191,249,72,106,192,249,255,113,100,116,193,249,136,122],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+130622);allocate([175,122,71,126,94,126,0,128,112,129,194,249,239,135,129,137,32,139,89,144,195,249,128,144,82,153,126,97,50,107,116,109,31,126,37,137,177,143,209,79,173,80,151,81,199,82,199,87,137,88,185,91,184,94,66,97,149,105,140,109,103,110,182,110,148,113,98,116,40,117,44,117,115,128,56,131,201,132,10,142,148,147,222,147,196,249,142,78,81,79,118,80,42,81,200,83,203,83,243,83,135,91,211,91,36,92,26,97,130,97,244,101,91,114,151,115,64,116,194,118,80,121,145,121,185,121,6,125,189,127,139,130,213,133,94,134,194,143,71,144,245,144,234,145,133,150,232,150,233,150,214,82,103,95,237,101,49,102,47,104,92,113,54,122,193,144,10,152,145,78,197,249,82,106,158,107,144,111,137,113,24,128,184,130,83,133,75,144,149,150,242,150,251,151,26,133,49,155,144,78,138,113,196,150,67,81,159,83,225,84,19,87,18,87,163,87,155,90,196,90,195,91,40,96,63,97,244,99,133,108,57,109,114,110,144,110,48,114,63,115,87,116,209,130,129,136,69,143,96,144,198,249,98,150,88,152,27,157,8,103,138,141,94,146,77,79,73,80,222,80,113,83,13,87,212,89,1,90,9,92,112,97,144,102,45,110,50,114,75,116,239,125,195,128,14,132,102,132,63,133,95,135,91,136,24,137,2,139,85,144,203,151,79,155,115,78,145,79,18,81,106,81,199,249,47,85,169,85,122,91,165,91,124,94,125,94,190,94,160,96,223,96,8,97,9,97,196,99,56,101,9,103,200,249,212,103,218,103,201,249,97,105,98,105,185,108,39,109,202,249,56,110,203,249,225,111,54,115,55,115,204,249,92,116,49,117,205,249,82,118,206,249,207,249,173,125,254,129,56,132,213,136,152,138,219,138,237,138,48,142,66,142,74,144,62,144,122,144,73,145,201,145,110,147,208,249,209,249,9,88,210,249,211,107,137,128,178,128,211,249,212,249,65,81,107,89,57,92,213,249,214,249,100,111,167,115,228,128,7,141,215,249,23,146,143,149,216,249,217,249,218,249,219,249,127,128,14,98,28,112,104,125,141,135,220,249,160,87,105,96,71,97,183,107,190,138,128,146,177,150,89,78,31,84,235,109,45,133,112,150,243,151,238,152,214,99,227,108,145,144,221,81,201,97,186,129,249,157,157,79,26,80,0,81,156,91,15,97,255,97,236,100,5,105,197,107,145,117,227,119,169,127,100,130,143,133,251,135,99,136,188,138,112,139,171,145,140,78,229,78,10,79,221,249,222,249,55,89,232,89,223,249,242,93,27,95,91,95,33,96,224,249,225,249,226,249,227,249,62,114,229,115,228,249,112,117,205,117,229,249,251,121,230,249,12,128,51,128,132,128,225,130,81,131,231,249,232,249,189,140,179,140,135,144,233,249,234,249,244,152,12,153,235,249,236,249,55,112,202,118,202,127,204,127,252,127,26,139,186,78,193,78,3,82,112,83,237,249,189,84,224,86,251,89,197,91,21,95,205,95,110,110,238,249,239,249,106,125,53,131,240,249,147,134,141,138,241,249,109,151,119,151,242,249,243,249,0,78,90,79,126,79,249,88,229,101,162,110,56,144,176,147,185,153,251,78,236,88,138,89,217,89,65,96,244,249,245,249,20,122,246,249,79,131,195,140,101,81,68,83,247,249,248,249,249,249,205,78,105,82,85,91,191,130,212,78,58,82,168,84,201,89,255,89,80,91,87,91,92,91,99,96,72,97,203,110,153,112,110,113,134,115,247,116,181,117,193,120,43,125,5,128,234,129,40,131,23,133,201,133,238,138,199,140,204,150,92,79,250,82,188,86,171,101,40,102,124,112,184,112,53,114,189,125,141,130,76,145,192,150,114,157,113,91,231,104,152,107,122,111,222,118,145,92,171,102,91,111,180,123,42,124,54,136,220,150,8,78,215,78,32,83,52,88,187,88,239,88,108,89,7,92,51,94,132,94,53,95,140,99,178,102,86,103,31,106,163,106,12,107,63,111,70,114,250,249,80,115,139,116,224,122,167,124,120,129,223,129,231,129,138,131,108,132,35,133,148,133,207,133,221,136,19,141,172,145,119,149,156,150,141,81,201,84,40,87,176,91,77,98,80,103,61,104,147,104,61,110,211,110,125,112,33,126,193,136,161,140,9,143,75,159,78,159,45,114,143,123,205,138,26,147,71,79,78,79,50,81,128,84,208,89,149,94,181,98,117,103,110,105,23,106,174,108,26,110,217,114,42,115,189,117,184,123,53,125,231,130,249,131,87,132,247,133,91,138,175,140,135,142,25,144,184,144,206,150,95,159,227,82,10,84,225,90,194,91,88,100,117,101,244,110,196,114,251,249,132,118,77,122,27,123,77,124,62,126,223,127,123,131,43,139,202,140,100,141,225,141,95,142,234,143,249,143,105,144,209,147,67,79,122,79,179,80,104,81,120,81,77,82,106,82,97,88,124,88,96,89,8,92,85,92,219,94,155,96,48,98,19,104,191,107,8,108,177,111,78,113,32,116,48,117,56,117,81,117,114,118,76,123,139,123,173,123,198,123,143,126,110,138,62,143,73,143,63,146,147,146,34,147,43,148,251,150,90,152,107,152,30,153,7,82,42,98,152,98,89,109,100,118,202,122,192,123,118,125,96,83,190,92,151,94,56,111,185,112,152,124,17,151,142,155,222,158,165,99,122,100,118,135,1,78,149,78,173,78,92,80,117,80,72,84,195,89,154,91,64,94,173,94,247,94,129,95,197,96,58,99,63,101,116,101,204,101,118,102,120,102,254,103,104,105,137,106,99,107,64,108,192,109,232,109,31,110,94,110,30,112,161,112,142,115,253,115,58,117,91,119,135,120,142,121,11,122,125,122,190,124,142,125,71,130,2,138,234,138,158,140,45,145,74,145,216,145,102,146,204,146,32,147,6,151,86,151,92,151,2,152,14,159,54,82,145,82,124,85,36,88,29,94,31,95,140,96,208,99,175,104,223,111,109,121,44,123,205,129,186,133,253,136,248,138,68,142,141,145,100,150,155,150,61,151,76,152,74,159,206,79,70,81,203,81,169,82,50,86,20,95,107,95,170,99,205,100,233,101,65,102,250,102,249,102,29,103,157,104,215,104,253,105,21,111,110,111,103,113,229,113,42,114,170,116,58,119,86,121,90,121,223,121,32,122,149,122,151,124,223,124,68,125,112,126,135,128,251,133,164,134,84,138,191,138,153,141,129,142,32,144,109,144,227,145,59,150,213,150,229,156,207,101,7,124,179,141,195,147,88,91,10,92,82,83,217,98,29,115,39,80,151,91,158,95,176,96,107,97,213,104,217,109,46,116,46,122,66,125,156,125,49,126,107,129,42,142,53,142,126,147,24,148,80,79,80,87,230,93,167,94,43,99,106,127,59,78,79,79,143,79,90,80,221,89,196,128,106,84,104,84,254,85,79,89,153,91,222,93,218,94,93,102,49,103,241,103,42,104,232,108,50,109,74,110,141,111,183,112,224,115,135,117,76,124,2,125,44,125,162,125,31,130,219,134,59,138,133,138,112,141,138,142,51,143,49,144,78,145,82,145,68,148,208,153,249,122,165,124,202,79,1,81,198,81,200,87,239,91,251,92,89,102,61,106,90,109,150,110,236,111,12,113,111,117,227,122,34,136,33,144,117,144,203,150,255,153,1,131,45,78,242,78,70,136,205,145,125,83,219,106,107,105,65,108,122,132,158,88,142,97,254,102,239,98,221,112,17,117,199,117,82,126,184,132,73,139,8,141,75,78,234,83,171,84,48,87,64,87,215,95,1,99,7,99,111,100,47,101,232,101,122,102,157,103,179,103,98,107,96,108,154,108,44,111,229,119,37,120,73,121,87,121,25,125,162,128,2,129,243,129,157,130,183,130,24,135,140,138,252,249,4,141,190,141,114,144,244,118,25,122,55,122,84,126,119,128,7,85,212,85,117,88,47,99,34,100,73,102,75,102,109,104,155,105,132,107,37,109,177,110,205,115,104,116,161,116,91,117,185,117,225,118,30,119,139,119,230,121,9,126,29,126,251,129,47,133,151,136,58,138,209,140,235,142,176,143,50,144,173,147,99,150,115,150,7,151,132,79,241,83,234,89,201,90,25,94,78,104,198,116,190,117,233,121,146,122,163,129,237,134,234,140,204,141,237,143,159,101,21,103,253,249,247,87,87,111,221,125,47,143,246,147,198,150,181,95,242,97,132,111,20,78,152,79,31,80,201,83,223,85,111,93,238,93,33,107,100,107,203,120,154,123,254,249,73,142,202,142,110,144,73,99,62,100,64,119,132,122,47,147,127,148,106,159,176,100,175,111,230,113,168,116,218,116,196,122,18,124,130,126,178,124,152,126,154,139,10,141,125,148,16,153,76,153,57,82,223,91,230,100,45,103,46,125,237,80,195,83,121,88,88,97,89,97,250,97,172,101,217,122,146,139,150,139,9,80,33,80,117,82,49,85,60,90,224,94,112,95,52,97,94,101,12,102,54,102,162,102,205,105,196,110,50,111,22,115,33,118,147,122,57,129,89,130,214,131,188,132,181,80,240,87,192,91,232,91,105,95,161,99,38,120,181,125,220,131,33,133,199,145,245,145,138,81,245,103,86,123,172,140,196,81,187,89,189,96,85,134,28,80,255,249,84,82,58,92,125,97,26,98,211,98,242,100,165,101,204,110,32,118,10,129,96,142,95,150,187,150,223,78,67,83,152,85,41,89,221,93,197,100,201,108,250,109,148,115,127,122,27,130,166,133,228,140,16,142,119,144,231,145,225,149,33,150,198,151,248,81,242,84,134,85,185,95,164,100,136,111,180,125,31,143,77,143,53,148,201,80,22,92,190,108,251,109,27,117,187,119,61,124,100,124,121,138,194,138,30,88,190,89,22,94,119,99,82,114,138,117,107,119,220,138,188,140,18,143,243,94,116,102,248,109,125,128,193,131,203,138,81,151,214,155,0,250,67,82,255,102,149,109,239,110,224,125,230,138,46,144,94,144,212,154,29,82,127,82,232,84,148,97,132,98,219,98,162,104,18,105,90,105,53,106,146,112,38,113,93,120,1,121,14,121,210,121,13,122,150,128,120,130,213,130,73,131,73,133,130,140,133,141,98,145,139,145,174,145,195,79,209,86,237,113,215,119,0,135,248,137,248,91,214,95,81,103,168,144,226,83,90,88,245,91,164,96,129,97,96,100,61,126,112,128,37,133,131,146,174,100,172,80,20,93,0,103,156,88,189,98,168,99,14,105,120,105,30,106,107,110,186,118,203,121,187,130,41,132,207,138,168,141,253,143,18,145,75,145,156,145,16,147,24,147,154,147,219,150,54,154,13,156,17,78,92,117,93,121,250,122,81,123,201,123,46,126,196,132,89,142,116,142,248,142,16,144,37,102,63,105,67,116,250,81,46,103,220,158,69,81,224,95,150,108,242,135,93,136,119,136,180,96,181,129,3,132,5,141,214,83,57,84,52,86,54,90,49,92,138,112,224,127,90,128,6,129,237,129,163,141,137,145,95,154,242,157,116,80,196,78,160,83,251,96,44,110,100,92,136,79,36,80,228,85,217,92,95,94,101,96,148,104,187,108,196,109,190,113,212,117,244,117,97,118,26,122,73,122,199,125,251,125,110,127,244,129,169,134,28,143,201,150,179,153,82,159,71,82,197,82,237,152,170,137,3,78,210,103,6,111,181,79,226,91,149,103,136,108,120,109,27,116,39,120,221,145,124,147,196,135,228,121,49,122,235,95,214,78,164,84,62,85,174,88,165,89,240,96,83,98,214,98,54,103,85,105,53,130,64,150,177,153,221,153,44,80,83,83,68,85,124,87,1,250,88,98,2,250,226,100,107,102,221,103,193,111,239,111,34,116,56,116,23,138,56,148,81,84,6,86,102,87,72,95,154,97,78,107,88,112,173,112,187,125,149,138,106,89,43,129,162,99,8,119,61,128,170,140,84,88,45,100,187,105,149,91,17,94,111,110,3,250,105,133,76,81,240,83,42,89,32,96,75,97,134,107,112,108,240,108,30,123,206,128,212,130,198,141,176,144,177,152,4,250,199,100,164,111,145,100,4,101,78,81,16,84,31,87,14,138,95,97,118,104,5,250,219,117,82,123,113,125,26,144,6,88,204,105,127,129,42,137,0,144,57,152,120,80,87,89,172,89,149,98,15,144,42,155,93,97,121,114,214,149,97,87,70,90,244,93,138,98,173,100,250,100,119,103,226,108,62,109,44,114,54,116,52,120,119,127,173,130,219,141,23,152,36,82,66,87,127,103,72,114,227,116,169,140,166,143,17,146,42,150,107,81,237,83,76,99,105,79,4,85,150,96,87,101,155,108,127,109,76,114,253,114,23,122,135,137,157,140,109,95,142,111,249,112,168,129,14,97,191,79,79,80,65,98,71,114,199,123,232,125,233,127,77,144,173,151,25,154,182,140,106,87,115,94,176,103,13,132,85,138,32,84,22,91,99,94,226,94,10,95,131,101,186,128,61,133,137,149,91,150,72,79,5,83,13,83,15,83,134,84,250,84,3,87,3,94,22,96,155,98,177,98,85,99,6,250,225,108,102,109,177,117,50,120,222,128,47,129,222,130,97,132,178,132,141,136,18,137,11,144,234,146,253,152,145,155,69,94,180,102,221,102,17,112,6,114,7,250,245,79,125,82,106,95,83,97,83,103,25,106,2,111,226,116,104,121,104,136,121,140,199,152,196,152,67,154,193,84,31,122,83,105,247,138,74,140,168,152,174,153,124,95,171,98,178,117,174,118,171,136,127,144,66,150,57,83,60,95,197,95,204,108,204,115,98,117,139,117,70,123,254,130,157,153,79,78,60,144,11,78,85,79,166,83,15,89,200,94,48,102,179,108,85,116,119,131,102,135,192,140,80,144,30,151,21,156,209,88,120,91,80,134,20,139,180,157,210,91,104,96,141,96,241,101,87,108,34,111,163,111,26,112,85,127,240,127,145,149,146,149,80,150,211,151,114,82,68,143,253,81,43,84,184,84,99,85,138,85,187,106,181,109,216,125,102,130,156,146,119,150,121,158,8,84,200,84,210,118,228,134,164,149,212,149,92,150,162,78,9,79,238,89,230,90,247,93,82,96,151,98,109,103,65,104,134,108,47,110,56,127,155,128,42,130,8,250,9,250,5,152,165,78,85,80,179,84,147,87,90,89,105,91,179,91,200,97,119,105,119,109,35,112,249,135,227,137,114,138,231,138,130,144,237,153,184,154,190,82,56,104,22,80,120,94,79,103,71,131,76,136,171,78,17,84,174,86,230,115,21,145,255,151,9,153,87,153,153,153,83,86,159,88,91,134,49,138,178,97,246,106,123,115,210,142,71,107,170,150,87,154,85,89,0,114,107,141,105,151,212,79,244,92,38,95,248,97,91,102,235,108,171,112,132,115,185,115,254,115,41,119,77,119,67,125,98,125,35,126,55,130,82,136,10,250,226,140,73,146,111,152,81,91,116,122,64,136,1,152,204,90,224,79,84,83,62,89,253,92,62,99,121,109,249,114,5,129,7,129,162,131,207,146,48,152,168,78,68,81,17,82,139,87,98,95,194,108,206,110,5,112,80,112,175,112,146,113,233,115,105,116,74,131,162,135,97,136,8,144,162,144,163,147,168,153,110,81,87,95,224,96,103,97,179,102,89,133,74,142,175,145,139,151,78,78,146,78,124,84,213,88,250,88,125,89,181,92,39,95,54,98,72,98,10,102,103,102,235,107,105,109,207,109,86,110,248,110,148,111,224,111,233,111,93,112,208,114,37,116,90,116,224,116,147,118,92,121,202,124,30,126,225,128,166,130,107,132,191,132,78,134,95,134,116,135,119,139,106,140,172,147,0,152,101,152,209,96,22,98,119,145,90,90,15,102,247,109,62,110,63,116,66,155,253,95,218,96,15,123,196,84,24,95,94,108,211,108,42,109,216,112,5,125,121,134,12,138,59,157,22,83,140,84,5,91,58,106,107,112,117,117,141,121,190,121,177,130,239,131,113,138,65,139,168,140,116,151,11,250,244,100,43,101,186,120,187,120,107,122,56,78,154,85,80,89,166,91,123,94,163,96,219,99,97,107,101,102,83,104,25,110,101,113,176,116,8,125,132,144,105,154,37,156,59,109,209,110,62,115,65,140,202,149,240,81,76,94,168,95,77,96,246,96,48,97,76,97,67,102,68,102,165,105,193,108,95,110,201,110,98,111,76,113,156,116,135,118,193,123,39,124,82,131,87,135,81,144,141,150,195,158,47,83,222,86,251,94,138,95,98,96,148,96,247,97,102,102,3,103,156,106,238,109,174,111,112,112,106,115,106,126,190,129,52,131,212,134,168,138,196,140,131,82,114,115,150,91,107,106,4,148,238,84,134,86,93,91,72,101,133,101,201,102,159,104,141,109,198,109,59,114,180,128,117,145,77,154,175,79,25,80,154,83,14,84,60,84,137,85,197,85,63,94,140,95,61,103,102,113,221,115,5,144,219,82,243,82,100,88,206,88,4,113,143,113,251,113,176,133,19,138,136,102,168,133,167,85,132,102,74,113,49,132,73,83,153,85,193,107,89,95,189,95,238,99,137,102,71,113,241,138,29,143,190,158,17,79,58,100,203,112,102,117,103,134,100,96,78,139,248,157,71,81,246,81,8,83,54,109,248,128,209,158,21,102,35,107,152,112,213,117,3,84,121,92,7,125,22,138,32,107,61,107,70,107,56,84,112,96,61,109,213,127,8,130,214,80,222,81,156,85,107,86,205,86,236,89,9,91,12,94,153,97,152,97,49,98,94,102,230,102,153,113,185,113,186,113,167,114,167,121,0,122,178,127,112,138,0,0,1,0,160,0,167,0,168,0,169,0,175,0,176,0,178,0,183,0,184,0,198,0,215,0,216,0,230,0,247,0,248,0,0,1,1,1,2,1,3,1,4,1,5,1,6,1,7,1,8,1,9,1,10,1,11,1,12,1,13,1,14,1,15,1,16,1,17,1,18,1,19,1,22,1,23,1,24,1,25,1,26,1,27,1,28,1,29,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,37,1,38,1,39,1,40,1,41,1,42,1,43,1,46,1,47,1,48,1,49,1,52,1,53,1,54,1,55,1,56,1,57,1,58,1,59,1,60,1,61,1,62,1,65,1,66,1,67,1,68,1,69,1,70,1,71,1,72,1,74,1,75,1,76,1,77,1,80,1,81,1,82,1,83,1,84,1,85,1,86,1,87,1,88,1,89,1,90,1,91,1,92,1,93,1,94,1,95,1,96,1,97,1,98,1,99,1,100,1,101,1,102,1,103,1,104,1,105,1,106,1,107,1,108,1,109,1,110,1,111,1,112,1,113,1,114,1,115,1,116,1,117,1,118,1,119,1,120,1,121,1,122,1,123,1,124,1,125,1,126,1,146,1,160,1,161,1,175,1,176,1,24,2,25,2,26,2,27,2,198,2,199,2,216,2,217,2,219,2,220,2,221,2,0,3,1,3,3,3,9,3,35,3,122,3,132,3,133,3,134,3,136,3,137,3,138,3,140,3,142,3,143,3,144,3,145,3,146,3,147,3,148,3,149,3,150,3,151,3,152,3,153,3,154,3,155,3,156,3,157,3,158,3,159,3,160,3,161,3,163,3,164,3,165,3,166,3,167,3,168,3,169,3,170,3,171,3,172,3,173,3,174,3,175,3,176,3,177,3,178,3,179,3,180,3,181,3,182,3,183,3,184,3,185,3,186,3,187,3,188,3,189,3,190,3,191,3,192,3,193,3,194,3,195,3,196,3,197,3,198,3,199,3,200,3,201,3,202,3,203,3,204,3,205,3,206,3,1,4,2,4,3,4,4,4,5,4,6,4,7,4,8,4,9,4,10,4,11,4,12,4,14,4,15,4,16,4,17,4,18,4,19,4,20,4,21,4,22,4,23,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,4,37,4,38,4,39,4,40,4,41,4,42,4,43,4,44,4,45,4,46,4,47,4,48,4,49,4,50,4,51,4,52,4,53,4,54,4,55,4,56,4,57,4,58,4,59,4,60,4,61,4,62,4,63,4,64,4,65,4,66,4,67,4,68,4,69,4,70,4,71,4,72,4,73,4,74,4,75,4,76,4,77,4,78,4,79,4,81,4,82,4,83,4,84,4,85,4,86,4,87,4,88,4,89,4,90,4,91,4,92,4,94,4,95,4,144,4,145,4,176,5,177,5,178,5,179,5,180,5,181,5,182,5,183,5,184,5,185,5,187,5,188,5,189,5,190,5,191,5,192,5,193,5,194,5,195,5,208,5,209,5,210,5,211,5,212,5,213,5,214,5,215,5,216,5,217,5,218,5,219,5,220,5,221,5,222,5,223,5,224,5,225,5,226,5,227,5,228,5,229,5,230,5,231,5,232,5,233,5,234,5,240,5,241,5,242,5,243,5,244,5,12,6,27,6,31,6,33,6,34,6,35,6,36,6,37,6,38,6,39,6,40,6,41,6,42,6,43,6,44,6,45,6,46,6,47,6,48,6,49,6,50,6,51,6,52,6,53,6,54,6,55,6,56,6,57,6,58,6,64,6,65,6,66,6,67,6,68,6,69,6,70,6,71,6,72,6,73,6,74,6,75,6,76,6,77,6,78,6,79,6,80,6,81,6,82,6,121,6,126,6,134,6,136,6,145,6,152,6,169,6,175,6,186,6,190,6,193,6,210,6,1,14,2,14,3,14,4,14,5,14,6,14,7,14,8,14,9,14,10,14,11,14,12,14,13,14,14,14,15,14,16,14,17,14,18,14,19,14,20,14,21,14,22,14,23,14,24,14,25,14,26,14,27,14,28,14,29,14,30,14,31,14,32,14,33,14,34,14,35,14,36,14,37,14,38,14,39,14,40,14,41,14,42,14,43,14,44,14,45,14,46,14,47,14,48,14,49,14,50,14,51,14,52,14,53,14,54,14,55,14,56,14,57,14,58,14,63,14,64,14,65,14,66,14,67,14,68,14,69,14,70,14,71,14,72,14,73,14,74,14,75,14,76,14,77,14,78,14,79,14,80,14,81,14,82,14,83,14,84,14,85,14,86,14,87,14,88,14,89,14,90,14,91,14,2,30,3,30,10,30,11,30,30,30,31,30,64,30,65,30,86,30,87,30,96,30,97,30,106,30,107,30,128,30,129,30,130,30,131,30,132,30,133,30,242,30,243,30,12,32,13,32,14,32,15,32,19,32,20,32,21,32,23,32,24,32,25,32,26,32,28,32,29,32,30,32,32,32,33,32,34,32,38,32,48,32,57,32,58,32,170,32,171,32,172,32,175,32,22,33,34,33,25,34,26,34,72,34,100,34,101,34,32,35,33,35,0,37,2,37,12,37,16,37,20,37,24,37,28,37,36,37,44,37,52,37,60,37,80,37,81,37,82,37,83,37,84,37,85,37,86,37,87,37,88,37,89,37,90,37,91,37,92,37,93,37,94,37,95,37,96,37,97,37,98,37,99,37,100,37,101,37,102,37,103,37,104,37,105,37,106,37,107,37,108,37,128,37,132,37,136,37,140,37,144,37,145,37,146,37,147,37,160,37,1,0,47,100,101,118,47,108,111,103,0,0,112,108,101,97,115,101,108,101,116,109,101,105,110,0,83,111,100,105,117,109,67,104,108,111,114,105,100,101,0,71,101,110,101,114,105,99,32,115,99,114,121,112,116,32,99,111,100,101,32,105,115,32,98,114,111,107,101,110,32,45,32,112,108,101,97,115,101,32,114,101,112,111,114,116,32,98,117,103,33,0,40,117,110,107,110,111,119,110,41,0,58,32,37,115,10,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,107,76,101,110,32,60,61,32,51,50,32,42,32,40,115,105,122,101,95,116,41,40,85,73,78,84,51,50,95,77,65,88,41,0,115,99,114,121,112,116,45,49,46,50,46,48,47,108,105,98,99,112,101,114,99,105,118,97,47,97,108,103,47,115,104,97,50,53,54,46,99,0,80,66,75,68,70,50,95,83,72,65,50,53,54,0,88,88,88,88,88,88,0,47,100,101,118,47,115,104,109,47,0,76,79,71,78,65,77,69,0,47,100,101,118,47,116,116,121,0,47,112,114,111,99,47,115,101,108,102,47,102,100,47,0,18,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,17,34,35,36,17,37,38,39,40,41,42,43,44,17,45,46,47,16,16,48,16,16,16,16,16,16,16,49,50,51,16,52,53,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,54,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,55,17,17,17,17,56,17,57,58,59,60,61,62,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,63,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,64,65,17,66,67,68,69,70,71,72,73,16,16,16,74,75,76,77,78,16,16,16,79,80,16,16,16,16,81,16,16,16,16,16,16,16,16,16,17,17,17,82,83,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,84,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,85,16,16,16,16,86,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,87,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,88,89,90,91,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,92,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,254,255,255,7,254,255,255,7,0,0,0,0,0,4,32,4,255,255,127,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,195,255,3,0,31,80,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,223,60,64,215,255,255,251,255,255,255,255,255,255,255,255,255,191,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,254,255,255,255,127,2,254,255,255,255,255,0,0,0,0,0,255,191,182,0,255,255,255,7,7,0,0,0,255,7,255,255,255,255,255,255,255,254,255,195,255,255,255,255,255,255,255,255,255,255,255,255,239,31,254,225,255,159,0,0,255,255,255,255,255,255,0,224,255,255,255,255,255,255,255,255,255,255,255,255,3,0,255,255,255,255,255,7,48,4,255,255,255,252,255,31,0,0,255,255,255,1,0,0,0,0,0,0,0,0,253,31,0,0,0,0,0,0,240,3,255,127,255,255,255,255,255,255,255,239,255,223,225,255,207,255,254,254,238,159,249,255,255,253,197,227,159,89,128,176,207,255,3,0,238,135,249,255,255,253,109,195,135,25,2,94,192,255,63,0,238,191,251,255,255,253,237,227,191,27,1,0,207,255,0,0,238,159,249,255,255,253,237,227,159,25,192,176,207,255,2,0,236,199,61,214,24,199,255,195,199,29,129,0,192,255,0,0,238,223,253,255,255,253,239,227,223,29,96,3,207,255,0,0,236,223,253,255,255,253,239,227,223,29,96,64,207,255,6,0,236,223,253,255,255,255,255,231,223,93,128,0,207,255,0,252,236,255,127,252,255,255,251,47,127,128,95,255,0,0,12,0,254,255,255,255,255,127,255,7,63,32,255,3,0,0,0,0,150,37,240,254,174,236,255,59,95,32,255,243,0,0,0,0,1,0,0,0,255,3,0,0,255,254,255,255,255,31,254,255,3,255,255,254,255,255,255,31,0,0,0,0,0,0,0,0,255,255,255,255,255,255,127,249,255,3,255,255,231,193,255,255,127,64,255,51,255,255,255,255,191,32,255,255,255,255,255,247,255,255,255,255,255,255,255,255,255,61,127,61,255,255,255,255,255,61,255,255,255,255,61,127,61,255,127,255,255,255,255,255,255,255,61,255,255,255,255,255,255,255,255,135,0,0,0,0,255,255,0,0,255,255,255,255,255,255,255,255,255,255,31,0,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,159,255,255,254,255,255,7,255,255,255,255,255,255,255,255,255,199,1,0,255,223,15,0,255,255,15,0,255,255,15,0,255,223,13,0,255,255,255,255,255,255,207,255,255,1,128,16,255,3,0,0,0,0,255,3,255,255,255,255,255,255,255,255,255,255,255,0,255,255,255,255,255,7,255,255,255,255,255,255,255,255,63,0,255,255,255,31,255,15,255,1,192,255,255,255,255,63,31,0,255,255,255,255,255,15,255,255,255,3,255,3,0,0,0,0,255,255,255,15,255,255,255,255,255,255,255,127,254,255,31,0,255,3,255,3,128,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,239,255,239,15,255,3,0,0,0,0,255,255,255,255,255,243,255,255,255,255,255,255,191,255,3,0,255,255,255,255,255,255,63,0,255,227,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,222,111,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,255,255,63,63,255,255,255,255,63,63,255,170,255,255,255,63,255,255,255,255,255,255,223,95,220,31,207,15,255,31,220,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,128,0,0,255,31,0,0,0,0,0,0,0,0,0,0,0,0,132,252,47,62,80,189,255,243,224,67,0,0,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,255,255,255,255,255,255,3,0,0,255,255,255,255,255,127,255,255,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,120,12,0,255,255,255,255,191,32,255,255,255,255,255,255,255,128,0,0,255,255,127,0,127,127,127,127,127,127,127,127,255,255,255,255,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,0,0,0,254,3,62,31,254,255,255,255,255,255,255,255,255,255,127,224,254,255,255,255,255,255,255,255,255,255,255,247,224,255,255,255,255,63,254,255,255,255,255,255,255,255,255,255,255,127,0,0,255,255,255,7,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,0,0,0,0,0,0,255,255,255,255,255,63,255,31,255,255,255,15,0,0,255,255,255,255,255,127,240,143,255,255,255,128,255,255,255,255,255,255,255,255,255,255,0,0,0,0,128,255,252,255,255,255,255,255,255,255,255,255,255,255,255,121,15,0,255,7,0,0,0,0,0,0,0,0,0,255,187,247,255,255,255,0,0,0,255,255,255,255,255,255,15,0,255,255,255,255,255,255,255,255,15,0,255,3,0,0,252,8,255,255,255,255,255,7,255,255,255,255,7,0,255,255,255,31,255,255,255,255,255,255,247,255,0,128,255,3,0,0,0,0,255,255,255,255,255,255,127,0,255,63,255,3,255,255,127,4,255,255,255,255,255,255,255,127,5,0,0,56,255,255,60,0,126,126,126,0,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,7,255,3,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,255,127,248,255,255,255,255,255,15,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,0,127,0,248,224,255,253,127,95,219,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,248,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,255,255,255,255,255,255,255,255,252,255,255,255,255,255,255,0,0,0,0,0,255,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,255,3,254,255,255,7,254,255,255,7,192,255,255,255,255,255,255,255,255,255,255,127,252,252,252,28,0,0,0,0,255,239,255,255,127,255,255,183,255,63,255,63,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,7,0,0,0,0,0,0,0,0,255,255,255,255,255,255,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,31,255,255,255,255,255,255,1,0,0,0,0,0,255,255,255,127,0,0,255,255,255,7,0,0,0,0,0,0,255,255,255,63,255,255,255,255,15,255,62,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255,3,0,0,0,0,0,0,0,0,0,0,63,253,255,255,255,255,191,145,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,63,0,255,255,255,3,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,192,0,0,0,0,0,0,0,0,111,240,239,254,255,255,15,0,0,0,0,0,255,255,255,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,63,0,255,255,63,0,255,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,192,255,0,0,252,255,255,255,255,255,255,1,0,0,255,255,255,1,255,3,255,255,255,255,255,255,199,255,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,30,0,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,63,0,255,3,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,31,0,255,255,255,255,255,127,0,0,248,255,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,223,255,255,255,255,255,255,255,255,223,100,222,255,235,239,255,255,255,255,255,255,255,191,231,223,223,255,255,255,123,95,252,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255,255,255,253,255,255,247,255,255,255,247,255,255,223,255,255,255,223,255,255,127,255,255,255,127,255,255,255,253,255,255,255,253,255,255,247,207,255,255,255,255,255,255,239,255,255,255,150,254,247,10,132,234,150,170,150,247,247,94,255,251,255,15,238,251,255,15,0,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,115,105,103,110,97,108,0,72,97,110,103,117,112,0,73,110,116,101,114,114,117,112,116,0,81,117,105,116,0,73,108,108,101,103,97,108,32,105,110,115,116,114,117,99,116,105,111,110,0,84,114,97,99,101,47,98,114,101,97,107,112,111,105,110,116,32,116,114,97,112,0,65,98,111,114,116,101,100,0,66,117,115,32,101,114,114,111,114,0,65,114,105,116,104,109,101,116,105,99,32,101,120,99,101,112,116,105,111,110,0,75,105,108,108,101,100,0,85,115,101,114,32,100,101,102,105,110,101,100,32,115,105,103,110,97,108,32,49,0,83,101,103,109,101,110,116,97,116,105,111,110,32,102,97,117,108,116,0,85,115,101,114,32,100,101,102,105,110,101,100,32,115,105,103,110,97,108,32,50,0,66,114,111,107,101,110,32,112,105,112,101,0,65,108,97,114,109,32,99,108,111,99,107,0,84,101,114,109,105,110,97,116,101,100,0,83,116,97,99,107,32,102,97,117,108,116,0,67,104,105,108,100,32,112,114,111,99,101,115,115,32,115,116,97,116,117,115,0,67,111,110,116,105,110,117,101,100,0,83,116,111,112,112,101,100,32,40,115,105,103,110,97,108,41,0,83,116,111,112,112,101,100,0,83,116,111,112,112,101,100,32,40,116,116,121,32,105,110,112,117,116,41,0,83,116,111,112,112,101,100,32,40,116,116,121,32,111,117,116,112,117,116,41,0,85,114,103,101,110,116,32,73,47,79,32,99,111,110,100,105,116,105,111,110,0,67,80,85,32,116,105,109,101,32,108,105,109,105,116,32,101,120,99,101,101,100,101,100,0,70,105,108,101,32,115,105,122,101,32,108,105,109,105,116,32,101,120,99,101,101,100,101,100,0,86,105,114,116,117,97,108,32,116,105,109,101,114,32,101,120,112,105,114,101,100,0,80,114,111,102,105,108,105,110,103,32,116,105,109,101,114,32,101,120,112,105,114,101,100,0,87,105,110,100,111,119,32,99,104,97,110,103,101,100,0,73,47,79,32,112,111,115,115,105,98,108,101,0,80,111,119,101,114,32,102,97,105,108,117,114,101,0,66,97,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,84,51,50,0,82,84,51,51,0,82,84,51,52,0,82,84,51,53,0,82,84,51,54,0,82,84,51,55,0,82,84,51,56,0,82,84,51,57,0,82,84,52,48,0,82,84,52,49,0,82,84,52,50,0,82,84,52,51,0,82,84,52,52,0,82,84,52,53,0,82,84,52,54,0,82,84,52,55,0,82,84,52,56,0,82,84,52,57,0,82,84,53,48,0,82,84,53,49,0,82,84,53,50,0,82,84,53,51,0,82,84,53,52,0,82,84,53,53,0,82,84,53,54,0,82,84,53,55,0,82,84,53,56,0,82,84,53,57,0,82,84,54,48,0,82,84,54,49,0,82,84,54,50,0,82,84,54,51,0,82,84,54,52,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+140862);allocate([101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,72,111,115,116,32,110,111,116,32,102,111,117,110,100,0,84,114,121,32,97,103,97,105,110,0,78,111,110,45,114,101,99,111,118,101,114,97,98,108,101,32,101,114,114,111,114,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,0,85,110,107,110,111,119,110,32,101,114,114,111,114,0,47,101,116,99,47,114,101,115,111,108,118,46,99,111,110,102,0,110,97,109,101,115,101,114,118,101,114,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,0,105,112,54,46,97,114,112,97,0,37,100,46,37,100,46,37,100,46,37,100,46,105,110,45,97,100,100,114,46,97,114,112,97,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,78,65,78,0,116,99,112,0,117,100,112,0,47,112,114,111,99,47,110,101,116,47,105,102,95,105,110,101,116,54,0,114,98,101,0,37,120,32,37,120,32,37,120,32,37,120,32,37,115,0,105,110,102,105,110,105,116,121,0,110,97,110,0,0,0,0,0,0,0,0,0,0,0,255,255,0,37,120,58,37,120,58,37,120,58,37,120,58,37,120,58,37,120,58,37,120,58,37,120,0,37,120,58,37,120,58,37,120,58,37,120,58,37,120,58,37,120,58,37,100,46,37,100,46,37,100,46,37,100,0,58,48,0,37,46,50,88,0,58,37,46,50,88,0,37,100,46,37,100,46,37,100,46,37,100,0,58,32,0,37,115,37,115,37,115,0,116,111,117,112,112,101,114,0,116,111,108,111,119,101,114,0,18,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,16,16,34,35,16,36,37,38,39,40,41,42,43,16,44,45,46,17,47,48,17,17,49,17,17,17,50,51,52,53,54,55,56,57,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,58,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,59,16,60,61,62,63,64,65,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,66,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,67,16,16,68,16,69,70,71,16,72,16,73,16,16,16,16,74,75,76,77,16,16,78,16,79,80,16,16,16,16,81,16,16,16,16,16,16,16,16,16,16,16,16,16,82,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,83,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,84,85,86,87,16,16,88,89,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,90,16,91,92,93,94,95,96,97,98,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,254,255,0,252,1,0,0,248,1,0,0,120,0,0,0,0,255,251,223,251,0,0,128,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,252,255,224,175,255,255,255,255,255,255,255,255,255,255,223,255,255,255,255,255,32,64,176,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,134,254,255,255,255,0,64,73,0,0,0,0,0,24,0,223,255,0,200,0,0,0,0,0,0,0,1,0,60,0,0,0,0,0,0,0,0,0,0,0,0,16,224,1,30,0,96,255,191,0,0,0,0,0,0,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,207,3,0,0,0,3,0,32,255,127,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,0,0,0,16,0,32,30,0,48,0,1,0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,252,15,0,0,0,0,0,0,0,16,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,3,0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,253,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,255,7,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,255,0,0,0,0,0,0,0,16,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,63,2,0,0,0,0,0,0,0,0,0,4,0,0,0,0,16,0,0,0,0,0,0,128,0,128,192,223,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,254,255,255,255,0,252,255,255,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,192,255,223,255,7,0,0,0,0,0,0,0,0,0,0,128,6,0,252,0,0,24,62,0,0,128,191,0,204,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,96,255,255,255,31,0,0,255,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,1,0,0,24,0,0,0,0,0,0,0,0,0,56,0,0,0,0,16,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,254,127,47,0,0,255,3,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,255,255,255,255,0,0,0,192,0,0,0,0,0,0,0,0,1,0,224,159,0,0,0,0,127,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,16,0,0,252,255,255,255,31,0,0,0,0,0,12,0,0,0,0,0,0,64,0,12,240,0,0,0,0,0,0,192,248,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,255,0,255,255,255,33,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,127,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,3,224,0,224,0,224,0,96,128,248,255,255,255,252,255,255,255,255,255,127,31,252,241,127,255,127,0,0,255,255,255,3,0,0,255,255,255,255,1,0,123,3,208,193,175,66,0,12,31,188,255,255,0,0,0,0,0,2,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,255,255,255,127,0,0,0,255,7,0,0,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,252,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,135,3,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,127,255,15,0,0,0,0,0,0,0,0,255,255,255,251,255,255,255,255,255,255,255,255,255,255,15,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,255,15,30,255,255,255,1,252,193,224,0,0,0,0,0,0,0,0,0,0,0,30,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,0,0,0,255,255,255,255,15,0,0,0,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,127,0,0,0,0,0,0,192,0,224,0,0,0,0,0,0,0,0,0,0,0,128,15,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,255,127,0,3,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,8,0,0,0,15,255,3,0,0,0,0,0,0,240,0,0,0,0,0,0,0,0,0,16,192,0,0,255,255,3,7,0,0,0,0,0,248,0,0,0,0,8,128,0,0,0,0,0,0,0,0,0,0,8,0,255,63,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,128,11,0,0,0,0,0,0,0,128,2,0,0,192,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,255,255,255,3,127,0,255,255,255,255,247,255,127,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,254,255,0,252,1,0,0,248,1,0,0,248,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,48,135,255,255,255,255,255,143,255,0,0,0,0,0,0,224,255,255,7,255,15,0,0,0,0,0,0,255,255,255,255,255,63,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,143,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,255,0,255,1,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,63,252,255,63,0,0,0,3,0,0,0,0,0,0,254,3,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,7,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,255,255,255,255,127,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,127,0,255,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,8,0,0,0,8,0,0,32,0,0,0,32,0,0,128,0,0,0,128,0,0,0,2,0,0,0,2,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,255,255,255,255,255,15,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,127,254,127,254,255,254,255,0,0,0,0,255,7,255,255,255,127,255,255,255,255,255,255,255,15,255,255,255,255,255,7,0,0,0,0,0,0,0,0,192,255,255,255,7,0,255,255,255,255,255,7,255,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,1,0,191,255,255,255,255,255,255,255,255,31,255,255,15,0,255,255,255,255,223,7,0,0,255,255,1,0,255,255,255,255,255,255,255,127,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,30,255,255,255,255,255,255,255,63,15,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,255,255,255,255,255,255,255,255,225,255,0,0,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,108,110,117,109,0,97,108,112,104,97,0,98,108,97,110,107,0,99,110,116,114,108,0,100,105,103,105,116,0,103,114,97,112,104,0,108,111,119,101,114,0,112,114,105,110,116,0,112,117,110,99,116,0,115,112,97,99,101,0,117,112,112,101,114,0,120,100,105,103,105,116,0,16,16,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,16,16,32,16,16,16,33,34,35,36,37,38,39,16,16,40,16,16,16,16,16,16,16,16,16,16,16,41,42,16,16,43,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,44,16,45,46,47,48,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,16,50,51,16,52,16,16,16,16,16,16,16,16,53,16,16,16,16,16,54,55,16,16,16,16,56,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,57,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,58,59,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,255,255,255,255,191,182,0,0,0,0,0,0,0,31,0,255,7,0,0,0,0,0,248,255,255,0,0,1,0,0,0,0,0,0,0,0,0,0,0,192,191,159,61,0,0,0,128,2,0,0,0,255,255,255,7,0,0,0,0,0,0,0,0,0,0,192,255,1,0,0,0,0,0,0,248,15,0,0,0,192,251,239,62,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,255,255,127,7,0,0,0,0,0,0,20,254,33,254,0,12,0,0,0,2,0,0,0,0,0,0,16,30,32,0,0,12,0,0,0,6,0,0,0,0,0,0,16,134,57,2,0,0,0,35,0,6,0,0,0,0,0,0,16,190,33,0,0,12,0,0,0,2,0,0,0,0,0,0,144,30,32,64,0,12,0,0,0,4,0,0,0,0,0,0,0,1,32,0,0,0,0,0,0,0,0,0,0,0,0,0,192,193,61,96,0,12,0,0,0,0,0,0,0,0,0,0,144,64,48,0,0,12,0,0,0,0,0,0,0,0,0,0,0,30,32,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,4,92,0,0,0,0,0,0,0,0,0,0,0,242,7,128,127,0,0,0,0,0,0,0,0,0,0,0,0,242,27,0,63,0,0,0,0,0,0,0,0,0,3,0,0,160,2,0,0,0,0,0,0,254,127,223,224,255,254,255,255,255,31,64,0,0,0,0,0,0,0,0,0,0,0,0,224,253,102,0,0,0,195,1,0,30,0,100,32,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,28,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,176,63,64,254,15,32,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,1,4,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,1,0,0,0,0,0,0,64,127,229,31,248,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,208,23,4,0,0,0,0,248,15,0,3,0,0,0,60,11,0,0,0,0,0,0,64,163,3,0,0,0,0,0,0,240,207,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247,255,253,33,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,127,0,0,240,0,248,0,0,0,124,0,0,0,0,0,0,31,252,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,247,63,0,0,0,128,0,0,0,0,0,0,0,0,0,0,3,0,68,8,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,255,255,3,0,0,0,0,0,192,63,0,0,128,255,3,0,0,0,0,0,7,0,0,0,0,0,200,19,0,0,0,0,0,0,0,0,0,0,0,0,0,126,102,0,8,16,0,0,0,0,0,0,0,0,0,0,0,0,157,193,2,0,0,0,0,48,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,33,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,110,240,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,255,127,0,0,0,0,0,0,0,3,0,0,0,0,0,120,38,0,0,0,0,0,0,0,0,7,0,0,0,128,239,31,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,192,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,3,248,255,231,15,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,19,16,16,16,16,16,16,16,16,16,16,20,21,22,23,24,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,25,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,26,16,16,16,16,27,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,28,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,16,16,16,29,30,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,31,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,32,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,248,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,251,255,255,255,255,255,255,255,255,255,255,15,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,255,15,255,255,255,255,255,255,255,127,254,255,255,255,255,255,255,255,255,255,127,254,255,255,255,255,255,255,255,255,255,255,255,255,224,255,255,255,255,63,254,255,255,255,255,255,255,255,255,255,255,127,255,255,255,255,255,7,255,255,255,255,15,0,255,255,255,255,255,127,255,255,255,255,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,255,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,255,127,248,255,255,255,255,255,15,0,0,255,3,0,0,255,255,255,255,247,255,127,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,255,255,255,255,255,7,255,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,111,32,101,114,114,111,114,0,78,111,32,109,97,116,99,104,0,73,110,118,97,108,105,100,32,114,101,103,101,120,112,0,85,110,107,110,111,119,110,32,99,111,108,108,97,116,105,110,103,32,101,108,101,109,101,110,116,0,85,110,107,110,111,119,110,32,99,104,97,114,97,99,116,101,114,32,99,108,97,115,115,32,110,97,109,101,0,84,114,97,105,108,105,110,103,32,98,97,99,107,115,108,97,115,104,0,73,110,118,97,108,105,100,32,98,97,99,107,32,114,101,102,101,114,101,110,99,101,0,77,105,115,115,105,110,103,32,39,93,39,0,77,105,115,115,105,110,103,32,39,41,39,0,77,105,115,115,105,110,103,32,39,125,39,0,73,110,118,97,108,105,100,32,99,111,110,116,101,110,116,115,32,111,102,32,123,125,0,73,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,32,114,97,110,103,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,112,101,116,105,116,105,111,110,32,110,111,116,32,112,114,101,99,101,100,101,100,32,98,121,32,118,97,108,105,100,32,101,120,112,114,101,115,115,105,111,110,0,0,85,110,107,110,111,119,110,32,101,114,114,111,114,0,37,115,0,9,0,13,0,12,0,7,0,27,0,91,91,58,97,108,110,117,109,58,93,95,93,0,91,94,91,58,97,108,110,117,109,58,93,95,93,0,91,91,58,115,112,97,99,101,58,93,93,0,91,94,91,58,115,112,97,99,101,58,93,93,0,91,91,58,100,105,103,105,116,58,93,93,0,91,94,91,58,100,105,103,105,116,58,93,93,0,37,46,42,102,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,37,46,42,101,0,37,46,42,103,0,109,101,115,115,97,103,101,115,0,67,46,85,84,70,45,56,0,37,42,46,42,102,0,67,0,80,79,83,73,88,0,94,91,121,89,93,0,94,91,110,78,93,0,121,101,115,0,110,111,0,83,117,110,0,77,111,110,0,84,117,101,0,87,101,100,0,84,104,117,0,70,114,105,0,83,97,116,0,83,117,110,100,97,121,0,77,111,110,100,97,121,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,84,104,117,114,115,100,97,121,0,70,114,105,100,97,121,0,83,97,116,117,114,100,97,121,0,74,97,110,0,70,101,98,0,77,97,114,0,65,112,114,0,77,97,121,0,74,117,110,0,74,117,108,0,65,117,103,0,83,101,112,0,79,99,116,0,78,111,118,0,68,101,99,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,77,97,114,99,104,0,65,112,114,105,108,0,77,97,121,0,74,117,110,101,0,74,117,108,121,0,65,117,103,117,115,116,0,83,101,112,116,101,109,98,101,114,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,68,101,99,101,109,98,101,114,0,65,77,0,80,77,0,37,97,32,37,98,32,37,101,32,37,84,32,37,89,0,37,109,47,37,100,47,37,121,0,37,72,58,37,77,58,37,83,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,37,109,47,37,100,47,37,121,0,48,49,50,51,52,53,54,55,56,57,0,37,97,32,37,98,32,37,101,32,37,84,32,37,89,0,37,72,58,37,77,58,37,83,0,46,0,0,85,84,70,45,56,0,117,116,102,56,0,0,200,119,99,104,97,114,116,0,0,198,117,99,115,50,0,117,99,115,50,98,101,0,0,196,117,99,115,50,108,101,0,0,197,117,116,102,49,54,0,117,116,102,49,54,98,101,0,0,194,117,116,102,49,54,108,101,0,0,193,117,99,115,52,0,117,99,115,52,98,101,0,117,116,102,51,50,0,117,116,102,51,50,98,101,0,0,192,117,99,115,52,108,101,0,117,116,102,51,50,108,101,0,0,195,97,115,99,105,105,0,117,115,97,115,99,105,105,0,105,115,111,54,52,54,0,105,115,111,54,52,54,117,115,0,0,199,101,117,99,106,112,0,0,208,115,104,105,102,116,106,105,115,0,115,106,105,115,0,0,209,103,98,49,56,48,51,48,0,0,216,103,98,107,0,0,217,103,98,50,51,49,50,0,0,218,98,105,103,53,0,98,105,103,102,105,118,101,0,99,112,57,53,48,0,98,105,103,53,104,107,115,99,115,0,0,224,101,117,99,107,114,0,107,115,99,53,54,48,49,0,107,115,120,49,48,48,49,0,99,112,57,52,57,0,0,232,105,115,111,56,56,53,57,49,0,108,97,116,105,110,49,0,0,128,105,115,111,56,56,53,57,50,0,0,32,0,84,0,137,18,0,32,1,6,0,0,152,65,134,26,127,0,48,72,32,0,88,32,201,18,0,36,17,198,35,0,156,81,198,26,128,80,66,136,32,90,0,0,192,4,0,16,113,1,0,29,0,112,2,0,41,0,0,192,7,33,48,1,5,0,0,88,1,0,0,94,208,1,128,29,0,0,128,6,0,91,0,0,0,5,0,20,129,1,0,30,0,128,2,0,42,0,0,0,8,34,52,17,5,0,0,92,1,0,0,95,212,1,192,29,0,0,144,70,36,105,115,111,56,56,53,57,51,0,0,32,0,212,0,9,0,0,4,48,3,0,0,244,64,70,11,63,0,16,64,32,0,216,0,0,0,0,0,64,3,0,0,248,80,134,11,64,0,16,128,32,0,0,0,64,0,0,108,144,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,188,0,0,0,43,0,0,0,0,0,200,33,6,0,0,0,0,64,0,0,112,160,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,192,0,0,0,44,0,0,0,0,0,204,49,70,36,105,115,111,56,56,53,57,52,0,0,32,0,84,48,4,23,0,220,96,4,0,0,152,49,66,12,108,0,48,8,0,0,88,32,73,23,0,224,112,196,35,0,156,65,130,12,109,72,65,200,20,17,0,0,0,0,0,0,0,192,14,29,0,112,2,0,37,0,0,64,14,33,56,65,69,16,0,0,0,0,0,0,224,1,0,0,0,184,1,7,0,18,0,0,0,0,0,0,0,0,15,30,0,128,2,0,38,0,0,128,14,34,60,81,133,16,0,0,0,0,0,0,228,1,0,0,0,188,17,71,36,105,115,111,56,56,53,57,53,0,0,32,0,136,51,14,57,229,152,115,14,58,233,168,179,14,59,237,0,224,206,59,240,196,35,207,60,244,212,99,207,61,248,228,163,207,62,252,244,227,207,63,0,5,36,208,64,4,21,100,208,65,8,37,164,208,66,12,53,228,208,67,16,69,36,209,68,20,85,100,209,69,24,101,164,209,70,28,117,228,209,71,32,133,36,210,72,36,149,100,210,73,40,165,164,210,74,44,181,228,210,75,53,194,20,147,76,51,209,84,147,77,55,225,148,147,78,59,13,192,83,79,105,115,111,56,56,53,57,54,0,0,32,0,4,16,64,0,0,4,16,64,0,1,4,16,64,0,115,1,16,64,0,1,4,16,64,0,1,4,16,64,0,1,4,16,0,93,1,4,16,64,93,1,216,117,23,94,121,233,181,23,95,125,249,245,23,96,129,9,54,24,97,133,25,118,24,98,137,41,182,24,99,141,57,246,88,0,1,4,16,64,0,144,69,38,217,100,148,85,102,217,101,152,101,166,217,102,156,117,230,217,103,160,133,38,90,0,1,4,16,64,0,1,4,16,64,0,1,4,16,64,0,105,115,111,56,56,53,57,55,0,0,32,0,144,88,34,0,51,210,8,0,0,0,0,160,9,0,0,0,16,128,136,0,0,0,0,0,155,112,210,9,0,158,124,2,10,0,161,0,32,202,40,164,148,98,202,41,168,164,162,202,42,172,180,226,202,43,176,196,34,203,44,180,212,18,128,45,183,224,146,139,46,187,240,210,139,47,191,0,19,140,48,195,16,83,140,49,199,32,147,140,50,203,48,211,140,51,207,64,19,141,52,211,80,83,141,53,215,96,147,141,54,219,112,211,141,55,223,128,19,78,0,105,115,111,56,56,53,57,56,0,0,32,0,4,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,0,0,0,64,0,1,4,16,64,0,1,4,16,64,0,1,4,16,64,0,1,4,16,64,0,1,4,16,64,0,1,4,16,64,0,1,4,16,64,0,1,4,16,192,136,83,81,85,149,85,87,97,149,149,86,91,113,213,149,87,95,129,21,150,88,99,145,85,150,89,103,161,149,150,90,107,177,213,86,0,1,120,248,97,0,105,115,111,56,56,53,57,57,0,0,80,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,64,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,80,6,0,105,115,111,56,56,53,57,49,48,0,0,32,0,84,48,66,12,57,220,16,4,0,70,132,96,6,27,131,0,0,135,20,0,88,64,130,12,58,224,32,4,0,71,136,112,70,27,132,136],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+151102);allocate([24,199,20,17,0,0,0,0,0,0,0,192,14,29,0,112,2,0,37,0,0,0,0,0,56,65,5,0,0,0,0,128,27,0,224,1,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,15,30,0,128,2,0,38,0,0,0,0,0,60,81,5,0,0,0,0,192,27,0,228,1,0,0,0,0,0,192,16,105,115,111,56,56,53,57,49,49,0,116,105,115,54,50,48,0,0,32,0,188,6,91,108,178,205,70,91,109,182,221,134,91,110,186,237,198,91,111,190,253,6,92,112,194,13,71,92,113,198,29,135,92,114,202,45,199,92,115,206,61,7,93,116,210,77,71,93,117,214,93,135,93,118,218,109,199,93,119,222,125,7,94,120,226,141,71,94,121,230,157,135,94,0,1,4,16,64,122,234,173,199,94,123,238,189,7,95,124,242,205,71,95,125,246,221,135,95,126,250,237,199,95,127,254,253,7,96,128,2,14,72,96,129,1,4,16,64,0,105,115,111,56,56,53,57,49,51,0,0,32,0,160,8,0,0,0,164,8,0,0,13,0,192,5,0,0,0,0,192,2,0,0,0,0,0,39,2,0,0,0,16,0,208,5,0,0,0,0,128,3,21,236,16,193,5,0,0,112,194,8,29,0,240,71,9,49,4,145,131,17,102,48,225,4,0,84,0,0,0,0,120,40,1,6,28,0,4,50,8,0,22,240,32,1,6,0,0,128,2,9,30,0,0,136,9,50,8,161,195,17,103,52,241,4,0,85,0,0,0,0,121,44,17,70,28,0,8,66,72,137,105,115,111,56,56,53,57,49,52,0,0,32,0,24,120,32,0,27,112,128,32,0,20,2,96,97,130,26,2,0,128,31,10,46,248,2,12,12,54,8,128,131,21,62,120,33,132,27,98,152,97,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,128,132,0,0,0,0,0,0,0,192,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,0,0,0,0,0,0,0,192,132,0,0,0,0,0,0,0,208,7,0,105,115,111,56,56,53,57,49,53,0,108,97,116,105,110,57,0,0,36,51,2,96,6,0,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,0,0,0,132,0,0,0,0,88,100,225,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,115,111,56,56,53,57,49,54,0,0,32,0,84,96,129,18,51,166,104,6,0,103,0,160,8,0,127,0,0,72,32,0,0,208,193,18,131,160,8,0,0,132,120,176,8,0,88,100,225,135,32,0,0,0,192,4,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,33,48,1,0,0,0,88,1,0,24,118,0,0,0,0,0,156,192,8,0,0,0,0,0,5,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,34,52,1,0,0,0,92,1,64,24,119,0,0,0,0,0,160,208,8,0,99,112,49,50,53,48,0,119,105,110,100,111,119,115,49,50,53,48,0,0,0,51,6,96,98,0,41,182,168,226,138,1,184,104,198,139,96,168,49,200,31,1,144,88,226,137,40,178,8,98,136,1,216,120,6,140,97,172,65,8,32,0,60,2,137,18,0,84,0,0,0,0,0,64,6,0,0,0,0,64,32,0,0,32,201,18,0,0,0,0,0,0,88,80,6,0,72,80,146,132,32,90,0,0,192,4,0,16,113,1,0,29,0,112,2,0,41,0,0,192,7,33,48,1,5,0,0,88,1,0,0,94,208,1,128,29,0,0,128,6,0,91,0,0,0,5,0,20,129,1,0,30,0,128,2,0,42,0,0,0,8,34,52,17,5,0,0,92,1,0,0,95,212,1,192,29,0,0,144,70,36,99,112,49,50,53,49,0,119,105,110,100,111,119,115,49,50,53,49,0,0,0,227,144,99,162,76,41,182,168,226,138,51,186,168,206,139,235,180,195,206,59,49,145,88,226,137,40,178,8,98,136,1,216,136,19,140,57,237,164,83,79,0,184,195,83,58,0,248,4,0,0,226,0,80,14,0,0,0,0,0,58,0,0,112,78,77,63,1,0,0,0,48,213,56,19,0,55,153,67,147,77,240,196,35,207,60,244,212,99,207,61,248,228,163,207,62,252,244,227,207,63,0,5,36,208,64,4,21,100,208,65,8,37,164,208,66,12,53,228,208,67,16,69,36,209,68,20,85,100,209,69,24,101,164,209,70,28,117,228,209,71,32,133,36,210,72,36,149,100,210,73,40,165,164,210,74,44,181,228,210,75,99,112,49,50,53,50,0,119,105,110,100,111,119,115,49,50,53,50,0,0,0,51,6,96,98,33,41,182,168,226,138,142,184,104,198,139,88,4,48,72,0,1,144,88,226,137,40,178,8,98,136,147,216,120,6,140,89,4,64,136,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,112,49,50,53,51,0,119,105,110,100,111,119,115,49,50,53,51,0,0,0,51,6,96,98,33,41,182,168,226,138,1,184,24,192,139,1,4,16,64,0,1,144,88,226,137,40,178,8,98,136,1,216,24,0,140,1,4,16,64,0,0,112,210,9,0,0,0,0,0,0,0,0,16,0,0,0,0,0,128,136,0,0,0,0,0,155,0,0,0,0,158,124,2,10,0,161,0,32,202,40,164,148,98,202,41,168,164,162,202,42,172,180,226,202,43,176,196,34,203,44,180,212,18,128,45,183,224,146,139,46,187,240,210,139,47,191,0,19,140,48,195,16,83,140,49,199,32,147,140,50,203,48,211,140,51,207,64,19,141,52,211,80,83,141,53,215,96,147,141,54,219,112,211,141,55,223,128,19,78,0,99,112,49,50,53,52,0,119,105,110,100,111,119,115,49,50,53,52,0,0,0,51,6,96,98,33,41,182,168,226,138,142,184,104,198,139,88,4,16,64,0,1,144,88,226,137,40,178,8,98,136,147,216,120,6,140,89,4,16,128,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,64,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,80,6,0,99,112,49,50,53,53,0,119,105,110,100,111,119,115,49,50,53,53,0,0,0,51,6,96,98,33,41,182,168,226,138,142,184,24,192,139,1,4,16,64,0,1,144,88,226,137,40,178,8,98,136,147,216,24,0,140,1,4,16,64,0,0,0,0,0,0,49,2,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,0,0,0,0,0,64,5,37,212,80,68,21,101,212,81,72,37,21,128,82,75,49,213,148,83,79,65,21,149,84,110,189,5,87,92,114,5,16,64,0,1,4,16,64,0,83,81,85,149,85,87,97,149,149,86,91,113,213,149,87,95,129,21,150,88,99,145,85,150,89,103,161,149,150,90,107,177,213,86,0,1,120,248,97,0,99,112,49,50,53,54,0,119,105,110,100,111,119,115,49,50,53,54,0,0,0,51,146,102,98,33,41,182,168,226,138,142,184,56,218,139,88,148,134,154,105,170,145,88,226,137,40,178,8,98,136,169,217,120,26,140,89,112,216,225,106,0,204,5,0,0,0,0,0,0,0,0,0,192,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,23,0,0,0,0,64,93,173,217,117,23,94,121,233,181,23,95,125,249,245,23,96,129,9,54,24,97,133,25,118,24,98,137,41,182,24,0,140,53,230,216,99,144,69,38,217,100,0,80,6,64,101,150,93,134,25,0,0,0,0,0,0,153,105,6,0,0,155,113,214,153,103,0,124,6,26,0,161,1,32,26,0,0,120,248,161,107,99,112,49,50,53,55,0,119,105,110,100,111,119,115,49,50,53,55,0,0,0,51,6,96,98,0,41,182,168,226,138,1,184,24,192,139,1,16,240,136,2,1,144,88,226,137,40,178,8,98,136,1,216,24,0,140,1,24,32,73,0,0,4,0,0,0,0,4,0,0,0,13,0,192,5,0,0,0,0,192,2,0,0,0,0,0,0,0,0,0,0,16,0,208,5,0,0,0,0,128,3,21,236,16,193,5,0,0,112,194,8,29,0,240,71,9,49,4,145,131,17,102,48,225,4,0,84,0,0,0,0,120,40,1,6,28,0,4,50,8,0,22,240,32,1,6,0,0,128,2,9,30,0,0,136,9,50,8,161,195,17,103,52,241,4,0,85,0,0,0,0,121,44,17,70,28,0,8,66,72,36,99,112,49,50,53,56,0,119,105,110,100,111,119,115,49,50,53,56,0,0,0,51,6,96,98,33,41,182,168,226,138,142,184,24,192,139,88,4,16,64,0,1,144,88,226,137,40,178,8,98,136,147,216,24,0,140,89,4,16,128,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,4,0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,33,0,128,9,0,0,24,2,0,0,0,0,0,0,0,0,32,114,9,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,150,0,0,0,0,34,0,144,9,0,0,28,2,0,0,0,0,0,0,0,0,36,34,35,0,107,111,105,56,114,0,0,0,62,254,8,100,144,66,14,73,100,145,70,30,137,164,153,103,162,153,166,154,107,178,217,38,143,110,222,136,99,142,58,238,40,64,143,7,32,144,192,3,73,42,185,36,76,76,54,233,228,147,80,70,41,229,148,84,86,105,229,149,88,102,169,165,56,91,114,217,165,151,95,130,25,166,152,99,146,89,102,1,46,65,20,145,73,20,85,68,210,68,37,97,148,145,70,27,113,212,145,71,31,189,4,82,72,34,141,100,145,68,44,173,116,17,74,45,165,116,146,74,14,193,19,143,65,244,212,67,208,60,5,225,147,143,62,251,240,211,143,63,255,60,4,80,64,2,13,100,143,60,12,45,116,15,66,13,37,116,144,66,107,111,105,56,117,0,0,0,62,254,8,100,144,66,14,73,100,145,70,30,137,164,153,103,162,153,166,154,107,178,217,38,143,110,222,136,99,142,58,238,40,64,143,7,32,144,192,3,73,42,185,36,76,51,53,89,147,77,80,70,41,229,148,84,254,100,229,149,88,102,169,165,56,229,112,121,14,58,95,130,25,166,152,99,250,84,102,1,46,65,20,145,73,20,85,68,210,68,37,97,148,145,70,27,113,212,145,71,31,189,4,82,72,34,141,100,145,68,44,173,116,17,74,45,165,116,146,74,14,193,19,143,65,244,212,67,208,60,5,225,147,143,62,251,240,211,143,63,255,60,4,80,64,2,13,100,143,60,12,45,116,15,66,13,37,116,144,66,0,8,4,4,8,4,4,8,2,4,0,195,138,204,132,195,138,204,140,195,170,204,132,195,170,204,140,0,1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1,95,48,46,46,46,47,57,90,122,0,128,120,0,128,255,128,1,32,127,129,128,128,13,10,255,127,32,129,32,116,101,115,116,0,95,48,46,46,46,47,57,90,122,88,55,105,83,74,78,100,50,49,115,85,0,128,120,50,50,47,119,75,53,50,90,75,71,65,0,120,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,54,55,56,57,58,59,60,61,62,63,64,64,64,64,64,64,64,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,64,64,64,64,64,64,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,64,64,64,64,64,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,0,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,0,36,50,97,36,48,48,36,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,117,0,56,98,32,208,193,210,207,204,216,0,86,85,114,80,109,88,68,54,113,47,110,86,83,83,112,55,112,78,68,104,67,82,57,48,55,49,73,102,73,82,101,0,85,0,105,49,68,55,48,57,118,102,97,109,117,108,105,109,108,71,99,113,48,113,113,51,85,118,117,85,97,115,118,69,97,0,85,0,255,163,51,52,255,255,255,163,51,52,53,0,36,54,36,0,36,54,36,37,115,37,46,42,115,36,0,0,21,42,22,43,1,44,2,23,3,24,45,25,46,4,47,5,26,6,27,48,28,49,7,50,8,29,9,30,51,31,52,10,53,11,32,12,33,54,34,55,13,56,14,35,15,36,57,37,58,16,59,17,38,18,39,60,40,61,19,62,20,41,88,121,48,49,64,35,1,2,128,127,255,13,10,129,9,32,33,0,36,54,36,114,111,117,110,100,115,61,49,50,51,52,36,97,98,99,48,49,50,51,52,53,54,55,56,57,36,0,36,54,36,114,111,117,110,100,115,61,49,50,51,52,36,97,98,99,48,49,50,51,52,53,54,55,56,57,36,66,67,112,116,56,122,76,114,99,47,82,99,121,117,88,109,67,68,79,69,49,65,76,113,77,88,66,50,77,72,54,110,49,103,56,57,49,72,104,70,106,56,46,119,55,76,120,71,118,46,70,84,107,113,113,54,86,120,99,47,107,109,51,89,48,106,69,48,106,50,52,106,89,53,80,73,118,47,111,79,117,54,114,101,103,49,0,36,49,36,0,0,6,12,1,7,13,2,8,14,3,9,15,4,10,5,88,121,48,49,64,35,1,2,128,127,255,13,10,129,9,32,33,0,36,49,36,97,98,99,100,48,49,50,51,36,0,36,49,36,97,98,99,100,48,49,50,51,36,57,81,99,103,56,68,121,118,105,101,107,86,51,116,68,71,77,90,121,110,74,49,0,36,53,36,0,114,111,117,110,100,115,61,0,114,111,117,110,100,115,61,37,117,36,0,36,53,36,37,115,37,46,42,115,36,0,0,10,20,21,1,11,12,22,2,3,13,23,24,4,14,15,25,5,6,16,26,27,7,17,18,28,8,9,19,29,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,88,121,48,49,64,35,1,2,128,127,255,13,10,129,9,32,33,0,36,53,36,114,111,117,110,100,115,61,49,50,51,52,36,97,98,99,48,49,50,51,52,53,54,55,56,57,36,0,36,53,36,114,111,117,110,100,115,61,49,50,51,52,36,97,98,99,48,49,50,51,52,53,54,55,56,57,36,51,86,102,68,106,80,116,48,53,86,72,70,110,52,55,67,47,111,106,70,90,54,75,82,80,89,114,79,106,106,49,108,76,98,72,46,100,107,70,51,98,90,54,0,42,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,37,46,42,115,0,35,0,43,0,45,0,32,0,48,0,76,0,0,106,76,76,76,0,106,0,0,0,0,0,106,106,0,0,0,0,106,0,0,106,37,37,37,115,37,115,37,115,37,115,37,115,42,46,42,37,99,37,99,0,116,101,109,112,0,37,115,47,37,115,45,37,100,45,37,100,45,37,120,0,104,104,0,104,0,0,0,0,0,108,0,0,76,0,0,108,108,0,37,46,42,115,37,46,48,100,37,115,37,99,37,37,108,108,110,0,37,42,0,47,116,109,112,0,47,116,109,112,47,116,37,120,45,37,120,0,114,119,97,0,119,43,0,47,100,101,118,47,112,116,109,120,0,47,100,101,118,47,112,116,115,47,37,100,0,37,98,32,37,101,32,37,84,0,91,0,93,0,60,37,100,62,37,115,32,37,115,37,115,37,46,48,100,37,115,58,32,0,58,32,105,108,108,101,103,97,108,32,111,112,116,105,111,110,58,32,0,10,0,58,32,111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,58,32,0,47,0,80,87,68,0,46,0,50,62,47,100,101,118,47,110,117,108,108,0,47,98,105,110,47,115,104,0,115,104,0,45,99,0,101,118,97,108,32,34,112,114,105,110,116,102,32,37,115,92,92,92,92,48,32,120,32,36,49,32,36,50,34,0,114,0,37,42,91,94,10,93,37,42,91,10,93,0,32,37,110,37,42,115,37,110,32,37,110,37,42,115,37,110,32,37,110,37,42,115,37,110,32,37,110,37,42,115,37,110,32,37,100,32,37,100,0,37,115,9,37,115,9,37,115,9,37,115,9,37,100,9,37,100,10,0,109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0,115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0,105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+161342);var tempDoublePtr=STATICTOP;STATICTOP+=16;assert(tempDoublePtr%8==0);function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;else Module.printErr(\"failed to set errno from JS\");return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var Sockets={BUFFER_SIZE:10240,MAX_BUFFER_SIZE:10485760,nextFd:1,fds:{},nextport:1,maxport:65535,peer:null,connections:{},portmap:{},localAddr:4261412874,addrPool:[33554442,50331658,67108874,83886090,100663306,117440522,134217738,150994954,167772170,184549386,201326602,218103818,234881034]};function __inet_pton4_raw(str){var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0}var _htons=undefined;function __inet_pton6_raw(str){var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.indexOf(\"::\")===0){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=parseInt(words[words.length-4])+parseInt(words[words.length-3])*256;words[words.length-3]=parseInt(words[words.length-2])+parseInt(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]===\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]}var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:(function(name){var res=__inet_pton4_raw(name);if(res!==null){return name}res=__inet_pton6_raw(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr}),lookup_addr:(function(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null})};function __inet_ntop4_raw(addr){return(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255)}var _ntohs=undefined;function __inet_ntop6_raw(ints){var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=__inet_ntop4_raw(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str}function __write_sockaddr(sa,family,addr,port){switch(family){case 2:addr=__inet_pton4_raw(addr);HEAP16[sa>>1]=family;HEAP32[sa+4>>2]=addr;HEAP16[sa+2>>1]=_htons(port);break;case 10:addr=__inet_pton6_raw(addr);HEAP32[sa>>2]=family;HEAP32[sa+8>>2]=addr[0];HEAP32[sa+12>>2]=addr[1];HEAP32[sa+16>>2]=addr[2];HEAP32[sa+20>>2]=addr[3];HEAP16[sa+2>>1]=_htons(port);HEAP32[sa+4>>2]=0;HEAP32[sa+24>>2]=0;break;default:return{errno:ERRNO_CODES.EAFNOSUPPORT}}return{}}function _getaddrinfo(node,service,hint,out){var addrs=[];var addr=0;var port=0;var flags=0;var family=0;var type=0;var proto=0;var ai;function allocaddrinfo(family,type,proto,canon,addr,port){var sa,salen,ai;var res;salen=family===10?28:16;addr=family===10?__inet_ntop6_raw(addr):__inet_ntop4_raw(addr);sa=_malloc(salen);res=__write_sockaddr(sa,family,addr,port);assert(!res.errno);ai=_malloc(32);HEAP32[ai+4>>2]=family;HEAP32[ai+8>>2]=type;HEAP32[ai+12>>2]=proto;if(canon){HEAP32[ai+24>>2]=canon}HEAP32[ai+20>>2]=sa;if(family===10){HEAP32[ai+16>>2]=28}else{HEAP32[ai+16>>2]=16}HEAP32[ai+28>>2]=0;return ai}if(hint){flags=HEAP32[hint>>2];family=HEAP32[hint+4>>2];type=HEAP32[hint+8>>2];proto=HEAP32[hint+12>>2]}if(type&&!proto){proto=type===2?17:6}if(!type&&proto){type=proto===17?2:1}if(proto===0){proto=6}if(type===0){type=1}if(!node&&!service){return-2}if(flags&~(1|2|4|1024|8|16|32)){return-1}if(hint!==0&&HEAP32[hint>>2]&2&&!node){return-1}if(flags&32){return-2}if(type!==0&&type!==1&&type!==2){return-7}if(family!==0&&family!==2&&family!==10){return-6}if(service){service=Pointer_stringify(service);port=parseInt(service,10);if(isNaN(port)){if(flags&1024){return-2}return-8}}if(!node){if(family===0){family=2}if((flags&1)===0){if(family===2){addr=_htonl(2130706433)}else{addr=[0,0,0,1]}}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAP32[out>>2]=ai;return 0}node=Pointer_stringify(node);addr=__inet_pton4_raw(node);if(addr!==null){if(family===0||family===2){family=2}else if(family===10&&flags&8){addr=[0,0,_htonl(65535),addr];family=10}else{return-2}}else{addr=__inet_pton6_raw(node);if(addr!==null){if(family===0||family===10){family=10}else{return-2}}}if(addr!=null){ai=allocaddrinfo(family,type,proto,node,addr,port);HEAP32[out>>2]=ai;return 0}if(flags&4){return-2}node=DNS.lookup_name(node);addr=__inet_pton4_raw(node);if(family===0){family=2}else if(family===10){addr=[0,0,_htonl(65535),addr]}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAP32[out>>2]=ai;return 0}function _fork(){___setErrNo(ERRNO_CODES.EAGAIN);return-1}function _posix_spawn(){return _fork.apply(null,arguments)}var ERRNO_MESSAGES={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};var PATH={splitPath:(function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))}),join2:(function(l,r){return PATH.normalize(l+\"/\"+r)}),resolve:(function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter((function(p){return!!p})),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var fd=process.stdin.fd;var usingDevice=false;try{fd=fs.openSync(\"/dev/stdin\",\"r\");usingDevice=true}catch(e){}bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null);if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module[\"print\"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module[\"print\"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module[\"printErr\"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module[\"printErr\"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.buffer.byteLength:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){assert(position===0,\"canOwn must imply no weird position inside the file\");node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!==\"undefined\")return indexedDB;var ret=null;if(typeof window===\"object\")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,\"IDBFS used, but indexedDB not supported\");return ret}),DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains(\"timestamp\")){fileStore.createIndex(\"timestamp\",\"timestamp\",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!==\".\"&&p!==\"..\"}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:\"local\",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readonly\");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index(\"timestamp\");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:\"remote\",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error(\"node type not supported\"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{encoding:\"binary\",canOwn:true})}else{return callback(new Error(\"node type not supported\"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type===\"remote\"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readwrite\");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type===\"local\"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type===\"local\"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,\"/\",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&146)>>1}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsToPermissionStringMap:{0:\"r\",1:\"r+\",2:\"r+\",64:\"r\",65:\"r+\",66:\"r+\",129:\"rx+\",193:\"rx+\",514:\"w+\",577:\"w\",578:\"w+\",705:\"wx\",706:\"wx+\",1024:\"a\",1025:\"a\",1026:\"a+\",1089:\"a\",1090:\"a+\",1153:\"ax\",1154:\"ax+\",1217:\"ax\",1218:\"ax+\",4096:\"rs\",4098:\"rs+\"},flagsToPermissionString:(function(flags){flags&=~32768;flags&=~524288;if(flags in NODEFS.flagsToPermissionStringMap){return NODEFS.flagsToPermissionStringMap[flags]}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\"\",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;var nbuffer=new Buffer(length);var res;try{res=fs.readSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(res>0){for(var i=0;i<res;i++){buffer[offset+i]=nbuffer[i]}}return res}),write:(function(stream,buffer,offset,length,position){var nbuffer=new Buffer(buffer.subarray(offset,offset+length));var res;try{res=fs.writeSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}return res}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,\"/\",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split(\"/\");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join(\"/\");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,curr,WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split(\"/\");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts[\"files\"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts[\"blobs\"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj[\"name\"]),base(obj[\"name\"]),WORKERFS.FILE_MODE,0,obj[\"data\"])}));(mount.opts[\"packages\"]||[]).forEach((function(pack){pack[\"metadata\"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack[\"blob\"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags}),flagsToPermissionString:(function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,\"x\");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,\"wx\")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,\"wx\");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdev:(function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\"w\");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path)}}catch(e){console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path)}catch(e){console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){if(err===ERRNO_CODES.EISDIR)err=ERRNO_CODES.EPERM;throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,\"w\");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module[\"printErr\"](\"read file: \"+path)}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags)}}catch(e){console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message)}return stream}),close:(function(stream){if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=true;if(typeof position===\"undefined\"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=true;if(typeof position===\"undefined\"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path)}catch(e){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"') threw an exception: \"+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";opts.encoding=opts.encoding||\"utf8\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var stream=FS.open(path,opts.flags,opts.mode);if(opts.encoding===\"utf8\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,0,opts.canOwn)}else if(opts.encoding===\"binary\"){FS.write(stream,data,0,data.length,0,opts.canOwn)}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,\"x\");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")}),createDefaultDevices:(function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto!==\"undefined\"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return __webpack_require__(/*! crypto */ \"../node_modules/crypto-browserify/index.js\").randomBytes(1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")}),createSpecialDirectories:(function(){FS.mkdir(\"/proc\");FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:(function(){var node=FS.createNode(\"/proc/self\",\"fd\",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},\"/proc/self/fd\")}),createStandardStreams:(function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",\"r\");assert(stdin.fd===0,\"invalid handle for stdin (\"+stdin.fd+\")\");var stdout=FS.open(\"/dev/stdout\",\"w\");assert(stdout.fd===1,\"invalid handle for stdout (\"+stdout.fd+\")\");var stderr=FS.open(\"/dev/stderr\",\"w\");assert(stderr.fd===2,\"invalid handle for stderr (\"+stderr.fd+\")\")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)this.stack=demangleAll(this.stack)};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS,\"IDBFS\":IDBFS,\"NODEFS\":NODEFS,\"WORKERFS\":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(Module[\"read\"]){try{obj.contents=intArrayFromString(Module[\"read\"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach((function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return\"EM_FS_\"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!==\"/\"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);ret=ret.slice(0,Math.max(0,bufsize));writeStringToMemory(ret,buf,true);return ret.length}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall191(which,varargs){SYSCALLS.varargs=varargs;try{var resource=SYSCALLS.get(),rlim=SYSCALLS.get();HEAP32[rlim>>2]=-1;HEAP32[rlim+4>>2]=-1;HEAP32[rlim+8>>2]=-1;HEAP32[rlim+12>>2]=-1;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall193(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),zero=SYSCALLS.getZero(),length=SYSCALLS.get64();FS.truncate(path,length);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall192(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get(),prot=SYSCALLS.get(),flags=SYSCALLS.get(),fd=SYSCALLS.get(),off=SYSCALLS.get();off<<=12;var ptr;var allocated=false;if(fd===-1){ptr=_malloc(len);if(!ptr)return-ERRNO_CODES.ENOMEM;_memset(ptr,0,len);allocated=true}else{var info=FS.getStream(fd);if(!info)return-ERRNO_CODES.EBADF;var res=FS.mmap(info,HEAPU8,addr,len,off,prot,flags);ptr=res.ptr;allocated=res.allocated}SYSCALLS.mappings[ptr]={malloc:ptr,len:len,allocated:allocated,fd:fd,flags:flags};return ptr}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall195(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),buf=SYSCALLS.get();return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall194(which,varargs){SYSCALLS.varargs=varargs;try{var fd=SYSCALLS.get(),zero=SYSCALLS.getZero(),length=SYSCALLS.get64();FS.ftruncate(fd,length);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall197(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get();return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall196(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),buf=SYSCALLS.get();return SYSCALLS.doStat(FS.lstat,path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall202(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall199(){return ___syscall202.apply(null,arguments)}function ___syscall198(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),owner=SYSCALLS.get(),group=SYSCALLS.get();FS.chown(path,owner,group);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall118(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall296(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),mode=SYSCALLS.get();path=SYSCALLS.calculateAt(dirfd,path);return SYSCALLS.doMkdir(path,mode)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);Runtime.stackRestore(ret)}function _posix_spawn_file_actions_init(){Module[\"printErr\"](\"missing function: posix_spawn_file_actions_init\");abort(-1)}function ___syscall295(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();path=SYSCALLS.calculateAt(dirfd,path);return FS.open(path,flags,mode).fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall298(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),owner=SYSCALLS.get(),group=SYSCALLS.get(),flags=SYSCALLS.get();assert(flags===0);path=SYSCALLS.calculateAt(dirfd,path);FS.chown(path,owner,group);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall299(which,varargs){SYSCALLS.varargs=varargs;try{abort(\"futimesat is obsolete\")}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall114(which,varargs){SYSCALLS.varargs=varargs;try{abort(\"cannot wait on child processes\")}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall218(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.ENOSYS}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall219(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall51(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.ENOSYS}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall211(which,varargs){SYSCALLS.varargs=varargs;try{var ruid=SYSCALLS.get(),euid=SYSCALLS.get(),suid=SYSCALLS.get();HEAP32[ruid>>2]=0;HEAP32[euid>>2]=0;HEAP32[suid>>2]=0;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21506:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var PROCINFO={ppid:1,pid:42,sid:42,pgid:42};function ___syscall57(which,varargs){SYSCALLS.varargs=varargs;try{var pid=SYSCALLS.get(),pgid=SYSCALLS.get();if(pid&&pid!==PROCINFO.pid)return-ERRNO_CODES.ESRCH;if(pgid&&pgid!==PROCINFO.pgid)return-ERRNO_CODES.EPERM;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall39(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),mode=SYSCALLS.get();return SYSCALLS.doMkdir(path,mode)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall38(which,varargs){SYSCALLS.varargs=varargs;try{var old_path=SYSCALLS.getStr(),new_path=SYSCALLS.getStr();FS.rename(old_path,new_path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___muldc3(){Module[\"printErr\"](\"missing function: __muldc3\");abort(-1)}function ___syscall33(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),amode=SYSCALLS.get();return SYSCALLS.doAccess(path,amode)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _pthread_cleanup_push(routine,arg){__ATEXIT__.push((function(){Runtime.dynCall(\"vi\",routine,[arg])}));_pthread_cleanup_push.level=__ATEXIT__.length}function ___syscall36(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall34(which,varargs){SYSCALLS.varargs=varargs;try{var inc=SYSCALLS.get();return-ERRNO_CODES.EPERM}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module[\"_memcpy\"]=_memcpy;function _execl(){___setErrNo(ERRNO_CODES.ENOEXEC);return-1}function ___block_all_sigs(){Module[\"printErr\"](\"missing function: __block_all_sigs\");abort(-1)}Module[\"_memmove\"]=_memmove;function ___syscall306(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),mode=SYSCALLS.get(),flags=SYSCALLS.get();assert(flags===0);path=SYSCALLS.calculateAt(dirfd,path);FS.chmod(path,mode);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall205(which,varargs){SYSCALLS.varargs=varargs;try{var size=SYSCALLS.get(),list=SYSCALLS.get();if(size<1)return-ERRNO_CODES.EINVAL;HEAP32[list>>2]=0;return 1}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall214(which,varargs){SYSCALLS.varargs=varargs;try{var uid=SYSCALLS.get();if(uid!==0)return-ERRNO_CODES.EPERM;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall204(){return ___syscall214.apply(null,arguments)}function ___syscall207(which,varargs){SYSCALLS.varargs=varargs;try{var fd=SYSCALLS.get(),owner=SYSCALLS.get(),group=SYSCALLS.get();FS.fchown(fd,owner,group);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall201(){return ___syscall202.apply(null,arguments)}function ___syscall200(){return ___syscall202.apply(null,arguments)}function ___syscall203(){return ___syscall214.apply(null,arguments)}function _kill(pid,sig){Module.printErr(\"Calling stub instead of kill()\");___setErrNo(ERRNO_CODES.EPERM);return-1}function ___syscall42(){return ___syscall51.apply(null,arguments)}Module[\"_round\"]=_round;function ___syscall40(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.rmdir(path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall163(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.ENOMEM}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall29(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.EINTR}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _endgrent(){Module[\"printErr\"](\"missing function: endgrent\");abort(-1)}function _setgrent(){Module[\"printErr\"](\"missing function: setgrent\");abort(-1)}function ___syscall20(which,varargs){SYSCALLS.varargs=varargs;try{return PROCINFO.pid}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module[\"_memset\"]=_memset;function _atexit(func,arg){__ATEXIT__.unshift({func:func,arg:arg})}function ___assert_fail(condition,filename,line,func){ABORT=true;throw\"Assertion failed: \"+Pointer_stringify(condition)+\", at: \"+[filename?Pointer_stringify(filename):\"unknown filename\",line,func?Pointer_stringify(func):\"unknown function\"]+\" at \"+stackTrace()}function ___lock(){}var _llvm_fabs_f32=Math_abs;function _inet_addr(ptr){var addr=__inet_pton4_raw(Pointer_stringify(ptr));if(addr===null){return-1}return addr}function ___syscall272(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___clone(){Module[\"printErr\"](\"missing function: __clone\");abort(-1)}function ___syscall168(which,varargs){SYSCALLS.varargs=varargs;try{var fds=SYSCALLS.get(),nfds=SYSCALLS.get(),timeout=SYSCALLS.get();var nonzero=0;for(var i=0;i<nfds;i++){var pollfd=fds+8*i;var fd=HEAP32[pollfd>>2];var events=HEAP16[pollfd+4>>1];var mask=32;var stream=FS.getStream(fd);if(stream){mask=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){mask=stream.stream_ops.poll(stream)}}mask&=events|8|16;if(mask)nonzero++;HEAP16[pollfd+6>>1]=mask}return nonzero}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _pthread_setcancelstate(){return 0}function ___syscall15(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),mode=SYSCALLS.get();FS.chmod(path,mode);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall14(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),mode=SYSCALLS.get(),dev=SYSCALLS.get();return SYSCALLS.doMknod(path,mode,dev)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall10(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.unlink(path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall12(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.chdir(path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall9(which,varargs){SYSCALLS.varargs=varargs;try{var oldpath=SYSCALLS.get(),newpath=SYSCALLS.get();return-ERRNO_CODES.EMLINK}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall1(which,varargs){SYSCALLS.varargs=varargs;try{var status=SYSCALLS.get();Module[\"exit\"](status);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall3(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get(),count=SYSCALLS.get();return FS.read(stream,HEAP8,buf,count)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall4(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get(),count=SYSCALLS.get();return FS.write(stream,HEAP8,buf,count)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall302(which,varargs){SYSCALLS.varargs=varargs;try{var olddirfd=SYSCALLS.get(),oldpath=SYSCALLS.getStr(),newdirfd=SYSCALLS.get(),newpath=SYSCALLS.getStr();oldpath=SYSCALLS.calculateAt(olddirfd,oldpath);newpath=SYSCALLS.calculateAt(newdirfd,newpath);FS.rename(oldpath,newpath);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());return self.LLVM_SAVEDSTACKS.length-1}function ___syscall(){Module[\"printErr\"](\"missing function: __syscall\");abort(-1)}function ___syscall209(){return ___syscall211.apply(null,arguments)}function ___syscall148(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall308(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.ENOSYS}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall265(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall304(which,varargs){SYSCALLS.varargs=varargs;try{var target=SYSCALLS.get(),newdirfd=SYSCALLS.get(),linkpath=SYSCALLS.get();linkpath=SYSCALLS.calculateAt(newdirfd,linkpath);FS.symlink(target,linkpath);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall305(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),buf=SYSCALLS.get(),bufsize=SYSCALLS.get();path=SYSCALLS.calculateAt(dirfd,path);return SYSCALLS.doReadlink(path,buf,bufsize)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall307(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),amode=SYSCALLS.get(),flags=SYSCALLS.get();assert(flags===0);path=SYSCALLS.calculateAt(dirfd,path);return SYSCALLS.doAccess(path,amode)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall300(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),buf=SYSCALLS.get(),flags=SYSCALLS.get();var nofollow=flags&256;flags=flags&~256;assert(!flags,flags);path=SYSCALLS.calculateAt(dirfd,path);return SYSCALLS.doStat(nofollow?FS.lstat:FS.stat,path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall147(which,varargs){SYSCALLS.varargs=varargs;try{var pid=SYSCALLS.get();if(pid&&pid!==PROCINFO.pid)return-ERRNO_CODES.ESRCH;return PROCINFO.sid}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?Pointer_stringify(tm_zone):\"\"};var pattern=Pointer_stringify(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":(function(date){return WEEKDAYS[date.tm_wday].substring(0,3)}),\"%A\":(function(date){return WEEKDAYS[date.tm_wday]}),\"%b\":(function(date){return MONTHS[date.tm_mon].substring(0,3)}),\"%B\":(function(date){return MONTHS[date.tm_mon]}),\"%C\":(function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)}),\"%d\":(function(date){return leadingNulls(date.tm_mday,2)}),\"%e\":(function(date){return leadingSomething(date.tm_mday,2,\" \")}),\"%g\":(function(date){return getWeekBasedYear(date).toString().substring(2)}),\"%G\":(function(date){return getWeekBasedYear(date)}),\"%H\":(function(date){return leadingNulls(date.tm_hour,2)}),\"%I\":(function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)}),\"%j\":(function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)}),\"%m\":(function(date){return leadingNulls(date.tm_mon+1,2)}),\"%M\":(function(date){return leadingNulls(date.tm_min,2)}),\"%n\":(function(){return\"\\n\"}),\"%p\":(function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}else{return\"PM\"}}),\"%S\":(function(date){return leadingNulls(date.tm_sec,2)}),\"%t\":(function(){return\"\\t\"}),\"%u\":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7}),\"%U\":(function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\"}),\"%V\":(function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return\"53\"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return\"01\"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)}),\"%w\":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()}),\"%W\":(function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\"}),\"%y\":(function(date){return(date.tm_year+1900).toString().substring(2)}),\"%Y\":(function(date){return date.tm_year+1900}),\"%z\":(function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)}),\"%Z\":(function(date){return date.tm_zone}),\"%%\":(function(){return\"%\"})};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function ___syscall303(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.EMLINK}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall64(which,varargs){SYSCALLS.varargs=varargs;try{return PROCINFO.ppid}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module[\"_i64Subtract\"]=_i64Subtract;Module[\"_i64Add\"]=_i64Add;function _emscripten_get_now(){if(!_emscripten_get_now.actual){if(ENVIRONMENT_IS_NODE){_emscripten_get_now.actual=function _emscripten_get_now_actual(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now.actual=dateNow}else if(typeof self===\"object\"&&self[\"performance\"]&&typeof self[\"performance\"][\"now\"]===\"function\"){_emscripten_get_now.actual=function _emscripten_get_now_actual(){return self[\"performance\"][\"now\"]()}}else if(typeof performance===\"object\"&&typeof performance[\"now\"]===\"function\"){_emscripten_get_now.actual=function _emscripten_get_now_actual(){return performance[\"now\"]()}}else{_emscripten_get_now.actual=Date.now}}return _emscripten_get_now.actual()}function _emscripten_get_now_is_monotonic(){return ENVIRONMENT_IS_NODE||typeof dateNow!==\"undefined\"||(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self[\"performance\"]&&self[\"performance\"][\"now\"]}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if(clk_id===1&&_emscripten_get_now_is_monotonic()){now=_emscripten_get_now()}else{___setErrNo(ERRNO_CODES.EINVAL);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}Module[\"_roundf\"]=_roundf;function __read_sockaddr(sa,salen){var family=HEAP16[sa>>1];var port=_ntohs(HEAP16[sa+2>>1]);var addr;switch(family){case 2:if(salen!==16){return{errno:ERRNO_CODES.EINVAL}}addr=HEAP32[sa+4>>2];addr=__inet_ntop4_raw(addr);break;case 10:if(salen!==28){return{errno:ERRNO_CODES.EINVAL}}addr=[HEAP32[sa+8>>2],HEAP32[sa+12>>2],HEAP32[sa+16>>2],HEAP32[sa+20>>2]];addr=__inet_ntop6_raw(addr);break;default:return{errno:ERRNO_CODES.EAFNOSUPPORT}}return{family:family,addr:addr,port:port}}function _getnameinfo(sa,salen,node,nodelen,serv,servlen,flags){var info=__read_sockaddr(sa,salen);if(info.errno){return-6}var port=info.port;var addr=info.addr;if(node&&nodelen){var lookup;if(flags&1||!(lookup=DNS.lookup_addr(addr))){if(flags&8){return-2}}else{addr=lookup}if(addr.length>=nodelen){return-12}writeStringToMemory(addr,node)}if(serv&&servlen){port=\"\"+port;if(port.length>servlen){return-12}writeStringToMemory(port,serv)}return 0}function ___mulsc3(){Module[\"printErr\"](\"missing function: __mulsc3\");abort(-1)}function _usleep(useconds){var msec=useconds/1e3;if((ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self[\"performance\"]&&self[\"performance\"][\"now\"]){var start=self[\"performance\"][\"now\"]();while(self[\"performance\"][\"now\"]()-start<msec){}}else{var start=Date.now();while(Date.now()-start<msec){}}return 0}function _nanosleep(rqtp,rmtp){var seconds=HEAP32[rqtp>>2];var nanoseconds=HEAP32[rqtp+4>>2];if(rmtp!==0){HEAP32[rmtp>>2]=0;HEAP32[rmtp+4>>2]=0}return _usleep(seconds*1e6+nanoseconds/1e3)}function ___syscall94(which,varargs){SYSCALLS.varargs=varargs;try{var fd=SYSCALLS.get(),mode=SYSCALLS.get();FS.fchmod(fd,mode);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall97(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.EPERM}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall96(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall153(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall151(){return ___syscall153.apply(null,arguments)}function ___syscall150(){return ___syscall153.apply(null,arguments)}function ___syscall152(){return ___syscall153.apply(null,arguments)}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _posix_spawn_file_actions_destroy(){Module[\"printErr\"](\"missing function: posix_spawn_file_actions_destroy\");abort(-1)}function ___syscall77(which,varargs){SYSCALLS.varargs=varargs;try{var who=SYSCALLS.get(),usage=SYSCALLS.get();_memset(usage,0,136);HEAP32[usage>>2]=1;HEAP32[usage+4>>2]=2;HEAP32[usage+8>>2]=3;HEAP32[usage+12>>2]=4;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall75(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var _environ=STATICTOP;STATICTOP+=16;var ___environ=_environ;function ___buildEnvironment(env){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV[\"USER\"]=ENV[\"LOGNAME\"]=\"web_user\";ENV[\"PATH\"]=\"/\";ENV[\"PWD\"]=\"/\";ENV[\"HOME\"]=\"/home/web_user\";ENV[\"LANG\"]=\"C\";ENV[\"_\"]=Module[\"thisProgram\"];poolPtr=allocate(TOTAL_ENV_SIZE,\"i8\",ALLOC_STATIC);envPtr=allocate(MAX_ENV_VALUES*4,\"i8*\",ALLOC_STATIC);HEAP32[envPtr>>2]=poolPtr;HEAP32[_environ>>2]=envPtr}else{envPtr=HEAP32[_environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in env){if(typeof env[key]===\"string\"){var line=key+\"=\"+env[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error(\"Environment size exceeded TOTAL_ENV_SIZE!\")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}var ENV={};function _getenv(name){if(name===0)return 0;name=Pointer_stringify(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocate(intArrayFromString(ENV[name]),\"i8\",ALLOC_NORMAL);return _getenv.ret}function ___syscall212(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),owner=SYSCALLS.get(),group=SYSCALLS.get();FS.chown(path,owner,group);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _pthread_cleanup_pop(){assert(_pthread_cleanup_push.level==__ATEXIT__.length,\"cannot pop if something else added meanwhile!\");__ATEXIT__.pop();_pthread_cleanup_push.level=__ATEXIT__.length}function __exit(status){Module[\"exit\"](status)}function _exit(status){__exit(status)}function __Exit(status){__exit(status)}var _llvm_pow_f64=Math_pow;function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort(\"cannot dynamically allocate, sbrk now has control\")})}var ret=DYNAMICTOP;if(bytes!=0){var success=self.alloc(bytes);if(!success)return-1>>>0}return ret}Module[\"_bitshift64Shl\"]=_bitshift64Shl;function ___syscall83(which,varargs){SYSCALLS.varargs=varargs;try{var target=SYSCALLS.getStr(),linkpath=SYSCALLS.getStr();FS.symlink(target,linkpath);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall85(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),buf=SYSCALLS.get(),bufsize=SYSCALLS.get();return SYSCALLS.doReadlink(path,buf,bufsize)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall121(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.EPERM}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall122(which,varargs){SYSCALLS.varargs=varargs;try{var buf=SYSCALLS.get();if(!buf)return-ERRNO_CODES.EFAULT;var layout={\"sysname\":0,\"nodename\":65,\"domainname\":325,\"machine\":260,\"version\":195,\"release\":130,\"__size__\":390};function copyString(element,value){var offset=layout[element];writeAsciiToMemory(value,buf+offset)}copyString(\"sysname\",\"Emscripten\");copyString(\"nodename\",\"emscripten\");copyString(\"release\",\"1.0\");copyString(\"version\",\"#1\");copyString(\"machine\",\"x86-JS\");return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module[\"_llvm_bswap_i32\"]=_llvm_bswap_i32;function ___syscall125(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _setitimer(){throw\"setitimer() is not implemented yet\"}function ___syscall320(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),times=SYSCALLS.get(),flags=SYSCALLS.get();assert(flags===0);path=SYSCALLS.calculateAt(dirfd,path);var seconds=HEAP32[times>>2];var nanoseconds=HEAP32[times+4>>2];var atime=seconds*1e3+nanoseconds/(1e3*1e3);times+=8;seconds=HEAP32[times>>2];nanoseconds=HEAP32[times+4>>2];var mtime=seconds*1e3+nanoseconds/(1e3*1e3);FS.utime(path,atime,mtime);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall324(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),mode=SYSCALLS.get(),offset=SYSCALLS.get64(),len=SYSCALLS.get64();assert(mode===0);FS.allocate(stream,offset,len);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var ___tm_timezone=allocate(intArrayFromString(\"GMT\"),\"i8\",ALLOC_STATIC);function _gmtime_r(time,tmPtr){var date=new Date(HEAP32[time>>2]*1e3);HEAP32[tmPtr>>2]=date.getUTCSeconds();HEAP32[tmPtr+4>>2]=date.getUTCMinutes();HEAP32[tmPtr+8>>2]=date.getUTCHours();HEAP32[tmPtr+12>>2]=date.getUTCDate();HEAP32[tmPtr+16>>2]=date.getUTCMonth();HEAP32[tmPtr+20>>2]=date.getUTCFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getUTCDay();HEAP32[tmPtr+36>>2]=0;HEAP32[tmPtr+32>>2]=0;var start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var yday=(date.getTime()-start)/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+40>>2]=___tm_timezone;return tmPtr}function ___syscall66(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall133(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.chdir(stream.path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall60(which,varargs){SYSCALLS.varargs=varargs;try{var mask=SYSCALLS.get();var old=SYSCALLS.umask;SYSCALLS.umask=mask;return old}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:return totalMemory/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}function ___syscall63(which,varargs){SYSCALLS.varargs=varargs;try{var old=SYSCALLS.getStreamFromFD(),suggestFD=SYSCALLS.get();if(old.fd===suggestFD)return suggestFD;return SYSCALLS.doDup(old.path,old.flags,suggestFD)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module[\"_bitshift64Lshr\"]=_bitshift64Lshr;function ___wait(){Module[\"printErr\"](\"missing function: __wait\");abort(-1)}function _abort(){Module[\"abort\"]()}function ___syscall41(which,varargs){SYSCALLS.varargs=varargs;try{var old=SYSCALLS.getStreamFromFD();return FS.open(old.path,old.flags,0).fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function ___syscall132(which,varargs){SYSCALLS.varargs=varargs;try{var pid=SYSCALLS.get();if(pid&&pid!==PROCINFO.pid)return-ERRNO_CODES.ESRCH;return PROCINFO.pgid}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var _llvm_fabs_f64=Math_abs;function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd};case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0};case 12:case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0};case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _posix_spawn_file_actions_adddup2(){Module[\"printErr\"](\"missing function: posix_spawn_file_actions_adddup2\");abort(-1)}function ___syscall65(which,varargs){SYSCALLS.varargs=varargs;try{return PROCINFO.pgid}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall334(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get(),offset=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt,offset)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall331(which,varargs){SYSCALLS.varargs=varargs;try{return-ERRNO_CODES.ENOSYS}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall330(which,varargs){SYSCALLS.varargs=varargs;try{var old=SYSCALLS.getStreamFromFD(),suggestFD=SYSCALLS.get(),flags=SYSCALLS.get();assert(!flags);if(old.fd===suggestFD)return-ERRNO_CODES.EINVAL;return SYSCALLS.doDup(old.path,old.flags,suggestFD)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall333(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get(),offset=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt,offset)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _wait(stat_loc){___setErrNo(ERRNO_CODES.ECHILD);return-1}function _waitpid(){return _wait.apply(null,arguments)}function ___restore_sigs(){Module[\"printErr\"](\"missing function: __restore_sigs\");abort(-1)}function ___clock_gettime(){return _clock_gettime.apply(null,arguments)}function ___syscall142(which,varargs){SYSCALLS.varargs=varargs;try{var nfds=SYSCALLS.get(),readfds=SYSCALLS.get(),writefds=SYSCALLS.get(),exceptfds=SYSCALLS.get(),timeout=SYSCALLS.get();assert(nfds<=64,\"nfds must be less than or equal to 64\");assert(!exceptfds,\"exceptfds not supported\");var total=0;var srcReadLow=readfds?HEAP32[readfds>>2]:0,srcReadHigh=readfds?HEAP32[readfds+4>>2]:0;var srcWriteLow=writefds?HEAP32[writefds>>2]:0,srcWriteHigh=writefds?HEAP32[writefds+4>>2]:0;var srcExceptLow=exceptfds?HEAP32[exceptfds>>2]:0,srcExceptHigh=exceptfds?HEAP32[exceptfds+4>>2]:0;var dstReadLow=0,dstReadHigh=0;var dstWriteLow=0,dstWriteHigh=0;var dstExceptLow=0,dstExceptHigh=0;var allLow=(readfds?HEAP32[readfds>>2]:0)|(writefds?HEAP32[writefds>>2]:0)|(exceptfds?HEAP32[exceptfds>>2]:0);var allHigh=(readfds?HEAP32[readfds+4>>2]:0)|(writefds?HEAP32[writefds+4>>2]:0)|(exceptfds?HEAP32[exceptfds+4>>2]:0);function check(fd,low,high,val){return fd<32?low&val:high&val}for(var fd=0;fd<nfds;fd++){var mask=1<<fd%32;if(!check(fd,allLow,allHigh,mask)){continue}var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var flags=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){flags=stream.stream_ops.poll(stream)}if(flags&1&&check(fd,srcReadLow,srcReadHigh,mask)){fd<32?dstReadLow=dstReadLow|mask:dstReadHigh=dstReadHigh|mask;total++}if(flags&4&&check(fd,srcWriteLow,srcWriteHigh,mask)){fd<32?dstWriteLow=dstWriteLow|mask:dstWriteHigh=dstWriteHigh|mask;total++}if(flags&2&&check(fd,srcExceptLow,srcExceptHigh,mask)){fd<32?dstExceptLow=dstExceptLow|mask:dstExceptHigh=dstExceptHigh|mask;total++}}if(readfds){HEAP32[readfds>>2]=dstReadLow;HEAP32[readfds+4>>2]=dstReadHigh}if(writefds){HEAP32[writefds>>2]=dstWriteLow;HEAP32[writefds+4>>2]=dstWriteHigh}if(exceptfds){HEAP32[exceptfds>>2]=dstExceptLow;HEAP32[exceptfds+4>>2]=dstExceptHigh}return total}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall183(which,varargs){SYSCALLS.varargs=varargs;try{var buf=SYSCALLS.get(),size=SYSCALLS.get();if(size===0)return-ERRNO_CODES.EINVAL;var cwd=FS.cwd();if(size<cwd.length+1)return-ERRNO_CODES.ERANGE;writeAsciiToMemory(cwd,buf);return buf}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall180(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get(),count=SYSCALLS.get(),zero=SYSCALLS.getZero(),offset=SYSCALLS.get64();return FS.read(stream,HEAP8,buf,count,offset)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall181(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get(),count=SYSCALLS.get(),zero=SYSCALLS.getZero(),offset=SYSCALLS.get64();return FS.write(stream,HEAP8,buf,nbyte,offset)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _setgroups(ngroups,gidset){if(ngroups<1||ngroups>_sysconf(3)){___setErrNo(ERRNO_CODES.EINVAL);return-1}else{___setErrNo(ERRNO_CODES.EPERM);return-1}}function _llvm_fma_f64(){Module[\"printErr\"](\"missing function: llvm_fma_f64\");abort(-1)}function ___syscall269(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),size=SYSCALLS.get(),buf=SYSCALLS.get();return ___syscall([268,0,size,buf],0)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall268(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),size=SYSCALLS.get(),buf=SYSCALLS.get();assert(size===64);HEAP32[buf+4>>2]=4096;HEAP32[buf+40>>2]=4096;HEAP32[buf+8>>2]=1e6;HEAP32[buf+12>>2]=5e5;HEAP32[buf+16>>2]=5e5;HEAP32[buf+20>>2]=FS.nextInode;HEAP32[buf+24>>2]=1e6;HEAP32[buf+28>>2]=42;HEAP32[buf+44>>2]=2;HEAP32[buf+36>>2]=255;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var SOCKFS={mount:(function(mount){Module[\"websocket\"]=Module[\"websocket\"]&&\"object\"===typeof Module[\"websocket\"]?Module[\"websocket\"]:{};Module[\"websocket\"]._callbacks={};Module[\"websocket\"][\"on\"]=(function(event,callback){if(\"function\"===typeof callback){this._callbacks[event]=callback}return this});Module[\"websocket\"].emit=(function(event,param){if(\"function\"===typeof this._callbacks[event]){this._callbacks[event].call(this,param)}});return FS.createNode(null,\"/\",16384|511,0)}),createSocket:(function(family,type,protocol){var streaming=type==1;if(protocol){assert(streaming==(protocol==6))}var sock={family:family,type:type,protocol:protocol,server:null,error:null,peers:{},pending:[],recv_queue:[],sock_ops:SOCKFS.websocket_sock_ops};var name=SOCKFS.nextname();var node=FS.createNode(SOCKFS.root,name,49152,0);node.sock=sock;var stream=FS.createStream({path:name,node:node,flags:FS.modeStringToFlags(\"r+\"),seekable:false,stream_ops:SOCKFS.stream_ops});sock.stream=stream;return sock}),getSocket:(function(fd){var stream=FS.getStream(fd);if(!stream||!FS.isSocket(stream.node.mode)){return null}return stream.node.sock}),stream_ops:{poll:(function(stream){var sock=stream.node.sock;return sock.sock_ops.poll(sock)}),ioctl:(function(stream,request,varargs){var sock=stream.node.sock;return sock.sock_ops.ioctl(sock,request,varargs)}),read:(function(stream,buffer,offset,length,position){var sock=stream.node.sock;var msg=sock.sock_ops.recvmsg(sock,length);if(!msg){return 0}buffer.set(msg.buffer,offset);return msg.buffer.length}),write:(function(stream,buffer,offset,length,position){var sock=stream.node.sock;return sock.sock_ops.sendmsg(sock,buffer,offset,length)}),close:(function(stream){var sock=stream.node.sock;sock.sock_ops.close(sock)})},nextname:(function(){if(!SOCKFS.nextname.current){SOCKFS.nextname.current=0}return\"socket[\"+SOCKFS.nextname.current++ +\"]\"}),websocket_sock_ops:{createPeer:(function(sock,addr,port){var ws;if(typeof addr===\"object\"){ws=addr;addr=null;port=null}if(ws){if(ws._socket){addr=ws._socket.remoteAddress;port=ws._socket.remotePort}else{var result=/ws[s]?:\\/\\/([^:]+):(\\d+)/.exec(ws.url);if(!result){throw new Error(\"WebSocket URL must be in the format ws(s)://address:port\")}addr=result[1];port=parseInt(result[2],10)}}else{try{var runtimeConfig=Module[\"websocket\"]&&\"object\"===typeof Module[\"websocket\"];var url=\"ws:#\".replace(\"#\",\"//\");if(runtimeConfig){if(\"string\"===typeof Module[\"websocket\"][\"url\"]){url=Module[\"websocket\"][\"url\"]}}if(url===\"ws://\"||url===\"wss://\"){var parts=addr.split(\"/\");url=url+parts[0]+\":\"+port+\"/\"+parts.slice(1).join(\"/\")}var subProtocols=\"binary\";if(runtimeConfig){if(\"string\"===typeof Module[\"websocket\"][\"subprotocol\"]){subProtocols=Module[\"websocket\"][\"subprotocol\"]}}subProtocols=subProtocols.replace(/^ +| +$/g,\"\").split(/ *, */);var opts=ENVIRONMENT_IS_NODE?{\"protocol\":subProtocols.toString()}:subProtocols;var WebSocketConstructor;if(ENVIRONMENT_IS_NODE){WebSocketConstructor=__webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'ws'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()))}else if(ENVIRONMENT_IS_WEB){WebSocketConstructor=window[\"WebSocket\"]}else{WebSocketConstructor=WebSocket}ws=new WebSocketConstructor(url,opts);ws.binaryType=\"arraybuffer\"}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH)}}var peer={addr:addr,port:port,socket:ws,dgram_send_queue:[]};SOCKFS.websocket_sock_ops.addPeer(sock,peer);SOCKFS.websocket_sock_ops.handlePeerEvents(sock,peer);if(sock.type===2&&typeof sock.sport!==\"undefined\"){peer.dgram_send_queue.push(new Uint8Array([255,255,255,255,\"p\".charCodeAt(0),\"o\".charCodeAt(0),\"r\".charCodeAt(0),\"t\".charCodeAt(0),(sock.sport&65280)>>8,sock.sport&255]))}return peer}),getPeer:(function(sock,addr,port){return sock.peers[addr+\":\"+port]}),addPeer:(function(sock,peer){sock.peers[peer.addr+\":\"+peer.port]=peer}),removePeer:(function(sock,peer){delete sock.peers[peer.addr+\":\"+peer.port]}),handlePeerEvents:(function(sock,peer){var first=true;var handleOpen=(function(){Module[\"websocket\"].emit(\"open\",sock.stream.fd);try{var queued=peer.dgram_send_queue.shift();while(queued){peer.socket.send(queued);queued=peer.dgram_send_queue.shift()}}catch(e){peer.socket.close()}});function handleMessage(data){assert(typeof data!==\"string\"&&data.byteLength!==undefined);data=new Uint8Array(data);var wasfirst=first;first=false;if(wasfirst&&data.length===10&&data[0]===255&&data[1]===255&&data[2]===255&&data[3]===255&&data[4]===\"p\".charCodeAt(0)&&data[5]===\"o\".charCodeAt(0)&&data[6]===\"r\".charCodeAt(0)&&data[7]===\"t\".charCodeAt(0)){var newport=data[8]<<8|data[9];SOCKFS.websocket_sock_ops.removePeer(sock,peer);peer.port=newport;SOCKFS.websocket_sock_ops.addPeer(sock,peer);return}sock.recv_queue.push({addr:peer.addr,port:peer.port,data:data});Module[\"websocket\"].emit(\"message\",sock.stream.fd)}if(ENVIRONMENT_IS_NODE){peer.socket.on(\"open\",handleOpen);peer.socket.on(\"message\",(function(data,flags){if(!flags.binary){return}handleMessage((new Uint8Array(data)).buffer)}));peer.socket.on(\"close\",(function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd)}));peer.socket.on(\"error\",(function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"ECONNREFUSED: Connection refused\"])}))}else{peer.socket.onopen=handleOpen;peer.socket.onclose=(function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd)});peer.socket.onmessage=function peer_socket_onmessage(event){handleMessage(event.data)};peer.socket.onerror=(function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"ECONNREFUSED: Connection refused\"])})}}),poll:(function(sock){if(sock.type===1&&sock.server){return sock.pending.length?64|1:0}var mask=0;var dest=sock.type===1?SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport):null;if(sock.recv_queue.length||!dest||dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=64|1}if(!dest||dest&&dest.socket.readyState===dest.socket.OPEN){mask|=4}if(dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=16}return mask}),ioctl:(function(sock,request,arg){switch(request){case 21531:var bytes=0;if(sock.recv_queue.length){bytes=sock.recv_queue[0].data.length}HEAP32[arg>>2]=bytes;return 0;default:return ERRNO_CODES.EINVAL}}),close:(function(sock){if(sock.server){try{sock.server.close()}catch(e){}sock.server=null}var peers=Object.keys(sock.peers);for(var i=0;i<peers.length;i++){var peer=sock.peers[peers[i]];try{peer.socket.close()}catch(e){}SOCKFS.websocket_sock_ops.removePeer(sock,peer)}return 0}),bind:(function(sock,addr,port){if(typeof sock.saddr!==\"undefined\"||typeof sock.sport!==\"undefined\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}sock.saddr=addr;sock.sport=port;if(sock.type===2){if(sock.server){sock.server.close();sock.server=null}try{sock.sock_ops.listen(sock,0)}catch(e){if(!(e instanceof FS.ErrnoError))throw e;if(e.errno!==ERRNO_CODES.EOPNOTSUPP)throw e}}}),connect:(function(sock,addr,port){if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(typeof sock.daddr!==\"undefined\"&&typeof sock.dport!==\"undefined\"){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(dest){if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EALREADY)}else{throw new FS.ErrnoError(ERRNO_CODES.EISCONN)}}}var peer=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port);sock.daddr=peer.addr;sock.dport=peer.port;throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS)}),listen:(function(sock,backlog){if(!ENVIRONMENT_IS_NODE){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var WebSocketServer=__webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'ws'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())).Server;var host=sock.saddr;sock.server=new WebSocketServer({host:host,port:sock.sport});Module[\"websocket\"].emit(\"listen\",sock.stream.fd);sock.server.on(\"connection\",(function(ws){if(sock.type===1){var newsock=SOCKFS.createSocket(sock.family,sock.type,sock.protocol);var peer=SOCKFS.websocket_sock_ops.createPeer(newsock,ws);newsock.daddr=peer.addr;newsock.dport=peer.port;sock.pending.push(newsock);Module[\"websocket\"].emit(\"connection\",newsock.stream.fd)}else{SOCKFS.websocket_sock_ops.createPeer(sock,ws);Module[\"websocket\"].emit(\"connection\",sock.stream.fd)}}));sock.server.on(\"closed\",(function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd);sock.server=null}));sock.server.on(\"error\",(function(error){sock.error=ERRNO_CODES.EHOSTUNREACH;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"EHOSTUNREACH: Host is unreachable\"])}))}),accept:(function(listensock){if(!listensock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var newsock=listensock.pending.shift();newsock.stream.flags=listensock.stream.flags;return newsock}),getname:(function(sock,peer){var addr,port;if(peer){if(sock.daddr===undefined||sock.dport===undefined){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}addr=sock.daddr;port=sock.dport}else{addr=sock.saddr||0;port=sock.sport||0}return{addr:addr,port:port}}),sendmsg:(function(sock,buffer,offset,length,addr,port){if(sock.type===2){if(addr===undefined||port===undefined){addr=sock.daddr;port=sock.dport}if(addr===undefined||port===undefined){throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ)}}else{addr=sock.daddr;port=sock.dport}var dest=SOCKFS.websocket_sock_ops.getPeer(sock,addr,port);if(sock.type===1){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var data;if(buffer instanceof Array||buffer instanceof ArrayBuffer){data=buffer.slice(offset,offset+length)}else{data=buffer.buffer.slice(buffer.byteOffset+offset,buffer.byteOffset+offset+length)}if(sock.type===2){if(!dest||dest.socket.readyState!==dest.socket.OPEN){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){dest=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port)}dest.dgram_send_queue.push(data);return length}}try{dest.socket.send(data);return length}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),recvmsg:(function(sock,length){if(sock.type===1&&sock.server){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}var queued=sock.recv_queue.shift();if(!queued){if(sock.type===1){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(!dest){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){return null}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var queuedLength=queued.data.byteLength||queued.data.length;var queuedOffset=queued.data.byteOffset||0;var queuedBuffer=queued.data.buffer||queued.data;var bytesRead=Math.min(length,queuedLength);var res={buffer:new Uint8Array(queuedBuffer,queuedOffset,bytesRead),addr:queued.addr,port:queued.port};if(sock.type===1&&bytesRead<queuedLength){var bytesRemaining=queuedLength-bytesRead;queued.data=new Uint8Array(queuedBuffer,queuedOffset+bytesRead,bytesRemaining);sock.recv_queue.unshift(queued)}return res})}};function ___syscall102(which,varargs){SYSCALLS.varargs=varargs;try{var call=SYSCALLS.get(),socketvararg=SYSCALLS.get();SYSCALLS.varargs=socketvararg;switch(call){case 1:{var domain=SYSCALLS.get(),type=SYSCALLS.get(),protocol=SYSCALLS.get();var sock=SOCKFS.createSocket(domain,type,protocol);assert(sock.stream.fd<64);return sock.stream.fd};case 2:{var sock=SYSCALLS.getSocketFromFD(),info=SYSCALLS.getSocketAddress();sock.sock_ops.bind(sock,info.addr,info.port);return 0};case 3:{var sock=SYSCALLS.getSocketFromFD(),info=SYSCALLS.getSocketAddress();sock.sock_ops.connect(sock,info.addr,info.port);return 0};case 4:{var sock=SYSCALLS.getSocketFromFD(),backlog=SYSCALLS.get();sock.sock_ops.listen(sock,backlog);return 0};case 5:{var sock=SYSCALLS.getSocketFromFD(),addr=SYSCALLS.get(),addrlen=SYSCALLS.get();var newsock=sock.sock_ops.accept(sock);if(addr){var res=__write_sockaddr(addr,newsock.family,DNS.lookup_name(newsock.daddr),newsock.dport);assert(!res.errno)}return newsock.stream.fd};case 6:{var sock=SYSCALLS.getSocketFromFD(),addr=SYSCALLS.get(),addrlen=SYSCALLS.get();var res=__write_sockaddr(addr,sock.family,DNS.lookup_name(sock.saddr||\"0.0.0.0\"),sock.sport);assert(!res.errno);return 0};case 7:{var sock=SYSCALLS.getSocketFromFD(),addr=SYSCALLS.get(),addrlen=SYSCALLS.get();if(!sock.daddr){return-ERRNO_CODES.ENOTCONN}var res=__write_sockaddr(addr,sock.family,DNS.lookup_name(sock.daddr),sock.dport);assert(!res.errno);return 0};case 11:{var sock=SYSCALLS.getSocketFromFD(),message=SYSCALLS.get(),length=SYSCALLS.get(),flags=SYSCALLS.get(),dest=SYSCALLS.getSocketAddress(true);if(!dest){return FS.write(sock.stream,HEAP8,message,length)}else{return sock.sock_ops.sendmsg(sock,HEAP8,message,length,dest.addr,dest.port)}};case 12:{var sock=SYSCALLS.getSocketFromFD(),buf=SYSCALLS.get(),len=SYSCALLS.get(),flags=SYSCALLS.get(),addr=SYSCALLS.get(),addrlen=SYSCALLS.get();var msg=sock.sock_ops.recvmsg(sock,len);if(!msg)return 0;if(addr){var res=__write_sockaddr(addr,sock.family,DNS.lookup_name(msg.addr),msg.port);assert(!res.errno)}HEAPU8.set(msg.buffer,buf);return msg.buffer.byteLength};case 14:{return-ERRNO_CODES.ENOPROTOOPT};case 15:{var sock=SYSCALLS.getSocketFromFD(),level=SYSCALLS.get(),optname=SYSCALLS.get(),optval=SYSCALLS.get(),optlen=SYSCALLS.get();if(level===1){if(optname===4){HEAP32[optval>>2]=sock.error;HEAP32[optlen>>2]=4;sock.error=null;return 0}}return-ERRNO_CODES.ENOPROTOOPT};case 16:{var sock=SYSCALLS.getSocketFromFD(),message=SYSCALLS.get(),flags=SYSCALLS.get();var iov=HEAP32[message+8>>2];var num=HEAP32[message+12>>2];var addr,port;var name=HEAP32[message>>2];var namelen=HEAP32[message+4>>2];if(name){var info=__read_sockaddr(name,namelen);if(info.errno)return-info.errno;port=info.port;addr=DNS.lookup_addr(info.addr)||info.addr}var total=0;for(var i=0;i<num;i++){total+=HEAP32[iov+(8*i+4)>>2]}var view=new Uint8Array(total);var offset=0;for(var i=0;i<num;i++){var iovbase=HEAP32[iov+(8*i+0)>>2];var iovlen=HEAP32[iov+(8*i+4)>>2];for(var j=0;j<iovlen;j++){view[offset++]=HEAP8[iovbase+j>>0]}}return sock.sock_ops.sendmsg(sock,view,0,total,addr,port)};case 17:{var sock=SYSCALLS.getSocketFromFD(),message=SYSCALLS.get(),flags=SYSCALLS.get();var iov=HEAP32[message+8>>2];var num=HEAP32[message+12>>2];var total=0;for(var i=0;i<num;i++){total+=HEAP32[iov+(8*i+4)>>2]}var msg=sock.sock_ops.recvmsg(sock,total);if(!msg)return 0;var name=HEAP32[message>>2];if(name){var res=__write_sockaddr(name,sock.family,DNS.lookup_name(msg.addr),msg.port);assert(!res.errno)}var bytesRead=0;var bytesRemaining=msg.buffer.byteLength;for(var i=0;bytesRemaining>0&&i<num;i++){var iovbase=HEAP32[iov+(8*i+0)>>2];var iovlen=HEAP32[iov+(8*i+4)>>2];if(!iovlen){continue}var length=Math.min(iovlen,bytesRemaining);var buf=msg.buffer.subarray(bytesRead,bytesRead+length);HEAPU8.set(buf,iovbase+bytesRead);bytesRead+=length;bytesRemaining-=length}return bytesRead};default:abort(\"unsupported socketcall syscall \"+call)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall301(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),flags=SYSCALLS.get();assert(flags===0);path=SYSCALLS.calculateAt(dirfd,path);FS.unlink(path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall340(which,varargs){SYSCALLS.varargs=varargs;try{var pid=SYSCALLS.get(),resource=SYSCALLS.get(),new_limit=SYSCALLS.get(),old_limit=SYSCALLS.get();if(old_limit){HEAP32[old_limit>>2]=-1;HEAP32[old_limit+4>>2]=-1;HEAP32[old_limit+8>>2]=-1;HEAP32[old_limit+12>>2]=-1}return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _getgrent(){Module[\"printErr\"](\"missing function: getgrent\");abort(-1)}function ___syscall144(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get(),flags=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;SYSCALLS.doMsync(addr,FS.getStream(info.fd),len,info.flags);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall297(which,varargs){SYSCALLS.varargs=varargs;try{var dirfd=SYSCALLS.get(),path=SYSCALLS.getStr(),mode=SYSCALLS.get(),dev=SYSCALLS.get();path=SYSCALLS.calculateAt(dirfd,path);return SYSCALLS.doMknod(path,mode,dev)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _pthread_self(){return 0}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall220(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),dirp=SYSCALLS.get(),count=SYSCALLS.get();if(!stream.getdents){stream.getdents=FS.readdir(stream.path)}var pos=0;while(stream.getdents.length>0&&pos+268<count){var id;var type;var name=stream.getdents.pop();assert(name.length<256);if(name[0]===\".\"){id=1;type=4}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:FS.isDir(child.mode)?4:FS.isLink(child.mode)?10:8}HEAP32[dirp+pos>>2]=id;HEAP32[dirp+pos+4>>2]=stream.position;HEAP16[dirp+pos+8>>1]=268;HEAP8[dirp+pos+10>>0]=type;for(var i=0;i<name.length;i++){HEAP8[dirp+pos+(11+i)>>0]=name.charCodeAt(i)}HEAP8[dirp+pos+(11+i)>>0]=0;pos+=268}return pos}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}FS.staticInit();__ATINIT__.unshift((function(){if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));Module[\"FS_createFolder\"]=FS.createFolder;Module[\"FS_createPath\"]=FS.createPath;Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;Module[\"FS_createLazyFile\"]=FS.createLazyFile;Module[\"FS_createLink\"]=FS.createLink;Module[\"FS_createDevice\"]=FS.createDevice;Module[\"FS_unlink\"]=FS.unlink;__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=__webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'fs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));var NODEJS_PATH=__webpack_require__(/*! path */ \"../node_modules/path-browserify/index.js\");NODEFS.staticInit()}___buildEnvironment(ENV);__ATINIT__.push((function(){SOCKFS.root=FS.mount(SOCKFS,{},null)}));STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);assert(DYNAMIC_BASE<TOTAL_MEMORY,\"TOTAL_MEMORY not big enough for stack\");var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],\"i8\",ALLOC_DYNAMIC);var debug_table_iiii=[\"0\",\"___stdio_read\",\"___stdio_seek\",\"___stdout_write\",\"___stdio_write\",\"_sn_write\",\"_do_read_375\",\"_do_read\",\"_do_read_223\",\"_wrap_write\",\"_ms_write\",\"_ms_seek\",\"_wms_write\",\"_wms_seek\",\"_sw_write\",\"_mread\",\"_mwrite\",\"_mseek\",\"_wstring_read\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"];var debug_table_vi=[\"0\",\"_cleanup_363\",\"_cleanup_412\",\"_dummy1\",\"_do_setxid\",\"_cleanup\",\"_do_setrlimit\",\"0\"];var debug_table_vii=[\"0\",\"_insecure_memzero_func\"];var debug_table_iiiiiii=[\"0\",\"___mmap\"];var debug_table_ii=[\"0\",\"___stdio_close\",\"___strdup\",\"_checker\",\"_ms_close\",\"_wms_close\",\"_mclose\",\"0\"];var debug_table_v=[\"0\",\"_done\",\"_dummy0\",\"___stdio_exit\"];var debug_table_iiiii=[\"0\"];var debug_table_viiiiii=[\"0\",\"_crypto_scrypt_smix\"];var debug_table_iii=[\"0\",\"___munmap\",\"_ignore_err\",\"_sort\",\"_tre_compare_items\",\"___fdopen\",\"0\",\"0\"];function nullFunc_iiii(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: iii: \"+debug_table_iii[x]+\"  ii: \"+debug_table_ii[x]+\"  iiiii: \"+debug_table_iiiii[x]+\"  iiiiiii: \"+debug_table_iiiiiii[x]+\"  vii: \"+debug_table_vii[x]+\"  vi: \"+debug_table_vi[x]+\"  viiiiii: \"+debug_table_viiiiii[x]+\"  v: \"+debug_table_v[x]+\"  \");abort(x)}function nullFunc_vi(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: v: \"+debug_table_v[x]+\"  vii: \"+debug_table_vii[x]+\"  viiiiii: \"+debug_table_viiiiii[x]+\"  ii: \"+debug_table_ii[x]+\"  iii: \"+debug_table_iii[x]+\"  iiii: \"+debug_table_iiii[x]+\"  iiiii: \"+debug_table_iiiii[x]+\"  iiiiiii: \"+debug_table_iiiiiii[x]+\"  \");abort(x)}function nullFunc_vii(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: vi: \"+debug_table_vi[x]+\"  v: \"+debug_table_v[x]+\"  viiiiii: \"+debug_table_viiiiii[x]+\"  ii: \"+debug_table_ii[x]+\"  iii: \"+debug_table_iii[x]+\"  iiii: \"+debug_table_iiii[x]+\"  iiiii: \"+debug_table_iiiii[x]+\"  iiiiiii: \"+debug_table_iiiiiii[x]+\"  \");abort(x)}function nullFunc_iiiiiii(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: iiii: \"+debug_table_iiii[x]+\"  iiiii: \"+debug_table_iiiii[x]+\"  iii: \"+debug_table_iii[x]+\"  ii: \"+debug_table_ii[x]+\"  viiiiii: \"+debug_table_viiiiii[x]+\"  vii: \"+debug_table_vii[x]+\"  vi: \"+debug_table_vi[x]+\"  v: \"+debug_table_v[x]+\"  \");abort(x)}function nullFunc_ii(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: iii: \"+debug_table_iii[x]+\"  iiii: \"+debug_table_iiii[x]+\"  iiiii: \"+debug_table_iiiii[x]+\"  iiiiiii: \"+debug_table_iiiiiii[x]+\"  vii: \"+debug_table_vii[x]+\"  vi: \"+debug_table_vi[x]+\"  v: \"+debug_table_v[x]+\"  viiiiii: \"+debug_table_viiiiii[x]+\"  \");abort(x)}function nullFunc_v(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: vi: \"+debug_table_vi[x]+\"  vii: \"+debug_table_vii[x]+\"  viiiiii: \"+debug_table_viiiiii[x]+\"  ii: \"+debug_table_ii[x]+\"  iii: \"+debug_table_iii[x]+\"  iiii: \"+debug_table_iiii[x]+\"  iiiii: \"+debug_table_iiiii[x]+\"  iiiiiii: \"+debug_table_iiiiiii[x]+\"  \");abort(x)}function nullFunc_iiiii(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: iiii: \"+debug_table_iiii[x]+\"  iii: \"+debug_table_iii[x]+\"  ii: \"+debug_table_ii[x]+\"  iiiiiii: \"+debug_table_iiiiiii[x]+\"  vii: \"+debug_table_vii[x]+\"  vi: \"+debug_table_vi[x]+\"  viiiiii: \"+debug_table_viiiiii[x]+\"  v: \"+debug_table_v[x]+\"  \");abort(x)}function nullFunc_viiiiii(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: vii: \"+debug_table_vii[x]+\"  vi: \"+debug_table_vi[x]+\"  v: \"+debug_table_v[x]+\"  iiii: \"+debug_table_iiii[x]+\"  iiiii: \"+debug_table_iiiii[x]+\"  iii: \"+debug_table_iii[x]+\"  ii: \"+debug_table_ii[x]+\"  iiiiiii: \"+debug_table_iiiiiii[x]+\"  \");abort(x)}function nullFunc_iii(x){Module[\"printErr\"](\"Invalid function pointer '\"+x+\"' called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");Module[\"printErr\"](\"This pointer might make sense in another type signature: ii: \"+debug_table_ii[x]+\"  iiii: \"+debug_table_iiii[x]+\"  iiiii: \"+debug_table_iiiii[x]+\"  iiiiiii: \"+debug_table_iiiiiii[x]+\"  vii: \"+debug_table_vii[x]+\"  vi: \"+debug_table_vi[x]+\"  v: \"+debug_table_v[x]+\"  viiiiii: \"+debug_table_viiiiii[x]+\"  \");abort(x)}function invoke_iiii(index,a1,a2,a3){try{return Module[\"dynCall_iiii\"](index,a1,a2,a3)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_vi(index,a1){try{Module[\"dynCall_vi\"](index,a1)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_vii(index,a1,a2){try{Module[\"dynCall_vii\"](index,a1,a2)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module[\"dynCall_iiiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_ii(index,a1){try{return Module[\"dynCall_ii\"](index,a1)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_v(index){try{Module[\"dynCall_v\"](index)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module[\"dynCall_iiiii\"](index,a1,a2,a3,a4)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module[\"dynCall_viiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iii(index,a1,a2){try{return Module[\"dynCall_iii\"](index,a1,a2)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}Module.asmGlobalArg={\"Math\":Math,\"Int8Array\":Int8Array,\"Int16Array\":Int16Array,\"Int32Array\":Int32Array,\"Uint8Array\":Uint8Array,\"Uint16Array\":Uint16Array,\"Uint32Array\":Uint32Array,\"Float32Array\":Float32Array,\"Float64Array\":Float64Array,\"NaN\":NaN,\"Infinity\":Infinity};Module.asmLibraryArg={\"abort\":abort,\"assert\":assert,\"nullFunc_iiii\":nullFunc_iiii,\"nullFunc_vi\":nullFunc_vi,\"nullFunc_vii\":nullFunc_vii,\"nullFunc_iiiiiii\":nullFunc_iiiiiii,\"nullFunc_ii\":nullFunc_ii,\"nullFunc_v\":nullFunc_v,\"nullFunc_iiiii\":nullFunc_iiiii,\"nullFunc_viiiiii\":nullFunc_viiiiii,\"nullFunc_iii\":nullFunc_iii,\"invoke_iiii\":invoke_iiii,\"invoke_vi\":invoke_vi,\"invoke_vii\":invoke_vii,\"invoke_iiiiiii\":invoke_iiiiiii,\"invoke_ii\":invoke_ii,\"invoke_v\":invoke_v,\"invoke_iiiii\":invoke_iiiii,\"invoke_viiiiii\":invoke_viiiiii,\"invoke_iii\":invoke_iii,\"___syscall221\":___syscall221,\"___syscall220\":___syscall220,\"__inet_ntop6_raw\":__inet_ntop6_raw,\"___syscall66\":___syscall66,\"___syscall64\":___syscall64,\"___syscall65\":___syscall65,\"___syscall63\":___syscall63,\"___syscall60\":___syscall60,\"___muldc3\":___muldc3,\"_llvm_fabs_f64\":_llvm_fabs_f64,\"___assert_fail\":___assert_fail,\"__isLeapYear\":__isLeapYear,\"__addDays\":__addDays,\"_llvm_pow_f64\":_llvm_pow_f64,\"_setgrent\":_setgrent,\"_sbrk\":_sbrk,\"_endgrent\":_endgrent,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"___syscall153\":___syscall153,\"___syscall152\":___syscall152,\"_execl\":_execl,\"___syscall150\":___syscall150,\"_abort\":_abort,\"_pthread_setcancelstate\":_pthread_setcancelstate,\"___syscall75\":___syscall75,\"_llvm_stacksave\":_llvm_stacksave,\"___syscall77\":___syscall77,\"___syscall132\":___syscall132,\"__write_sockaddr\":__write_sockaddr,\"_gmtime_r\":_gmtime_r,\"_pthread_cleanup_push\":_pthread_cleanup_push,\"___syscall306\":___syscall306,\"___syscall307\":___syscall307,\"___syscall304\":___syscall304,\"___syscall305\":___syscall305,\"___syscall302\":___syscall302,\"___syscall303\":___syscall303,\"___syscall300\":___syscall300,\"___syscall301\":___syscall301,\"___syscall140\":___syscall140,\"___syscall142\":___syscall142,\"_posix_spawn_file_actions_adddup2\":_posix_spawn_file_actions_adddup2,\"___syscall144\":___syscall144,\"___syscall145\":___syscall145,\"___syscall308\":___syscall308,\"___syscall147\":___syscall147,\"___block_all_sigs\":___block_all_sigs,\"___syscall85\":___syscall85,\"_emscripten_get_now_is_monotonic\":_emscripten_get_now_is_monotonic,\"___syscall83\":___syscall83,\"___syscall29\":___syscall29,\"___syscall125\":___syscall125,\"___syscall122\":___syscall122,\"__inet_ntop4_raw\":__inet_ntop4_raw,\"___syscall94\":___syscall94,\"_llvm_stackrestore\":_llvm_stackrestore,\"___syscall148\":___syscall148,\"___clone\":___clone,\"_wait\":_wait,\"___setErrNo\":___setErrNo,\"___syscall333\":___syscall333,\"___syscall331\":___syscall331,\"___syscall330\":___syscall330,\"___syscall334\":___syscall334,\"___syscall97\":___syscall97,\"___syscall96\":___syscall96,\"___syscall118\":___syscall118,\"_nanosleep\":_nanosleep,\"___syscall91\":___syscall91,\"_setgroups\":_setgroups,\"_kill\":_kill,\"___syscall114\":___syscall114,\"_getaddrinfo\":_getaddrinfo,\"___syscall15\":___syscall15,\"___syscall14\":___syscall14,\"___syscall12\":___syscall12,\"_emscripten_get_now\":_emscripten_get_now,\"___syscall10\":___syscall10,\"___syscall9\":___syscall9,\"___syscall3\":___syscall3,\"___syscall1\":___syscall1,\"___lock\":___lock,\"___syscall320\":___syscall320,\"___syscall6\":___syscall6,\"___syscall5\":___syscall5,\"___syscall4\":___syscall4,\"_time\":_time,\"___syscall146\":___syscall146,\"___syscall209\":___syscall209,\"___syscall207\":___syscall207,\"___syscall\":___syscall,\"___syscall204\":___syscall204,\"___syscall203\":___syscall203,\"___syscall202\":___syscall202,\"___syscall201\":___syscall201,\"___syscall200\":___syscall200,\"_pthread_cleanup_pop\":_pthread_cleanup_pop,\"__inet_pton4_raw\":__inet_pton4_raw,\"___syscall269\":___syscall269,\"___syscall268\":___syscall268,\"___syscall102\":___syscall102,\"_setitimer\":_setitimer,\"___syscall265\":___syscall265,\"_getgrent\":_getgrent,\"_inet_addr\":_inet_addr,\"___syscall20\":___syscall20,\"__Exit\":__Exit,\"___buildEnvironment\":___buildEnvironment,\"___syscall295\":___syscall295,\"___syscall296\":___syscall296,\"___syscall219\":___syscall219,\"___syscall298\":___syscall298,\"___syscall299\":___syscall299,\"___syscall218\":___syscall218,\"___syscall192\":___syscall192,\"___syscall191\":___syscall191,\"___syscall197\":___syscall197,\"___syscall196\":___syscall196,\"___syscall195\":___syscall195,\"___syscall194\":___syscall194,\"_clock_gettime\":_clock_gettime,\"___syscall199\":___syscall199,\"___syscall198\":___syscall198,\"___syscall214\":___syscall214,\"_strftime\":_strftime,\"_llvm_fabs_f32\":_llvm_fabs_f32,\"___syscall272\":___syscall272,\"_getenv\":_getenv,\"___syscall36\":___syscall36,\"___syscall33\":___syscall33,\"___syscall211\":___syscall211,\"___syscall121\":___syscall121,\"___syscall39\":___syscall39,\"___syscall38\":___syscall38,\"_sysconf\":_sysconf,\"___syscall340\":___syscall340,\"___syscall180\":___syscall180,\"___syscall181\":___syscall181,\"___syscall183\":___syscall183,\"___syscall324\":___syscall324,\"___syscall151\":___syscall151,\"___mulsc3\":___mulsc3,\"_waitpid\":_waitpid,\"___syscall163\":___syscall163,\"___syscall168\":___syscall168,\"___syscall40\":___syscall40,\"___syscall41\":___syscall41,\"___syscall42\":___syscall42,\"_fork\":_fork,\"__inet_pton6_raw\":__inet_pton6_raw,\"___clock_gettime\":___clock_gettime,\"_usleep\":_usleep,\"___syscall193\":___syscall193,\"___syscall297\":___syscall297,\"__read_sockaddr\":__read_sockaddr,\"_posix_spawn_file_actions_destroy\":_posix_spawn_file_actions_destroy,\"___syscall212\":___syscall212,\"_getnameinfo\":_getnameinfo,\"___syscall205\":___syscall205,\"_posix_spawn_file_actions_init\":_posix_spawn_file_actions_init,\"__arraySum\":__arraySum,\"_pthread_self\":_pthread_self,\"_posix_spawn\":_posix_spawn,\"___restore_sigs\":___restore_sigs,\"___syscall51\":___syscall51,\"___syscall57\":___syscall57,\"___syscall133\":___syscall133,\"___syscall54\":___syscall54,\"___unlock\":___unlock,\"_exit\":_exit,\"___syscall34\":___syscall34,\"_llvm_fma_f64\":_llvm_fma_f64,\"___wait\":___wait,\"_atexit\":_atexit,\"STACKTOP\":STACKTOP,\"STACK_MAX\":STACK_MAX,\"tempDoublePtr\":tempDoublePtr,\"ABORT\":ABORT,\"cttz_i8\":cttz_i8,\"___environ\":___environ};// EMSCRIPTEN_START_ASM\nvar asm=(function(global,env,buffer) {\n\n \"use asm\";\n var a = new global.Int8Array(buffer);\n var b = new global.Int16Array(buffer);\n var c = new global.Int32Array(buffer);\n var d = new global.Uint8Array(buffer);\n var e = new global.Uint16Array(buffer);\n var f = new global.Uint32Array(buffer);\n var g = new global.Float32Array(buffer);\n var h = new global.Float64Array(buffer);\n var i = env.STACKTOP | 0;\n var j = env.STACK_MAX | 0;\n var k = env.tempDoublePtr | 0;\n var l = env.ABORT | 0;\n var m = env.cttz_i8 | 0;\n var n = env.___environ | 0;\n var o = 0;\n var p = 0;\n var q = 0;\n var r = 0;\n var s = global.NaN, t = global.Infinity;\n var u = 0, v = 0, w = 0, x = 0, y = 0.0, z = 0, A = 0, B = 0, C = 0.0;\n var D = 0;\n var E = 0;\n var F = 0;\n var G = 0;\n var H = 0;\n var I = 0;\n var J = 0;\n var K = 0;\n var L = 0;\n var M = 0;\n var N = global.Math.floor;\n var O = global.Math.abs;\n var P = global.Math.sqrt;\n var Q = global.Math.pow;\n var R = global.Math.cos;\n var S = global.Math.sin;\n var T = global.Math.tan;\n var U = global.Math.acos;\n var V = global.Math.asin;\n var W = global.Math.atan;\n var X = global.Math.atan2;\n var Y = global.Math.exp;\n var Z = global.Math.log;\n var _ = global.Math.ceil;\n var $ = global.Math.imul;\n var aa = global.Math.min;\n var ba = global.Math.clz32;\n var ca = env.abort;\n var da = env.assert;\n var ea = env.nullFunc_iiii;\n var fa = env.nullFunc_vi;\n var ga = env.nullFunc_vii;\n var ha = env.nullFunc_iiiiiii;\n var ia = env.nullFunc_ii;\n var ja = env.nullFunc_v;\n var ka = env.nullFunc_iiiii;\n var la = env.nullFunc_viiiiii;\n var ma = env.nullFunc_iii;\n var na = env.invoke_iiii;\n var oa = env.invoke_vi;\n var pa = env.invoke_vii;\n var qa = env.invoke_iiiiiii;\n var ra = env.invoke_ii;\n var sa = env.invoke_v;\n var ta = env.invoke_iiiii;\n var ua = env.invoke_viiiiii;\n var va = env.invoke_iii;\n var wa = env.___syscall221;\n var xa = env.___syscall220;\n var ya = env.__inet_ntop6_raw;\n var za = env.___syscall66;\n var Aa = env.___syscall64;\n var Ba = env.___syscall65;\n var Ca = env.___syscall63;\n var Da = env.___syscall60;\n var Ea = env.___muldc3;\n var Fa = env._llvm_fabs_f64;\n var Ga = env.___assert_fail;\n var Ha = env.__isLeapYear;\n var Ia = env.__addDays;\n var Ja = env._llvm_pow_f64;\n var Ka = env._setgrent;\n var La = env._sbrk;\n var Ma = env._endgrent;\n var Na = env._emscripten_memcpy_big;\n var Oa = env.___syscall153;\n var Pa = env.___syscall152;\n var Qa = env._execl;\n var Ra = env.___syscall150;\n var Sa = env._abort;\n var Ta = env._pthread_setcancelstate;\n var Ua = env.___syscall75;\n var Va = env._llvm_stacksave;\n var Wa = env.___syscall77;\n var Xa = env.___syscall132;\n var Ya = env.__write_sockaddr;\n var Za = env._gmtime_r;\n var _a = env._pthread_cleanup_push;\n var $a = env.___syscall306;\n var ab = env.___syscall307;\n var bb = env.___syscall304;\n var cb = env.___syscall305;\n var db = env.___syscall302;\n var eb = env.___syscall303;\n var fb = env.___syscall300;\n var gb = env.___syscall301;\n var hb = env.___syscall140;\n var ib = env.___syscall142;\n var jb = env._posix_spawn_file_actions_adddup2;\n var kb = env.___syscall144;\n var lb = env.___syscall145;\n var mb = env.___syscall308;\n var nb = env.___syscall147;\n var ob = env.___block_all_sigs;\n var pb = env.___syscall85;\n var qb = env._emscripten_get_now_is_monotonic;\n var rb = env.___syscall83;\n var sb = env.___syscall29;\n var tb = env.___syscall125;\n var ub = env.___syscall122;\n var vb = env.__inet_ntop4_raw;\n var wb = env.___syscall94;\n var xb = env._llvm_stackrestore;\n var yb = env.___syscall148;\n var zb = env.___clone;\n var Ab = env._wait;\n var Bb = env.___setErrNo;\n var Cb = env.___syscall333;\n var Db = env.___syscall331;\n var Eb = env.___syscall330;\n var Fb = env.___syscall334;\n var Gb = env.___syscall97;\n var Hb = env.___syscall96;\n var Ib = env.___syscall118;\n var Jb = env._nanosleep;\n var Kb = env.___syscall91;\n var Lb = env._setgroups;\n var Mb = env._kill;\n var Nb = env.___syscall114;\n var Ob = env._getaddrinfo;\n var Pb = env.___syscall15;\n var Qb = env.___syscall14;\n var Rb = env.___syscall12;\n var Sb = env._emscripten_get_now;\n var Tb = env.___syscall10;\n var Ub = env.___syscall9;\n var Vb = env.___syscall3;\n var Wb = env.___syscall1;\n var Xb = env.___lock;\n var Yb = env.___syscall320;\n var Zb = env.___syscall6;\n var _b = env.___syscall5;\n var $b = env.___syscall4;\n var ac = env._time;\n var bc = env.___syscall146;\n var cc = env.___syscall209;\n var dc = env.___syscall207;\n var ec = env.___syscall;\n var fc = env.___syscall204;\n var gc = env.___syscall203;\n var hc = env.___syscall202;\n var ic = env.___syscall201;\n var jc = env.___syscall200;\n var kc = env._pthread_cleanup_pop;\n var lc = env.__inet_pton4_raw;\n var mc = env.___syscall269;\n var nc = env.___syscall268;\n var oc = env.___syscall102;\n var pc = env._setitimer;\n var qc = env.___syscall265;\n var rc = env._getgrent;\n var sc = env._inet_addr;\n var tc = env.___syscall20;\n var uc = env.__Exit;\n var vc = env.___buildEnvironment;\n var wc = env.___syscall295;\n var xc = env.___syscall296;\n var yc = env.___syscall219;\n var zc = env.___syscall298;\n var Ac = env.___syscall299;\n var Bc = env.___syscall218;\n var Cc = env.___syscall192;\n var Dc = env.___syscall191;\n var Ec = env.___syscall197;\n var Fc = env.___syscall196;\n var Gc = env.___syscall195;\n var Hc = env.___syscall194;\n var Ic = env._clock_gettime;\n var Jc = env.___syscall199;\n var Kc = env.___syscall198;\n var Lc = env.___syscall214;\n var Mc = env._strftime;\n var Nc = env._llvm_fabs_f32;\n var Oc = env.___syscall272;\n var Pc = env._getenv;\n var Qc = env.___syscall36;\n var Rc = env.___syscall33;\n var Sc = env.___syscall211;\n var Tc = env.___syscall121;\n var Uc = env.___syscall39;\n var Vc = env.___syscall38;\n var Wc = env._sysconf;\n var Xc = env.___syscall340;\n var Yc = env.___syscall180;\n var Zc = env.___syscall181;\n var _c = env.___syscall183;\n var $c = env.___syscall324;\n var ad = env.___syscall151;\n var bd = env.___mulsc3;\n var cd = env._waitpid;\n var dd = env.___syscall163;\n var ed = env.___syscall168;\n var fd = env.___syscall40;\n var gd = env.___syscall41;\n var hd = env.___syscall42;\n var id = env._fork;\n var jd = env.__inet_pton6_raw;\n var kd = env.___clock_gettime;\n var ld = env._usleep;\n var md = env.___syscall193;\n var nd = env.___syscall297;\n var od = env.__read_sockaddr;\n var pd = env._posix_spawn_file_actions_destroy;\n var qd = env.___syscall212;\n var rd = env._getnameinfo;\n var sd = env.___syscall205;\n var td = env._posix_spawn_file_actions_init;\n var ud = env.__arraySum;\n var vd = env._pthread_self;\n var wd = env._posix_spawn;\n var xd = env.___restore_sigs;\n var yd = env.___syscall51;\n var zd = env.___syscall57;\n var Ad = env.___syscall133;\n var Bd = env.___syscall54;\n var Cd = env.___unlock;\n var Dd = env._exit;\n var Ed = env.___syscall34;\n var Fd = env._llvm_fma_f64;\n var Gd = env.___wait;\n var Hd = env._atexit;\n var Id = 0.0;\n \n// EMSCRIPTEN_START_FUNCS\nfunction Qe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;g=d+32|0;h=g;k=c[h>>2]|0;l=c[h+4>>2]|0;a[f+7>>0]=k;h=kr(k|0,l|0,8)|0;a[f+6>>0]=h;h=kr(k|0,l|0,16)|0;a[f+5>>0]=h;h=kr(k|0,l|0,24)|0;a[f+4>>0]=h;a[f+3>>0]=l;h=kr(k|0,l|0,40)|0;a[f+2>>0]=h;h=kr(k|0,l|0,48)|0;a[f+1>>0]=h;h=kr(k|0,l|0,56)|0;a[f>>0]=h;h=kr(k|0,l|0,3)|0;m=h&63;h=m>>>0<56?56:120;n=h-m|0;do if((h|0)==(m|0)){o=k;p=l}else{q=fr(n|0,0,3)|0;r=Gr(q|0,D|0,k|0,l|0)|0;q=D;s=g;c[s>>2]=r;c[s+4>>2]=q;s=64-m|0;t=d+40+m|0;if(n>>>0<s>>>0){$j(t|0,146170,n|0)|0;o=r;p=q;break}$j(t|0,146170,s|0)|0;t=d+40|0;Zd(d,t);q=146170+s|0;r=n-s|0;if(r>>>0>63){s=r;u=q;while(1){Zd(d,u);v=u+64|0;s=s+-64|0;if(s>>>0<=63){w=56;x=v;break}else u=v}}else{w=r;x=q}$j(t|0,x|0,w|0)|0;u=g;o=c[u>>2]|0;p=c[u+4>>2]|0}while(0);w=kr(o|0,p|0,3)|0;x=w&63;w=Gr(o|0,p|0,64,0)|0;p=g;c[p>>2]=w;c[p+4>>2]=D;p=64-x|0;w=d+40+x|0;if(p>>>0>8){x=f;g=c[x>>2]|0;o=c[x+4>>2]|0;x=w;n=x;a[n>>0]=g;a[n+1>>0]=g>>8;a[n+2>>0]=g>>16;a[n+3>>0]=g>>24;g=x+4|0;a[g>>0]=o;a[g+1>>0]=o>>8;a[g+2>>0]=o>>16;a[g+3>>0]=o>>24;y=d}else{$j(w|0,f|0,p|0)|0;w=d+40|0;Zd(d,w);o=f+p|0;f=8-p|0;if(f>>>0>63){p=f;g=o;while(1){Zd(d,g);x=g+64|0;n=p+-64|0;if(n>>>0>63){p=n;g=x}else{z=n;A=x;break}}}else{z=f;A=o}$j(w|0,A|0,z|0)|0;y=d}z=c[y>>2]|0;a[b+3>>0]=z;a[b+2>>0]=z>>>8;a[b+1>>0]=z>>>16;a[b>>0]=z>>>24;z=c[d+4>>2]|0;a[b+7>>0]=z;a[b+6>>0]=z>>>8;a[b+5>>0]=z>>>16;a[b+4>>0]=z>>>24;z=c[d+8>>2]|0;a[b+11>>0]=z;a[b+10>>0]=z>>>8;a[b+9>>0]=z>>>16;a[b+8>>0]=z>>>24;z=c[d+12>>2]|0;a[b+15>>0]=z;a[b+14>>0]=z>>>8;a[b+13>>0]=z>>>16;a[b+12>>0]=z>>>24;z=c[d+16>>2]|0;a[b+19>>0]=z;a[b+18>>0]=z>>>8;a[b+17>>0]=z>>>16;a[b+16>>0]=z>>>24;z=c[d+20>>2]|0;a[b+23>>0]=z;a[b+22>>0]=z>>>8;a[b+21>>0]=z>>>16;a[b+20>>0]=z>>>24;z=c[d+24>>2]|0;a[b+27>>0]=z;a[b+26>>0]=z>>>8;a[b+25>>0]=z>>>16;a[b+24>>0]=z>>>24;z=c[d+28>>2]|0;a[b+31>>0]=z;a[b+30>>0]=z>>>8;a[b+29>>0]=z>>>16;a[b+28>>0]=z>>>24;Ld[c[1788]&1](d,104);i=e;return}function Ke(a,b,d){a=+a;b=+b;d=+d;var e=0,f=0,g=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,u=0.0,v=0.0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,E=0.0,F=0.0,G=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e+16|0;g=e+12|0;l=e+8|0;m=e;h[k>>3]=a;n=c[k+4>>2]&2146435072;a:do if(n>>>0<2146435072|(n|0)==2146435072&0<0?(h[k>>3]=b,o=c[k+4>>2]&2146435072,o>>>0<2146435072|(o|0)==2146435072&0<0):0){h[k>>3]=d;o=c[k>>2]|0;p=c[k+4>>2]|0;q=p&2146435072;if(q>>>0<2146435072|(q|0)==2146435072&0<0){if(a==0.0|b==0.0){r=a*b+d;break}if(d==0.0){r=a*b;break}s=+hj(a,f);u=+hj(b,g);v=+hj(d,l);q=fz()|0;w=(c[g>>2]|0)+(c[f>>2]|0)|0;x=w-(c[l>>2]|0)|0;if((x|0)<-53){Gr(o|0,p|0,0,1048576)|0;switch(q|0){case 3072:{if(a>0.0^b<0.0^d<0.0){r=d;break a}r=+wg(d,0.0);break a;break}case 1024:{if(a>0.0^b<0.0){r=d;break a}r=+wg(d,-t);break a;break}case 2048:{if(!(a>0.0^b<0.0)){r=d;break a}r=+wg(d,t);break a;break}default:{r=d;break a}}}if((x|0)<107)y=+Ti(v,0-x|0);else y=+An(2.2250738585072014e-308,v);us(0)|0;v=s*134217729.0;z=v+(s-v);v=s-z;s=u*134217729.0;A=s+(u-s);s=u-A;u=z*A;B=v*A+z*s;z=u+B;A=v*s+(B+(u-z));u=z+y;B=u-z;s=y-B+(z-(u-B));if(u==0.0){us(q)|0;h[m>>3]=y;B=z+ +h[m>>3];r=B+ +Ti(A,w);break}if(q|0){x=vy(32)|0;us(q)|0;B=+Ti(u+(A+s),w);if((ai(B)|0)<-1022?vy(32)|0:0){r=B;break}if(!x){r=B;break}r=B;break}B=A+s;z=B-s;v=A-z+(s-(B-z));if(v!=0.0?(h[k>>3]=B,x=c[k>>2]|0,q=c[k+4>>2]|0,(x&1|0)==0&0==0):0){h[k>>3]=v;p=kr(c[k>>2]^x|0,c[k+4>>2]^q|0,62)|0;o=D;C=Gr(x|0,q|0,1,0)|0;q=jr(C|0,D|0,p|0,o|0)|0;o=D;c[k>>2]=q;c[k+4>>2]=o;E=+h[k>>3]}else E=B;B=u+E;if(((ai(u)|0)+w|0)>-1023){r=+Ti(B,w);break}v=B-u;z=E-v+(u-(B-v));if(z!=0.0?(h[k>>3]=B,o=c[k>>2]|0,q=c[k+4>>2]|0,p=kr(o|0,q|0,52)|0,((o&1|0)!=0|0!=0)^(w|0)!=(0-(p&2047)|0)):0){h[k>>3]=z;p=kr(c[k>>2]^o|0,c[k+4>>2]^q|0,62)|0;C=Gr(o|0,q|0,1,0)|0;q=jr(C|0,D|0,p&2|0,0)|0;p=D;c[k>>2]=q;c[k+4>>2]=p;F=+h[k>>3]}else F=B;r=+Ti(F,w)}else r=d}else G=3;while(0);if((G|0)==3)r=a*b+d;i=e;return +r}function We(b,c,e,f,g,h,k){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;l=i;i=i+256|0;if((i|0)>=(j|0))ca();m=l;a:do if(!(a[g+3>>0]&15)){n=g+12|0;o=d[g+4>>0]<<8|d[g+5>>0];p=d[g+6>>0]<<8|d[g+7>>0];if((p+o|0)>>>0<=64){if(!o){q=g+506|0;r=n}else{s=g;t=g+506|0;u=o;o=n;while(1){u=u+-1|0;n=a[o>>0]|0;b:do if((o-s|0)<512){v=n;w=o;while(1){if(((v&255)+-1|0)>>>0>=127){x=v;y=w;break b}z=w+1|0;A=a[z>>0]|0;if((z-s|0)<512){v=A;w=z}else{x=A;y=z;break}}}else{x=n;y=o}while(0);if((x&255)>193){B=-1;break a}if(x<<24>>24==-63){if(y>>>0>t>>>0|(a[y+1>>0]|0)==-1){B=-1;break a}}else if(y>>>0>t>>>0){B=-1;break a}n=y+(x<<24>>24?6:5)|0;if(!u){q=t;r=n;break}else o=n}}if(!p)B=0;else{o=g;t=g+512|0;u=(k|0)!=0;s=b;n=f;w=p;v=0;z=r;while(1){w=w+-1|0;A=a[z>>0]|0;c:do if((z-o|0)<512){C=A;D=z;while(1){if(((C&255)+-1|0)>>>0>=127){E=C;F=D;break c}G=D+1|0;H=a[G>>0]|0;if((G-o|0)<512){C=H;D=G}else{E=H;F=G;break}}}else{E=A;F=z}while(0);if((E&255)>193){B=-1;break a}if(E<<24>>24==-63){if(F>>>0>q>>>0|(a[F+1>>0]|0)==-1){B=-1;break a}}else if(F>>>0>q>>>0){B=-1;break a}A=F+(E<<24>>24?2:1)|0;D=d[A+8>>0]<<8|d[A+9>>0];if((A+D|0)>>>0>t>>>0){B=-1;break a}if(D>>>0>e>>>0?1:(d[A+1>>0]|0)!=(h|0)){I=s;J=n;K=v}else{if(u?(Mf(g,t,A+10|0,m,256)|0)<0:0){B=-1;break a}if((n|0)!=0&(s|0)!=0){if(u)Wu(s,m)|0;else $j(s|0,A+10|0,D|0)|0;L=s+c|0;M=n+-1|0}else{L=s;M=n}I=L;J=M;K=v+1|0}if(!w){B=K;break}else{s=I;n=J;v=K;z=A+(D+10)|0}}}}else B=-1}else B=0;while(0);i=l;return B|0}function Se(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;g=i;i=i+16|0;if((i|0)>=(j|0))ca();h=g;a:do if((d|0)!=0?(a[b>>0]|0)!=0:0){c[e>>2]=1;k=a[b>>0]|0;switch(k<<24>>24){case 42:{l=-5;break a;break}case 92:{m=b+1|0;if((f&2|0)==0&(a[m>>0]|0)!=0){c[e>>2]=2;n=m;o=a[m>>0]|0;p=1;q=30}else r=92;break}case 91:{b:do if(d>>>0>1){switch(a[b+1>>0]|0){case 33:case 94:break;default:{s=1;break b}}s=2}else s=1;while(0);if(s>>>0<d>>>0)t=((a[b+s>>0]|0)==93&1)+s|0;else t=s;c:do if(t>>>0<d>>>0){m=t;while(1){u=a[b+m>>0]|0;switch(u<<24>>24){case 93:case 0:{v=m;q=26;break c;break}default:{}}w=m+1|0;d:do if(w>>>0<d>>>0?(x=a[b+w>>0]|0,u<<24>>24==91&x<<24>>24!=0):0){switch(x<<24>>24){case 61:case 46:case 58:break;default:{y=m;break d}}z=m+2|0;if(z>>>0<d>>>0)A=(a[b+z>>0]|0)==0?z:m+3|0;else A=z;e:do if(A>>>0<d>>>0){z=A;while(1){B=a[b+z>>0]|0;if(!(B<<24>>24)){C=z;break e}if(!(B<<24>>24!=93?1:(a[b+(z+-1)>>0]|0)!=x<<24>>24)){C=z;break e}B=z+1|0;if(B>>>0<d>>>0)z=B;else{C=B;break}}}else C=A;while(0);if((C|0)==(d|0)){D=91;E=1;break c}if(!(a[b+C>>0]|0)){v=C;q=26;break c}else y=C}else y=m;while(0);u=y+1|0;if(u>>>0<d>>>0)m=u;else{v=u;q=26;break c}}}else{v=t;q=26}while(0);if((q|0)==26)if((v|0)==(d|0)){D=91;E=1}else{m=(a[b+v>>0]|0)==0;D=m?91:-3;E=m?1:v+1|0}c[e>>2]=E;l=D;break a;break}case 63:{l=-4;break a;break}default:{n=b;o=k;p=0;q=30}}if((q|0)==30)if(o<<24>>24<0){m=Kg(h,n,d)|0;if((m|0)<0){c[e>>2]=0;F=-2}else{c[e>>2]=m+p;F=c[h>>2]|0}l=F;break}else r=o;l=r<<24>>24}else q=3;while(0);if((q|0)==3){c[e>>2]=0;l=0}i=g;return l|0}function Ue(a,b,d){a=+a;b=+b;d=d|0;var e=0,f=0,h=0,i=0,j=0,l=0,m=0.0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0.0,T=0.0,U=0.0,V=0;e=(g[k>>2]=a,c[k>>2]|0);f=(g[k>>2]=b,c[k>>2]|0);h=e>>>23&255;i=f>>>23&255;j=e>>>31;l=f>>>31;c[d>>2]=0;m=+O(+b);n=(g[k>>2]=m,c[k>>2]|0);do if((n|0)!=0?!(n>>>0>2139095040|(h|0)==255):0){m=+O(+a);if(!((g[k>>2]=m,c[k>>2]|0)|0))o=a;else{if(!h){p=e<<9;if((p|0)>-1){q=0;r=p;while(1){p=q+-1|0;r=r<<1;if((r|0)<=-1){s=p;break}else q=p}}else s=0;t=s;u=e<<1-s}else{t=h;u=e&8388607|8388608}if(!i){q=f<<9;if((q|0)>-1){r=0;p=q;while(1){q=r+-1|0;p=p<<1;if((p|0)<=-1){v=q;break}else r=q}}else v=0;w=v;x=f<<1-v}else{w=i;x=f&8388607|8388608}if((t|0)<(w|0))if((t+1|0)==(w|0)){y=t;z=0;A=u;B=22}else{o=a;break}else{r=u-x|0;p=r>>>31^1;q=(r|0)>-1?r:u;if((t|0)>(w|0)){r=p;C=q;D=t;while(1){E=C<<1;D=D+-1|0;F=E-x|0;G=(F>>>31|r<<1)^1;H=(F|0)>-1?F:E;if((D|0)<=(w|0)){I=G;J=H;K=w;break}else{r=G;C=H}}}else{I=p;J=q;K=t}if(J)if(J>>>0<8388608){C=K;r=J;while(1){D=r<<1;H=C+-1|0;if(D>>>0<8388608){C=H;r=D}else{y=H;z=I;A=D;B=22;break}}}else{y=K;z=I;A=J;B=22}else{L=-30;M=I;N=0;B=24}}if((B|0)==22)if((y|0)>0){P=y;Q=z;R=A+-8388608|y<<23}else{L=y;M=z;N=A;B=24}if((B|0)==24){P=L;Q=M;R=N>>>(1-L|0)}m=(c[k>>2]=R,+g[k>>2]);S=(l|0)==0?b:-b;if((P|0)!=(w|0))if((P+1|0)==(w|0)){T=m*2.0;if(!(T>S)?(Q&1|0)==0|T!=S:0){U=m;V=Q}else B=29}else{U=m;V=Q}else B=29;if((B|0)==29){U=m-S;V=Q+1|0}r=V&2147483647;c[d>>2]=(j|0)!=(l|0)?0-r|0:r;o=j|0?-U:U}}else B=3;while(0);if((B|0)==3){U=a*b;o=U/U}return +o}function Te(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;i=i+16|0;if((i|0)>=(j|0))ca();h=g+4|0;k=g;l=a+12|0;m=c[l>>2]|0;n=(f|0)!=0;if(n)c[f>>2]=0;c[k>>2]=b;c[h>>2]=c[k>>2];b=Ii(a,h)|0;a:do if(!b){o=a+16|0;p=(d|0)==0;q=(e|0)==0;r=c[l>>2]|0;if((r|0)>(m|0)){s=r;while(1){r=s+-1|0;c[l>>2]=r;t=c[(c[o>>2]|0)+(r<<2)>>2]|0;b:do switch(c[t>>2]|0){case 0:{r=c[t+4>>2]|0;switch(c[r>>2]|0){case -3:break;case -2:{if(q)break b;c[e>>2]=c[e>>2]|c[r+4>>2];break b;break}default:break b}u=c[r+4>>2]|0;if((u|0)>-1){c:do if(!p){r=c[d>>2]|0;d:do if((r|0)>-1){v=r;w=d;x=0;while(1){if((v|0)==(u|0)){y=w;z=x;break}A=x+1|0;B=d+(A<<2)|0;v=c[B>>2]|0;if((v|0)<=-1){C=B;D=A;break d}else{w=B;x=A}}if((u|0)<0){C=y;D=z}else break c}else{C=d;D=0}while(0);c[C>>2]=u;c[d+(D+1<<2)>>2]=-1}while(0);if(n)c[f>>2]=(c[f>>2]|0)+1}break}case 3:{u=c[t+4>>2]|0;r=c[u>>2]|0;if(c[r+8>>2]|0){c[k>>2]=r;c[h>>2]=c[k>>2];E=Ii(a,h)|0;F=6;break b}r=c[u+4>>2]|0;if(c[r+8>>2]|0){c[k>>2]=r;c[h>>2]=c[k>>2];E=Ii(a,h)|0;F=6}break}case 1:{r=c[t+4>>2]|0;c[k>>2]=c[r>>2];c[h>>2]=c[k>>2];u=Ii(a,h)|0;if(u|0){G=u;break a}c[k>>2]=c[r+4>>2];c[h>>2]=c[k>>2];E=Ii(a,h)|0;F=6;break}case 2:{r=c[c[t+4>>2]>>2]|0;if(c[r+8>>2]|0){c[k>>2]=r;c[h>>2]=c[k>>2];E=Ii(a,h)|0;F=6}break}default:{}}while(0);if((F|0)==6?(F=0,E|0):0){G=E;break a}s=c[l>>2]|0;if((s|0)<=(m|0)){G=0;break a}}}else G=0}else G=b;while(0);i=g;return G|0}function Ve(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+16|0;if((i|0)>=(j|0))ca();h=g;k=g+8|0;l=h;c[l>>2]=0;c[l+4>>2]=0;c[k>>2]=h;if(!(d&8))m=0;else m=c[f+8>>2]|0;l=a[b>>0]|0;if(l<<24>>24==47){n=b;while(1){o=n+1|0;p=a[o>>0]|0;if(p<<24>>24==47)n=o;else{q=p;r=165782;s=o;break}}}else{q=l;r=169844;s=b}a:do if((zi(s)|0)>>>0<=4096){l=(d&32|0)!=0;if(l)t=q;else{c[f+8>>2]=m;c[f>>2]=0;c[f+4>>2]=0;t=a[s>>0]|0}if(t<<24>>24){n=xe(r,s,d,(e|0)==0?2:e,k)|0;if((n|0)==1){o=c[h>>2]|0;if(!o){u=1;break}else v=o;while(1){o=v;v=c[v>>2]|0;de(o);if(!v){u=1;break a}}}o=c[h>>2]|0;c[k>>2]=o;if(o){p=o;o=0;while(1){p=c[p>>2]|0;c[k>>2]=p;w=o+1|0;if(!p){x=w;break}else o=w}if(x){y=h;z=k;A=x;B=n}else{C=h;D=k;E=n;F=16}}else{C=h;D=k;E=n;F=16}}else{c[k>>2]=0;C=h;D=k;E=0;F=16}if((F|0)==16){if(!(d&16)){u=3;break}c[k>>2]=h;if(!(Sm(k,b,zi(b)|0,0)|0)){y=C;z=D;A=1;B=E}else{u=1;break}}do if(!l){o=Wd((A+m<<2)+4|0)|0;c[f+4>>2]=o;if(!o){p=c[h>>2]|0;if(!p){u=1;break a}else G=p;while(1){p=G;G=c[G>>2]|0;de(p);if(!G){u=1;break a}}}else{if(!m){H=0;break}Gl(o|0,0,m<<2|0)|0;H=m;break}}else{p=f+4|0;w=c[f>>2]|0;I=ek(c[p>>2]|0,(A+m+w<<2)+4|0)|0;if(I|0){c[p>>2]=I;H=w+m|0;break}w=c[h>>2]|0;if(!w){u=1;break a}else J=w;while(1){w=J;J=c[J>>2]|0;de(w);if(!J){u=1;break a}}}while(0);l=c[y>>2]|0;c[z>>2]=l;n=c[f+4>>2]|0;o=l;l=0;do{c[n+(l+H<<2)>>2]=o+4;o=c[o>>2]|0;c[z>>2]=o;l=l+1|0}while(l>>>0<A>>>0);c[n+(A+H<<2)>>2]=0;c[f>>2]=(c[f>>2]|0)+A;if(!(d&4)){Ie(n+(H<<2)|0,A,4,3);u=B}else u=B}else u=1;while(0);i=g;return u|0}function Xe(b,e,f,g,h,i){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=e<<7;k=i+j|0;l=i+(e<<8)|0;m=e<<5;n=(m|0)==0;if(!n){o=0;do{p=b+(o<<2)|0;c[i+(o<<2)>>2]=(d[p+1>>0]|0)<<8|(d[p>>0]|0)|(d[p+2>>0]|0)<<16|(d[p+3>>0]|0)<<24;o=o+1|0}while((o|0)!=(m|0))}o=(f|0)==0&(g|0)==0;a:do if(!o){p=m&1073741792;if(!p){q=0;r=0;do{Be(i,k,l,e);Be(k,i,l,e);q=Gr(q|0,r|0,2,0)|0;r=D}while(r>>>0<g>>>0|(r|0)==(g|0)&q>>>0<f>>>0)}else{q=0;r=0;do{s=Zp(q|0,r|0,m|0,0)|0;t=h+(s<<2)|0;s=0;do{c[t+(s<<2)>>2]=c[i+(s<<2)>>2];s=s+1|0}while((s|0)!=(p|0));Be(i,k,l,e);s=Zp(q|1|0,r|0,m|0,0)|0;t=h+(s<<2)|0;s=0;do{c[t+(s<<2)>>2]=c[k+(s<<2)>>2];s=s+1|0}while((s|0)!=(p|0));Be(k,i,l,e);q=Gr(q|0,r|0,2,0)|0;r=D}while(r>>>0<g>>>0|(r|0)==(g|0)&q>>>0<f>>>0)}if(!o){q=j+-64|0;r=q+i|0;p=Gr(f|0,g|0,-1,-1)|0;s=m&1073741792;t=q+k|0;if(!s){q=0;u=0;while(1){Be(i,k,l,e);Be(k,i,l,e);q=Gr(q|0,u|0,2,0)|0;u=D;if(!(u>>>0<g>>>0|(u|0)==(g|0)&q>>>0<f>>>0))break a}}else{v=0;w=0}do{q=Zp(c[r>>2]&p|0,0,m|0,0)|0;u=h+(q<<2)|0;q=0;do{x=i+(q<<2)|0;c[x>>2]=c[x>>2]^c[u+(q<<2)>>2];q=q+1|0}while((q|0)!=(s|0));Be(i,k,l,e);q=Zp(c[t>>2]&p|0,0,m|0,0)|0;u=h+(q<<2)|0;q=0;do{x=k+(q<<2)|0;c[x>>2]=c[x>>2]^c[u+(q<<2)>>2];q=q+1|0}while((q|0)!=(s|0));Be(k,i,l,e);v=Gr(v|0,w|0,2,0)|0;w=D}while(w>>>0<g>>>0|(w|0)==(g|0)&v>>>0<f>>>0)}}while(0);if(n)return;else y=0;do{n=b+(y<<2)|0;f=c[i+(y<<2)>>2]|0;a[n>>0]=f;a[n+1>>0]=f>>>8;a[n+2>>0]=f>>>16;a[n+3>>0]=f>>>24;y=y+1|0}while((y|0)!=(m|0));return}function _e(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e+16|0;g=e;h=b+1|0;k=a[h>>0]|0;switch(k<<24>>24){case 33:case 94:{l=b+2|0;m=l;n=a[l>>0]|0;o=1;break}default:{m=h;n=k;o=0}}a:do switch(n<<24>>24){case 93:{if((d|0)==93){p=o^1;break a}else{q=m+1|0;r=10;break a}break}case 45:{if((d|0)==45){p=o^1;break a}else{q=m+1|0;r=10;break a}break}default:{q=m;r=10}}while(0);b:do if((r|0)==10){c[f>>2]=a[q+-1>>0];m=o^1;n=q;c:while(1){k=a[n>>0]|0;d:do switch(k<<24>>24){case 93:{p=o;break b;break}case 45:{h=n+1|0;if((a[h>>0]|0)==93)r=27;else{l=Kg(g,h,4)|0;if((l|0)<0){s=0;break c}h=c[f>>2]|0;b=c[g>>2]|0;if((b|0)>=(h|0)?(d-h|0)>>>0<=(b-h|0)>>>0:0){s=m;break c}t=n+(l+-1)|0}break}case 91:{l=a[n+1>>0]|0;switch(l<<24>>24){case 61:case 46:case 58:break;default:{r=27;break d}}h=n+3|0;while(1){b=h+-1|0;if((a[b>>0]|0)==l<<24>>24?(a[h>>0]|0)==93:0){u=h;v=b;break}h=h+1|0}h=n+2|0;if((l<<24>>24==58?(b=v-h|0,(b|0)<16):0)?($j(g|0,h|0,b|0)|0,a[g+b>>0]=0,(Pi(d,tn(g)|0)|0)!=0):0){p=m;break b}else t=u;break}default:if(k<<24>>24>-1)r=27;else{b=Kg(f,n,4)|0;if((b|0)<0){p=0;break b}w=n+(b+-1)|0;x=c[f>>2]|0;r=30}}while(0);if((r|0)==27){r=0;b=k&255;c[f>>2]=b;w=n;x=b;r=30}if((r|0)==30){r=0;if((x|0)==(d|0)){p=m;break b}else t=w}n=t+1|0}p=s}while(0);i=e;return p|0}function $e(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;h=i;i=i+192|0;if((i|0)>=(j|0))ca();k=h+48|0;l=h+16|0;m=h;n=h+88|0;switch(b|0){case 2:{b=d[e+1>>0]|0;o=d[e+2>>0]|0;p=d[e+3>>0]|0;c[m>>2]=d[e>>0];c[m+4>>2]=b;c[m+8>>2]=o;c[m+12>>2]=p;if((rp(f,g,153006,m)|0)>>>0<g>>>0)q=f;else r=15;break}case 10:{m=(Vk(e,152925,12)|0)==0;p=(d[e>>0]|0)<<8|(d[e+1>>0]|0);o=(d[e+2>>0]|0)<<8|(d[e+3>>0]|0);b=(d[e+4>>0]|0)<<8|(d[e+5>>0]|0);s=(d[e+6>>0]|0)<<8|(d[e+7>>0]|0);t=(d[e+8>>0]|0)<<8|(d[e+9>>0]|0);u=(d[e+10>>0]|0)<<8|(d[e+11>>0]|0);v=d[e+12>>0]|0;w=a[e+13>>0]|0;x=a[e+14>>0]|0;y=a[e+15>>0]|0;if(m){c[k>>2]=p;c[k+4>>2]=o;c[k+8>>2]=b;c[k+12>>2]=s;c[k+16>>2]=t;c[k+20>>2]=u;c[k+24>>2]=v;c[k+28>>2]=w&255;c[k+32>>2]=x&255;c[k+36>>2]=y&255;rp(n,100,152962,k)|0}else{c[l>>2]=p;c[l+4>>2]=o;c[l+8>>2]=b;c[l+12>>2]=s;c[l+16>>2]=t;c[l+20>>2]=u;c[l+24>>2]=w&255|v<<8;c[l+28>>2]=(x&255)<<8|y&255;rp(n,100,152938,l)|0}l=a[n>>0]|0;if(l<<24>>24){y=l;l=n;x=0;v=0;w=2;while(1){if((v|0)==0|y<<24>>24==58){u=Bg(l,152992)|0;t=(u|0)>(w|0);z=t?v:x;A=t?u:w}else{z=x;A=w}u=v+1|0;l=n+u|0;y=a[l>>0]|0;if(!(y<<24>>24)){B=z;C=v;D=A;break}else{x=z;v=u;w=A}}if((D|0)>2){a[n+(B+1)>>0]=58;A=n+B|0;a[A>>0]=58;Fn(A+2|0,A+D|0,C+2-D-B|0)|0}}if((zi(n)|0)>>>0<g>>>0){Wu(f,n)|0;q=f}else r=15;break}default:{c[($r()|0)>>2]=97;q=0}}if((r|0)==15){c[($r()|0)>>2]=28;q=0}i=h;return q|0}function Ze(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;k=i;i=i+240|0;if((i|0)>=(j|0))ca();l=k;m=c[e>>2]|0;n=c[e+4>>2]|0;c[l>>2]=a;e=0-b|0;a:do if((n|0)!=0|(m|0)!=1?(o=a+(0-(c[h+(f<<2)>>2]|0))|0,(Rd[d&7](o,a)|0)>=1):0){p=a;q=f;r=(g|0)==0;s=o;o=1;t=m;u=n;while(1){if(r&(q|0)>1){v=p+e|0;w=c[h+(q+-2<<2)>>2]|0;if((Rd[d&7](v,s)|0)>-1){x=p;y=q;z=o;A=19;break a}if((Rd[d&7](v+(0-w)|0,s)|0)>-1){x=p;y=q;z=o;A=19;break a}}w=o+1|0;c[l+(o<<2)>>2]=s;v=t+-1|0;do if(v){if(!(v&1)){B=v;C=0;while(1){D=C+1|0;B=B>>>1;if(B&1|0){E=D;break}else C=D}}else{if(!u)F=32;else{if(!(u&1)){G=u;H=0}else{I=0;J=t;K=u;L=0;break}while(1){C=H+1|0;G=G>>>1;if(G&1|0){F=C;break}else H=C}}E=F+32|0}if(E>>>0>31){M=E;A=15}else{I=E;J=t;K=u;L=E}}else{M=32;A=15}while(0);if((A|0)==15){A=0;I=M+-32|0;J=u;K=0;L=M}t=K<<32-I|J>>>I;u=K>>>I;v=L+q|0;if(!((u|0)!=0|(t|0)!=1)){x=s;y=v;z=w;A=19;break a}C=s+(0-(c[h+(v<<2)>>2]|0))|0;if((Rd[d&7](C,c[l>>2]|0)|0)<1){N=s;O=v;P=0;Q=w;A=18;break}else{B=s;q=v;r=1;s=C;o=w;p=B}}}else{N=a;O=f;P=g;Q=1;A=18}while(0);if((A|0)==18?(P|0)==0:0){x=N;y=O;z=Q;A=19}if((A|0)==19){Hi(b,l,z);oh(x,b,d,y,h)}i=k;return}function Ye(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;i=c[1891]|0;if((i|0)==0|(c[41526]|0)!=0){c[41526]=0;c[41527]=0;c[1891]=1;j=1}else j=i;a:do if(((j|0)<(b|0)?(i=c[d+(j<<2)>>2]|0,(i|0)!=0):0)?(a[i>>0]|0)==45:0){k=i+1|0;l=a[k>>0]|0;if(!h){if(l<<24>>24==45?a[i+2>>0]|0:0){m=45;n=10}}else if(l<<24>>24){m=l;n=10}if((n|0)==10){l=c[f>>2]|0;o=m<<24>>24==45;b:do if(l|0){p=o?i+2|0:k;q=l;r=0;c:while(1){s=a[q>>0]|0;d:do if(!(s<<24>>24)){t=p;n=15}else{u=s;v=q;w=p;while(1){if(u<<24>>24!=(a[w>>0]|0))break d;v=v+1|0;x=w+1|0;u=a[v>>0]|0;if(!(u<<24>>24)){t=x;n=15;break}else w=x}}while(0);e:do if((n|0)==15){n=0;s=a[t>>0]|0;switch(s<<24>>24){case 61:case 0:break;default:break e}w=c[f+(r<<4)+4>>2]|0;if(s<<24>>24!=61){y=w;z=r;n=19;break c}if(w|0){A=r;B=t;n=18;break c}}while(0);r=r+1|0;q=c[f+(r<<4)>>2]|0;if(!q)break b}do if((n|0)==18){c[41529]=B+1;C=j;D=A}else if((n|0)==19)if((y|0)==1){q=j+1|0;c[1891]=q;r=c[d+(q<<2)>>2]|0;c[41529]=r;if(!r){E=58;break a}else{C=q;D=z;break}}else{c[41529]=0;C=j;D=z;break}while(0);c[1891]=C+1;if(g|0)c[g>>2]=D;q=c[f+(D<<4)+8>>2]|0;r=c[f+(D<<4)+12>>2]|0;if(!q){E=r;break a}c[q>>2]=r;E=0;break a}while(0);if(o){c[1891]=j+1;E=63;break}}E=lf(b,d,e)|0}else E=-1;while(0);return E|0}function cf(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0,i=0,j=0.0,l=0.0,m=0,n=0.0,o=0,p=0.0,q=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=b&2147483647;e=kr(c[k>>2]|0,b|0,63)|0;do if(d>>>0>1078159481){f=+O(+a);h[k>>3]=f;b=c[k+4>>2]|0;if(!(b>>>0>2146435072|(b|0)==2146435072&(c[k>>2]|0)>>>0>0))if(!e)if(a>709.782712893384)g=a*8988465674311579538646525.0e283;else i=11;else g=-1.0;else g=a}else{if(d>>>0<=1071001154)if(d>>>0<1016070144){g=a;break}else{j=a;l=0.0;m=0;i=14;break}if(d>>>0<1072734898)if(!e){n=a+-.6931471803691238;o=1;p=1.9082149292705877e-10;i=12;break}else{n=a+.6931471803691238;o=-1;p=-1.9082149292705877e-10;i=12;break}else i=11}while(0);if((i|0)==11){d=~~(a*1.4426950408889634+(e|0?-.5:.5));f=+(d|0);n=a-f*.6931471803691238;o=d;p=f*1.9082149292705877e-10;i=12}if((i|0)==12){f=n-p;j=f;l=n-f-p;m=o;i=14}a:do if((i|0)==14){p=j*.5;f=j*p;n=f*(f*(f*(f*(4.008217827329362e-06-f*2.0109921818362437e-07)+-7.93650757867488e-05)+1.5873015872548146e-03)+-.03333333333333313)+1.0;a=3.0-p*n;p=f*((n-a)/(6.0-j*a));if(!m){g=j-(j*p-f);break}a=j*(p-l)-l-f;switch(m|0){case -1:{g=(j-a)*.5+-.5;break a;break}case 1:{if(j<-.25){g=(a-(j+.5))*-2.0;break a}else{g=(j-a)*2.0+1.0;break a}break}default:{o=fr(m+1023|0,0,52)|0;d=D;c[k>>2]=o;c[k+4>>2]=d;f=+h[k>>3];if(m>>>0>56){p=j-a+1.0;g=((m|0)==1024?p*2.0*8988465674311579538646525.0e283:f*p)+-1.0;break a}d=fr(1023-m|0,0,52)|0;o=D;if((m|0)<20){c[k>>2]=d;c[k+4>>2]=o;q=1.0-+h[k>>3]+(j-a)}else{c[k>>2]=d;c[k+4>>2]=o;q=j-(+h[k>>3]+a)+1.0}g=f*q;break a}}}while(0);return +g}function mf(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f>>0]|0}else h=vh(a)|0;switch(h|0){case 43:case 45:{f=(h|0)==45&1;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i>>0]|0}else j=vh(a)|0;if((b|0)!=0&(j+-48|0)>>>0>9?(c[g>>2]|0)!=0:0){c[e>>2]=(c[e>>2]|0)+-1;k=j;l=f}else{k=j;l=f}break}default:{k=h;l=0}}if((k+-48|0)>>>0>9)if(!(c[g>>2]|0)){m=-2147483648;n=0}else{c[e>>2]=(c[e>>2]|0)+-1;m=-2147483648;n=0}else{h=k;k=0;while(1){f=h+-48+(k*10|0)|0;j=c[e>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[e>>2]=j+1;o=d[j>>0]|0}else o=vh(a)|0;if((o+-48|0)>>>0<10&(f|0)<214748364){h=o;k=f}else{p=f;q=o;break}}o=((p|0)<0)<<31>>31;if((q+-48|0)>>>0<10){k=p;h=o;f=q;while(1){j=Zp(k|0,h|0,10,0)|0;b=D;i=Gr(f|0,((f|0)<0)<<31>>31|0,-48,-1)|0;r=Gr(i|0,D|0,j|0,b|0)|0;b=D;j=c[e>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[e>>2]=j+1;s=d[j>>0]|0}else s=vh(a)|0;if((s+-48|0)>>>0<10&((b|0)<21474836|(b|0)==21474836&r>>>0<2061584302)){k=r;h=b;f=s}else{t=r;u=b;v=s;break}}}else{t=p;u=o;v=q}if((v+-48|0)>>>0<10)do{v=c[e>>2]|0;if(v>>>0<(c[g>>2]|0)>>>0){c[e>>2]=v+1;w=d[v>>0]|0}else w=vh(a)|0}while((w+-48|0)>>>0<10);if(c[g>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;e=(l|0)!=0;l=jr(0,0,t|0,u|0)|0;m=e?D:u;n=e?l:t}D=m;return n|0}function ff(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;a:do if(!b){h=c[d>>2]|0;k=c[h>>2]|0;if(!k)l=0;else{m=0;n=k;k=h;while(1){if(n>>>0>127){h=Ei(g,n,0)|0;if((h|0)==-1){l=-1;break a}else o=h}else o=1;h=o+m|0;k=k+4|0;n=c[k>>2]|0;if(!n){l=h;break}else m=h}}}else{b:do if(e>>>0>3){m=b;n=e;k=c[d>>2]|0;while(1){h=c[k>>2]|0;if((h+-1|0)>>>0>126){if(!h){p=m;q=n;break}r=Ei(m,h,0)|0;if((r|0)==-1){l=-1;break a}s=m+r|0;t=n-r|0;u=k}else{a[m>>0]=h;s=m+1|0;t=n+-1|0;u=c[d>>2]|0}k=u+4|0;c[d>>2]=k;if(t>>>0<=3){v=s;w=t;break b}else{m=s;n=t}}a[p>>0]=0;c[d>>2]=0;l=e-q|0;break a}else{v=b;w=e}while(0);if(w){n=v;m=w;k=c[d>>2]|0;while(1){h=c[k>>2]|0;if((h+-1|0)>>>0>126){if(!h){x=n;y=m;z=19;break}r=Ei(g,h,0)|0;if((r|0)==-1){l=-1;break a}if(m>>>0<r>>>0){A=m;z=22;break}Ei(n,c[k>>2]|0,0)|0;B=n+r|0;C=m-r|0;D=k}else{a[n>>0]=h;B=n+1|0;C=m+-1|0;D=c[d>>2]|0}k=D+4|0;c[d>>2]=k;if(!C){l=e;break a}else{n=B;m=C}}if((z|0)==19){a[x>>0]=0;c[d>>2]=0;l=e-y|0;break}else if((z|0)==22){l=e-A|0;break}}else l=e}while(0);i=f;return l|0}function af(a,b){a=+a;b=+b;var d=0,e=0,f=0,h=0,i=0,j=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0;d=(g[k>>2]=a,c[k>>2]|0);e=(g[k>>2]=b,c[k>>2]|0);f=d>>>23&255;h=e>>>23&255;i=d&-2147483648;j=e<<1;a:do if((j|0)!=0?(l=+O(+b),!((g[k>>2]=l,c[k>>2]|0)>>>0>2139095040|(f|0)==255)):0){m=d<<1;if(m>>>0<=j>>>0)return +((m|0)==(j|0)?a*0.0:a);if(!f){m=d<<9;if((m|0)>-1){n=0;o=m;while(1){m=n+-1|0;o=o<<1;if((o|0)<=-1){p=m;break}else n=m}}else p=0;q=p;r=d<<1-p}else{q=f;r=d&8388607|8388608}if(!h){n=e<<9;if((n|0)>-1){o=0;m=n;while(1){n=o+-1|0;m=m<<1;if((m|0)<=-1){s=n;break}else o=n}}else s=0;t=s;u=e<<1-s}else{t=h;u=e&8388607|8388608}o=r-u|0;m=(o|0)>-1;b:do if((q|0)>(t|0)){n=m;v=o;w=q;x=r;while(1){if(n)if((x|0)==(u|0))break;else y=v;else y=x;z=y<<1;A=w+-1|0;B=z-u|0;C=(B|0)>-1;if((A|0)>(t|0)){n=C;v=B;w=A;x=z}else{D=B;E=C;F=A;G=z;break b}}H=a*0.0;break a}else{D=o;E=m;F=q;G=r}while(0);if(E)if((G|0)==(u|0)){H=a*0.0;break}else I=D;else I=G;if(I>>>0<8388608){m=F;o=I;while(1){x=o<<1;w=m+-1|0;if(x>>>0<8388608){m=w;o=x}else{J=w;K=x;break}}}else{J=F;K=I}if((J|0)>0)L=K+-8388608|J<<23;else L=K>>>(1-J|0);H=(c[k>>2]=L|i,+g[k>>2])}else M=3;while(0);if((M|0)==3){l=a*b;H=l/l}return +H}function gf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=e+-1|0;if(!e){g=b;h=d;i=b}else{e=d;j=b;do if(!((e^j)&3)){k=(f|0)!=0;a:do if(k&(e&3|0)!=0){l=b;m=f;n=d;while(1){o=a[n>>0]|0;a[l>>0]=o;if(!(o<<24>>24)){p=l;q=m;r=n;break a}o=m+-1|0;s=n+1|0;t=l+1|0;u=(o|0)!=0;if(u&(s&3|0)!=0){l=t;m=o;n=s}else{v=t;w=o;x=s;y=u;z=7;break}}}else{v=b;w=f;x=d;y=k;z=7}while(0);if((z|0)==7)if(y){p=v;q=w;r=x}else{A=v;B=x;break}if(!(a[r>>0]|0)){C=p;D=r;E=q;z=13}else{b:do if(q>>>0>3){k=q;n=p;m=r;while(1){l=c[m>>2]|0;if((l&-2139062144^-2139062144)&l+-16843009|0){F=k;G=n;H=m;break b}c[n>>2]=l;l=k+-4|0;u=m+4|0;s=n+4|0;if(l>>>0>3){k=l;n=s;m=u}else{F=l;G=s;H=u;break}}}else{F=q;G=p;H=r}while(0);C=G;D=H;E=F;z=13}}else{C=b;D=d;E=f;z=13}while(0);c:do if((z|0)==13)if(!E){A=C;B=D}else{f=C;d=D;b=E;while(1){F=a[d>>0]|0;a[f>>0]=F;if(!(F<<24>>24)){A=f;B=d;break c}b=b+-1|0;F=d+1|0;H=f+1|0;if(!b){A=H;B=F;break}else{f=H;d=F}}}while(0);a[A>>0]=0;g=A;h=B;i=j}return g-i+(zi(h)|0)|0}function bf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,l=0.0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0,y=0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;l=+h[b>>3];m=b+8|0;n=+h[m>>3];h[k>>3]=l;o=c[k>>2]|0;p=c[k+4>>2]|0;h[k>>3]=n;q=c[k>>2]|0;r=p&2147483647;s=c[k+4>>2]&2147483647;t=r>>>0<2146435072;do if(t&s>>>0<2146435072){if(!(s|q)){h[a>>3]=+Zl(l);h[a+8>>3]=l*n;break}if(r>>>0<1077280768){u=+Zl(l)*+R(+n);v=+_k(l)*+S(+n);h[a>>3]=u;h[a+8>>3]=v;break}if(r>>>0<1082535490){v=+Y(+(+O(+l)))*.5;u=v*+R(+n);w=+An(v,l)*+S(+n);h[a>>3]=u;h[a+8>>3]=w;break}if(r>>>0<1083620266){h[g>>3]=+O(+l);h[g+8>>3]=n;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];ui(f,e,-1);w=+h[f>>3];u=+h[f+8>>3];h[b>>3]=w;h[m>>3]=u;v=u*+An(1.0,l);h[a>>3]=w;h[a+8>>3]=v;break}else{v=l*8988465674311579538646525.0e283;w=v*+S(+n);h[a>>3]=v*v*+R(+n);h[a+8>>3]=w;break}}else{x=s>>>0>2146435071;if((r|o|0)==0&x){w=n-n;v=+An(0.0,l*w);h[a>>3]=w;h[a+8>>3]=v;break}y=r>>>0>2146435071;if(y&(s|q|0)==0){v=l*l;if(!(p&1048575|o)){w=n*+An(0.0,l);h[a>>3]=v;h[a+8>>3]=w;break}else{w=+An(0.0,(l+l)*n);h[a>>3]=v;h[a+8>>3]=w;break}}if(t&x){w=n-n;h[a>>3]=w;h[a+8>>3]=l*w;break}if(y?(p&1048575|o|0)==0:0){w=l*l;if(x){h[a>>3]=w;h[a+8>>3]=l*(n-n);break}else{v=l*+S(+n);h[a>>3]=w*+R(+n);h[a+8>>3]=v;break}}v=n-n;h[a>>3]=l*l*v;h[a+8>>3]=(l+l)*v}while(0);i=d;return}function ef(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+192|0;if((i|0)>=(j|0))ca();f=e+152|0;g=e+136|0;h=e+120|0;k=e+104|0;l=e+96|0;m=e+80|0;n=e+64|0;o=e+48|0;p=e+32|0;q=e+16|0;r=e;s=e+176|0;t=e+168|0;c[s>>2]=d;d=(c[s>>2]|0)+(4-1)&~(4-1);u=c[d>>2]|0;c[s>>2]=d+4;d=(b|0)==4?u|32768:u;a:do switch(b|0){case 14:{c[r>>2]=a;c[r+4>>2]=14;c[r+8>>2]=d;v=Or(wa(221,r|0)|0)|0;break}case 9:{c[q>>2]=a;c[q+4>>2]=16;c[q+8>>2]=t;u=wa(221,q|0)|0;switch(u|0){case -22:{c[p>>2]=a;c[p+4>>2]=9;c[p+8>>2]=d;w=wa(221,p|0)|0;break}case 0:{s=c[t+4>>2]|0;w=(c[t>>2]|0)==2?0-s|0:s;break}default:w=Or(u)|0}v=w;break}case 1030:{c[o>>2]=a;c[o+4>>2]=1030;c[o+8>>2]=d;u=wa(221,o|0)|0;if((u|0)!=-22){if((u|0)>-1){c[n>>2]=u;c[n+4>>2]=2;c[n+8>>2]=1;wa(221,n|0)|0}v=Or(u)|0;break a}c[m>>2]=a;c[m+4>>2]=1030;c[m+8>>2]=0;u=wa(221,m|0)|0;if((u|0)==-22){c[k>>2]=a;c[k+4>>2]=0;c[k+8>>2]=d;s=wa(221,k|0)|0;if((s|0)>-1){c[h>>2]=s;c[h+4>>2]=2;c[h+8>>2]=1;wa(221,h|0)|0}v=Or(s)|0;break a}else{if((u|0)>-1){c[l>>2]=u;Zb(6,l|0)|0}v=Or(-22)|0;break a}break}default:if((b+-12|0)>>>0<5){c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;v=Or(wa(221,g|0)|0)|0;break a}else{c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;v=Or(wa(221,f|0)|0)|0;break a}}while(0);i=e;return v|0}function lf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f+4|0;h=f;k=c[1891]|0;if((k|0)==0|(c[41526]|0)!=0){c[41526]=0;c[41527]=0;c[1891]=1;l=1}else l=k;a:do if(((l|0)<(b|0)?(k=c[d+(l<<2)>>2]|0,(k|0)!=0):0)?(a[k>>0]|0)==45:0){switch(a[k+1>>0]|0){case 0:{m=-1;break a;break}case 45:{if(!(a[k+2>>0]|0)){c[1891]=l+1;m=-1;break a}break}default:{}}n=c[41527]|0;if(!n){c[41527]=1;o=1}else o=n;n=Kg(g,k+o|0,4)|0;if((n|0)<0){c[g>>2]=65533;p=65533;q=1}else{p=c[g>>2]|0;q=n}n=c[1891]|0;k=c[d+(n<<2)>>2]|0;r=c[41527]|0;s=k+r|0;c[41528]=p;t=r+q|0;c[41527]=t;if(!(a[k+t>>0]|0)){c[1891]=n+1;c[41527]=0}n=Kg(h,e,4)|0;b:do if(!n)u=0;else{t=n;k=0;while(1){if((c[h>>2]|0)==(c[g>>2]|0)){u=k;break b}r=((t|0)<1?1:t)+k|0;t=Kg(h,e+r|0,4)|0;if(!t){u=r;break}else k=r}}while(0);n=c[h>>2]|0;if((n|0)!=(c[g>>2]|0)){if(!((a[e>>0]|0)!=58&(c[1892]|0)!=0)){m=63;break}k=c[d>>2]|0;jo(2,k,zi(k)|0)|0;jo(2,165729,18)|0;jo(2,s,q)|0;jo(2,165748,1)|0;m=63;break}if((a[e+(u+1)>>0]|0)==58){k=c[1891]|0;if((k|0)<(b|0)){c[1891]=k+1;c[41529]=(c[d+(k<<2)>>2]|0)+(c[41527]|0);c[41527]=0;m=n;break}if((a[e>>0]|0)!=58)if(!(c[1892]|0))m=63;else{k=c[d>>2]|0;jo(2,k,zi(k)|0)|0;jo(2,165750,31)|0;jo(2,s,q)|0;jo(2,165748,1)|0;m=63}else m=58}else m=n}else m=-1;while(0);i=f;return m|0}function wf(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;if(!(b|a)){i=0;j=0}else{k=0;l=28;m=0;n=0;while(1){o=a>>>l&15;p=b>>>l&15;q=k+8|0;r=c[13396+(k<<6)+(o<<2)>>2]|m|c[13396+(q<<6)+(p<<2)>>2];s=c[14420+(k<<6)+(o<<2)>>2]|n|c[14420+(q<<6)+(p<<2)>>2];k=k+1|0;if((k|0)==8){i=r;j=s;break}else{l=l+-4|0;m=r;n=s}}}if(!f){t=i;u=j}else{n=h+64|0;m=f;f=i;i=j;while(1){j=h;l=n;k=f;b=i;a=16;while(1){a=a+-1|0;s=b<<23&8388608|b>>>9&8126464|b>>>11&258048|b>>>13&4032|b>>>15&63;r=b<<5&258048|b>>>31|b<<7&16515072|b<<3&4032|b<<1&62;p=(s^r)&g;q=p^s^c[j>>2];s=p^r^c[l>>2];r=(c[15700+((q>>>12&63)<<2)>>2]|c[15444+(q>>>18<<2)>>2]|c[15956+((q>>>6&63)<<2)>>2]|c[16212+((q&63)<<2)>>2]|c[16468+(s>>>18<<2)>>2]|c[16724+((s>>>12&63)<<2)>>2]|c[16980+((s>>>6&63)<<2)>>2]|c[17236+((s&63)<<2)>>2])^k;if(!a){v=r;w=b;break}else{s=b;j=j+4|0;l=l+4|0;b=r;k=s}}m=m+-1|0;if(!m){t=v;u=w;break}else{f=v;i=w}}}w=0;i=28;v=0;f=0;while(1){m=w+4|0;g=c[17492+(w<<6)+((t>>>i&15)<<2)>>2]|f|c[17492+(m<<6)+((u>>>i&15)<<2)>>2];n=i+-4|0;h=c[17492+(w<<6)+((t>>>n&15)<<2)>>2]|v|c[17492+(m<<6)+((u>>>n&15)<<2)>>2];w=w+1|0;if((w|0)==4){x=g;y=h;break}else{i=i+-8|0;v=h;f=g}}c[d>>2]=y;c[e>>2]=x;return}function jf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,l=0.0,m=0,n=0.0,o=0,p=0.0,q=0,r=0,s=0,t=0.0,u=0.0,v=0,w=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;l=+g[b>>2];m=b+4|0;n=+g[m>>2];o=(g[k>>2]=l,c[k>>2]|0);p=+O(+l);q=(g[k>>2]=p,c[k>>2]|0);p=+O(+n);r=(g[k>>2]=p,c[k>>2]|0);s=(q|0)<2139095040;do if(s&(r|0)<2139095040){if(!r){g[a>>2]=+_l(l);g[a+4>>2]=l*n;break}if((q|0)<1091567616){p=+_l(l)*+R(+n);t=+Zk(l)*+S(+n);g[a>>2]=p;g[a+4>>2]=t;break}if((q|0)<1118925336){t=+Y(+(+O(+l)))*.5;p=t*+R(+n);u=+ip(t,l)*+S(+n);g[a>>2]=p;g[a+4>>2]=u;break}if((q|0)<1128313319){g[h>>2]=+O(+l);g[h+4>>2]=n;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];oj(f,e,-1);v=c[f>>2]|0;u=+g[f+4>>2];c[b>>2]=v;g[m>>2]=u;p=u*+ip(1.0,l);c[a>>2]=v;g[a+4>>2]=p;break}else{p=l*1701411834604692317316873.0e14;u=p*+S(+n);g[a>>2]=p*p*+R(+n);g[a+4>>2]=u;break}}else{v=(r|0)>2139095039;if((q|0)==0&v){u=n-n;p=+ip(0.0,l*u);g[a>>2]=u;g[a+4>>2]=p;break}w=(q|0)>2139095039;if(w&(r|0)==0){p=l*l;if(!(o&8388607)){u=n*+ip(0.0,l);g[a>>2]=p;g[a+4>>2]=u;break}else{u=+ip(0.0,(l+l)*n);g[a>>2]=p;g[a+4>>2]=u;break}}if(s&v){u=n-n;g[a>>2]=u;g[a+4>>2]=l*u;break}u=l*l;if(!(w&(o&8388607|0)==0)){p=n-n;g[a>>2]=u*p;g[a+4>>2]=(l+l)*p;break}if(v){g[a>>2]=u;g[a+4>>2]=l*(n-n);break}else{p=l*+S(+n);g[a>>2]=u*+R(+n);g[a+4>>2]=p;break}}while(0);i=d;return}function hf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,l=0.0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,u=0,v=0.0,w=0.0,x=0,y=0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;l=+h[b>>3];m=b+8|0;n=+h[m>>3];h[k>>3]=l;o=c[k>>2]|0;p=c[k+4>>2]|0;h[k>>3]=n;q=c[k>>2]|0;r=p&2147483647;s=c[k+4>>2]&2147483647;u=r>>>0<2146435072;do if(u&s>>>0<2146435072){if(!(s|q)){h[a>>3]=+_k(l);h[a+8>>3]=n;break}if(r>>>0<1077280768){v=+_k(l)*+R(+n);w=+Zl(l)*+S(+n);h[a>>3]=v;h[a+8>>3]=w;break}if(r>>>0<1082535490){w=+Y(+(+O(+l)))*.5;v=w*+S(+n);h[a>>3]=+An(w,l)*+R(+n);h[a+8>>3]=v;break}if(r>>>0<1083620266){h[g>>3]=+O(+l);h[g+8>>3]=n;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];ui(f,e,-1);v=+h[f>>3];w=+h[f+8>>3];h[b>>3]=v;h[m>>3]=w;h[a>>3]=v*+An(1.0,l);h[a+8>>3]=w;break}else{w=l*8988465674311579538646525.0e283;v=w*w*+S(+n);h[a>>3]=w*+R(+n);h[a+8>>3]=v;break}}else{x=s>>>0>2146435071;if((r|o|0)==0&x){v=n-n;h[a>>3]=+An(0.0,l*v);h[a+8>>3]=v;break}y=r>>>0>2146435071;if(y&(s|q|0)==0)if(!(p&1048575|o)){h[a>>3]=l;h[a+8>>3]=n;break}else{v=+An(0.0,n);h[a>>3]=l;h[a+8>>3]=v;break}if(u&x){v=n-n;h[a>>3]=v;h[a+8>>3]=l*v;break}if(y?(p&1048575|o|0)==0:0)if(x){h[a>>3]=l*l;h[a+8>>3]=l*(n-n);break}else{v=l*+R(+n);w=+S(+n)*t;h[a>>3]=v;h[a+8>>3]=w;break}w=n-n;h[a>>3]=l*l*w;h[a+8>>3]=(l+l)*w}while(0);i=d;return}function sf(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+80|0;if((i|0)>=(j|0))ca();h=g+8|0;k=g;l=h;m=l+64|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));a:do if((e|0)!=10){l=0;m=f;b:while(1){c[h+(l<<2)>>2]=Ps(m,k,0)|0;n=c[k>>2]|0;if((n|0)==(m|0)){o=5;break}p=a[n>>0]|0;switch(p<<24>>24){case 46:case 0:break;default:{o=5;break b}}if(((a[m>>0]|0)+-48|0)>>>0>=10){o=5;break}if(!(p<<24>>24)){q=l;break}p=l+1|0;if((p|0)<4){l=p;m=n+1|0}else{q=p;break}}if((o|0)==5)if((e|0)==2){r=-1;break}else{o=16;break}switch(q|0){case 4:{r=-1;break a;break}case 0:{m=c[h>>2]|0;l=m&16777215;p=h+4|0;c[p>>2]=l;c[h>>2]=m>>>24;s=p;t=l;o=12;break}case 1:{l=h+4|0;s=l;t=c[l>>2]|0;o=12;break}case 2:{l=h+8|0;u=l;v=c[l>>2]|0;o=13;break}default:{}}if((o|0)==12){l=t&65535;p=h+8|0;c[p>>2]=l;c[s>>2]=t>>>16;u=p;v=l;o=13}if((o|0)==13){c[h+12>>2]=v&255;c[u>>2]=v>>>8}b[d>>1]=2;l=c[h>>2]|0;if(((l>>>0<=255?(a[d+4>>0]=l,l=c[h+4>>2]|0,l>>>0<=255):0)?(a[d+5>>0]=l,l=c[h+8>>2]|0,l>>>0<=255):0)?(a[d+6>>0]=l,l=c[h+12>>2]|0,l>>>0<=255):0){a[d+7>>0]=l;r=0}else r=-1}else o=16;while(0);if((o|0)==16){b[d>>1]=10;r=((Fe(10,f,d+8|0)|0)<1)<<31>>31}i=g;return r|0}function kf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,l=0.0,m=0,n=0.0,o=0,p=0.0,q=0,r=0,s=0,u=0.0,v=0,w=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;l=+g[b>>2];m=b+4|0;n=+g[m>>2];o=(g[k>>2]=l,c[k>>2]|0);p=+O(+l);q=(g[k>>2]=p,c[k>>2]|0);p=+O(+n);r=(g[k>>2]=p,c[k>>2]|0);s=(q|0)<2139095040;do if(s&(r|0)<2139095040){if(!r){g[a>>2]=+Zk(l);g[a+4>>2]=n;break}if((q|0)<1091567616){p=+Zk(l)*+R(+n);u=+_l(l)*+S(+n);g[a>>2]=p;g[a+4>>2]=u;break}if((q|0)<1118925336){u=+Y(+(+O(+l)))*.5;p=u*+S(+n);g[a>>2]=+ip(u,l)*+R(+n);g[a+4>>2]=p;break}if((q|0)<1128313319){g[h>>2]=+O(+l);g[h+4>>2]=n;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];oj(f,e,-1);v=c[f>>2]|0;w=c[f+4>>2]|0;c[b>>2]=v;c[m>>2]=w;p=(c[k>>2]=v,+g[k>>2]);g[a>>2]=p*+ip(1.0,l);c[a+4>>2]=w;break}else{p=l*1701411834604692317316873.0e14;u=p*p*+S(+n);g[a>>2]=p*+R(+n);g[a+4>>2]=u;break}}else{w=(r|0)>2139095039;if((q|0)==0&w){u=n-n;g[a>>2]=+ip(0.0,l*u);g[a+4>>2]=u;break}v=(q|0)>2139095039;if(v&(r|0)==0)if(!(o&8388607)){g[a>>2]=l;g[a+4>>2]=n;break}else{u=+ip(0.0,n);g[a>>2]=l;g[a+4>>2]=u;break}if(s&w){u=n-n;g[a>>2]=u;g[a+4>>2]=l*u;break}if(!(v&(o&8388607|0)==0)){u=n-n;g[a>>2]=l*l*u;g[a+4>>2]=(l+l)*u;break}if(w){g[a>>2]=l*l;g[a+4>>2]=l*(n-n);break}else{u=l*+R(+n);p=+S(+n)*t;g[a>>2]=u;g[a+4>>2]=p;break}}while(0);i=d;return}function of(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=f;break a;break}case 10:{f=(c[d>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=e;c[f+4>>2]=((e|0)<0)<<31>>31;break a;break}case 11:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;e=a;c[e>>2]=f;c[e+4>>2]=0;break a;break}case 12:{e=(c[d>>2]|0)+(8-1)&~(8-1);f=e;g=c[f>>2]|0;i=c[f+4>>2]|0;c[d>>2]=e+8;e=a;c[e>>2]=g;c[e+4>>2]=i;break a;break}case 13:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=(e&65535)<<16>>16;e=a;c[e>>2]=i;c[e+4>>2]=((i|0)<0)<<31>>31;break a;break}case 14:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=a;c[i>>2]=e&65535;c[i+4>>2]=0;break a;break}case 15:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=(e&255)<<24>>24;e=a;c[e>>2]=i;c[e+4>>2]=((i|0)<0)<<31>>31;break a;break}case 16:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=a;c[i>>2]=e&255;c[i+4>>2]=0;break a;break}case 17:{i=(c[d>>2]|0)+(8-1)&~(8-1);j=+h[i>>3];c[d>>2]=i+8;h[a>>3]=j;break a;break}case 18:{i=(c[d>>2]|0)+(8-1)&~(8-1);j=+h[i>>3];c[d>>2]=i+8;h[a>>3]=j;break a;break}default:break a}while(0);while(0);return}function nf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=f;break a;break}case 10:{f=(c[d>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=e;c[f+4>>2]=((e|0)<0)<<31>>31;break a;break}case 11:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;e=a;c[e>>2]=f;c[e+4>>2]=0;break a;break}case 12:{e=(c[d>>2]|0)+(8-1)&~(8-1);f=e;g=c[f>>2]|0;i=c[f+4>>2]|0;c[d>>2]=e+8;e=a;c[e>>2]=g;c[e+4>>2]=i;break a;break}case 13:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=(e&65535)<<16>>16;e=a;c[e>>2]=i;c[e+4>>2]=((i|0)<0)<<31>>31;break a;break}case 14:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=a;c[i>>2]=e&65535;c[i+4>>2]=0;break a;break}case 15:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=(e&255)<<24>>24;e=a;c[e>>2]=i;c[e+4>>2]=((i|0)<0)<<31>>31;break a;break}case 16:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=a;c[i>>2]=e&255;c[i+4>>2]=0;break a;break}case 17:{i=(c[d>>2]|0)+(8-1)&~(8-1);j=+h[i>>3];c[d>>2]=i+8;h[a>>3]=j;break a;break}case 18:{i=(c[d>>2]|0)+(8-1)&~(8-1);j=+h[i>>3];c[d>>2]=i+8;h[a>>3]=j;break a;break}default:break a}while(0);while(0);return}function df(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;e=i;i=i+160|0;if((i|0)>=(j|0))ca();f=e+48|0;g=e+40|0;h=e+32|0;k=e+24|0;l=e+16|0;m=e+8|0;o=e;p=e+152|0;q=e+148|0;r=e+72|0;s=e+56|0;switch(a[d>>0]|0){case 114:{t=0;u=4;break}case 119:{t=1;u=4;break}default:{c[($r()|0)>>2]=22;v=0}}do if((u|0)==4)if(!(fh(p,524288)|0)){w=p+(t<<2)|0;x=Rd[5&7](c[w>>2]|0,d)|0;if(!x){c[o>>2]=c[p>>2];Zb(6,o|0)|0;c[m>>2]=c[p+4>>2];Zb(6,m|0)|0;v=0;break}if((c[x+76>>2]|0)>-1)y=Ey(x)|0;else y=0;z=t^1;A=p+(z<<2)|0;do if((c[A>>2]|0)==(z|0)){c[l>>2]=0;B=ef(z,1030,l)|0;if((B|0)<0){C=c[($r()|0)>>2]|0;break}else{c[k>>2]=c[A>>2];Zb(6,k|0)|0;c[A>>2]=B;u=13;break}}else u=13;while(0);if((u|0)==13)if(!(td(r|0)|0)){if(!(jb(r|0,c[A>>2]|0,z|0)|0)){c[s>>2]=165810;c[s+4>>2]=165813;c[s+8>>2]=b;c[s+12>>2]=0;B=wd(q|0,165802,r|0,0,s|0,c[n>>2]|0)|0;if(!B){pd(r|0)|0;c[x+64>>2]=c[q>>2];if(!(as(d,101)|0)){D=c[w>>2]|0;c[h>>2]=0;ef(D,2,h)|0}c[g>>2]=c[A>>2];Zb(6,g|0)|0;if(!y){v=x;break}Dy(x);v=x;break}else E=B}else E=12;pd(r|0)|0;C=E}else C=12;Uj(x)|0;c[f>>2]=c[A>>2];Zb(6,f|0)|0;c[($r()|0)>>2]=C;v=0}else v=0;while(0);i=e;return v|0}function zf(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0,i=0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=b&2147483647;e=kr(c[k>>2]|0,b|0,63)|0;do if(d>>>0>2146435071)f=a+t;else{if(d>>>0<1016070144){f=1.0/a;break}g=+N(+a);if(g==a){if(e|0){f=s;break}if(a<=23.0){f=+h[5776+(~~a+-1<<3)>>3];break}}b=(e|0)!=0;if(d>>>0>1080492031)if(b){i=g*.5==+N(+(a*.5));f=i?0.0:-0.0;break}else{f=a*8988465674311579538646525.0e283;break}g=b?-a:a;j=g+5.52468004077673;l=g>5.52468004077673?j-g+-5.52468004077673:j+-5.52468004077673-g;m=g+-.5;if(g<8.0){n=0.0;b=12;o=0.0;while(1){p=g*o+ +h[5960+(b<<3)>>3];q=g*n+ +h[6064+(b<<3)>>3];if((b|0)>0){n=q;b=b+-1|0;o=p}else{r=q;u=p;break}}}else{o=0.0;b=0;n=0.0;while(1){p=n/g+ +h[5960+(b<<3)>>3];q=o/g+ +h[6064+(b<<3)>>3];b=b+1|0;if((b|0)==13){r=q;u=p;break}else{o=q;n=p}}}n=u/r*+Y(+-j);if(a<0.0){o=g*.5;p=(o-+N(+o))*2.0;b=(~~(p*4.0)+1|0)/2|0;o=(p-+(b|0)*.5)*3.141592653589793;switch(b|0){case 3:{v=-+Bn(o,0.0);break}case 1:{v=+Bn(o,0.0);break}case 2:{v=+vm(-o,0.0,0);break}default:v=+vm(o,0.0,0)}w=-l;x=-3.141592653589793/(n*(g*v));y=-m}else{w=l;x=n;y=m}n=+Q(+j,+(y*.5));f=n*(n*(x+w*6.02468004077673*x/j))}while(0);return +f}function uf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;do if(!(c[41858]|0)){f=Wc(30)|0;if(!(f+-1&f)){c[41860]=f;c[41859]=f;c[41861]=-1;c[41862]=-1;c[41863]=0;c[41851]=0;c[41858]=(ac(0)|0)&-16^1431655768;break}else Sa()}while(0);f=(a|0)==0;do if(e)if(f){g=e;return g|0}else{h=0;i=e}else{if(!f){j=a<<2;h=j>>>0<11?16:j+11&-8;i=0;break}g=Wd(0)|0;return g|0}while(0);if(!(d&1)){f=0;e=0;while(1){j=c[b+(e<<2)>>2]|0;k=(j>>>0<11?16:j+11&-8)+f|0;e=e+1|0;if((e|0)==(a|0)){l=k;m=0;break}else f=k}}else{f=c[b>>2]|0;e=f>>>0<11?16:f+11&-8;l=$(e,a)|0;m=e}e=Wd(h+-4+l|0)|0;if(!e){g=0;return g|0}f=e+-8|0;k=c[e+-4>>2]&-8;if(d&2|0)Gl(e|0,0,-4-h+k|0)|0;if(!i){h=f+l|0;c[h+4>>2]=k-l|3;n=h+8|0;o=l}else{n=i;o=k}c[n>>2]=e;k=a+-1|0;a:do if(!k){p=f;q=o}else{if(!m){i=0;l=f;h=o;while(1){d=c[b+(i<<2)>>2]|0;j=d>>>0<11?16:d+11&-8;d=h-j|0;c[l+4>>2]=j|3;r=l+j|0;i=i+1|0;c[n+(i<<2)>>2]=r+8;if((i|0)==(k|0)){p=r;q=d;break a}else{l=r;h=d}}}h=($(m,k)|0)+-8|0;l=$(m,1-a|0)|0;i=m|3;d=0;r=f;do{c[r+4>>2]=i;r=r+m|0;d=d+1|0;c[n+(d<<2)>>2]=r+8}while((d|0)!=(k|0));p=e+h|0;q=o+l|0}while(0);c[p+4>>2]=q|3;g=n;return g|0}function vf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;g=i;i=i+1040|0;if((i|0)>=(j|0))ca();h=g+8|0;k=g;l=c[b>>2]|0;c[k>>2]=l;m=(a|0)!=0;n=m?e:256;e=m?a:h;a=l;a:do if((n|0)!=0&(l|0)!=0){o=d;p=n;q=a;r=0;s=e;while(1){t=o>>>2;u=t>>>0>=p>>>0;if(!(o>>>0>131|u)){v=o;w=p;x=q;y=r;z=s;break a}A=u?p:t;t=o-A|0;u=ue(s,k,A,f)|0;if((u|0)==-1){B=t;C=s;break}A=(s|0)==(h|0);D=A?0:u;E=p-D|0;F=A?s:s+(u<<2)|0;A=u+r|0;u=c[k>>2]|0;if((p|0)!=(D|0)&(u|0)!=0){o=t;p=E;q=u;r=A;s=F}else{v=t;w=E;x=u;y=A;z=F;break a}}v=B;w=0;x=c[k>>2]|0;y=-1;z=C}else{v=d;w=n;x=a;y=0;z=e}while(0);b:do if((x|0)!=0?(w|0)!=0&(v|0)!=0:0){e=v;a=w;n=x;d=y;C=z;while(1){B=Jf(C,n,e,f)|0;if((B+2|0)>>>0<3){G=B;H=d;break}n=(c[k>>2]|0)+B|0;c[k>>2]=n;a=a+-1|0;h=d+1|0;if(!((a|0)!=0&(e|0)!=(B|0))){I=h;break b}else{e=e-B|0;d=h;C=C+4|0}}switch(G|0){case -1:{I=-1;break b;break}case 0:{c[k>>2]=0;I=H;break b;break}default:{c[f>>2]=0;I=H;break b}}}else I=y;while(0);if(m)c[b>>2]=c[k>>2];i=g;return I|0}function xf(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=i;i=i+256|0;if((i|0)>=(j|0))ca();f=e;g=0;do{h=g<<2;c[f+(g<<2)>>2]=(d[b+(h|2)>>0]|0)<<8|((d[b+(h|1)>>0]|0)<<16|(d[b+h>>0]|0)<<24)|(d[b+(h|3)>>0]|0);g=g+1|0}while((g|0)!=16);g=c[f>>2]|0;b=16;do{h=c[f+(b+-2<<2)>>2]|0;k=g;g=c[f+(b+-15<<2)>>2]|0;c[f+(b<<2)>>2]=k+(c[f+(b+-7<<2)>>2]|0)+((h<<13|h>>>19)^h>>>10^(h<<15|h>>>17))+((g<<14|g>>>18)^g>>>3^(g<<25|g>>>7));b=b+1|0}while((b|0)!=64);b=a+8|0;g=c[b>>2]|0;h=a+12|0;k=c[h>>2]|0;l=a+16|0;m=c[l>>2]|0;n=a+20|0;o=c[n>>2]|0;p=a+24|0;q=c[p>>2]|0;r=a+28|0;s=c[r>>2]|0;t=a+32|0;u=c[t>>2]|0;v=a+36|0;a=c[v>>2]|0;w=g;x=k;y=m;z=o;A=q;B=s;C=u;D=a;E=0;while(1){F=((A<<26|A>>>6)^(A<<21|A>>>11)^(A<<7|A>>>25))+D+((C^B)&A^C)+(c[22452+(E<<2)>>2]|0)+(c[f+(E<<2)>>2]|0)|0;G=F+z|0;H=((w<<30|w>>>2)^(w<<19|w>>>13)^(w<<10|w>>>22))+(y&(x|w)|x&w)+F|0;E=E+1|0;if((E|0)==64){I=G;J=H;K=w;L=x;M=y;N=A;O=B;P=C;break}else{F=A;Q=w;w=H;A=G;D=C;C=B;B=F;z=y;y=x;x=Q}}c[b>>2]=g+J;c[h>>2]=k+K;c[l>>2]=m+L;c[n>>2]=o+M;c[p>>2]=q+I;c[r>>2]=s+N;c[t>>2]=u+O;c[v>>2]=a+P;i=e;return}function rf(a){a=+a;var b=0,d=0.0,e=0,f=0,h=0.0,i=0,j=0.0,l=0.0,m=0,n=0.0,o=0,p=0.0,q=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);f=b>>>31;do if(e>>>0>1100331075)if(e>>>0<=2139095040)if(!f)if(a>88.7216796875)h=a*1701411834604692317316873.0e14;else i=11;else h=-1.0;else h=a;else{if(e>>>0<=1051816472)if(e>>>0<855638016){h=a;break}else{j=a;l=0.0;m=0;i=14;break}if(e>>>0<1065686418)if(!f){n=a+-.6931381225585938;o=1;p=9.05800061445916e-06;i=12;break}else{n=a+.6931381225585938;o=-1;p=-9.05800061445916e-06;i=12;break}else i=11}while(0);if((i|0)==11){e=~~(a*1.4426950216293335+(f|0?-.5:.5));d=+(e|0);n=a-d*.6931381225585938;o=e;p=d*9.05800061445916e-06;i=12}if((i|0)==12){d=n-p;j=d;l=n-d-p;m=o;i=14}a:do if((i|0)==14){p=j*.5;d=j*p;n=d*(d*1.5807170420885086e-03+-.03333321213722229)+1.0;a=3.0-p*n;p=d*((n-a)/(6.0-j*a));if(!m){h=j-(j*p-d);break}a=j*(p-l)-l-d;switch(m|0){case -1:{h=(j-a)*.5+-.5;break a;break}case 1:{if(j<-.25){h=(a-(j+.5))*-2.0;break a}else{h=(j-a)*2.0+1.0;break a}break}default:{d=(c[k>>2]=(m<<23)+1065353216,+g[k>>2]);if(m>>>0>56){p=j-a+1.0;h=((m|0)==128?p*2.0*1701411834604692317316873.0e14:d*p)+-1.0;break a}o=127-m<<23;if((m|0)<23)q=1.0-(c[k>>2]=o,+g[k>>2])+(j-a);else q=j-((c[k>>2]=o,+g[k>>2])+a)+1.0;h=d*q;break a}}}while(0);return +h}function tf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=d;do if(!((f^b)&3)){g=(e|0)!=0;a:do if(g&(f&3|0)!=0){h=e;i=d;j=b;while(1){k=a[i>>0]|0;a[j>>0]=k;if(!(k<<24>>24)){l=h;m=i;n=j;break a}k=h+-1|0;o=i+1|0;p=j+1|0;q=(k|0)!=0;if(q&(o&3|0)!=0){h=k;i=o;j=p}else{r=k;s=o;t=p;u=q;v=5;break}}}else{r=e;s=d;t=b;u=g;v=5}while(0);if((v|0)==5)if(u){l=r;m=s;n=t}else{w=t;x=0;break}if(!(a[m>>0]|0)){w=n;x=l}else{b:do if(l>>>0>3){g=l;j=n;i=m;while(1){h=c[i>>2]|0;if((h&-2139062144^-2139062144)&h+-16843009|0){y=g;z=j;A=i;break b}c[j>>2]=h;h=g+-4|0;q=i+4|0;p=j+4|0;if(h>>>0>3){g=h;j=p;i=q}else{y=h;z=p;A=q;break}}}else{y=l;z=n;A=m}while(0);B=A;C=z;D=y;v=11}}else{B=d;C=b;D=e;v=11}while(0);c:do if((v|0)==11)if(!D){w=C;x=0}else{e=B;b=C;d=D;while(1){y=a[e>>0]|0;a[b>>0]=y;if(!(y<<24>>24)){w=b;x=d;break c}d=d+-1|0;y=b+1|0;if(!d){w=y;x=0;break}else{e=e+1|0;b=y}}}while(0);Gl(w|0,0,x|0)|0;return w|0}function yf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;g=e&255;h=d;a:do if(!((h^b)&3)){i=(h&3|0)!=0;if((f|0)!=0&i){j=e&255;k=f;l=b;m=d;while(1){n=a[m>>0]|0;a[l>>0]=n;if(n<<24>>24==j<<24>>24){o=l;p=m;break a}n=k+-1|0;q=m+1|0;r=l+1|0;s=(q&3|0)!=0;if((n|0)!=0&s){k=n;l=r;m=q}else{t=n;u=s;v=r;w=q;break}}}else{t=f;u=i;v=b;w=d}if(u){o=v;p=w}else{m=$(g,16843009)|0;b:do if(t>>>0>3){l=t;k=v;j=w;while(1){q=c[j>>2]|0;r=q^m;if((r&-2139062144^-2139062144)&r+-16843009|0){x=l;y=k;z=j;break b}c[k>>2]=q;q=l+-4|0;r=j+4|0;s=k+4|0;if(q>>>0>3){l=q;k=s;j=r}else{x=q;y=s;z=r;break}}}else{x=t;y=v;z=w}while(0);A=x;B=y;C=z;D=11}}else{A=f;B=b;C=d;D=11}while(0);c:do if((D|0)==11)if(!A){o=B;p=C}else{d=e&255;b=A;f=B;z=C;while(1){y=a[z>>0]|0;a[f>>0]=y;if(y<<24>>24==d<<24>>24){o=f;p=z;break c}b=b+-1|0;y=z+1|0;x=f+1|0;if(!b){o=x;p=y;break}else{f=x;z=y}}}while(0);return ((a[p>>0]|0)==(e&255)<<24>>24?o+1|0:0)|0}function Af(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;d=a[b>>0]|0;e=a[c>>0]|0;a:do if(d<<24>>24==e<<24>>24){f=b;g=c;h=d;i=d<<24>>24;j=1;while(1){switch(h<<24>>24){case 0:{k=0;break a;break}case 48:{l=(j|0)==1?0:j;break}default:if((i+-48|0)>>>0<10)l=(j|0)==1?2:j;else l=1}m=f+1|0;n=g+1|0;o=a[m>>0]|0;p=a[n>>0]|0;if(o<<24>>24==p<<24>>24){f=m;g=n;h=o;i=o<<24>>24;j=l}else{q=m;r=n;s=o;t=p;u=l;break}}if((u|0)==1){v=r;w=q;x=s;y=t;z=9}else{A=r;B=q;C=s;D=t;E=u;z=10}}else{v=c;w=b;x=d;y=e;z=9}while(0);if((z|0)==9){A=v;B=w;C=x;D=y;E=(x<<24>>24==48|y<<24>>24==48)&1^1;z=10}do if((z|0)==10){y=C<<24>>24;x=D<<24>>24;if((y+-48|0)>>>0<10?(E|0)!=0&(x+-48|0)>>>0<10:0){if(((C<<24>>24)+-48|0)>>>0<10){w=1;while(1)if(((a[B+w>>0]|0)+-48|0)>>>0<10)w=w+1|0;else{F=w;break}}else F=0;if(((D<<24>>24)+-48|0)>>>0<10){w=1;while(1)if(((a[A+w>>0]|0)+-48|0)>>>0<10)w=w+1|0;else{G=w;break}}else G=0;if((F|0)==(G|0)){k=y-x|0;break}else{k=F>>>0>G>>>0?1:-1;break}}k=y-x|0}while(0);return k|0}function qf(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+240|0;if((i|0)>=(j|0))ca();k=h+208|0;l=h;Pe(l,b,d);do if(f|0){d=l+32|0;b=d;m=c[b>>2]|0;n=c[b+4>>2]|0;b=kr(m|0,n|0,3)|0;o=b&63;b=fr(f|0,0,3)|0;p=Gr(m|0,n|0,b|0,D|0)|0;b=d;c[b>>2]=p;c[b+4>>2]=D;b=64-o|0;p=l+40+o|0;if(b>>>0>f>>>0){$j(p|0,e|0,f|0)|0;break}$j(p|0,e|0,b|0)|0;p=l+40|0;Zd(l,p);o=e+b|0;d=f-b|0;if(d>>>0>63){b=d;n=o;while(1){Zd(l,n);m=n+64|0;q=b+-64|0;if(q>>>0>63){b=q;n=m}else{r=q;s=m;break}}}else{r=d;s=o}$j(p|0,s|0,r|0)|0}while(0);Qe(k,l);r=l+104|0;s=l+136|0;f=s;e=c[f>>2]|0;n=c[f+4>>2]|0;f=kr(e|0,n|0,3)|0;b=f&63;f=Gr(e|0,n|0,256,0)|0;n=s;c[n>>2]=f;c[n+4>>2]=D;n=64-b|0;f=l+144+b|0;if(n>>>0>32){b=f;s=k;e=b+32|0;do{a[b>>0]=a[s>>0]|0;b=b+1|0;s=s+1|0}while((b|0)<(e|0));Qe(g,r);t=c[1788]|0;Ld[t&1](k,32);i=h;return}$j(f|0,k|0,n|0)|0;f=l+144|0;Zd(r,f);l=k+n|0;s=32-n|0;if(s>>>0>63){n=s;b=l;while(1){Zd(r,b);e=b+64|0;m=n+-64|0;if(m>>>0>63){n=m;b=e}else{u=m;v=e;break}}}else{u=s;v=l}$j(f|0,v|0,u|0)|0;Qe(g,r);t=c[1788]|0;Ld[t&1](k,32);i=h;return}function pf(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;a:do if((b|0)!=0&(e|0)!=0){if(!(c[b>>2]|0))c[e>>2]=0;if((c[g+76>>2]|0)>-1)h=Ey(g)|0;else h=0;i=g+4|0;j=g+8|0;k=0;while(1){l=c[i>>2]|0;m=l;n=(c[j>>2]|0)-m|0;o=If(l,f,n)|0;p=(o|0)!=0;q=p?1-m+o|0:n;n=q+k|0;if(n>>>0<(c[e>>2]|0)>>>0){r=c[b>>2]|0;s=l}else{if(q>>>0>=(2147483647-k|0)>>>0){t=25;break}l=n+2|0;o=l<<(l>>>0<1073741823&1);c[e>>2]=o;m=ek(c[b>>2]|0,o)|0;if(!m){c[e>>2]=l;o=ek(c[b>>2]|0,l)|0;if(!o){t=25;break}else u=o}else u=m;c[b>>2]=u;r=u;s=c[i>>2]|0}$j(r+k|0,s|0,q|0)|0;m=(c[i>>2]|0)+q|0;c[i>>2]=m;if(p){v=n;break}if(m>>>0>=(c[j>>2]|0)>>>0){p=_m(g)|0;if((p|0)==-1){w=n;t=18;break}else x=p}else{c[i>>2]=m+1;x=d[m>>0]|0}m=n+1|0;a[(c[b>>2]|0)+n>>0]=x;if((x<<24>>24|0)==(f|0)){v=m;break}else k=m}if((t|0)==25){if(h|0)Dy(g);c[($r()|0)>>2]=12;y=-1;break}do if((t|0)==18){if(w|0?c[g>>2]&16|0:0){v=w;break}if(!h){y=-1;break a}Dy(g);y=-1;break a}while(0);a[(c[b>>2]|0)+v>>0]=0;if(!h)y=v;else{Dy(g);y=v}}else{c[($r()|0)>>2]=22;y=-1}while(0);return y|0}function Bf(a,b,d){a=+a;b=b|0;d=d|0;var e=0,f=0,l=0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;l=(g[k>>2]=a,c[k>>2]|0)>>>31;m=+O(+a);n=(g[k>>2]=m,c[k>>2]|0);a:do if(n>>>0<1061752795)if(n>>>0<964689920){g[b>>2]=a;g[d>>2]=1.0;break}else{m=a;g[b>>2]=+Zq(m);g[d>>2]=+tr(m);break}else{if(n>>>0<1081824210){o=(l|0)!=0;m=a;if(n>>>0>=1075235812){p=m+(o?3.141592653589793:-3.141592653589793);g[b>>2]=-+Zq(p);g[d>>2]=-+tr(p);break}if(o){p=m+1.5707963267948966;g[b>>2]=-+tr(p);q=p}else{p=1.5707963267948966-m;g[b>>2]=+tr(p);q=p}g[d>>2]=+Zq(q);break}if(n>>>0<1088565718){o=(l|0)!=0;p=a;if(n>>>0>=1085271520){m=p+(o?6.283185307179586:-6.283185307179586);g[b>>2]=+Zq(m);g[d>>2]=+tr(m);break}if(o){m=p+4.71238898038469;g[b>>2]=+tr(m);r=-+Zq(m)}else{m=p+-4.71238898038469;g[b>>2]=-+tr(m);r=+Zq(m)}g[d>>2]=r;break}if(n>>>0>2139095039){m=a-a;g[d>>2]=m;g[b>>2]=m;break}o=Bh(a,f)|0;m=+Zq(+h[f>>3]);p=+tr(+h[f>>3]);switch(o&3|0){case 0:{g[b>>2]=m;g[d>>2]=p;break a;break}case 1:{g[b>>2]=p;g[d>>2]=-m;break a;break}case 2:{g[b>>2]=-m;g[d>>2]=-p;break a;break}case 3:{g[b>>2]=-p;g[d>>2]=m;break a;break}default:{}}}while(0);i=e;return}function Cf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+272|0;if((i|0)>=(j|0))ca();g=f+8|0;h=f;k=c[b>>2]|0;c[h>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:g;a=k;a:do if((m|0)!=0&(k|0)!=0){n=d;o=m;p=a;q=0;r=e;while(1){s=n>>>0>=o>>>0;if(!(s|n>>>0>32)){t=n;u=o;v=p;w=q;x=r;break a}y=s?o:n;s=n-y|0;z=ff(r,h,y,0)|0;if((z|0)==-1){A=s;B=r;break}y=(r|0)==(g|0);C=y?0:z;D=o-C|0;E=y?r:r+z|0;y=z+q|0;z=c[h>>2]|0;if((o|0)!=(C|0)&(z|0)!=0){n=s;o=D;p=z;q=y;r=E}else{t=s;u=D;v=z;w=y;x=E;break a}}t=A;u=0;v=c[h>>2]|0;w=-1;x=B}else{t=d;u=m;v=a;w=0;x=e}while(0);b:do if((v|0)!=0?(u|0)!=0&(t|0)!=0:0){e=t;a=u;m=v;d=w;B=x;while(1){A=Ei(B,c[m>>2]|0,0)|0;if((A+1|0)>>>0<2){F=A;G=d;break}m=(c[h>>2]|0)+4|0;c[h>>2]=m;e=e+-1|0;g=d+1|0;if(!((a|0)!=(A|0)&(e|0)!=0)){H=g;break b}else{a=a-A|0;d=g;B=B+A|0}}if(!F){c[h>>2]=0;H=G}else H=-1}else H=w;while(0);if(l)c[b>>2]=c[h>>2];i=f;return H|0}function Hf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;do if(!(c[41858]|0)){b=Wc(30)|0;if(!(b+-1&b)){c[41860]=b;c[41859]=b;c[41861]=-1;c[41862]=-1;c[41863]=0;c[41851]=0;c[41858]=(ac(0)|0)&-16^1431655768;break}else Sa()}while(0);b=c[41746]|0;if(!b){d=0;e=0;f=0;g=0;h=0;i=0;j=0}else{k=c[41743]|0;l=k+40|0;m=l;n=1;o=167408;p=l;while(1){l=c[o>>2]|0;q=l+8|0;r=l+(c[o+4>>2]|0)|0;s=m;t=n;u=l+((q&7|0)==0?0:0-q&7)|0;q=p;while(1){if(u>>>0>=r>>>0|(u|0)==(b|0)){v=s;w=t;x=q;break}y=c[u+4>>2]|0;if((y|0)==7){v=s;w=t;x=q;break}z=y&-8;A=z+q|0;B=(y&3|0)==1;y=(B&1)+t|0;C=(B?z:0)+s|0;u=u+z|0;if(u>>>0<l>>>0){v=C;w=y;x=A;break}else{s=C;t=y;q=A}}o=c[o+8>>2]|0;if(!o){D=v;E=w;F=x;break}else{m=v;n=w;p=x}}x=c[41848]|0;d=F;e=k;f=E;g=x-F|0;h=c[41849]|0;i=x-D|0;j=D}c[a>>2]=d;c[a+4>>2]=f;f=a+8|0;c[f>>2]=0;c[f+4>>2]=0;c[a+16>>2]=g;c[a+20>>2]=h;c[a+24>>2]=0;c[a+28>>2]=i;c[a+32>>2]=j;c[a+36>>2]=e;return}function Gf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((d&8|0)==0&(g|0)>-1){d=c[e+16>>2]|0;h=e+28|0;i=c[h>>2]|0;j=(a|0)!=0;if(j&(i|0)!=0){k=e+48|0;e=0;do{l=c[d+(e*12|0)>>2]|0;if((l|0)==(c[k>>2]|0))m=g;else m=c[f+(l<<2)>>2]|0;l=b+(e<<3)|0;c[l>>2]=m;n=c[d+(e*12|0)+4>>2]|0;if((n|0)==(c[k>>2]|0))o=g;else o=c[f+(n<<2)>>2]|0;n=b+(e<<3)+4|0;c[n>>2]=o;if((m|0)==-1|(o|0)==-1){c[n>>2]=-1;c[l>>2]=-1}e=e+1|0;l=c[h>>2]|0}while(e>>>0<a>>>0&e>>>0<l>>>0);p=l}else p=i;if(j&(p|0)!=0){j=0;while(1){i=b+(j<<3)+4|0;e=c[d+(j*12|0)+8>>2]|0;if(e|0?(h=c[e>>2]|0,(h|0)>-1):0){o=b+(j<<3)|0;m=h;h=c[o>>2]|0;f=0;while(1){if((h|0)>=(c[b+(m<<3)>>2]|0)?(c[i>>2]|0)<=(c[b+(m<<3)+4>>2]|0):0)q=h;else{c[i>>2]=-1;c[o>>2]=-1;q=-1}f=f+1|0;m=c[e+(f<<2)>>2]|0;if((m|0)<=-1)break;else h=q}}h=j+1|0;if(h>>>0<a>>>0&h>>>0<p>>>0)j=h;else{r=h;break}}}else r=0}else r=0;if(r>>>0<a>>>0){j=r;do{c[b+(j<<3)>>2]=-1;c[b+(j<<3)+4>>2]=-1;j=j+1|0}while((j|0)!=(a|0))}return}function Ff(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;i=i+48|0;if((i|0)>=(j|0))ca();f=e+16|0;g=e;h=e+32|0;k=a+28|0;l=c[k>>2]|0;c[h>>2]=l;m=a+20|0;n=(c[m>>2]|0)-l|0;c[h+4>>2]=n;c[h+8>>2]=b;c[h+12>>2]=d;b=a+60|0;l=a+44|0;o=h;h=2;p=n+d|0;while(1){if(!(c[41512]|0)){c[f>>2]=c[b>>2];c[f+4>>2]=o;c[f+8>>2]=h;q=Or(bc(146,f|0)|0)|0}else{_a(2,a|0);c[g>>2]=c[b>>2];c[g+4>>2]=o;c[g+8>>2]=h;n=Or(bc(146,g|0)|0)|0;kc(0);q=n}if((p|0)==(q|0)){r=6;break}if((q|0)<0){s=o;t=h;r=8;break}n=p-q|0;u=c[o+4>>2]|0;if(q>>>0<=u>>>0)if((h|0)==2){c[k>>2]=(c[k>>2]|0)+q;v=u;w=q;x=o;y=2}else{v=u;w=q;x=o;y=h}else{z=c[l>>2]|0;c[k>>2]=z;c[m>>2]=z;v=c[o+12>>2]|0;w=q-u|0;x=o+8|0;y=h+-1|0}c[x>>2]=(c[x>>2]|0)+w;c[x+4>>2]=v-w;o=x;h=y;p=n}if((r|0)==6){p=c[l>>2]|0;c[a+16>>2]=p+(c[a+48>>2]|0);l=p;c[k>>2]=l;c[m>>2]=l;A=d}else if((r|0)==8){c[a+16>>2]=0;c[k>>2]=0;c[m>>2]=0;c[a>>2]=c[a>>2]|32;if((t|0)==2)A=0;else A=d-(c[s+4>>2]|0)|0}i=e;return A|0}function Ef(a,b,d,e,f,g,h,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+16|0;if((i|0)>=(j|0))ca();p=o+4|0;q=o;r=Zp(k|0,0,h|0,0)|0;s=D;if(s>>>0>0|(s|0)==0&r>>>0>1073741823){c[($r()|0)>>2]=27;t=-1;i=o;return t|0}r=Gr(f|0,g|0,-1,-1)|0;if(g>>>0<0|(g|0)==0&f>>>0<2|((r&f|0)!=0|(D&g|0)!=0)){c[($r()|0)>>2]=22;t=-1;i=o;return t|0}if(!(h>>>0>16777215?1:(33554431/(k>>>0)|0)>>>0<h>>>0)?!(0<g>>>0|(0==(g|0)?(33554431/(h>>>0)|0)>>>0<f>>>0:0)):0){r=h<<7;s=Pk(p,64,$(r,k)|0)|0;u=$r()|0;c[u>>2]=s;if(s|0){t=-1;i=o;return t|0}s=c[p>>2]|0;v=Pk(q,64,h<<8|64)|0;c[u>>2]=v;if(!v){v=c[q>>2]|0;u=Zp(r|0,0,f|0,g|0)|0;w=Md[1&1](0,u,3,34,-1,0)|0;if((w|0)!=(-1|0)){x=$(k<<7,h)|0;ne(a,b,d,e,1,0,s,x);if(k|0){e=0;do{d=s+($(r,e)|0)|0;Qd[n&1](d,h,f,g,w,v);e=e+1|0}while((e|0)!=(k|0))}ne(a,b,s,x,1,0,l,m);if(!(Rd[1&7](w,u)|0)){de(c[q>>2]|0);de(c[p>>2]|0);t=0;i=o;return t|0}}de(c[q>>2]|0)}de(c[p>>2]|0);t=-1;i=o;return t|0}c[($r()|0)>>2]=12;t=-1;i=o;return t|0}function Df(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0.0,l=0.0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,u=0.0,v=0.0,w=0.0,x=0.0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;f=+h[b>>3];g=+h[b+8>>3];do if(f==0.0&g==0.0){h[a>>3]=0.0;h[a+8>>3]=g}else{l=+O(+g);h[k>>3]=l;if((c[k>>2]|0)==0?(c[k+4>>2]|0)==2146435072:0){h[a>>3]=t;h[a+8>>3]=g;break}h[k>>3]=f;b=c[k+4>>2]|0;l=+O(+f);h[k>>3]=l;m=c[k>>2]|0;n=c[k+4>>2]|0;if(n>>>0>2146435072|(n|0)==2146435072&m>>>0>0){l=g-g;h[a>>3]=f;h[a+8>>3]=l/l;break}if((m|0)==0&(n|0)==2146435072){l=g-g;if((b|0)<0){o=+O(+l);p=+An(f,g);h[a>>3]=o;h[a+8>>3]=p;break}else{p=+An(l,g);h[a>>3]=f;h[a+8>>3]=p;break}}if(!(+O(+f)>=7446288774449766337959726.0e283)?!(+O(+g)>=7446288774449766337959726.0e283):0){q=f;r=g;s=0}else{q=f*.25;r=g*.25;s=1}p=+cg(q,r);if(!(q>=0.0)){l=+P(+((p-q)*.5));o=+O(+r)/(l*2.0);u=o;v=+An(l,r)}else{l=+P(+((q+p)*.5));u=l;v=r/(l*2.0)}if(s){l=u*2.0-v*0.0;p=u*0.0+v*2.0;if((l!=l|0.0!=0.0)&(p!=p|0.0!=0.0)){Ea(e|0,+u,+v,2.0,0.0);w=+h[e>>3];x=+h[e+8>>3]}else{w=l;x=p}}else{w=u;x=v}h[a>>3]=w;h[a+8>>3]=x}while(0);i=d;return}function If(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=d&255;g=(e|0)!=0;a:do if(g&(b&3|0)!=0){h=d&255;i=e;j=b;while(1){if((a[j>>0]|0)==h<<24>>24){k=i;l=j;m=6;break a}n=j+1|0;o=i+-1|0;p=(o|0)!=0;if(p&(n&3|0)!=0){i=o;j=n}else{q=o;r=p;s=n;m=5;break}}}else{q=e;r=g;s=b;m=5}while(0);if((m|0)==5)if(r){k=q;l=s;m=6}else{t=0;u=s}b:do if((m|0)==6){s=d&255;if((a[l>>0]|0)==s<<24>>24){t=k;u=l}else{q=$(f,16843009)|0;c:do if(k>>>0>3){r=k;b=l;while(1){g=c[b>>2]^q;if((g&-2139062144^-2139062144)&g+-16843009|0){v=r;w=b;break}g=b+4|0;e=r+-4|0;if(e>>>0>3){r=e;b=g}else{x=e;y=g;m=11;break c}}z=v;A=w}else{x=k;y=l;m=11}while(0);if((m|0)==11)if(!x){t=0;u=y;break}else{z=x;A=y}while(1){if((a[A>>0]|0)==s<<24>>24){t=z;u=A;break b}q=A+1|0;z=z+-1|0;if(!z){t=0;u=q;break}else A=q}}}while(0);return (t|0?u:0)|0}function Nf(b){b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;c=a[b>>0]|0;d=c<<24>>24==0;e=160043;while(1){a:do if(d){f=e;g=0;h=9}else{i=b;j=e;k=c;while(1){l=a[j>>0]|0;if(!(l<<24>>24)){f=j;g=k;h=9;break a}m=i;n=k;o=k&255;while(1){if(!((o+-48|0)>>>0>10&((o|32)+-97|0)>>>0>26)){p=m;q=n;break}r=m+1|0;s=a[r>>0]|0;if(!(s<<24>>24)){p=r;q=0;break}else{m=r;n=s;o=s&255}}if((q&255|32|0)!=(l&255|0))break a;i=p+1|0;o=j+1|0;k=a[i>>0]|0;if(!(k<<24>>24)){f=o;g=0;h=9;break}else j=o}}while(0);if((h|0)==9?(h=0,g<<24>>24==(a[f>>0]|0)):0){t=e;h=10;break}j=e+((zi(e)|0)+1)|0;do if(!(a[j>>0]|0)){k=a[j+1>>0]|0;if((k&255)>128){u=j+2|0;break}else{u=j+((((128-(k&255)|0)>>>2)*5|0)+2)|0;break}}else u=j;while(0);if(!(a[u>>0]|0)){v=-1;break}else e=u}if((h|0)==10){if(!(a[t>>0]|0))w=t;else{h=t;while(1){t=h+((zi(h)|0)+1)|0;if(!(a[t>>0]|0)){w=t;break}else h=t}}v=w+1-160043|0}return v|0}function Mf(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;a:do if(!((e|0)==(c|0)|(g|0)<1)?(h=c,i=h-b|0,(i|0)>0):0){j=f+((g|0)>254?254:g)|0;k=e;l=f;m=0;n=-1;o=e;while(1){p=a[o>>0]|0;q=p&255;if(!(q&192)){if(!(p<<24>>24)){r=l;s=n;t=o;break}if((l|0)==(f|0)){u=f;v=p}else{a[l>>0]=46;u=l+1|0;v=a[o>>0]|0}p=o+1|0;w=v&255;if((w|0)>=(h-p|0)){x=-1;break a}if((w|0)>=(j-u|0)){x=-1;break a}if(!(v<<24>>24)){y=u;z=n;A=p}else{B=u;C=w;D=p;while(1){C=C+-1|0;a[B>>0]=a[D>>0]|0;if(!C)break;else{B=B+1|0;D=D+1|0}}y=u+w|0;z=n;A=p+w|0}}else{D=o+1|0;if((D|0)==(c|0)){x=-1;break a}B=d[D>>0]|0|q<<8&16128;if((B|0)>=(i|0)){x=-1;break a}y=l;z=(n|0)<0?o+2-k|0:n;A=b+B|0}m=m+2|0;if((m|0)>=(i|0)){x=-1;break a}else{l=y;n=z;o=A}}a[r>>0]=0;x=(s|0)<0?t+1-k|0:s}else x=-1;while(0);return x|0}function Lf(c,f){c=c|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=(f<<1)+-1|0;h=f+-1|0;a:do if(!((c+-43008|0)>>>0<22272|((c+-11776|0)>>>0<30784|((c+-1536|0)>>>0<2560|(Rq(c)|0)==0)))){i=(f|0)!=0;if(i&(c+-4256|0)>>>0<46){if((c|0)>4293)switch(c|0){case 4295:case 4301:break;default:{j=c;break a}}j=c+7264|0;break}if((c+-11520|0)>>>0<38&(i^1)){if((c|0)>11557)switch(c|0){case 11559:case 11565:break;default:{j=c;break a}}j=c+-7264|0;break}else k=0;do{i=a[24354+(k<<2)+2>>0]|0;l=i<<24>>24;m=c-(e[24354+(k<<2)>>1]|0)|0;if((m-(l&h)|0)>>>0<(d[24354+(k<<2)+3>>0]|0)>>>0){n=i;o=l;p=m;q=13;break}k=k+1|0}while((k|0)!=61);if((q|0)==13)if(n<<24>>24==1){j=f+c-(p&1)|0;break}else{j=($(o,g)|0)+c|0;break}m=1-f|0;l=b[23862+(m<<1)>>1]|0;b:do if(l<<16>>16){i=l;r=0;while(1){if((i&65535|0)==(c|0)){s=r;break}r=r+1|0;i=b[23862+(r<<2)+(m<<1)>>1]|0;if(!(i<<16>>16))break b}j=e[23862+(s<<2)+(f<<1)>>1]|0;break a}while(0);if((c+-66600+(f*40|0)|0)>>>0<40)j=c+-40+(f*80|0)|0;else j=c}else j=c;while(0);return j|0}function Zf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;do if(!(c[41858]|0)){b=Wc(30)|0;if(!(b+-1&b)){c[41860]=b;c[41859]=b;c[41861]=-1;c[41862]=-1;c[41863]=0;c[41851]=0;c[41858]=(ac(0)|0)&-16^1431655768;break}else Sa()}while(0);if(a>>>0>=4294967232){d=0;e=d&1;return e|0}b=c[41746]|0;if(!b){d=0;e=d&1;return e|0}f=c[41743]|0;if(f>>>0>(a+40|0)>>>0){g=c[41860]|0;h=((-41-a+f+g|0)>>>0)/(g>>>0)|0;f=167408;while(1){a=c[f>>2]|0;if(a>>>0<=b>>>0?(i=f+4|0,(a+(c[i>>2]|0)|0)>>>0>b>>>0):0){j=f;k=i;l=f;break}f=c[f+8>>2]|0}f=$(h+-1|0,g)|0;if(((c[l+12>>2]&8|0)==0?(l=La(0)|0,(l|0)==((c[j>>2]|0)+(c[k>>2]|0)|0)):0)?(j=La(0-(f>>>0>2147483646?-2147483648-g|0:f)|0)|0,f=La(0)|0,g=l-f|0,!((j|0)==(-1|0)|l>>>0<=f>>>0)):0){c[k>>2]=(c[k>>2]|0)-g;c[41848]=(c[41848]|0)-g;k=c[41746]|0;j=k+8|0;h=(j&7|0)==0?0:0-j&7;j=k+h|0;k=(c[41743]|0)-g-h|0;c[41746]=j;c[41743]=k;c[j+4>>2]=k|1;c[j+k+4>>2]=40;c[41747]=c[41862];d=(l|0)!=(f|0);e=d&1;return e|0}}if((c[41743]|0)>>>0<=(c[41747]|0)>>>0){d=0;e=d&1;return e|0}c[41747]=-1;d=0;e=d&1;return e|0}function hg(a,b){a=a|0;b=+b;var d=0.0,e=0.0,f=0.0,g=0.0,i=0.0;d=+O(+b);if(a>>>0<1072955392){b=d+-1.0;e=.15493708848953247-(b*(b*(b*(b*(b*(.035478304325618236-b*.002166375594868791)+-.11089469428239668)+.31834661990116175)+-.3722078760357013)+.41485611868374833)+-2.3621185607526594e-03)/(b*(b*(b*(b*(b*(b*.011984499846799107+.01363708391202905)+.12617121980876164)+.07182865441419627)+.540397917702171)+.10642088040084423)+1.0)}else{b=1.0/(d*d);if(a>>>0<1074191213){f=b*(b*(b*(b*(b*(b*(6.570249770319282-b*.0604244152148581)+108.63500554177944)+429.00814002756783)+645.3872717332679)+434.56587747522923)+137.65775414351904)+19.651271667439257;g=b*(b*(b*(b*(b*(b*(-81.2874355063066-b*9.814329344169145)+-184.60509290671104)+-162.39666946257347)+-62.375332450326006)+-10.558626225323291)+-.6938585727071818)+-.009864944034847148}else{f=b*(b*(b*(b*(b*(474.52854120695537-b*22.44095244658582)+2553.0504064331644)+3199.8582195085955)+1536.729586084437)+325.7925129965739)+30.33806074348246;g=b*(b*(b*(b*(b*(-1025.0951316110772-b*483.5191916086514)+-637.5664433683896)+-160.63638485582192)+-17.757954917754752)+-.799283237680523)+-.0098649429247001}h[k>>3]=d;a=c[k+4>>2]|0;c[k>>2]=0;c[k+4>>2]=a;i=+h[k>>3];e=+Y(+(-.5625-i*i))*+Y(+((i-d)*(d+i)+g/(b*f+1.0)))/d}return +e}function Jf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;i=i+16|0;if((i|0)>=(j|0))ca();h=g;k=(f|0)==0?166204:f;f=c[k>>2]|0;a:do if(!d)if(!f)l=0;else m=15;else{n=(b|0)==0?h:b;if(!e)l=-2;else{if(!f){o=a[d>>0]|0;p=o&255;if(o<<24>>24>-1){c[n>>2]=p;l=o<<24>>24!=0&1;break}o=p+-194|0;if(o>>>0>50){m=15;break}p=c[7572+(o<<2)>>2]|0;o=e+-1|0;if(!o)q=p;else{r=o;s=p;t=d+1|0;m=9}}else{r=e;s=f;t=d;m=9}b:do if((m|0)==9){p=a[t>>0]|0;o=(p&255)>>>3;if((o+-16|o+(s>>26))>>>0>7){m=15;break a}else{u=r;v=p;w=s;x=t}while(1){x=x+1|0;w=(v&255)+-128|w<<6;u=u+-1|0;if((w|0)>=0){y=w;z=u;break}if(!u){q=w;break b}v=a[x>>0]|0;if((v&-64)<<24>>24!=-128){m=15;break a}}c[k>>2]=0;c[n>>2]=y;l=e-z|0;break a}while(0);c[k>>2]=q;l=-2}}while(0);if((m|0)==15){c[k>>2]=0;c[($r()|0)>>2]=84;l=-1}i=g;return l|0}function Pf(a,b,d,e){a=a|0;b=+b;d=d|0;e=e|0;var f=0.0,g=0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0.0;f=+S(+b);g=(d|0)!=0;i=g?-f:f;f=+R(+b);j=i-f;if(a>>>0<2145386496){l=-i-f;m=+R(+(b*2.0));if(i*f>0.0){n=m/l;o=l}else{n=j;o=m/j}if(a>>>0<1207959552){m=g?-o:o;h[k>>3]=b;g=c[k+4>>2]&2147483647;a=g>>>0>1075838975;if(!a)if(g>>>0>1074933386){p=6472;q=6384}else{d=g>>>0>1074191212;p=d?6248:6296;q=d?6168:6208}else{p=6424;q=6344}o=1.0/(b*b);l=n*((+h[p>>3]+o*(+h[p+8>>3]+o*(+h[p+16>>3]+o*(+h[p+24>>3]+o*(+h[p+32>>3]+o*+h[p+40>>3])))))/(o*(+h[q>>3]+o*(+h[q+8>>3]+o*(+h[q+16>>3]+o*(+h[q+24>>3]+o*+h[q+32>>3]))))+1.0)+1.0);if(!a)if(g>>>0>1074933386){r=6856;s=6760}else{a=g>>>0>1074191212;r=a?6616:6664;s=a?6520:6568}else{r=6808;s=6712}t=l-m*(((+h[r>>3]+o*(+h[r+8>>3]+o*(+h[r+16>>3]+o*(+h[r+24>>3]+o*(+h[r+32>>3]+o*+h[r+40>>3])))))/(o*(+h[s>>3]+o*(+h[s+8>>3]+o*(+h[s+16>>3]+o*(+h[s+24>>3]+o*(+h[s+32>>3]+o*+h[s+40>>3])))))+1.0)+.375)/b)}else t=n}else t=j;return +(((e|0)==0?t:-t)*.5641895835477563/+P(+b))}function Kf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+112|0;if((i|0)>=(j|0))ca();f=e+40|0;g=e+24|0;h=e+16|0;k=e;l=e+52|0;m=a[d>>0]|0;if(If(165667,m<<24>>24,4)|0){n=Wd(1144)|0;if(!n)o=0;else{p=n;q=p+112|0;do{c[p>>2]=0;p=p+4|0}while((p|0)<(q|0));if(!(as(d,43)|0))c[n>>2]=m<<24>>24==114?8:4;if(!(as(d,101)|0))r=m;else{c[k>>2]=b;c[k+4>>2]=2;c[k+8>>2]=1;wa(221,k|0)|0;r=a[d>>0]|0}if(r<<24>>24==97){c[h>>2]=b;c[h+4>>2]=3;r=wa(221,h|0)|0;if(!(r&1024)){c[g>>2]=b;c[g+4>>2]=4;c[g+8>>2]=r|1024;wa(221,g|0)|0}g=c[n>>2]|128;c[n>>2]=g;s=g}else s=c[n>>2]|0;c[n+60>>2]=b;c[n+44>>2]=n+120;c[n+48>>2]=1024;g=n+75|0;a[g>>0]=-1;if((s&8|0)==0?(c[f>>2]=b,c[f+4>>2]=21505,c[f+8>>2]=l,(Bd(54,f|0)|0)==0):0)a[g>>0]=10;c[n+32>>2]=1;c[n+36>>2]=4;c[n+40>>2]=2;c[n+12>>2]=1;if(!(c[41513]|0))c[n+76>>2]=-1;Xb(166076);g=c[41518]|0;c[n+56>>2]=g;if(g|0)c[g+52>>2]=n;c[41518]=n;Cd(166076);o=n}}else{c[($r()|0)>>2]=22;o=0}i=e;return o|0}function lg(a,b){a=a|0;b=+b;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0;d=+O(+b);if(a>>>0<1067450368){b=d+-1.0;e=.15493708848953247-(b*(b*(b*(b*(b*(.03547830507159233-b*.002166375517845154)+-.11089469492435455)+.31834661960601807)+-.3722078800201416)+.41485610604286194)+-2.3621185682713985e-03)/(b*(b*(b*(b*(b*(b*.011984500102698803+.01363708358258009)+.12617121636867523)+.07182865589857101)+.5403979420661926)+.10642088204622269)+1.0)}else{b=1.0/(d*d);if(a>>>0<1077336941){f=b*(b*(b*(b*(b*(b*(6.570249557495117-b*.06042441353201866)+108.63500213623047)+429.0081481933594)+645.3872680664062)+434.5658874511719)+137.6577606201172)+19.65127182006836;h=b*(b*(b*(b*(b*(b*(-81.28743743896484-b*9.814329147338867)+-184.60508728027344)+-162.39666748046875)+-62.37533187866211)+-10.558626174926758)+-.6938585638999939)+-.009864944033324718}else{f=b*(b*(b*(b*(b*(474.5285339355469-b*22.44095230102539)+2553.05029296875)+3199.858154296875)+1536.7296142578125)+325.7925109863281)+30.33806037902832;h=b*(b*(b*(b*(b*(-1025.0950927734375-b*483.5191955566406)+-637.5664672851562)+-160.63638305664062)+-17.75795555114746)+-.7992832660675049)+-.009864943102002144}i=(c[k>>2]=(g[k>>2]=d,c[k>>2]|0)&-8192,+g[k>>2]);e=+Y(+(-.5625-i*i))*+Y(+((i-d)*(d+i)+h/(b*f+1.0)))/d}return +e}function Tf(a,b,d){a=a|0;b=+b;d=d|0;var e=0.0,f=0.0,h=0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0.0;e=+S(+b);f=+R(+b);h=(d|0)!=0;i=h?-f:f;f=e+i;if(a>>>0<2130706432){j=e-i;l=-+R(+(b*2.0));if(e*i<0.0){m=l/j;n=j}else{m=f;n=l/f}if(a>>>0<1484783616){l=h?-n:n;n=+O(+b);h=(g[k>>2]=n,c[k>>2]|0);a=h>>>0>1090519039;if(!a)if(h>>>0>1089936471){o=23020;p=22976}else{d=h>>>0>1077336935;o=d?22908:22932;p=d?22868:22888}else{o=22996;p=22956}n=1.0/(b*b);j=m*((+g[o>>2]+n*(+g[o+4>>2]+n*(+g[o+8>>2]+n*(+g[o+12>>2]+n*(+g[o+16>>2]+n*+g[o+20>>2])))))/(n*(+g[p>>2]+n*(+g[p+4>>2]+n*(+g[p+8>>2]+n*(+g[p+12>>2]+n*+g[p+16>>2]))))+1.0)+1.0);if(!a)if(h>>>0>1089936471){q=23212;r=23164}else{a=h>>>0>1077336935;q=a?23092:23116;r=a?23044:23068}else{q=23188;r=23140}s=j-l*(((+g[q>>2]+n*(+g[q+4>>2]+n*(+g[q+8>>2]+n*(+g[q+12>>2]+n*(+g[q+16>>2]+n*+g[q+20>>2])))))/(n*(+g[r>>2]+n*(+g[r+4>>2]+n*(+g[r+8>>2]+n*(+g[r+12>>2]+n*(+g[r+16>>2]+n*+g[r+20>>2])))))+1.0)+-.125)/b)}else s=m}else s=f;return +(s*.564189612865448/+P(+b))}function Wf(a,b,d){a=a|0;b=+b;d=d|0;var e=0.0,f=0.0,g=0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0.0;e=+S(+b);f=+R(+b);g=(d|0)!=0;i=g?-f:f;f=e+i;if(a>>>0<2145386496){j=e-i;l=-+R(+(b*2.0));if(e*i<0.0){m=l/j;n=j}else{m=f;n=l/f}if(a>>>0<1207959552){l=g?-n:n;h[k>>3]=b;g=c[k+4>>2]&2147483647;a=g>>>0>1075838975;if(!a)if(g>>>0>1074933386){o=5344;p=5256}else{d=g>>>0>1074191212;o=d?5120:5168;p=d?5040:5080}else{o=5296;p=5216}n=1.0/(b*b);j=m*((+h[o>>3]+n*(+h[o+8>>3]+n*(+h[o+16>>3]+n*(+h[o+24>>3]+n*(+h[o+32>>3]+n*+h[o+40>>3])))))/(n*(+h[p>>3]+n*(+h[p+8>>3]+n*(+h[p+16>>3]+n*(+h[p+24>>3]+n*+h[p+32>>3]))))+1.0)+1.0);if(!a)if(g>>>0>1074933386){q=5728;r=5632}else{a=g>>>0>1074191212;q=a?5488:5536;r=a?5392:5440}else{q=5680;r=5584}s=j-l*(((+h[q>>3]+n*(+h[q+8>>3]+n*(+h[q+16>>3]+n*(+h[q+24>>3]+n*(+h[q+32>>3]+n*+h[q+40>>3])))))/(n*(+h[r>>3]+n*(+h[r+8>>3]+n*(+h[r+16>>3]+n*(+h[r+24>>3]+n*(+h[r+32>>3]+n*+h[r+40>>3])))))+1.0)+-.125)/b)}else s=m}else s=f;return +(s*.5641895835477563/+P(+b))}function _f(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;a=i;i=i+32|0;if((i|0)>=(j|0))ca();b=a+16|0;d=a+8|0;e=a;f=a+24|0;g=Cg(1,524290,0)|0;if((g|0)>-1){h=f+4|0;k=0;while(1){l=Wd(k*40|0)|0;do if(!l){m=0;n=14}else{c[h>>2]=l+(k<<3);o=k<<5;c[f>>2]=o;c[e>>2]=f;if((Rl(g,35090,e)|0)<0){de(l);m=0;n=14;break}p=c[f>>2]|0;if((p|0)==(o|0)){de(l);break}o=p>>>5;if(!o){q=0;r=0}else{p=0;s=0;while(1){c[d>>2]=(c[h>>2]|0)+(p<<5);if((Rl(g,35123,d)|0)<0)t=s+1|0;else{u=c[h>>2]|0;v=p-s|0;c[l+(v<<3)>>2]=c[u+(p<<5)+16>>2];c[l+(v<<3)+4>>2]=u+(p<<5);t=s}p=p+1|0;if((p|0)==(o|0)){q=o;r=t;break}else s=t}}s=q-r|0;c[l+(s<<3)+4>>2]=0;c[l+(s<<3)>>2]=0;m=l;n=14}while(0);if((n|0)==14?(n=0,(m|0)!=(-1|0)):0){w=m;break}k=k+1|0}c[b>>2]=g;Zb(6,b|0)|0;x=w}else x=0;c[($r()|0)>>2]=105;i=a;return x|0}function Yf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=i;i=i+80|0;if((i|0)>=(j|0))ca();h=g+8|0;k=g;l=g+48|0;m=d+16|0;c[m>>2]=0;n=d+20|0;c[n>>2]=0;Qf(e,f,b)|0;a:do if(!(ap(b)|0)){o=l+4|0;p=l+8|0;q=l+12|0;r=l+16|0;s=l+20|0;t=l+24|0;u=l+28|0;while(1){if(Wo(b)|0){v=0;break a}if(!(as(e,10)|0)){w=5;break}c[h>>2]=l;c[h+4>>2]=o;c[h+8>>2]=p;c[h+12>>2]=q;c[h+16>>2]=r;c[h+20>>2]=s;c[h+24>>2]=t;c[h+28>>2]=u;c[h+32>>2]=m;c[h+36>>2]=n;if((Tp(e,165860,h)|0)>=2?(x=e+(c[l>>2]|0)|0,(a[x>>0]|0)!=35):0){y=x;w=9;break}Qf(e,f,b)|0;if(ap(b)|0){v=0;break a}}if((w|0)==5){Up(b,165848,k)|0;c[($r()|0)>>2]=34;v=0;break}else if((w|0)==9){a[e+(c[o>>2]|0)>>0]=0;a[e+(c[q>>2]|0)>>0]=0;a[e+(c[s>>2]|0)>>0]=0;a[e+(c[u>>2]|0)>>0]=0;c[d>>2]=y;c[d+4>>2]=e+(c[p>>2]|0);c[d+8>>2]=e+(c[r>>2]|0);c[d+12>>2]=e+(c[t>>2]|0);v=d;break}}else v=0;while(0);i=g;return v|0}function Qf(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((c[f+76>>2]|0)>-1)g=Ey(f)|0;else g=0;h=e+-1|0;if((e|0)<2){e=f+74|0;i=a[e>>0]|0;a[e>>0]=i+255|i;if(g|0)Dy(f);if(!h){a[b>>0]=0;j=b}else j=0}else{a:do if(h){i=f+4|0;e=f+8|0;k=h;l=b;while(1){m=c[i>>2]|0;n=m;o=(c[e>>2]|0)-n|0;p=If(m,10,o)|0;q=(p|0)==0;r=q?o:1-n+p|0;p=r>>>0<k>>>0;n=p?r:k;$j(l|0,m|0,n|0)|0;m=(c[i>>2]|0)+n|0;c[i>>2]=m;r=l+n|0;o=k-n|0;if(!(q&p)){s=r;t=17;break a}if(m>>>0>=(c[e>>2]|0)>>>0){p=_m(f)|0;if((p|0)<0){u=r;break}else v=p}else{c[i>>2]=m+1;v=d[m>>0]|0}k=o+-1|0;o=r+1|0;a[r>>0]=v;if(!((k|0)!=0&(v&255|0)!=10)){s=o;t=17;break a}else l=o}if((u|0)!=(b|0)?(c[f>>2]&16|0)!=0:0){s=u;t=17}else w=0}else{s=b;t=17}while(0);if((t|0)==17)if(!b)w=0;else{a[s>>0]=0;w=b}if(!g)j=w;else{Dy(f);j=w}}return j|0}function Sf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;b=c[a+4>>2]|0;if(b|0){a=b+4|0;d=c[b>>2]|0;if(!(c[a>>2]|0))e=d;else{f=d;d=0;while(1){if(c[f+(d<<5)+8>>2]|0){g=c[f+(d<<5)+16>>2]|0;if(!g)h=f;else{de(g);h=c[b>>2]|0}g=c[h+(d<<5)+28>>2]|0;if(!g)i=h;else{de(g);i=c[b>>2]|0}}else i=f;d=d+1|0;if(d>>>0>=(c[a>>2]|0)>>>0){e=i;break}else f=i}}if(e|0)de(e);e=b+8|0;i=c[e>>2]|0;if(i|0){if(!(c[i+8>>2]|0))j=i;else{f=i;while(1){i=c[f+16>>2]|0;if(i|0)de(i);if(!(c[f+40>>2]|0))break;else f=f+32|0}j=c[e>>2]|0}de(j)}j=b+16|0;e=c[j>>2]|0;if(e|0){f=b+28|0;i=c[f>>2]|0;if(!i)k=e;else{a=e;e=i;i=0;while(1){d=c[a+(i*12|0)+8>>2]|0;if(!d)l=e;else{de(d);l=c[f>>2]|0}d=i+1|0;if(d>>>0>=l>>>0)break;a=c[j>>2]|0;e=l;i=d}k=c[j>>2]|0}de(k)}k=c[b+32>>2]|0;if(k|0)de(k);k=c[b+20>>2]|0;if(k|0)de(k);k=c[b+36>>2]|0;if(k|0)de(k);de(b)}return}function Rf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[b>>2]&127;f=e+1|0;a[b+72+e>>0]=-128;g=b+72|0;if(f>>>0>112){Gl(b+72+f|0,0,e^127|0)|0;qe(b,g);h=0}else h=f;Gl(b+72+h|0,0,120-h|0)|0;h=b;f=c[h>>2]|0;e=c[h+4>>2]|0;h=fr(f|0,e|0,3)|0;i=b;c[i>>2]=h;c[i+4>>2]=D;i=kr(f|0,e|0,53)|0;a[b+192>>0]=i;i=kr(f|0,e|0,45)|0;a[b+193>>0]=i;i=kr(f|0,e|0,37)|0;a[b+194>>0]=i;i=kr(f|0,e|0,29)|0;a[b+195>>0]=i;i=kr(f|0,e|0,21)|0;a[b+196>>0]=i;i=kr(f|0,e|0,13)|0;a[b+197>>0]=i;i=kr(f|0,e|0,5)|0;a[b+198>>0]=i;a[b+199>>0]=h;qe(b,g);g=0;do{h=b+8+(g<<3)|0;i=h;e=kr(c[i>>2]|0,c[i+4>>2]|0,56)|0;i=g<<3;a[d+i>>0]=e;e=h;f=kr(c[e>>2]|0,c[e+4>>2]|0,48)|0;a[d+(i|1)>>0]=f;f=h;e=kr(c[f>>2]|0,c[f+4>>2]|0,40)|0;a[d+(i|2)>>0]=e;a[d+(i|3)>>0]=c[h+4>>2];e=h;f=kr(c[e>>2]|0,c[e+4>>2]|0,24)|0;a[d+(i|4)>>0]=f;f=h;e=kr(c[f>>2]|0,c[f+4>>2]|0,16)|0;a[d+(i|5)>>0]=e;e=h;f=kr(c[e>>2]|0,c[e+4>>2]|0,8)|0;a[d+(i|6)>>0]=f;a[d+(i|7)>>0]=c[h>>2];g=g+1|0}while((g|0)!=8);return}function $f(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;a=i;i=i+32|0;if((i|0)>=(j|0))ca();b=a+16|0;d=a+8|0;e=a;do if(!(c[41858]|0)){f=Wc(30)|0;if(!(f+-1&f)){c[41860]=f;c[41859]=f;c[41861]=-1;c[41862]=-1;c[41863]=0;c[41851]=0;c[41858]=(ac(0)|0)&-16^1431655768;break}else Sa()}while(0);f=c[41746]|0;if(!f){g=0;h=0;k=0;l=c[1861]|0;c[e>>2]=h;Rp(l,165918,e)|0;c[d>>2]=g;Rp(l,165944,d)|0;c[b>>2]=k;Rp(l,165970,b)|0;i=a;return}m=c[41849]|0;n=c[41848]|0;o=167408;p=n+-40-(c[41743]|0)|0;while(1){q=c[o>>2]|0;r=q+8|0;s=q+(c[o+4>>2]|0)|0;t=q+((r&7|0)==0?0:0-r&7)|0;r=p;while(1){if(t>>>0>=s>>>0|(t|0)==(f|0)){u=r;break}v=c[t+4>>2]|0;if((v|0)==7){u=r;break}w=v&-8;x=r-((v&3|0)==1?w:0)|0;t=t+w|0;if(t>>>0<q>>>0){u=x;break}else r=x}o=c[o+8>>2]|0;if(!o){g=n;h=m;k=u;break}else p=u}l=c[1861]|0;c[e>>2]=h;Rp(l,165918,e)|0;c[d>>2]=g;Rp(l,165944,d)|0;c[b>>2]=k;Rp(l,165970,b)|0;i=a;return}function ig(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=(d[a+2>>0]|0)<<8|(d[a+3>>0]|0)|(d[a+1>>0]|0)<<16|(d[a>>0]|0)<<24;f=(d[a+6>>0]|0)<<8|(d[a+7>>0]|0)|(d[a+5>>0]|0)<<16|(d[a+4>>0]|0)<<24;a=0;g=28;h=0;i=0;while(1){j=a<<1;k=e>>>g&15;l=c[11348+(a<<6)+(k<<2)>>2]|h|c[11348+(a+4<<6)+((f>>>g&15)<<2)>>2];m=g+-4|0;n=c[11860+(j<<6)+(k<<2)>>2]|i|c[11860+((j|1)<<6)+((e>>>m&15)<<2)>>2]|c[11860+(a+8<<6)+((f>>>m&15)<<2)>>2];a=a+1|0;if((a|0)==4){o=l;p=n;break}else{g=g+-8|0;h=l;i=n}}i=0;h=0;do{h=(d[164095+i>>0]|0)+h|0;g=28-h|0;a=o>>>g|o<<h;f=p>>>g|p<<h;g=0;e=25;n=0;l=0;while(1){m=e+-4|0;j=c[12628+(g<<5)+((a>>>e&7)<<2)>>2]|n|c[12884+(g<<6)+((a>>>m&15)<<2)>>2];k=c[12756+(g<<5)+((f>>>e&7)<<2)>>2]|l|c[13140+(g<<6)+((f>>>m&15)<<2)>>2];g=g+1|0;if((g|0)==4){q=j;r=k;break}else{e=e+-7|0;n=j;l=k}}c[b+(i<<2)>>2]=q;c[b+64+(i<<2)>>2]=r;i=i+1|0}while((i|0)!=16);return}function Xf(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0,i=0,j=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;h[k>>3]=a;b=c[k>>2]|0;d=c[k+4>>2]|0;e=(d|0)<0;do if(e|d>>>0<1048576){f=+O(+a);h[k>>3]=f;if((c[k>>2]|0)==0&(c[k+4>>2]|0)==0){g=-1.0/(a*a);break}if(e){g=(a-a)/0.0;break}else{h[k>>3]=a*18014398509481984.0;i=c[k+4>>2]|0;j=c[k>>2]|0;l=i;m=i;n=-1077;o=9;break}}else if(d>>>0<=2146435071)if((b|0)==0&0==0&(d|0)==1072693248)g=0.0;else{j=b;l=d;m=d;n=-1023;o=9}else g=a;while(0);if((o|0)==9){o=m+614242|0;c[k>>2]=j;c[k+4>>2]=(o&1048575)+1072079006;a=+h[k>>3]+-1.0;f=a*(a*.5);p=a/(a+2.0);q=p*p;r=q*q;h[k>>3]=a-f;j=c[k+4>>2]|0;c[k>>2]=0;c[k+4>>2]=j;s=+h[k>>3];t=a-s-f+p*(f+(r*(r*(r*.15313837699209373+.22222198432149784)+.3999999999940942)+q*(r*(r*(r*.14798198605116586+.1818357216161805)+.2857142874366239)+.6666666666666735)));r=s*.4342944818781689;q=+(n+(o>>>20)|0);f=q*.30102999566361177;p=f+r;g=p+(r+(f-p)+(t*.4342944818781689+(q*3.694239077158931e-13+(s+t)*2.5082946711645275e-11)))}return +g}function Of(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+192|0;if((i|0)>=(j|0))ca();g=f+80|0;h=f+64|0;k=f+48|0;l=f+32|0;m=f+16|0;n=f;o=f+84|0;p=f+160|0;switch(e|0){case 0:{c[n>>2]=a;c[n+4>>2]=b;c[n+8>>2]=d;c[n+12>>2]=0;q=Or($a(306,n|0)|0)|0;break}case 256:{c[m>>2]=a;c[m+4>>2]=b;c[m+8>>2]=o;c[m+12>>2]=256;n=fb(300,m|0)|0;do if(!n){m=o+12|0;if((c[m>>2]&61440|0)==40960){r=Or(-95)|0;break}c[l>>2]=a;c[l+4>>2]=b;c[l+8>>2]=2752768;e=wc(295,l|0)|0;if((e|0)<0)if((e|0)==-40){r=Or(-95)|0;break}else{r=Or(e)|0;break}yj(p,e);c[k>>2]=-100;c[k+4>>2]=p;c[k+8>>2]=o;c[k+12>>2]=0;s=fb(300,k|0)|0;if(!s)if((c[m>>2]&61440|0)==40960)t=-95;else{c[h>>2]=-100;c[h+4>>2]=p;c[h+8>>2]=d;t=$a(306,h|0)|0}else t=s;c[g>>2]=e;Zb(6,g|0)|0;r=Or(t)|0}else r=Or(n)|0;while(0);q=r;break}default:q=Or(-22)|0}i=f;return q|0}function Vf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+48|0;if((i|0)>=(j|0))ca();g=f+16|0;h=f+8|0;k=f;l=f+32|0;m=f+20|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;do if((dh(a,l,b,d,e)|0)>=0){n=0;a:while(1){do if((ef(n,3,k)|0)<0){o=c[l>>2]|0;c[h>>2]=n;p=ef(o,0,h)|0;if((p|0)<0){q=-1;break a}if((p|0)==(n|0)){c[m+(n<<2)>>2]=1;break}else{wp(p)|0;break}}while(0);p=n+1|0;if((p|0)<3)n=p;else{r=p;s=8;break}}if((s|0)==8)if((r|0)==3){n=id()|0;if(!n){wp(c[a>>2]|0)|0;lr()|0;p=c[l>>2]|0;c[g>>2]=0;Rl(p,21518,g)|0;pn(c[l>>2]|0,0)|0;pn(c[l>>2]|0,1)|0;pn(c[l>>2]|0,2)|0;p=c[l>>2]|0;if((p|0)<=2){t=0;break}wp(p)|0;t=0;break}else q=n}else q=-1;if(c[m>>2]|0)wp(0)|0;if(c[m+4>>2]|0)wp(1)|0;if(c[m+8>>2]|0)wp(2)|0;wp(c[l>>2]|0)|0;if((q|0)<0){wp(c[a>>2]|0)|0;t=q}else t=q}else t=-1;while(0);i=f;return t|0}function dg(a,b,d,e){a=a|0;b=+b;d=d|0;e=e|0;var f=0.0,h=0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0;f=+S(+b);h=(d|0)!=0;i=h?-f:f;f=+R(+b);j=i-f;if(a>>>0<2130706432){l=-i-f;m=+R(+(b*2.0));if(i*f>0.0){n=m/l;o=l}else{n=j;o=m/j}if(a>>>0<1484783616){m=h?-o:o;o=+O(+b);h=(g[k>>2]=o,c[k>>2]|0);if(h>>>0<=1090519039)if(h>>>0>1089936471){p=23668;q=23624}else{a=h>>>0>1077336935;p=a?23556:23580;q=a?23516:23536}else{p=23644;q=23604}o=1.0/(b*b);a=h>>>0>1075838975;h=a?23692:23716;d=a?23740:23764;r=n*((+g[p>>2]+o*(+g[p+4>>2]+o*(+g[p+8>>2]+o*(+g[p+12>>2]+o*(+g[p+16>>2]+o*+g[p+20>>2])))))/(o*(+g[q>>2]+o*(+g[q+4>>2]+o*(+g[q+8>>2]+o*(+g[q+12>>2]+o*+g[q+16>>2]))))+1.0)+1.0)-m*(((+g[d>>2]+o*(+g[d+4>>2]+o*(+g[d+8>>2]+o*(+g[d+12>>2]+o*(+g[d+16>>2]+o*+g[d+20>>2])))))/(o*(+g[h>>2]+o*(+g[h+4>>2]+o*(+g[h+8>>2]+o*(+g[h+12>>2]+o*(+g[h+16>>2]+o*+g[h+20>>2])))))+1.0)+.375)/b)}else r=n}else r=j;return +(((e|0)==0?r:-r)*.564189612865448/+P(+b))}function Uf(a,b){a=a|0;b=+b;var d=0,e=0,f=0,g=0.0,i=0,j=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,t=0.0;h[k>>3]=b;d=c[k>>2]|0;e=c[k+4>>2]|0;f=e&2147483647;do if((f|(d|0-d)>>>31)>>>0<=2146435072)if((e|0)>-1|(e|0)==-1&d>>>0>4294967295|(f|d|0)==0)if((f|0)==2146435072)g=0.0;else{if(!a){g=+Qh(b);break}i=(a|0)<0;j=i?~a:a+-1|0;l=i?a&1:0;if(!j){m=+_h(b);g=l|0?-m:m;break}if(f>>>0<=1389363199){m=+Qh(b);n=+_h(b);h[k>>3]=n;if((j|0)>0&(0?undefined:(c[k+4>>2]|0)!=-1048576)){o=m;m=n;i=0;while(1){i=i+1|0;p=m*(+(i|0)*2.0/b)-o;h[k>>3]=p;if(!((i|0)<(j|0)&(0?undefined:(c[k+4>>2]|0)!=-1048576))){q=p;break}else{r=m;m=p;o=r}}}else q=n}else{switch(j&3|0){case 0:{t=-+S(+b)-+R(+b);break}case 1:{t=+R(+b)-+S(+b);break}case 2:{t=+S(+b)+ +R(+b);break}case 3:{t=+S(+b)-+R(+b);break}default:{}}q=t*.5641895835477563/+P(+b)}g=l|0?-q:q}else g=s;else g=b;while(0);return +g}function ag(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0,i=0,j=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;h[k>>3]=a;b=c[k>>2]|0;d=c[k+4>>2]|0;e=(d|0)<0;do if(e|d>>>0<1048576){f=+O(+a);h[k>>3]=f;if((c[k>>2]|0)==0&(c[k+4>>2]|0)==0){g=-1.0/(a*a);break}if(e){g=(a-a)/0.0;break}else{h[k>>3]=a*18014398509481984.0;i=c[k+4>>2]|0;j=c[k>>2]|0;l=i;m=i;n=-1077;o=9;break}}else if(d>>>0<=2146435071)if((b|0)==0&0==0&(d|0)==1072693248)g=0.0;else{j=b;l=d;m=d;n=-1023;o=9}else g=a;while(0);if((o|0)==9){o=m+614242|0;c[k>>2]=j;c[k+4>>2]=(o&1048575)+1072079006;a=+h[k>>3]+-1.0;f=a*(a*.5);p=a/(a+2.0);q=p*p;r=q*q;h[k>>3]=a-f;j=c[k+4>>2]|0;c[k>>2]=0;c[k+4>>2]=j;s=+h[k>>3];t=a-s-f+p*(f+(r*(r*(r*.15313837699209373+.22222198432149784)+.3999999999940942)+q*(r*(r*(r*.14798198605116586+.1818357216161805)+.2857142874366239)+.6666666666666735)));r=s*1.4426950407214463;q=+(n+(o>>>20)|0);f=q+r;g=f+(r+(q-f)+(t*1.4426950407214463+(s+t)*1.6751713164886512e-10))}return +g}function kg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;h=(e&8|0)==0;a:do if(!(e&1)){b:do if(!h){k=d;l=d;while(1){switch(a[l>>0]|0){case 0:{break b;break}case 47:{if(!(pe(b,-1,d,l-k|0,e)|0)){m=0;break a}break}default:{}}l=l+1|0}}while(0);m=pe(b,-1,d,-1,e)|0}else{l=b;k=d;while(1){n=k;c:while(1){switch(a[n>>0]|0){case 47:case 0:{o=n;break c;break}default:{}}n=n+1|0}n=l;d:while(1){p=Se(n,-1,g,e)|0;switch(p|0){case 0:case 47:{q=p;r=n;break d;break}default:{}}n=n+(c[g>>2]|0)|0}n=a[o>>0]|0;if((q|0)!=(n<<24>>24|0)&(h|n<<24>>24==0)){m=1;break a}n=(pe(l,r-l|0,k,o-k|0,e)|0)!=0;if((q|0)==0|n){m=n&1;break a}l=r+(c[g>>2]|0)|0;k=o+1|0}}while(0);i=f;return m|0}function fg(a,b,d,f){a=a|0;b=b|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=Ul(a)|0;a=$r()|0;h=c[a>>2]|0;do if(g){i=(d|0)==0;j=0;k=0;l=0;a:while(1){while(1){c[a>>2]=0;m=ri(g)|0;if(!m){n=j;o=l;break a}if(i){p=m;break}if(Nd[d&7](m)|0){p=m;break}}if(j>>>0<k>>>0){q=k;r=l}else{m=k<<1|1;if(m>>>0>1073741823){n=j;o=l;break}s=ek(l,m<<2)|0;if(!s){n=j;o=l;break}q=m;r=s}s=p+8|0;m=Wd(e[s>>1]|0)|0;c[r+(j<<2)>>2]=m;if(!m){n=j;o=r;break}$j(m|0,p|0,e[s>>1]|0|0)|0;j=j+1|0;k=q;l=r}wt(g)|0;if(!(c[a>>2]|0)){c[a>>2]=h;if(f|0)Ie(o,n,4,f);c[b>>2]=o;t=n;break}else{if(!((o|0)==0|(n|0)==0)){l=n;do{l=l+-1|0;de(c[o+(l<<2)>>2]|0)}while((l|0)!=0)}de(o);t=-1;break}}else t=-1;while(0);return t|0}function cg(a,b){a=+a;b=+b;var d=0.0,e=0,f=0,g=0,i=0,j=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;d=+O(+a);h[k>>3]=d;e=c[k>>2]|0;f=c[k+4>>2]|0;d=+O(+b);h[k>>3]=d;g=c[k>>2]|0;i=c[k+4>>2]|0;j=f>>>0<i>>>0|(f|0)==(i|0)&e>>>0<g>>>0;l=j?g:e;m=j?i:f;n=j?e:g;g=j?f:i;i=kr(l|0,m|0,52)|0;f=kr(n|0,g|0,52)|0;c[k>>2]=l;c[k+4>>2]=m;d=+h[k>>3];c[k>>2]=n;c[k+4>>2]=g;b=+h[k>>3];do if((f|0)!=2047)if((n|0)==0&(g|0)==0|(i|0)==2047)o=d;else{if((i-f|0)>64){o=d+b;break}if(i>>>0<=1533)if(f>>>0<573){p=d*5260135901548373507240989.0e186;q=b*5260135901548373507240989.0e186;r=1.90109156629516e-211}else{p=d;q=b;r=1.0}else{p=d*1.90109156629516e-211;q=b*1.90109156629516e-211;r=5260135901548373507240989.0e186}a=p*134217729.0;s=a+(p-a);a=p-s;t=p*p;u=q*134217729.0;v=u+(q-u);u=q-v;w=q*q;o=r*+P(+(t+(w+(u*u+(v*v-w+v*2.0*u)+(a*a+(s*s-t+s*2.0*a))))))}else o=b;while(0);return +o}function bg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,l=0.0,m=0.0,n=0,o=0,p=0,q=0.0,r=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;l=+h[b>>3];m=+h[b+8>>3];h[k>>3]=m;b=c[k+4>>2]&2147483647;do if(b|c[k>>2]){h[k>>3]=l;n=c[k>>2]|0;o=c[k+4>>2]|0;p=o&2147483647;if(!(p|n)){q=+S(+m);h[a>>3]=+R(+m);h[a+8>>3]=q;break}if(b>>>0<=2146435071)if((o+-1082535490|0)>>>0<1084067){h[g>>3]=l;h[g+8>>3]=m;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];ui(f,e,0);q=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=q;break}else{q=+Y(+l);r=q*+S(+m);h[a>>3]=q*+R(+m);h[a+8>>3]=r;break}if(!((n|0)==0&(p|0)==2146435072)){r=m-m;h[a>>3]=r;h[a+8>>3]=r;break}if((o|0)<0){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;break}else{h[a>>3]=l;h[a+8>>3]=m-m;break}}else{h[a>>3]=+Y(+l);h[a+8>>3]=m}while(0);i=d;return}function jg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+1216|0;if((i|0)>=(j|0))ca();g=f+24|0;h=f+16|0;k=f;l=f+184|0;m=f+56|0;n=f+40|0;a:do switch(e|0){case 0:{o=4;break}case 512:{if((yr()|0)==(vr()|0)?(p=zr()|0,(p|0)==(wr()|0)):0){o=4;break a}c[n>>2]=a;c[n+4>>2]=b;c[n+8>>2]=d;ob(m|0);p=zb(3,l+1024|0,0,n|0,h|0)|0;if((p|0)>0){while(1){c[g>>2]=p;c[g+4>>2]=h;c[g+8>>2]=-2147483648;c[g+12>>2]=0;Nb(114,g|0)|0;q=c[h>>2]|0;if(!(q&127)){r=q;o=10;break}if(((q&65535)+-1|0)>>>0<=254){s=-16;break}}if((o|0)==10)s=c[7776+((r>>>8&255)<<2)>>2]|0;t=s}else t=-16;xd(m|0);u=Or(t)|0;break}default:u=Or(-22)|0}while(0);if((o|0)==4){c[k>>2]=a;c[k+4>>2]=b;c[k+8>>2]=d;c[k+12>>2]=e;u=Or(ab(307,k|0)|0)|0}i=f;return u|0}function gg(a,b,d,f,g,h){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;h=h|0;var k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+48|0;if((i|0)>=(j|0))ca();l=k+32|0;m=k;c[m>>2]=c[1986];c[m+4>>2]=c[1987];c[m+8>>2]=c[1988];c[m+12>>2]=c[1989];c[m+16>>2]=c[1990];c[m+20>>2]=c[1991];c[m+24>>2]=c[1992];c[m+28>>2]=c[1993];a:do if(!b)if(!(gg(a,152866,d,f,g,h)|0))n=0;else n=gg(a,152870,d,f,g,h)|0;else{o=f&3;p=o|0?o:4;if((12-p|0)>>>0>g>>>0)n=34;else{o=f+(4-p)|0;if(!(Ol(b,152866)|0))c[m+12>>2]=6;else{if(Ol(b,152870)|0){n=22;break}c[m+12>>2]=17}switch(Ob(0,a|0,m|0,l|0)|0){case -11:case -10:{n=12;break a;break}case 0:{c[d>>2]=a;p=d+4|0;c[p>>2]=o;c[o>>2]=a;c[(c[p>>2]|0)+4>>2]=0;p=c[l>>2]|0;c[d+8>>2]=e[(c[p+20>>2]|0)+2>>1];c[d+12>>2]=b;Hx(p);c[h>>2]=d;n=0;break a;break}default:{n=2;break a}}}}while(0);i=k;return n|0}function og(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=(as(e,43)|0)==0;do if((d|0)!=0?(g=a[e>>0]|0,h=g<<24>>24,(If(165667,h,4)|0)!=0):0){if((b|0)==0&d>>>0>4294966151){c[($r()|0)>>2]=12;i=0;break}j=(b|0)!=0;k=Mm(j?1164:d+1164|0,1)|0;if(!k)i=0;else{l=k+112|0;c[k+84>>2]=l;c[k+60>>2]=-1;a[k+75>>0]=-1;c[k+44>>2]=k+140;c[k+48>>2]=1024;m=j?b:k+1164|0;c[k+124>>2]=m;c[k+120>>2]=d;c[k+128>>2]=h;if(f)c[k>>2]=g<<24>>24==114?8:4;switch(g<<24>>24){case 114:{c[k+116>>2]=d;break}case 97:{g=Ns(m,d)|0;c[l>>2]=g;c[k+116>>2]=g;break}default:{}}c[k+32>>2]=15;c[k+36>>2]=16;c[k+40>>2]=17;c[k+12>>2]=6;if(!(c[41513]|0))c[k+76>>2]=-1;Xb(166076);g=c[41518]|0;c[k+56>>2]=g;if(g|0)c[g+52>>2]=k;c[41518]=k;Cd(166076);i=k}}else n=3;while(0);if((n|0)==3){c[($r()|0)>>2]=22;i=0}return i|0}function eg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=a+16|0;a:do if(!(c[g>>2]|0)){h=a+12|0;i=c[h>>2]|0;do if(i>>>0<f>>>0){if(b|0)if(!d){c[g>>2]=1;j=0;break a}else{k=a+8|0;c[k>>2]=d;c[h>>2]=1024;l=k;m=d;n=d;o=1024;break}k=f<<3;p=k>>>0>1024?k:1024;k=Wd(8)|0;if(!k){c[g>>2]=1;j=0;break a}q=Wd(p)|0;c[k>>2]=q;r=q;if(!q){de(k);c[g>>2]=1;j=0;break a}c[k+4>>2]=0;s=a+4|0;t=c[s>>2]|0;if(t|0)c[t+4>>2]=k;if(!(c[a>>2]|0))c[a>>2]=k;c[s>>2]=k;k=a+8|0;c[k>>2]=r;c[h>>2]=p;l=k;m=r;n=q;o=p}else{p=a+8|0;q=c[p>>2]|0;l=p;m=q;n=q;o=i}while(0);i=m+f&3;q=((i|0)==0?0:4-i|0)+f|0;c[l>>2]=n+q;c[h>>2]=o-q;if(!e)j=n;else{Gl(n|0,0,q|0)|0;j=n}}else j=0;while(0);return j|0}function qg(a,b,d){a=+a;b=+b;d=d|0;var e=0,f=0,g=0,i=0.0,j=0.0,l=0,m=0.0,n=0.0,o=0.0;h[k>>3]=a;e=c[k+4>>2]|0;f=e&2147483640;g=f>>>0>1072010279|(f|0)==1072010279&0>0;if(g){f=kr(c[k>>2]|0,e|0,63)|0;e=(f|0)==0;i=.7853981633974483-(e?a:-a)+(3.061616997868383e-17-(e?b:-b));j=0.0;l=f}else{i=a;j=b;l=0}b=i*i;a=b*b;m=i*b;n=m*.3333333333333341+(j+b*(j+m*(a*(a*(a*(a*(7.817944429395571e-05-a*1.8558637485527546e-05)+5.880412408202641e-04)+3.5920791075913124e-03)+.021869488294859542)+.13333333333320124+b*(a*(a*(a*(a*(a*2.590730518636337e-05+7.140724913826082e-05)+2.464631348184699e-04)+1.4562094543252903e-03)+.0088632398235993)+.05396825397622605))));a=i+n;if(!g)if(!d)o=a;else{h[k>>3]=a;g=c[k+4>>2]|0;c[k>>2]=0;c[k+4>>2]=g;b=+h[k>>3];m=-1.0/a;h[k>>3]=m;g=c[k+4>>2]|0;c[k>>2]=0;c[k+4>>2]=g;j=+h[k>>3];o=j+m*(b*j+1.0+j*(n-(b-i)))}else{b=+(1-(d<<1)|0);j=b-(i+(n-a*a/(b+a)))*2.0;o=l|0?-j:j}return +o}function pg(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;i=i+112|0;if((i|0)>=(j|0))ca();k=h;l=h+24|0;m=h+16|0;n=(f|0)==10;do if(!g){if(n){c[m>>2]=28;o=e;p=m;q=1;break}c[m>>2]=1;if((f|0)==2){o=e;p=m;q=1}else{c[m+4>>2]=28;o=e;p=m;q=2}}else{if(n){r=l;s=15;while(1){t=e+s|0;a[r>>0]=a[152287+((d[t>>0]|0)&15)>>0]|0;a[r+1>>0]=46;a[r+2>>0]=a[152287+((d[t>>0]|0)>>>4)>>0]|0;a[r+3>>0]=46;if((s|0)>0){r=r+4|0;s=s+-1|0}else break}s=l+64|0;r=152304;t=s+9|0;do{a[s>>0]=a[r>>0]|0;s=s+1|0;r=r+1|0}while((s|0)<(t|0))}else{r=d[e+2>>0]|0;s=d[e+1>>0]|0;t=d[e>>0]|0;c[k>>2]=d[e+3>>0];c[k+4>>2]=r;c[k+8>>2]=s;c[k+12>>2]=t;Pp(l,152313,k)|0}c[m>>2]=12;o=l;p=m;q=1}while(0);m=ie(b,o,p,q)|0;i=h;return m|0}function tg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a>>>0<16?16:a;if(!(d+-1&d))e=d;else{a=16;while(1)if(a>>>0<d>>>0)a=a<<1;else{e=a;break}}if((-64-e|0)>>>0<=b>>>0){c[($r()|0)>>2]=12;f=0;return f|0}a=b>>>0<11?16:b+11&-8;b=Wd(a+12+e|0)|0;if(!b){f=0;return f|0}d=b+-8|0;do if(b&e+-1){g=(b+e+-1&0-e)+-8|0;h=d;i=(g-h|0)>>>0>15?g:g+e|0;g=i-h|0;h=b+-4|0;j=c[h>>2]|0;k=(j&-8)-g|0;if(!(j&3)){c[i>>2]=(c[d>>2]|0)+g;c[i+4>>2]=k;l=i;break}else{j=i+4|0;c[j>>2]=k|c[j>>2]&1|2;m=i+k+4|0;c[m>>2]=c[m>>2]|1;c[h>>2]=g|c[h>>2]&1|2;c[j>>2]=c[j>>2]|1;ge(d,g);l=i;break}}else l=d;while(0);d=l+4|0;b=c[d>>2]|0;if(b&3|0?(e=b&-8,e>>>0>(a+16|0)>>>0):0){i=e-a|0;e=l+a|0;c[d>>2]=a|b&1|2;c[e+4>>2]=i|3;b=e+i+4|0;c[b>>2]=c[b>>2]|1;ge(e,i)}f=l+8|0;return f|0}function rg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;f=d+8|0;g=d+12|0;h=e;c[h>>2]=0;c[h+4>>2]=0;h=b+74|0;k=a[h>>0]|0;a[h>>0]=k+1|k;k=b+4|0;h=c[k>>2]|0;l=b+8|0;m=c[l>>2]|0;do if(h>>>0<m>>>0){n=Jf(f,h,m-h|0,e)|0;if(n>>>0<4294967294){c[k>>2]=(c[k>>2]|0)+(((n|0)==0&1)+n);o=c[f>>2]|0;break}if((n|0)==-1){c[k>>2]=(c[k>>2]|0)+1;o=-1}else{p=-2;q=6}}else{p=-2;q=6}while(0);a:do if((q|0)==6){while(1){q=0;if((p|0)!=-2){q=13;break}h=c[k>>2]|0;if(h>>>0>=(c[l>>2]|0)>>>0){m=_m(b)|0;a[g>>0]=m;if((m|0)<0)break}else{c[k>>2]=h+1;a[g>>0]=a[h>>0]|0}p=Jf(f,g,1,e)|0;if((p|0)==-1){o=-1;break a}else q=6}if((q|0)==13){o=c[f>>2]|0;break}if(!(Ds(e)|0)){c[($r()|0)>>2]=84;o=-1}else o=-1}while(0);i=d;return o|0}function zg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=d;a:do if(!((e^b)&3)){if(!(e&3)){f=d;g=b}else{h=b;i=d;while(1){j=a[i>>0]|0;a[h>>0]=j;if(!(j<<24>>24)){k=h;break a}j=i+1|0;l=h+1|0;if(!(j&3)){f=j;g=l;break}else{h=l;i=j}}}i=c[f>>2]|0;if(!((i&-2139062144^-2139062144)&i+-16843009)){h=i;i=g;j=f;while(1){l=j+4|0;m=i+4|0;c[i>>2]=h;h=c[l>>2]|0;if((h&-2139062144^-2139062144)&h+-16843009|0){n=m;o=l;break}else{i=m;j=l}}}else{n=g;o=f}p=o;q=n;r=8}else{p=d;q=b;r=8}while(0);if((r|0)==8){r=a[p>>0]|0;a[q>>0]=r;if(!(r<<24>>24))k=q;else{r=q;q=p;while(1){q=q+1|0;p=r+1|0;b=a[q>>0]|0;a[p>>0]=b;if(!(b<<24>>24)){k=p;break}else r=p}}}return k|0}function vg(a){a=+a;var b=0,d=0,e=0.0,f=0.0,g=0.0,i=0.0,j=0,l=0.0,m=0.0,n=0.0;h[k>>3]=a;b=c[k+4>>2]|0;do if((b|0)<0|b>>>0<1071284858)if(b>>>0<=3220176895){d=fr(b|0,0,1)|0;if(d>>>0<2034237440){e=a;break}if(b>>>0<3218259653){f=0.0;g=a;i=0.0;j=11;break}else{j=8;break}}else{if(a==-1.0){e=-t;break}e=(a-a)/0.0;break}else if(b>>>0>2146435071)e=a;else j=8;while(0);if((j|0)==8){l=a+1.0;h[k>>3]=l;b=(c[k+4>>2]|0)+614242|0;d=(b>>>20)+-1023|0;if((d|0)<54)m=((d|0)>1?1.0-(l-a):a-(l+-1.0))/l;else m=0.0;c[k>>2]=c[k>>2];c[k+4>>2]=(b&1048575)+1072079006;f=m;g=+h[k>>3]+-1.0;i=+(d|0);j=11}if((j|0)==11){m=g*(g*.5);l=g/(g+2.0);a=l*l;n=a*a;e=i*.6931471803691238+(g+(f+i*1.9082149292705877e-10+l*(m+(n*(n*(n*.15313837699209373+.22222198432149784)+.3999999999940942)+a*(n*(n*(n*.14798198605116586+.1818357216161805)+.2857142874366239)+.6666666666666735)))-m))}return +e}function Dg(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+144|0;if((i|0)>=(j|0))ca();g=f+8|0;h=f;c[h>>2]=0;k=0;l=31;m=b;while(1){n=((d[m>>0]|0)&1)<<l|k;c[h>>2]=n;if((l|0)>0){k=n;l=l+-1|0;m=m+1|0}else{o=n;break}}m=b+32|0;l=h+4|0;c[l>>2]=0;k=0;n=31;p=m;while(1){q=((d[p>>0]|0)&1)<<n|k;c[l>>2]=q;if((n|0)>0){k=q;n=n+-1|0;p=p+1|0}else{r=q;break}}if(!e)s=166768;else{e=0;do{p=15-e|0;c[g+(e<<2)>>2]=c[166768+(p<<2)>>2];c[g+64+(e<<2)>>2]=c[166832+(p<<2)>>2];e=e+1|0}while((e|0)!=16);s=g}wf(o,r,h,l,1,0,s);s=31;r=b;while(1){a[r>>0]=(c[h>>2]|0)>>>s&1;if((s|0)>0){s=s+-1|0;r=r+1|0}else{t=31;u=m;break}}while(1){a[u>>0]=(c[l>>2]|0)>>>t&1;if((t|0)>0){t=t+-1|0;u=u+1|0}else break}i=f;return}function yg(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;h=i;i=i+16|0;if((i|0)>=(j|0))ca();k=h;l=g&255;g=l<<15;m=k+4|0;n=k+((l&1)<<2)|0;l=0;o=0;p=b;q=0;while(1){c[m>>2]=0;c[k>>2]=0;r=0;s=0;t=0;u=p;v=q;while(1){w=s<<8;c[k>>2]=w;x=d[u>>0]|w;c[k>>2]=x;w=r<<8;c[m>>2]=w;y=a[u>>0]|0;z=y|w;c[m>>2]=z;w=((t|0)==0?0:y&128)|v;y=(a[u>>0]|0)==0?b:u+1|0;t=t+1|0;if((t|0)==4){A=x;B=z;C=y;D=w;break}else{r=z;s=x;u=y;v=w}}v=B^A|l;u=c[n>>2]|0;c[e+(o<<2)>>2]=u;c[f+(o<<2)>>2]=c[18004+(o<<2)>>2]^u;u=o+1|0;if((u|0)==18){E=v;F=D;break}else{l=v;o=u;p=C;q=D}}c[f>>2]=c[f>>2]^g&65536&F<<9&-65536-(E&65535|E>>>16);i=h;return}function ug(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+352|0;if((i|0)>=(j|0))ca();g=f;h=f+336|0;k=f+72|0;l=f+28|0;m=f+80|0;n=f+24|0;if(!(b>>>0>1023?1:(c[5714]&1<<(b&7)|0)==0)){Ta(1,n|0)|0;Xb(166920);o=$r()|0;p=c[o>>2]|0;if(!((c[5715]|0)<0?(Qq(),(c[5715]|0)<0):0)){q=((b&1016|0)==0?c[5716]|0:0)|b;c[k>>2]=ac(0)|0;Za(k|0,l|0)|0;Mc(h|0,16,165696,l|0)|0;if(!(c[41732]&1))r=0;else r=Dr()|0;l=(r|0)==0&1;c[g>>2]=q;c[g+4>>2]=h;c[g+8>>2]=169790;c[g+12>>2]=165705+l;c[g+16>>2]=r;c[g+20>>2]=165707+l;l=rp(m,256,165709,g)|0;c[o>>2]=p;p=256-l|0;o=th(m+l|0,p,d,e)|0;if((o|0)>-1){e=o>>>0<p>>>0?o+l|0:255;if((a[m+(e+-1)>>0]|0)==10)s=e;else{a[m+e>>0]=10;s=e+1|0}dt(c[5715]|0,m,s,0)|0}}Cd(166920);Ta(c[n>>2]|0,0)|0}i=f;return}function sg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+224|0;if((i|0)>=(j|0))ca();g=f+120|0;h=f+80|0;k=f;l=f+136|0;m=h;n=m+40|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));c[g>>2]=c[e>>2];if((Xd(0,d,g,k,h)|0)<0)o=-1;else{if((c[b+76>>2]|0)>-1)p=Ey(b)|0;else p=0;e=c[b>>2]|0;m=e&32;if((a[b+74>>0]|0)<1)c[b>>2]=e&-33;e=b+48|0;if(!(c[e>>2]|0)){n=b+44|0;q=c[n>>2]|0;c[n>>2]=l;r=b+28|0;c[r>>2]=l;s=b+20|0;c[s>>2]=l;c[e>>2]=80;t=b+16|0;c[t>>2]=l+80;l=Xd(b,d,g,k,h)|0;if(!q)u=l;else{Jd[c[b+36>>2]&31](b,0,0)|0;v=(c[s>>2]|0)==0?-1:l;c[n>>2]=q;c[e>>2]=0;c[t>>2]=0;c[r>>2]=0;c[s>>2]=0;u=v}}else u=Xd(b,d,g,k,h)|0;h=c[b>>2]|0;c[b>>2]=h|m;if(p|0)Dy(b);o=(h&32|0)==0?u:-1}i=f;return o|0}function ng(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e+16|0;g=e;h=Rm(b)|0;if((c[d+76>>2]|0)>-1)k=Ey(d)|0;else k=0;Ih(d)|0;do if(!a){l=d+60|0;if(h&524288|0){c[g>>2]=c[l>>2];c[g+4>>2]=2;c[g+8>>2]=1;wa(221,g|0)|0}c[f>>2]=c[l>>2];c[f+4>>2]=4;c[f+8>>2]=h&-524481;if((Or(wa(221,f|0)|0)|0)<0)m=15;else m=12}else{l=sj(a,b)|0;if(!l)m=15;else{n=l+60|0;o=c[n>>2]|0;p=c[d+60>>2]|0;if((o|0)!=(p|0)){if((ih(o,p,h&524288)|0)<0){Uj(l)|0;m=15;break}}else c[n>>2]=-1;c[d>>2]=c[d>>2]&1|c[l>>2];c[d+32>>2]=c[l+32>>2];c[d+36>>2]=c[l+36>>2];c[d+40>>2]=c[l+40>>2];c[d+12>>2]=c[l+12>>2];Uj(l)|0;m=12}}while(0);if((m|0)==12)if(!k)q=d;else{Dy(d);q=d}else if((m|0)==15){Uj(d)|0;q=0}i=e;return q|0}function mg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0.0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;l=+g[b>>2];m=+g[b+4>>2];n=+O(+m);b=(g[k>>2]=n,c[k>>2]|0);do if(b){o=(g[k>>2]=l,c[k>>2]|0);n=+O(+l);p=(g[k>>2]=n,c[k>>2]|0);if(!p){n=+S(+m);g[a>>2]=+R(+m);g[a+4>>2]=n;break}if(b>>>0<=2139095039)if((o+-1118925336|0)>>>0<9342557){g[h>>2]=l;g[h+4>>2]=m;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];oj(f,e,0);q=c[f+4>>2]|0;c[a>>2]=c[f>>2];c[a+4>>2]=q;break}else{n=+Y(+l);r=n*+S(+m);g[a>>2]=n*+R(+m);g[a+4>>2]=r;break}if((p|0)!=2139095040){r=m-m;g[a>>2]=r;g[a+4>>2]=r;break}if((o|0)<0){g[a>>2]=0.0;g[a+4>>2]=0.0;break}else{g[a>>2]=l;g[a+4>>2]=m-m;break}}else{g[a>>2]=+Y(+l);g[a+4>>2]=m}while(0);i=d;return}function Ag(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d;g=d+24|0;c[f>>2]=0;c[f+4>>2]=a;c[f+8>>2]=0;c[f+12>>2]=b;h=Or(Xc(340,f|0)|0)|0;if(!h){f=b;if((c[f>>2]|0)==-1?(c[f+4>>2]|0)==-1:0){f=b;c[f>>2]=-1;c[f+4>>2]=-1}f=b+8|0;k=f;if((c[k>>2]|0)==-1?(c[k+4>>2]|0)==-1:0){k=f;c[k>>2]=-1;c[k+4>>2]=-1;l=0}else l=0}else if((c[($r()|0)>>2]|0)==38){c[e>>2]=a;c[e+4>>2]=g;if((Or(Dc(191,e|0)|0)|0)>=0){e=c[g>>2]|0;a=(e|0)==-1;k=b;c[k>>2]=a?-1:e;c[k+4>>2]=a?-1:0;k=c[g+4>>2]|0;g=(k|0)==-1;e=b+8|0;f=e;c[f>>2]=g?-1:k;c[f+4>>2]=g?-1:0;if(a){a=b;c[a>>2]=-1;c[a+4>>2]=-1}if(g){g=e;c[g>>2]=-1;c[g+4>>2]=-1;l=0}else l=0}else l=-1}else l=h;i=d;return l|0}function Kg(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;if((i|0)>=(j|0))ca();h=g;a:do if(!e)k=0;else{do if(f|0){l=(b|0)==0?h:b;m=a[e>>0]|0;n=m&255;if(m<<24>>24>-1){c[l>>2]=n;k=m<<24>>24!=0&1;break a}m=n+-194|0;if(m>>>0<=50){n=e+1|0;o=c[7572+(m<<2)>>2]|0;if(f>>>0<4?o&-2147483648>>>((f*6|0)+-6|0)|0:0)break;m=d[n>>0]|0;n=m>>>3;if((n+-16|n+(o>>26))>>>0<=7){n=m+-128|o<<6;if((n|0)>=0){c[l>>2]=n;k=2;break a}o=d[e+2>>0]|0;if((o&192|0)==128){m=o+-128|n<<6;if((m|0)>=0){c[l>>2]=m;k=3;break a}n=d[e+3>>0]|0;if((n&192|0)==128){c[l>>2]=n+-128|m<<6;k=4;break a}}}}}while(0);c[($r()|0)>>2]=84;k=-1}while(0);i=g;return k|0}function Bg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;g=a[d>>0]|0;do if(!(g<<24>>24))h=0;else{if(!(a[d+1>>0]|0)){k=b;while(1)if((a[k>>0]|0)==g<<24>>24)k=k+1|0;else{l=k;break}h=l-b|0;break}else{m=d;n=g}do{k=f+(((n&255)>>>5&255)<<2)|0;c[k>>2]=c[k>>2]|1<<(n&31);m=m+1|0;n=a[m>>0]|0}while(n<<24>>24!=0);k=a[b>>0]|0;a:do if(!(k<<24>>24))o=b;else{p=b;q=k;while(1){if(!(c[f+(((q&255)>>>5&255)<<2)>>2]&1<<(q&31))){o=p;break a}r=p+1|0;q=a[r>>0]|0;if(!(q<<24>>24)){o=r;break}else p=r}}while(0);h=o-b|0}while(0);i=e;return h|0}function Fg(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+16|0;if((i|0)>=(j|0))ca();l=k;b[l>>1]=2;b[l+2>>1]=a;c[l+4>>2]=0;m=l+8|0;c[m>>2]=0;c[m+4>>2]=0;a:do if(!d)if(!(Fg(a,152866,e,f,g,h)|0))n=0;else n=Fg(a,152870,e,f,g,h)|0;else{m=f&3;o=m|0?m:4;if((12-o|0)>>>0>g>>>0)n=34;else{m=4-o|0;o=f+m|0;if(Ol(d,152866)|0?Ol(d,152870)|0:0){n=22;break}c[e+8>>2]=a;c[e+12>>2]=d;p=e+4|0;c[p>>2]=o;q=o+8|0;c[o+4>>2]=0;c[e>>2]=q;c[c[p>>2]>>2]=q;p=(Ol(d,152870)|0)!=0;switch(rd(l|0,16,0,0,q|0,g+-8-m|0,(p?0:16)|0)|0){case -11:case -10:{n=12;break a;break}case 0:{c[h>>2]=e;n=0;break a;break}default:{n=2;break a}}}}while(0);i=k;return n|0}function Gg(a){a=+a;var b=0,d=0,e=0.0,f=0.0,h=0,i=0,j=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=(b|0)<0;do if(b>>>0<8388608|d){e=+O(+a);if(!((g[k>>2]=e,c[k>>2]|0)|0)){f=-1.0/(a*a);break}if(d){f=(a-a)/0.0;break}else{h=(g[k>>2]=a*33554432.0,c[k>>2]|0);i=-152;j=9;break}}else if(b>>>0<=2139095039)if((b|0)==1065353216)f=0.0;else{h=b;i=-127;j=9}else f=a;while(0);if((j|0)==9){j=h+4913933|0;a=(c[k>>2]=(j&8388607)+1060439283,+g[k>>2])+-1.0;e=a/(a+2.0);l=e*e;m=l*l;n=a*(a*.5);o=(c[k>>2]=(g[k>>2]=a-n,c[k>>2]|0)&-4096,+g[k>>2]);p=a-o-n+e*(n+(l*(m*.2849878668785095+.6666666269302368)+m*(m*.24279078841209412+.40000972151756287)));m=+(i+(j>>>23)|0);f=m*.3010292053222656+(o*.434326171875+(p*.434326171875+(m*7.903415166765626e-07-(o+p)*3.168997136526741e-05)))}return +f}function xg(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0,g=0,i=0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0;d=+h[b>>3];e=+h[b+8>>3];h[k>>3]=d;b=c[k>>2]|0;f=c[k+4>>2]|0;g=f&2147483647;do if(g>>>0<=2146435071){h[k>>3]=e;i=c[k+4>>2]&2146435072;if(!(i>>>0<2146435072|(i|0)==2146435072&0<0)){j=e-e;h[a>>3]=j;h[a+8>>3]=j;break}if(g>>>0>1077280767){j=+Y(+-+O(+d));l=j*(j*(+S(+e)*4.0*+R(+e)));h[a>>3]=+An(1.0,d);h[a+8>>3]=l;break}else{l=+T(+e);j=l*l+1.0;m=+_k(d);n=m*(m*j)+1.0;h[a>>3]=m*(j*+P(+(m*m+1.0)))/n;h[a+8>>3]=l/n;break}}else{if(f&1048575|b|0){h[a>>3]=d;h[a+8>>3]=e==0.0?e:d*e;break}n=+O(+e);h[k>>3]=n;if((c[k>>2]|0)==0?(c[k+4>>2]|0)==2146435072:0)o=e;else o=+S(+e)*+R(+e);n=+An(0.0,o);i=a;c[i>>2]=b;c[i+4>>2]=f+-1073741824;h[a+8>>3]=n}while(0);return}function Cg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+96|0;if((i|0)>=(j|0))ca();f=e+32|0;g=e+24|0;h=e+16|0;k=e+8|0;l=e;m=e+64|0;n=e+40|0;c[m>>2]=a;c[m+4>>2]=b;c[m+8>>2]=d;c[m+12>>2]=0;c[m+16>>2]=0;c[m+20>>2]=0;c[l>>2]=1;c[l+4>>2]=m;m=Or(oc(102,l|0)|0)|0;a:do if((m|0)<0){switch(c[($r()|0)>>2]|0){case 93:case 22:break;default:{o=m;break a}}if(b&526336){c[n>>2]=a;c[n+4>>2]=b&-526337;c[n+8>>2]=d;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[k>>2]=1;c[k+4>>2]=n;l=Or(oc(102,k|0)|0)|0;if((l|0)>=0){if(b&524288|0){c[h>>2]=1;ef(l,2,h)|0}if(b&2048){c[f>>2]=ef(l,3,g)|0|2048;ef(l,4,f)|0;o=l}else o=l}else o=l}else o=m}else o=m;while(0);i=e;return o|0}function Eg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+112|0;if((i|0)>=(j|0))ca();g=f;h=g+32|0;k=h;c[k>>2]=0;c[k+4>>2]=0;c[g>>2]=c[1789];c[g+4>>2]=c[1790];c[g+8>>2]=c[1791];c[g+12>>2]=c[1792];c[g+16>>2]=c[1793];c[g+20>>2]=c[1794];c[g+24>>2]=c[1795];c[g+28>>2]=c[1796];if(!d){Qe(e,g);i=f;return}k=fr(d|0,0,3)|0;l=h;c[l>>2]=k;c[l+4>>2]=D;l=g+40|0;if(d>>>0<64){$j(l|0,b|0,d|0)|0;Qe(e,g);i=f;return}k=l;h=b;m=k+64|0;do{a[k>>0]=a[h>>0]|0;k=k+1|0;h=h+1|0}while((k|0)<(m|0));Zd(g,l);h=b+64|0;b=d+-64|0;if(b>>>0>63){d=b;k=h;while(1){Zd(g,k);m=k+64|0;n=d+-64|0;if(n>>>0>63){d=n;k=m}else{o=n;p=m;break}}}else{o=b;p=h}$j(l|0,p|0,o|0)|0;Qe(e,g);i=f;return}function Rg(a){a=+a;var b=0,d=0.0,e=0.0,f=0.0,h=0.0,i=0,j=0.0,l=0,m=0.0,n=0.0;b=(g[k>>2]=a,c[k>>2]|0);do if(b>>>0<1054086096|(b|0)<0)if(b>>>0<=3212836863){if(b<<1>>>0<1728053248){d=a;break}if(b>>>0<3197498906){e=0.0;f=a;h=0.0;i=11;break}else{i=8;break}}else{if(a==-1.0){d=-t;break}d=(a-a)/0.0;break}else if(b>>>0>2139095039)d=a;else i=8;while(0);if((i|0)==8){j=a+1.0;b=(g[k>>2]=j,c[k>>2]|0)+4913933|0;l=(b>>>23)+-127|0;if((l|0)<25)m=((l|0)>1?1.0-(j-a):a-(j+-1.0))/j;else m=0.0;e=m;f=(c[k>>2]=(b&8388607)+1060439283,+g[k>>2])+-1.0;h=+(l|0);i=11}if((i|0)==11){m=f/(f+2.0);j=m*m;a=j*j;n=f*(f*.5);d=h*.6931381225585938+(f+(e+h*9.05800061445916e-06+m*(n+(j*(a*.2849878668785095+.6666666269302368)+a*(a*.24279078841209412+.40000972151756287)))-n))}return +d}function Jg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+48|0;if((i|0)>=(j|0))ca();g=f+16|0;h=f;k=f+32|0;c[k>>2]=d;l=k+4|0;m=b+48|0;n=c[m>>2]|0;c[l>>2]=e-((n|0)!=0&1);o=b+44|0;c[k+8>>2]=c[o>>2];c[k+12>>2]=n;if(!(c[41512]|0)){c[g>>2]=c[b+60>>2];c[g+4>>2]=k;c[g+8>>2]=2;p=Or(lb(145,g|0)|0)|0}else{_a(1,b|0);c[h>>2]=c[b+60>>2];c[h+4>>2]=k;c[h+8>>2]=2;k=Or(lb(145,h|0)|0)|0;kc(0);p=k}if((p|0)>=1){k=c[l>>2]|0;if(p>>>0>k>>>0){l=c[o>>2]|0;o=b+4|0;c[o>>2]=l;h=l;c[b+8>>2]=h+(p-k);if(!(c[m>>2]|0))q=e;else{c[o>>2]=h+1;a[d+(e+-1)>>0]=a[h>>0]|0;q=e}}else q=p}else{c[b>>2]=c[b>>2]|p&48^16;c[b+8>>2]=0;c[b+4>>2]=0;q=p}i=f;return q|0}function Ig(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;Qe(f,d);g=d+104|0;h=d+136|0;k=h;l=c[k>>2]|0;m=c[k+4>>2]|0;k=kr(l|0,m|0,3)|0;n=k&63;k=Gr(l|0,m|0,256,0)|0;m=h;c[m>>2]=k;c[m+4>>2]=D;m=64-n|0;k=d+144+n|0;if(m>>>0>32){n=k;h=f;l=n+32|0;do{a[n>>0]=a[h>>0]|0;n=n+1|0;h=h+1|0}while((n|0)<(l|0));Qe(b,g);o=c[1788]|0;Ld[o&1](f,32);i=e;return}$j(k|0,f|0,m|0)|0;k=d+144|0;Zd(g,k);d=f+m|0;h=32-m|0;if(h>>>0>63){m=h;n=d;while(1){Zd(g,n);l=n+64|0;p=m+-64|0;if(p>>>0>63){m=p;n=l}else{q=p;r=l;break}}}else{q=h;r=d}$j(k|0,r|0,q|0)|0;Qe(b,g);o=c[1788]|0;Ld[o&1](f,32);i=e;return}function Ng(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[b>>2]&63;f=e+1|0;a[b+40+e>>0]=-128;g=b+40|0;if(f>>>0>56){Gl(b+40+f|0,0,e^63|0)|0;xf(b,g);h=0}else h=f;Gl(b+40+h|0,0,56-h|0)|0;h=b;f=c[h>>2]|0;e=c[h+4>>2]|0;h=fr(f|0,e|0,3)|0;i=b;c[i>>2]=h;c[i+4>>2]=D;i=kr(f|0,e|0,53)|0;a[b+96>>0]=i;i=kr(f|0,e|0,45)|0;a[b+97>>0]=i;i=kr(f|0,e|0,37)|0;a[b+98>>0]=i;i=kr(f|0,e|0,29)|0;a[b+99>>0]=i;i=kr(f|0,e|0,21)|0;a[b+100>>0]=i;i=kr(f|0,e|0,13)|0;a[b+101>>0]=i;i=kr(f|0,e|0,5)|0;a[b+102>>0]=i;a[b+103>>0]=h;xf(b,g);g=0;do{h=b+8+(g<<2)|0;i=g<<2;a[d+i>>0]=(c[h>>2]|0)>>>24;a[d+(i|1)>>0]=(c[h>>2]|0)>>>16;a[d+(i|2)>>0]=(c[h>>2]|0)>>>8;a[d+(i|3)>>0]=c[h>>2];g=g+1|0}while((g|0)!=8);return}function Xg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=c[b+84>>2]|0;g=b+20|0;h=c[g>>2]|0;i=c[b+28>>2]|0;j=i;k=h-j|0;if((h|0)!=(j|0)?(c[g>>2]=i,(Xg(b,i,k)|0)>>>0<k>>>0):0)l=0;else m=3;do if((m|0)==3){if((c[f+16>>2]|0)==97){k=f+4|0;i=c[k>>2]|0;c[f>>2]=i;n=k;o=f;p=i}else{n=f+4|0;o=f;p=c[f>>2]|0}i=f+8|0;k=(c[i>>2]|0)-p|0;g=k>>>0<e>>>0?k:e;k=f+12|0;$j((c[k>>2]|0)+p|0,d|0,g|0)|0;j=(c[o>>2]|0)+g|0;c[o>>2]=j;if(j>>>0>(c[n>>2]|0)>>>0){c[n>>2]=j;h=c[i>>2]|0;if(j>>>0<h>>>0){a[(c[k>>2]|0)+j>>0]=0;l=g;break}if(!((h|0)==0|(c[b>>2]&4|0)==0)){a[(c[k>>2]|0)+(h+-1)>>0]=0;l=g}else l=g}else l=g}while(0);return l|0}function Og(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[b>>2]&63;f=e+1|0;a[b+24+e>>0]=-128;g=b+24|0;if(f>>>0>56){Gl(b+24+f|0,0,e^63|0)|0;Ge(b,g);h=0}else h=f;Gl(b+24+h|0,0,56-h|0)|0;h=b;f=c[h>>2]|0;e=c[h+4>>2]|0;h=fr(f|0,e|0,3)|0;i=b;c[i>>2]=h;c[i+4>>2]=D;a[b+80>>0]=h;h=kr(f|0,e|0,5)|0;a[b+81>>0]=h;h=kr(f|0,e|0,13)|0;a[b+82>>0]=h;h=kr(f|0,e|0,21)|0;a[b+83>>0]=h;h=kr(f|0,e|0,29)|0;a[b+84>>0]=h;h=kr(f|0,e|0,37)|0;a[b+85>>0]=h;h=kr(f|0,e|0,45)|0;a[b+86>>0]=h;h=kr(f|0,e|0,53)|0;a[b+87>>0]=h;Ge(b,g);g=0;do{h=b+8+(g<<2)|0;e=g<<2;a[d+e>>0]=c[h>>2];a[d+(e|1)>>0]=(c[h>>2]|0)>>>8;a[d+(e|2)>>0]=(c[h>>2]|0)>>>16;a[d+(e|3)>>0]=(c[h>>2]|0)>>>24;g=g+1|0}while((g|0)!=4);return}function Tg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=b;b=c[a+84>>2]|0;a=b+8|0;g=c[a>>2]|0;h=g+d|0;k=b+20|0;l=c[k>>2]|0;if(h>>>0>=l>>>0){m=h+1|l<<1|1;if(m>>>0<=536870911?(h=b+12|0,n=ek(c[h>>2]|0,m<<2)|0,(n|0)!=0):0){c[h>>2]=n;c[c[b>>2]>>2]=n;n=c[k>>2]|0;Gl((c[h>>2]|0)+(n<<2)|0,0,m-n<<2|0)|0;c[k>>2]=m;o=h;p=c[a>>2]|0;q=m;r=6}else s=0}else{o=b+12|0;p=g;q=l;r=6}if((r|0)==6){r=vf((c[o>>2]|0)+(p<<2)|0,f,d,q-p|0,b+24|0)|0;if((r|0)==-1)s=0;else{p=(c[a>>2]|0)+r|0;c[a>>2]=p;a=b+16|0;if(p>>>0>=(c[a>>2]|0)>>>0)c[a>>2]=p;c[c[b+4>>2]>>2]=p;s=d}}i=e;return s|0}function Wg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=d&255;a:do if(!e)f=b+(zi(b)|0)|0;else{if(!(b&3))g=b;else{h=d&255;i=b;while(1){j=a[i>>0]|0;if(j<<24>>24==0?1:j<<24>>24==h<<24>>24){f=i;break a}j=i+1|0;if(!(j&3)){g=j;break}else i=j}}i=$(e,16843009)|0;h=c[g>>2]|0;b:do if(!((h&-2139062144^-2139062144)&h+-16843009)){j=h;k=g;while(1){l=j^i;if((l&-2139062144^-2139062144)&l+-16843009|0){m=k;break b}l=k+4|0;j=c[l>>2]|0;if((j&-2139062144^-2139062144)&j+-16843009|0){m=l;break}else k=l}}else m=g;while(0);i=d&255;h=m;while(1){k=a[h>>0]|0;if(k<<24>>24==0?1:k<<24>>24==i<<24>>24){f=h;break}else h=h+1|0}}while(0);return f|0}function Mg(a){a=+a;var b=0,d=0,e=0.0,f=0.0,h=0,i=0,j=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=(b|0)<0;do if(b>>>0<8388608|d){e=+O(+a);if(!((g[k>>2]=e,c[k>>2]|0)|0)){f=-1.0/(a*a);break}if(d){f=(a-a)/0.0;break}else{h=(g[k>>2]=a*33554432.0,c[k>>2]|0);i=-152;j=9;break}}else if(b>>>0<=2139095039)if((b|0)==1065353216)f=0.0;else{h=b;i=-127;j=9}else f=a;while(0);if((j|0)==9){j=h+4913933|0;a=(c[k>>2]=(j&8388607)+1060439283,+g[k>>2])+-1.0;e=a/(a+2.0);l=e*e;m=l*l;n=a*(a*.5);o=(c[k>>2]=(g[k>>2]=a-n,c[k>>2]|0)&-4096,+g[k>>2]);p=a-o-n+e*(n+(l*(m*.2849878668785095+.6666666269302368)+m*(m*.24279078841209412+.40000972151756287)));f=+(i+(j>>>23)|0)+(o*1.44287109375+(p*1.44287109375-(o+p)*1.7605285393074155e-04))}return +f}function Hg(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0,i=0.0,j=0.0;d=+g[b>>2];e=+g[b+4>>2];do if(!(d==0.0&e==0.0)){f=+O(+e);if(((g[k>>2]=f,c[k>>2]|0)|0)==2139095040){g[a>>2]=t;g[a+4>>2]=e;break}b=(g[k>>2]=d,c[k>>2]|0);f=+O(+d);h=(g[k>>2]=f,c[k>>2]|0);if(h>>>0>2139095040){f=e-e;g[a>>2]=d;g[a+4>>2]=f/f;break}if((h|0)==2139095040){f=e-e;if((b|0)<0){i=+O(+f);j=+ip(d,e);g[a>>2]=i;g[a+4>>2]=j;break}else{j=+ip(f,e);g[a>>2]=d;g[a+4>>2]=j;break}}else if(!(d>=0.0)){j=+P(+((-d+ +cg(d,e))*.5));f=+O(+e)/(j*2.0);i=+ip(j,e);g[a>>2]=f;g[a+4>>2]=i;break}else{i=d;f=e;j=+P(+((i+ +cg(i,f))*.5));g[a>>2]=j;g[a+4>>2]=f/(j*2.0);break}}else{g[a>>2]=0.0;g[a+4>>2]=e}while(0);return}function wg(a,b){a=+a;b=+b;var d=0,e=0,f=0,g=0,i=0.0,j=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;h[k>>3]=b;f=c[k>>2]|0;g=c[k+4>>2]|0;i=+O(+a);h[k>>3]=i;j=c[k>>2]|0;l=c[k+4>>2]|0;i=+O(+b);h[k>>3]=i;m=c[k>>2]|0;n=c[k+4>>2]|0;a:do if(!(l>>>0>2146435072|(l|0)==2146435072&j>>>0>0|(n>>>0>2146435072|(n|0)==2146435072&m>>>0>0)))if((d|0)==(f|0)&(e|0)==(g|0))o=b;else{do if(!((j|0)==0&(l|0)==0))if(l>>>0>n>>>0|(l|0)==(n|0)&j>>>0>m>>>0|(g^e|0)<0){p=Gr(d|0,e|0,-1,-1)|0;q=D;r=p;break}else{p=Gr(d|0,e|0,1,0)|0;q=D;r=p;break}else{if((m|0)==0&(n|0)==0){o=b;break a}q=g&-2147483648;r=1}while(0);c[k>>2]=r;c[k+4>>2]=q;o=+h[k>>3]}else o=a+b;while(0);return +o}function ch(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+384|0;if((i|0)>=(j|0))ca();h=g+288|0;k=g+216|0;l=g+144|0;m=g+72|0;n=g;o=re(b,e,f,16)|0;f=h;b=164369;p=f+30|0;do{a[f>>0]=a[b>>0]|0;f=f+1|0;b=b+1|0}while((f|0)<(p|0));b=(o|0)!=0;if(b)a[h+2>>0]=a[e+2>>0]|0;e=h+30|0;f=e;p=f+62|0;do{a[f>>0]=85;f=f+1|0}while((f|0)<(p|0));a[h+92>>0]=0;if((re(164399,h,e,1)|0)==(e|0)?(Vk(e,h,29)|0)==0:0)q=(Vk(h+59|0,164409+(((d[h+2>>0]|0)&1)*34|0)|0,34)|0)==0;else q=0;yg(164477,k,l,2);yg(164477,m,n,4);h=c[l>>2]|0;c[l>>2]=h^65536;if((q&(h|0)==-610444868?(c[m+68>>2]|0)==859059456:0)?(Vk(k,m,72)|0)==0:0)r=(Vk(l,n,72)|0)==0;else r=0;i=g;return (b&r?o:165066)|0}function bh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=c[a+84>>2]|0;f=a+20|0;g=c[f>>2]|0;h=c[a+28>>2]|0;i=h;j=g-i|0;if((g|0)!=(i|0)?(c[f>>2]=h,(bh(a,h,j)|0)>>>0<j>>>0):0)k=0;else l=3;do if((l|0)==3){j=e+8|0;h=c[j>>2]|0;a=h+d|0;f=e+20|0;i=c[f>>2]|0;if(a>>>0<i>>>0){m=e+12|0;n=h}else{h=a+1|i<<1|1;i=e+12|0;a=ek(c[i>>2]|0,h)|0;if(!a){k=0;break}c[i>>2]=a;c[c[e>>2]>>2]=a;a=c[f>>2]|0;Gl((c[i>>2]|0)+a|0,0,h-a|0)|0;c[f>>2]=h;m=i;n=c[j>>2]|0}$j((c[m>>2]|0)+n|0,b|0,d|0)|0;i=(c[j>>2]|0)+d|0;c[j>>2]=i;j=e+16|0;if(i>>>0>=(c[j>>2]|0)>>>0)c[j>>2]=i;c[c[e+4>>2]>>2]=i;k=d}while(0);return k|0}function Ug(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=e+16|0;g=c[f>>2]|0;if(!g)if(!(sm(e)|0)){h=c[f>>2]|0;i=5}else j=0;else{h=g;i=5}a:do if((i|0)==5){g=e+20|0;f=c[g>>2]|0;k=f;if((h-f|0)>>>0<d>>>0){j=Jd[c[e+36>>2]&31](e,b,d)|0;break}b:do if((a[e+75>>0]|0)>-1){f=d;while(1){if(!f){l=d;m=b;n=k;o=0;break b}p=f+-1|0;if((a[b+p>>0]|0)==10){q=f;break}else f=p}if((Jd[c[e+36>>2]&31](e,b,q)|0)>>>0<q>>>0){j=q;break a}l=d-q|0;m=b+q|0;n=c[g>>2]|0;o=q}else{l=d;m=b;n=k;o=0}while(0);$j(n|0,m|0,l|0)|0;c[g>>2]=(c[g>>2]|0)+l;j=o+l|0}while(0);return j|0}function Vg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;e=i;i=i+96|0;if((i|0)>=(j|0))ca();f=e+80|0;g=e+64|0;k=e+48|0;l=e+32|0;m=e+16|0;n=e;o=+h[d>>3];p=+h[d+8>>3];q=+h[b+8>>3];h[k>>3]=+h[b>>3];h[k+8>>3]=q;c[f>>2]=c[k>>2];c[f+4>>2]=c[k+4>>2];c[f+8>>2]=c[k+8>>2];c[f+12>>2]=c[k+12>>2];Oi(g,f);q=+h[g>>3];r=+h[g+8>>3];s=o*q-p*r;t=p*q+o*r;if((s!=s|0.0!=0.0)&(t!=t|0.0!=0.0)){Ea(l|0,+o,+p,+q,+r);u=+h[l>>3];v=+h[l+8>>3]}else{u=s;v=t}h[n>>3]=u;h[n+8>>3]=v;c[f>>2]=c[n>>2];c[f+4>>2]=c[n+4>>2];c[f+8>>2]=c[n+8>>2];c[f+12>>2]=c[n+12>>2];bg(m,f);v=+h[m+8>>3];h[a>>3]=+h[m>>3];h[a+8>>3]=v;i=e;return}function Lg(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0,i=0.0,j=0.0,l=0.0,m=0.0;d=+g[b>>2];e=+g[b+4>>2];b=(g[k>>2]=d,c[k>>2]|0);f=+O(+d);h=(g[k>>2]=f,c[k>>2]|0);do if(h>>>0<=2139095039){if(((g[k>>2]=e,c[k>>2]|0)&2139095040)>>>0>=2139095040){f=e-e;g[a>>2]=f;g[a+4>>2]=f;break}if(h>>>0>1093664767){f=+Y(+-+O(+d));i=f*(f*(+S(+e)*4.0*+R(+e)));g[a>>2]=+ip(1.0,d);g[a+4>>2]=i;break}else{i=+T(+e);f=i*i+1.0;j=+Zk(d);l=j*(j*f)+1.0;g[a>>2]=j*(f*+P(+(j*j+1.0)))/l;g[a+4>>2]=i/l;break}}else{if(h&8388607|0){g[a>>2]=d;g[a+4>>2]=e==0.0?e:d*e;break}l=+O(+e);if(((g[k>>2]=l,c[k>>2]|0)|0)==2139095040)m=e;else m=+S(+e)*+R(+e);l=+ip(0.0,m);c[a>>2]=b+-1073741824;g[a+4>>2]=l}while(0);return}function ah(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=$(e,d)|0;if((c[f+76>>2]|0)>-1)h=Ey(f)|0;else h=0;i=f+74|0;j=a[i>>0]|0;a[i>>0]=j+255|j;j=f+4|0;i=c[j>>2]|0;k=(c[f+8>>2]|0)-i|0;l=i;if((k|0)>0){i=k>>>0<g>>>0?k:g;$j(b|0,l|0,i|0)|0;c[j>>2]=l+i;m=b+i|0;n=g-i|0}else{m=b;n=g}a:do if(!n)o=13;else{b=f+32|0;i=m;l=n;while(1){if(bk(f)|0){p=l;break}j=Jd[c[b>>2]&31](f,i,l)|0;if((j+1|0)>>>0<2){p=l;break}if((l|0)==(j|0)){o=13;break a}else{i=i+j|0;l=l-j|0}}if(h|0)Dy(f);q=((g-p|0)>>>0)/(d>>>0)|0}while(0);if((o|0)==13)if(!h)q=e;else{Dy(f);q=e}return q|0}function Qg(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0,i=0,j=0,l=0,m=0,n=0.0,o=0.0;h[k>>3]=a;b=c[k>>2]|0;d=c[k+4>>2]|0;e=d&2147483647;do if(e>>>0>2146435071)f=a+a;else{if(e>>>0<1048576){h[k>>3]=a*18014398509481984.0;g=c[k+4>>2]|0;i=g&2147483647;if(!i){f=a;break}j=g;l=c[k>>2]|0;m=((i>>>0)/3|0)+696219795|0}else{j=d;l=b;m=((e>>>0)/3|0)+715094163|0}c[k>>2]=0;c[k+4>>2]=m|j&-2147483648;n=+h[k>>3];o=n*n*(n/a);h[k>>3]=n*(o*(o*o)*(o*.14599619288661245+-.758397934778766)+(o*(o*1.6214297201053545+-1.8849797954337717)+1.87595182427177));i=Gr(c[k>>2]|0,c[k+4>>2]|0,-2147483648,0)|0;g=D;c[k>>2]=i&-1073741824;c[k+4>>2]=g;o=+h[k>>3];n=a/(o*o);f=o+o*((n-o)/(o+o+n))}while(0);return +f}function gh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=a[d>>0]|0;if(g<<24>>24!=0?(a[d+1>>0]|0)!=0:0){c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;h=d;d=g;do{k=f+(((d&255)>>>5&255)<<2)|0;c[k>>2]=c[k>>2]|1<<(d&31);h=h+1|0;d=a[h>>0]|0}while(d<<24>>24!=0);d=a[b>>0]|0;a:do if(!(d<<24>>24))l=b;else{h=b;k=d;while(1){if(c[f+(((k&255)>>>5&255)<<2)>>2]&1<<(k&31)|0){l=h;break a}m=h+1|0;k=a[m>>0]|0;if(!(k<<24>>24)){l=m;break}else h=m}}while(0);n=l-b|0}else n=(Wg(b,g<<24>>24)|0)-b|0;i=e;return n|0}function Pg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=c[e>>2]|0;if((f|0)<1)g=-1;else{c[d>>2]=b;c[e>>2]=1;Ka();b=rc()|0;a:do if(b|0){h=d;i=b;do{h=h+4|0;j=i;b:while(1){k=c[e>>2]|0;if((k|0)==2147483647)break a;l=c[j+12>>2]|0;m=c[l>>2]|0;c:do if(m|0){n=m;o=0;while(1){if(!(Ol(a,n)|0))break;o=o+1|0;n=c[l+(o<<2)>>2]|0;if(!n)break c}n=k+1|0;c[e>>2]=n;if(n>>>0<=f>>>0){p=j;break b}}while(0);j=rc()|0;if(!j)break a}c[h>>2]=c[p+8>>2];i=rc()|0}while((i|0)!=0)}while(0);Ma();p=c[e>>2]|0;g=p>>>0>f>>>0?-1:p}return g|0}function Sg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+64|0;if((i|0)>=(j|0))ca();g=f+24|0;h=f+8|0;k=f;l=f+40|0;a:do if(e){c[l>>2]=a;c[l+4>>2]=b;c[l+8>>2]=d;c[l+12>>2]=e;c[l+16>>2]=0;c[l+20>>2]=0;c[k>>2]=18;c[k+4>>2]=l;m=Or(oc(102,k|0)|0)|0;if((m|0)<=-1){switch(c[($r()|0)>>2]|0){case 22:case 38:break;default:{n=m;break a}}o=Wl(a,b,d)|0;if((o|0)>=0){if(e&524288|0){c[h>>2]=o;c[h+4>>2]=2;c[h+8>>2]=1;wa(221,h|0)|0}if(e&2048){c[g>>2]=o;c[g+4>>2]=4;c[g+8>>2]=2048;wa(221,g|0)|0;n=o}else n=o}else n=o}else n=m}else n=Wl(a,b,d)|0;while(0);i=f;return n|0}function _g(a,b,d){a=+a;b=b|0;d=d|0;var e=0,f=0,g=0,l=0.0,m=0,n=0,o=0.0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;h[k>>3]=a;g=c[k+4>>2]&2147483647;a:do if(g>>>0<1072243196)if(g>>>0<1044816030){h[b>>3]=a;h[d>>3]=1.0;break}else{h[b>>3]=+vm(a,0.0,0);h[d>>3]=+Bn(a,0.0);break}else{if(g>>>0>2146435071){l=a-a;h[d>>3]=l;h[b>>3]=l;break}m=Ee(a,f)|0;n=f+8|0;l=+vm(+h[f>>3],+h[n>>3],1);o=+Bn(+h[f>>3],+h[n>>3]);switch(m&3|0){case 0:{h[b>>3]=l;h[d>>3]=o;break a;break}case 1:{h[b>>3]=o;h[d>>3]=-l;break a;break}case 2:{h[b>>3]=-l;h[d>>3]=-o;break a;break}case 3:{h[b>>3]=-o;h[d>>3]=l;break a;break}default:{}}}while(0);i=e;return}function uh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=a+68|0;h=b;b=d;d=e;while(1){e=b;i=c[a>>2]^h;j=0;while(1){k=j|1;l=c[a+(k<<2)>>2]^e^((c[a+72+(i>>>24<<2)>>2]|0)+(c[a+1096+((i>>>16&255)<<2)>>2]|0)^c[a+2120+((i>>>8&255)<<2)>>2])+(c[a+3144+((i&255)<<2)>>2]|0);m=c[a+(k+1<<2)>>2]^i^((c[a+72+(l>>>24<<2)>>2]|0)+(c[a+1096+((l>>>16&255)<<2)>>2]|0)^c[a+2120+((l>>>8&255)<<2)>>2])+(c[a+3144+((l&255)<<2)>>2]|0);j=j+2|0;if((j|0)>=16){n=l;o=m;break}else{e=l;i=m}}i=c[g>>2]^n;c[d>>2]=i;e=d+8|0;c[d+4>>2]=o;if(e>>>0<f>>>0){h=i;b=o;d=e}else{p=i;break}}return p|0}function dh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+80|0;if((i|0)>=(j|0))ca();h=g+40|0;k=g+32|0;l=g+24|0;m=g+16|0;n=g+8|0;o=g+44|0;p=g+48|0;c[o>>2]=0;q=Ml(165674,258,g)|0;c[a>>2]=q;do if((q|0)<0)r=-1;else{c[n>>2]=o;if((Rl(q,1074025521,n)|0)==0?(s=c[a>>2]|0,c[m>>2]=o,(Rl(s,-2147199952,m)|0)==0):0){s=(d|0)==0?p:d;c[l>>2]=c[o>>2];rp(s,20,165684,l)|0;t=Ml(s,258,k)|0;c[b>>2]=t;if((t|0)<0){wp(c[a>>2]|0)|0;r=-1;break}if(e|0)xn(t,0,e)|0;if(!f){r=0;break}t=c[b>>2]|0;c[h>>2]=f;Rl(t,21524,h)|0;r=0;break}wp(c[a>>2]|0)|0;r=-1}while(0);i=g;return r|0}function hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d;f=d+32|0;g=d+24|0;h=Dr()|0;k=(a|0)==0?165650:a;a=(b|0)==0?165591:b;if((dp(k,7)|0)==0?(b=zi(k)|0,l=b+44+(zi(a)|0)|0,b=Wd(l)|0,c[f>>2]=b,(b|0)!=0):0){b=g+4|0;m=f;n=0;while(1){Ic(0,g|0)|0;o=c[f>>2]|0;p=c[b>>2]^m^o;q=c[41724]|0;c[41724]=q+1;c[e>>2]=k;c[e+4>>2]=a;c[e+8>>2]=h;c[e+12>>2]=q;c[e+16>>2]=p;rp(o,l,165596,e)|0;if(dp(c[f>>2]|0,0)|0){r=n;break}o=n+1|0;if((n|0)<100)n=o;else{r=o;break}}n=c[f>>2]|0;if((r|0)>99){de(n);s=0}else s=n}else s=0;i=d;return s|0}function $g(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;do if((b|0)!=-1){g=b>>>0<128;if(!g){h=is(f,b)|0;if((h|0)<0){k=-1;break}else l=h}else l=1;if((c[d+76>>2]|0)>-1)m=Ey(d)|0;else m=0;h=d+74|0;n=a[h>>0]|0;a[h>>0]=n+1|n;if(!((c[d+8>>2]|0)==0?(bk(d)|0)!=0:0))o=8;if((o|0)==8?(n=d+4|0,h=c[n>>2]|0,h>>>0>=((c[d+44>>2]|0)+-8+l|0)>>>0):0){if(g){g=h+-1|0;c[n>>2]=g;a[g>>0]=b}else{g=h+(0-l)|0;c[n>>2]=g;$j(g|0,f|0,l|0)|0}c[d>>2]=c[d>>2]&-17;if(!m){k=b;break}Dy(d);k=b;break}if(m){Dy(d);k=-1}else k=-1}else k=-1;while(0);i=e;return k|0}function Ah(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0,i=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=kr(c[k>>2]|0,b|0,63)|0;e=b&2147483647;do if(e>>>0<=2146435071){if(e>>>0>=1072365568){b=(d|0)!=0;if(e>>>0<1077673984){f=+hg(e,a);g=b?2.0-f:f;break}else{g=b?2.0:0.0;break}}if(e>>>0<1013972992){g=1.0-a;break}f=a*a;i=(f*(f*(f*(-.005770270296489442-f*2.3763016656650163e-05)+-.02848174957559851)+-.3250421072470015)+.12837916709551256)/(f*(f*(f*(f*(1.3249473800432164e-04-f*3.960228278775368e-06)+.005081306281875766)+.0650222499887673)+.39791722395915535)+1.0);if((d|0)!=0|e>>>0<1070596096){g=1.0-(i*a+a);break}else{g=.5-(a+-.5+i*a);break}}else{b=fr(d|0,D|0,1)|0;g=1.0/a+ +(b|0)}while(0);return +g}function Yg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+4304|0;if((i|0)>=(j|0))ca();f=e+16|0;g=e+8|0;h=e;k=e+96|0;l=e+20|0;m=e+4272|0;n=e+176|0;do if(b){c[h>>2]=b;c[h+4>>2]=2656256;o=Or(_b(5,h|0)|0)|0;if((o|0)<0)p=0;else{yj(m,o);q=$n(m,n,4095)|0;if((q|0)>=0?(a[n+q>>0]=0,ak(o,k)|0,q=bp(n,l)|0,(q|0)>=0):0){if((c[k>>2]|0)==(c[l>>2]|0)?(c[k+72>>2]|0)==(c[l+72>>2]|0):0){c[g>>2]=o;Zb(6,g|0)|0;if(!d){p=Nd[2&7](n)|0;break}else{p=Wu(d,n)|0;break}}if(!q)c[($r()|0)>>2]=40}c[f>>2]=o;Zb(6,f|0)|0;p=0}}else{c[($r()|0)>>2]=22;p=0}while(0);i=e;return p|0}function qh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a;a:while(1){switch(c[f>>2]|0){case 2:{a=c[f+4>>2]|0;if((c[a+8>>2]|0)==-1?(g=c[a>>2]|0,h=oe(c[g+28>>2]|0,c[g+24>>2]|0,b,d,e)|0,(h|0)!=0):0){i=h;break a}else j=a;break}case 3:{a=c[f+4>>2]|0;h=qh(c[a>>2]|0,b,d,e)|0;if(h|0){i=h;break a}j=a+4|0;break}case 1:{a=c[f+4>>2]|0;h=a+4|0;g=oe(c[(c[a>>2]|0)+28>>2]|0,c[(c[h>>2]|0)+24>>2]|0,b,d,e)|0;if(g|0){i=g;break a}g=qh(c[a>>2]|0,b,d,e)|0;if(!g)j=h;else{i=g;break a}break}default:{i=0;break a}}f=c[j>>2]|0}return i|0}function Eh(b){b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c=b;while(1){b=c+1|0;if(!(Ou(a[c>>0]|0)|0)){d=c;e=b;break}else c=b}c=a[d>>0]|0;switch(c<<24>>24|0){case 45:{f=1;g=5;break}case 43:{f=0;g=5;break}default:{h=d;i=c;j=0}}if((g|0)==5){h=e;i=a[e>>0]|0;j=f}f=(i<<24>>24)+-48|0;if(f>>>0<10){i=h;h=0;e=0;g=f;while(1){f=Zp(e|0,h|0,10,0)|0;i=i+1|0;c=jr(f|0,D|0,g|0,((g|0)<0)<<31>>31|0)|0;f=D;g=(a[i>>0]|0)+-48|0;if(g>>>0>=10){k=c;l=f;break}else{h=f;e=c}}}else{k=0;l=0}e=(j|0)!=0;j=jr(0,0,k|0,l|0)|0;D=e?l:D;return (e?k:j)|0}function wh(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0,i=0.0,j=0.0,l=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=b&2147483647;do if(d>>>0>1083174911){e=(b|0)>-1|(b|0)==-1&(c[k>>2]|0)>>>0>4294967295;if(e&d>>>0>1083179007){f=a*8988465674311579538646525.0e283;break}if(d>>>0<=2146435071)if(!(a<=-1075.0)|e){g=9;break}else{f=0.0;break}else{f=-1.0/a;break}}else if(d>>>0<1016070144)f=a+1.0;else g=9;while(0);if((g|0)==9){i=a+26388279066624.0;h[k>>3]=i;g=(c[k>>2]|0)+128|0;d=g<<1&510;j=+h[944+(d<<3)>>3];l=a-(i+-26388279066624.0)-+h[944+((d|1)<<3)>>3];f=+Ti(j+j*l*(l*(l*(l*(l*1.3333559164630223e-03+.009618129842126066)+.0555041086648214)+.2402265069591)+.6931471805599453),(g&-256|0)/256|0)}return +f}function vh(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b+104|0;f=c[e>>2]|0;if((f|0)!=0?(c[b+108>>2]|0)>=(f|0):0)g=4;else{f=_m(b)|0;if((f|0)>=0){h=c[e>>2]|0;e=c[b+8>>2]|0;if(h){i=c[b+4>>2]|0;j=h-(c[b+108>>2]|0)|0;h=e;if((e-i|0)<(j|0)){k=h;g=9}else{c[b+100>>2]=i+(j+-1);l=h}}else{k=e;g=9}if((g|0)==9){c[b+100>>2]=e;l=k}k=b+4|0;if(!l)m=c[k>>2]|0;else{e=c[k>>2]|0;k=b+108|0;c[k>>2]=l+1-e+(c[k>>2]|0);m=e}e=m+-1|0;if((d[e>>0]|0|0)==(f|0))n=f;else{a[e>>0]=f;n=f}}else g=4}if((g|0)==4){c[b+100>>2]=0;n=-1}return n|0}function Jh(a){a=+a;var b=0,d=0.0,e=0,f=0,h=0.0,i=0.0;b=(g[k>>2]=a,c[k>>2]|0)>>>31;d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0<=2139095039){if(e>>>0>=1062731776){f=(b|0)!=0;if(e>>>0<1105199104){d=+lg(e,a);h=f?2.0-d:d;break}else{h=f?2.0:0.0;break}}if(e>>>0<595591168){h=1.0-a;break}d=a*a;i=(d*(d*(d*(-.005770270247012377-d*2.3763017452438362e-05)+-.028481749817728996)+-.32504209876060486)+.12837916612625122)/(d*(d*(d*(d*(1.324947370449081e-04-d*3.9602282413397916e-06)+5.0813062116503716e-03)+.06502225250005722)+.3979172110557556)+1.0);if((b|0)!=0|e>>>0<1048576e3){h=1.0-(i*a+a);break}else{h=.5-(a+-.5+i*a);break}}else h=1.0/a+ +(b<<1|0);while(0);return +h}function mh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0;d=i;i=i+80|0;if((i|0)>=(j|0))ca();e=d;f=d+16|0;g=f;h=g+64|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[e>>2]=a;c[e+4>>2]=64;c[e+8>>2]=f;if((Or(nc(268,e|0)|0)|0)<0)k=-1;else{e=b+4|0;a=f+4|0;g=b;h=g+72|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=c[a>>2]|0;c[b>>2]=g;a=c[f+40>>2]|0;c[e>>2]=(a|0)==0?g:a;c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];c[b+16>>2]=c[f+16>>2];c[b+20>>2]=c[f+20>>2];a=c[f+24>>2]|0;c[b+24>>2]=a;c[b+28>>2]=a;c[b+32>>2]=c[f+28>>2];c[b+40>>2]=c[f+44>>2];c[b+44>>2]=c[f+36>>2];k=0}i=d;return k|0}function lh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0;d=i;i=i+80|0;if((i|0)>=(j|0))ca();e=d;f=d+16|0;g=f;h=g+64|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[e>>2]=a;c[e+4>>2]=64;c[e+8>>2]=f;if((Or(mc(269,e|0)|0)|0)<0)k=-1;else{e=b+4|0;a=f+4|0;g=b;h=g+72|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=c[a>>2]|0;c[b>>2]=g;a=c[f+40>>2]|0;c[e>>2]=(a|0)==0?g:a;c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];c[b+16>>2]=c[f+16>>2];c[b+20>>2]=c[f+20>>2];a=c[f+24>>2]|0;c[b+24>>2]=a;c[b+28>>2]=a;c[b+32>>2]=c[f+28>>2];c[b+40>>2]=c[f+44>>2];c[b+44>>2]=c[f+36>>2];k=0}i=d;return k|0}function fh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0;d=i;i=i+80|0;if((i|0)>=(j|0))ca();e=d+56|0;f=d+40|0;g=d+24|0;h=d+8|0;k=d;do if(b){c[k>>2]=a;c[k+4>>2]=b;l=Db(331,k|0)|0;if((l|0)!=-38){m=Or(l)|0;break}l=tq(a)|0;if(!l){if(b&524288|0){c[h>>2]=c[a>>2];c[h+4>>2]=2;c[h+8>>2]=1;wa(221,h|0)|0;c[g>>2]=c[a+4>>2];c[g+4>>2]=2;c[g+8>>2]=1;wa(221,g|0)|0}if(!(b&2048))m=0;else{c[f>>2]=c[a>>2];c[f+4>>2]=4;c[f+8>>2]=2048;wa(221,f|0)|0;c[e>>2]=c[a+4>>2];c[e+4>>2]=4;c[e+8>>2]=2048;wa(221,e|0)|0;m=0}}else m=l}else m=tq(a)|0;while(0);i=d;return m|0}function jh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+64|0;if((i|0)>=(j|0))ca();d=b+32|0;e=b+24|0;f=b+8|0;g=b;h=b+40|0;k=b+48|0;c[h>>2]=a;if(!a)c[h>>2]=169770;c[g>>2]=165650;c[g+4>>2]=7;if(!(Rc(33,g|0)|0)){g=k+4|0;a=h;l=0;while(1){c[f>>2]=0;c[f+4>>2]=k;c[f+8>>2]=0;qc(265,f|0)|0;m=c[h>>2]|0;n=c[g>>2]^a^m;o=c[41726]|0;c[41726]=o+1;c[e>>2]=o;c[e+4>>2]=n;rp(m,20,165655,e)|0;c[d>>2]=c[h>>2];c[d+4>>2]=0;if(Rc(33,d|0)|0){p=l;break}m=l+1|0;if((l|0)<100)l=m;else{p=m;break}}q=(p|0)>99?0:c[h>>2]|0}else q=0;i=b;return q|0}function eh(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0,i=0.0,j=0,l=0,m=0,n=0.0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=kr(d|0,e|0,52)|0;g=f&2047;f=g+-1023|0;do if((f|0)>51){h[b>>3]=a;if((d|0)==0&(e&1048575|0)==0|(f|0)!=1024){c[k>>2]=0;c[k+4>>2]=e&-2147483648;i=+h[k>>3]}else i=a}else{if(g>>>0<1023){j=b;c[j>>2]=0;c[j+4>>2]=e&-2147483648;i=a;break}j=kr(-1,1048575,f|0)|0;l=D;if((j&d|0)==0&(l&e|0)==0){h[b>>3]=a;c[k>>2]=0;c[k+4>>2]=e&-2147483648;i=+h[k>>3];break}else{m=d&~j;j=e&~l;c[k>>2]=m;c[k+4>>2]=j;n=+h[k>>3];l=b;c[l>>2]=m;c[l+4>>2]=j;i=a-n;break}}while(0);return +i}function Zg(a,b){a=a|0;b=+b;var d=0.0,e=0,f=0.0,h=0,i=0,j=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;d=+O(+b);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0<=2139095040)if(!(((g[k>>2]=b,c[k>>2]|0)|0)<0&(e|0)!=0))if((e|0)==2139095040)f=0.0;else{if(!a){f=+Th(b);break}h=(a|0)<0;i=h?a&1:0;j=h?~a:a+-1|0;if(!j){d=+$h(b);f=i|0?-d:d;break}d=+Th(b);l=+$h(b);if((j|0)>0&((g[k>>2]=l,c[k>>2]|0)|0)!=-8388608){m=d;d=l;h=0;while(1){h=h+1|0;n=d*(+(h|0)*2.0/b)-m;if(!((h|0)<(j|0)&((g[k>>2]=n,c[k>>2]|0)|0)!=-8388608)){o=n;break}else{p=d;d=n;m=p}}}else o=l;f=i|0?-o:o}else f=s;else f=b;while(0);return +f}function zh(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(!e)f=0;else{g=a[b>>0]|0;a:do if(!(g<<24>>24)){h=0;i=c}else{j=e;k=g;l=g&255;m=b;n=c;while(1){j=j+-1|0;o=a[n>>0]|0;if(!((j|0)!=0&o<<24>>24!=0)){h=k;i=n;break a}if(k<<24>>24!=o<<24>>24?(o=Ht(l)|0,(o|0)!=(Ht(d[n>>0]|0)|0)):0){p=m;q=n;break}m=m+1|0;o=n+1|0;r=a[m>>0]|0;if(!(r<<24>>24)){h=0;i=o;break a}else{k=r;l=r&255;n=o}}h=a[p>>0]|0;i=q}while(0);q=Ht(h&255)|0;f=q-(Ht(d[i>>0]|0)|0)|0}return f|0}function th(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+128|0;if((i|0)>=(j|0))ca();h=g+112|0;k=g;l=k;m=7832;n=l+112|0;do{c[l>>2]=c[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(n|0));if((d+-1|0)>>>0>2147483646)if(!d){o=h;p=1;q=4}else{c[($r()|0)>>2]=75;r=-1}else{o=b;p=d;q=4}if((q|0)==4){q=-2-o|0;d=p>>>0>q>>>0?q:p;c[k+48>>2]=d;p=k+20|0;c[p>>2]=o;c[k+44>>2]=o;q=o+d|0;o=k+16|0;c[o>>2]=q;c[k+28>>2]=q;q=sg(k,e,f)|0;if(!d)r=q;else{d=c[p>>2]|0;a[d+(((d|0)==(c[o>>2]|0))<<31>>31)>>0]=0;r=q}}i=g;return r|0}function ih(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;if((i|0)>=(j|0))ca();f=e+24|0;g=e+16|0;h=e;a:do if((a|0)==(b|0))k=Or(-22)|0;else{l=(d&524288|0)!=0;b:do if(l){c:while(1){c[h>>2]=a;c[h+4>>2]=b;c[h+8>>2]=d;m=Eb(330,h|0)|0;switch(m|0){case -38:{break b;break}case -16:break;default:{n=m;break c}}}k=Or(n)|0;break a}while(0);do{c[g>>2]=a;c[g+4>>2]=b;m=Ca(63,g|0)|0}while((m|0)==-16);o=m;if(l){c[f>>2]=b;c[f+4>>2]=2;c[f+8>>2]=1;wa(221,f|0)|0}k=Or(o)|0}while(0);i=e;return k|0}function nh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;e=i;i=i+48|0;if((i|0)>=(j|0))ca();f=e+40|0;h=e+32|0;k=e+24|0;l=e+16|0;m=e+8|0;n=e;o=+g[d>>2];p=+g[d+4>>2];d=c[b+4>>2]|0;c[k>>2]=c[b>>2];c[k+4>>2]=d;c[f>>2]=c[k>>2];c[f+4>>2]=c[k+4>>2];Fj(h,f);q=+g[h>>2];r=+g[h+4>>2];s=o*q-p*r;t=p*q+o*r;if((s!=s|0.0!=0.0)&(t!=t|0.0!=0.0)){bd(l|0,+o,+p,+q,+r);u=+g[l>>2];v=+g[l+4>>2]}else{u=s;v=t}g[n>>2]=u;g[n+4>>2]=v;c[f>>2]=c[n>>2];c[f+4>>2]=c[n+4>>2];mg(m,f);f=c[m+4>>2]|0;c[a>>2]=c[m>>2];c[a+4>>2]=f;i=e;return}function oh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+240|0;if((i|0)>=(j|0))ca();h=g;c[h>>2]=a;a:do if((e|0)>1){k=0-b|0;l=e;m=a;n=a;o=1;while(1){p=m+k|0;q=l+-2|0;r=p+(0-(c[f+(q<<2)>>2]|0))|0;if((Rd[d&7](n,r)|0)>-1?(Rd[d&7](n,p)|0)>-1:0){s=o;break a}t=o+1|0;u=h+(o<<2)|0;if((Rd[d&7](r,p)|0)>-1){c[u>>2]=r;v=r;w=l+-1|0}else{c[u>>2]=p;v=p;w=q}if((w|0)<=1){s=t;break a}l=w;m=v;n=c[h>>2]|0;o=t}}else s=1;while(0);Hi(b,h,s);i=g;return}function sh(a,b){a=+a;b=+b;var d=0.0,e=0,f=0,h=0,i=0,j=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);d=+O(+b);f=(g[k>>2]=d,c[k>>2]|0);h=e>>>0<f>>>0;i=h?f:e;j=h?e:f;d=(c[k>>2]=i,+g[k>>2]);b=(c[k>>2]=j,+g[k>>2]);do if((j|0)==2139095040)l=b;else{if(i>>>0>2139095039|(j|0)==0|(i-j|0)>>>0>209715199){l=d+b;break}if(i>>>0<=1568669695)if(j>>>0<562036736){m=b*1237940039285380274899124.0e3;n=d*1237940039285380274899124.0e3;o=8.077935669463161e-28}else{m=b;n=d;o=1.0}else{m=b*8.077935669463161e-28;n=d*8.077935669463161e-28;o=1237940039285380274899124.0e3}a=n;p=m;l=o*+P(+(a*a+p*p))}while(0);return +l}function Fh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=a;f=c[e>>2]|0;g=f&127;h=Gr(f|0,c[e+4>>2]|0,d|0,0)|0;e=a;c[e>>2]=h;c[e+4>>2]=D;do if(g){e=128-g|0;h=a+72+g|0;if(e>>>0>d>>>0){$j(h|0,b|0,d|0)|0;break}else{$j(h|0,b|0,e|0)|0;qe(a,a+72|0);i=d-e|0;j=b+e|0;k=5;break}}else{i=d;j=b;k=5}while(0);if((k|0)==5){if(i>>>0>127){k=i+-128|0;b=k&-128;d=j+(b+128)|0;g=i;e=j;while(1){qe(a,e);g=g+-128|0;if(g>>>0<=127)break;else e=e+128|0}l=k-b|0;m=d}else{l=i;m=j}$j(a+72|0,m|0,l|0)|0}return}function Ch(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0;f=i;i=i+48|0;if((i|0)>=(j|0))ca();g=f+16|0;h=f+8|0;k=f;l=f+24|0;b[l>>1]=1;b[l+2>>1]=1;c[l+4>>2]=0;c[l+8>>2]=e;e=l+12|0;c[e>>2]=0;switch(d|0){case 3:{b[l>>1]=0;c[k>>2]=l;if((ef(a,12,k)|0)>=0)if((b[l>>1]|0)!=2?(k=c[e>>2]|0,(k|0)!=(Dr()|0)):0){c[($r()|0)>>2]=13;m=-1}else m=0;else m=-1;break}case 0:{b[l>>1]=2;n=7;break}case 2:{n=7;break}case 1:{c[g>>2]=l;m=ef(a,14,g)|0;break}default:{c[($r()|0)>>2]=22;m=-1}}if((n|0)==7){c[h>>2]=l;m=ef(a,13,h)|0}i=f;return m|0}function Kh(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;h=e+74|0;k=b[h>>1]|0;l=(k&65535)<<24>>24;a[h>>0]=l+1|l;do if(d>>>0<128){if((((k&65535)>>>8&65535)<<24>>24|0)!=(d|0)?(l=e+20|0,h=c[l>>2]|0,h>>>0<(c[e+16>>2]|0)>>>0):0){c[l>>2]=h+1;a[h>>0]=d;m=d&255;break}m=Ci(e,d)|0}else{h=e+20|0;l=c[h>>2]|0;if((l+4|0)>>>0<(c[e+16>>2]|0)>>>0){n=is(l,d)|0;if((n|0)<0){m=-1;break}c[h>>2]=(c[h>>2]|0)+n;m=d;break}n=is(g,d)|0;if((n|0)>=0?(Ug(g,n,e)|0)>>>0>=n>>>0:0){m=d;break}m=-1}while(0);i=f;return m|0}function Hh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=a;f=c[e>>2]|0;g=f&63;h=Gr(f|0,c[e+4>>2]|0,d|0,0)|0;e=a;c[e>>2]=h;c[e+4>>2]=D;do if(g){e=64-g|0;h=a+24+g|0;if(e>>>0>d>>>0){$j(h|0,b|0,d|0)|0;break}else{$j(h|0,b|0,e|0)|0;Ge(a,a+24|0);i=d-e|0;j=b+e|0;k=5;break}}else{i=d;j=b;k=5}while(0);if((k|0)==5){if(i>>>0>63){k=i+-64|0;b=k&-64;d=j+(b+64)|0;g=i;e=j;while(1){Ge(a,e);g=g+-64|0;if(g>>>0<=63)break;else e=e+64|0}l=k-b|0;m=d}else{l=i;m=j}$j(a+24|0,m|0,l|0)|0}return}function Gh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=a;f=c[e>>2]|0;g=f&63;h=Gr(f|0,c[e+4>>2]|0,d|0,0)|0;e=a;c[e>>2]=h;c[e+4>>2]=D;do if(g){e=64-g|0;h=a+40+g|0;if(e>>>0>d>>>0){$j(h|0,b|0,d|0)|0;break}else{$j(h|0,b|0,e|0)|0;xf(a,a+40|0);i=d-e|0;j=b+e|0;k=5;break}}else{i=d;j=b;k=5}while(0);if((k|0)==5){if(i>>>0>63){k=i+-64|0;b=k&-64;d=j+(b+64)|0;g=i;e=j;while(1){xf(a,e);g=g+-64|0;if(g>>>0<=63)break;else e=e+64|0}l=k-b|0;m=d}else{l=i;m=j}$j(a+40|0,m|0,l|0)|0}return}function Dh(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;c=b&65535;a:do if((b|0)!=14){switch(b>>16|0){case 1:{if(c>>>0>1){d=0;break a}else e=160034;break}case 2:{if(c>>>0>49){d=0;break a}else e=159718;break}case 4:return ((c|0)==0?169844:0)|0;case 5:{if(c>>>0>3){d=0;break a}else e=159699;break}default:{d=0;break a}}if(!c)d=e;else{f=c;g=e;while(1){h=g;while(1){i=h+1|0;if(!(a[h>>0]|0)){j=i;break}else h=i}f=f+-1|0;if(!f){d=j;break}else g=j}}}else d=160037;while(0);return d|0}function Nh(a){a=+a;var b=0,d=0,e=0,f=0,g=0.0,i=0.0,j=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=kr(c[k>>2]|0,b|0,63)|0;e=D;f=b&2147483647;do if(f>>>0<=2146435071)if(f>>>0<1072365568)if(f>>>0<1043333120){g=(a*8.0+a*1.0270333367641007)*.125;break}else{i=a*a;g=(i*(i*(i*(-.005770270296489442-i*2.3763016656650163e-05)+-.02848174957559851)+-.3250421072470015)+.12837916709551256)/(i*(i*(i*(i*(1.3249473800432164e-04-i*3.960228278775368e-06)+.005081306281875766)+.0650222499887673)+.39791722395915535)+1.0)*a+a;break}else{if(f>>>0<1075314688)j=1.0-+hg(f,a);else j=1.0;g=(d|0)!=0|(e|0)!=0?-j:j;break}else{b=fr(d|0,e|0,1)|0;g=1.0/a+ +(1-b|0)}while(0);return +g}function Qh(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0;h[k>>3]=a;b=c[k>>2]|0;d=c[k+4>>2]|0;e=fr(d|0,0,1)|0;do if(e|b)if((d|0)>=0){if(d>>>0>2146435071){f=1.0/a;break}if(d>>>0>1073741823){f=+Wf(d,a,1);break}if(d>>>0>1044381695){g=a*a;f=(g*(g*(g*(g*(g*(1.9559013703502292e-08-g*3.982051941321034e-11)+-3.8140705372436416e-06)+3.4745343209368365e-04)+-.01381856719455969)+.17666645250918112)+-.07380429510868723)/(g*(g*(g*(g*4.4111031133267547e-10+2.591508518404578e-07)+7.600686273503533e-05)+.01273048348341237)+1.0)+ +Yi(a)*+Z(+a)*.6366197723675814;break}else{f=+Z(+a)*.6366197723675814+-.07380429510868723;break}}else f=s;else f=-t;while(0);return +f}function Lh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+(b<<2)|0;if(!b)return 0;else e=a;a:while(1){a=c[e>>2]|0;do if(!a)f=e+4|0;else{b=a+-8|0;g=a+-4|0;h=c[g>>2]|0;i=h&-8;c[e>>2]=0;if((h&3|0)==1|b>>>0<(c[41744]|0)>>>0){j=9;break a}k=e+4|0;l=b+i|0;if((k|0)!=(d|0)?(c[k>>2]|0)==(l+8|0):0){m=(c[l+4>>2]&-8)+i|0;c[g>>2]=h&1|m|2;h=b+m+4|0;c[h>>2]=c[h>>2]|1;c[k>>2]=a;f=k;break}ge(b,i);f=k}while(0);if((f|0)==(d|0)){j=11;break}else e=f}if((j|0)==9)Sa();else if((j|0)==11)return 0;return 0}function xh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;h=zi(b)|0;a:do if(!(h>>>0<6|(h+-6|0)>>>0<d>>>0)?(k=b+h+(0-d)+-6|0,(Vk(k,146321,6)|0)==0):0){l=e|194;m=100;do{Am(k)|0;c[g>>2]=384;n=Ml(b,l,g)|0;if((n|0)>-1){o=n;break a}m=m+-1|0;if(!m)break}while((c[($r()|0)>>2]|0)==17);a[k>>0]=a[146321]|0;a[k+1>>0]=a[146322]|0;a[k+2>>0]=a[146323]|0;a[k+3>>0]=a[146324]|0;a[k+4>>0]=a[146325]|0;a[k+5>>0]=a[146326]|0;o=-1}else p=4;while(0);if((p|0)==4){c[($r()|0)>>2]=22;o=-1}i=f;return o|0}function Th(a){a=+a;var b=0,d=0.0,e=0.0,f=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=+O(+a);do if((g[k>>2]=d,c[k>>2]|0)|0)if((b|0)>=0){if(b>>>0>2139095039){e=1.0/a;break}if(b>>>0>1073741823){e=+Tf(b,a,1);break}if(b>>>0>956301311){f=a*a;e=(f*(f*(f*(f*(f*(1.955901396399895e-08-f*3.9820518410449424e-11)+-3.8140706237754785e-06)+3.4745343145914376e-04)+-.013818567618727684)+.17666645348072052)+-.07380429655313492)/(f*(f*(f*(f*4.4111031494153963e-10+2.5915085188898956e-07)+7.600686512887478e-05)+.012730483897030354)+1.0)+ +Zi(a)*+Z(+a)*.6366197466850281;break}else{e=+Z(+a)*.6366197466850281+-.07380429655313492;break}}else e=s;else e=-t;while(0);return +e}function Vh(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;a:do if(((a[c>>0]|0)==36?(e=a[c+1>>0]|0,e<<24>>24!=0):0)?(f=a[c+2>>0]|0,f<<24>>24!=0):0){g=f<<24>>24==36;if(e<<24>>24==49&g){h=Nm(b,c,d)|0;break}switch(e<<24>>24){case 50:{if((a[c+3>>0]|0)!=36){i=13;break a}h=ch(b,c,d)|0;break a;break}case 53:{if(!g){i=13;break a}h=Hm(b,c,d)|0;break a;break}case 54:{if(!g){i=13;break a}h=Gm(b,c,d)|0;break a;break}default:{i=13;break a}}}else i=13;while(0);if((i|0)==13)h=Dl(b,c,d)|0;return h|0}function yh(a){a=+a;var b=0,d=0.0,e=0,f=0.0,i=0,j=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0>1123811328)if(!(b>>>0>1124073471&(b|0)>-1))if((b|0)<0&b>>>0>3272998911){f=0.0;break}else{i=7;break}else{f=a*1701411834604692317316873.0e14;break}else if(e>>>0<855638017)f=a+1.0;else i=7;while(0);if((i|0)==7){d=a+786432.0;i=(g[k>>2]=d,c[k>>2]|0)+8|0;e=fr((i>>>4)+1023|0,0,52)|0;b=D;j=a-(d+-786432.0);d=+h[816+((i&15)<<3)>>3];a=j*d;c[k>>2]=e;c[k+4>>2]=b;f=+h[k>>3]*(d+(j*.24022650718688965+.6931471824645996)*a+(j*.009618354961276054+.055505409836769104)*(j*j*a))}return +f}function Bh(a,b){a=+a;b=b|0;var d=0,e=0,f=0,l=0,m=0.0,n=0,o=0,p=0,q=0,r=0.0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d+8|0;f=d;l=(g[k>>2]=a,c[k>>2]|0);m=+O(+a);n=(g[k>>2]=m,c[k>>2]|0);do if(n>>>0>=1305022427){if(n>>>0>2139095039){h[b>>3]=a-a;o=0;break}p=(n>>>23)+-150|0;h[e>>3]=(c[k>>2]=n-(p<<23),+g[k>>2]);q=ke(e,f,p,1,0)|0;m=+h[f>>3];if((l|0)<0){h[b>>3]=-m;o=0-q|0;break}else{h[b>>3]=m;o=q;break}}else{m=a;r=m*.6366197723675814+6755399441055744.0+-6755399441055744.0;h[b>>3]=m-r*1.5707963109016418-r*1.5893254773528196e-08;o=~~r}while(0);i=d;return o|0}function ph(a,b,d,e,f,g,h,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;n=i;i=i+80|0;if((i|0)>=(j|0))ca();o=n;p=n+8|0;q=c[41502]|0;if(q|0){r=q;s=Ef(a,b,d,e,f,g,h,k,l,m,r)|0;i=n;return s|0}q=c[2]|0;t=zi(q)|0;u=c[3]|0;v=zi(u)|0;w=16;if(Ef(q,t,u,v,c[w>>2]|0,c[w+4>>2]|0,c[6]|0,c[7]|0,p,64,1)|0){km(146103,o);x=$r()|0;c[x>>2]=0;Sa()}if(Vk(32,p,64)|0){km(146103,o);x=$r()|0;c[x>>2]=0;Sa()}c[41502]=1;r=1;s=Ef(a,b,d,e,f,g,h,k,l,m,r)|0;i=n;return s|0}function _h(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0;h[k>>3]=a;b=c[k>>2]|0;d=c[k+4>>2]|0;e=fr(d|0,0,1)|0;do if(e|b)if((d|0)>=0){if(d>>>0>2146435071){f=1.0/a;break}if(d>>>0>1073741823){f=+Pf(d,a,1,0);break}if(d>>>0<1016070144){f=-.6366197723675814/a;break}else{g=a*a;f=(g*(g*(g*(2.352526005616105e-05-g*9.190991580398789e-08)+-1.9125689587576355e-03)+.05044387166398113)+-.19605709064623894)/(g*(g*(g*(g*(g*1.6655924620799208e-11+6.227414523646215e-09)+1.3560880109751623e-06)+2.0255258102513517e-04)+.01991673182366499)+1.0)*a+(+Xi(a)*+Z(+a)-1.0/a)*.6366197723675814;break}}else f=s;else f=-t;while(0);return +f}function kh(a,b,d){a=+a;b=+b;d=+d;var e=0,f=0,l=0.0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;l=a*b;b=d;a=l+b;h[k>>3]=a;m=c[k>>2]|0;n=kr(m|0,c[k+4>>2]|0,52)|0;o=n&2047;if(!(a-l==b|((m&536870911|0)!=268435456|0!=0|(o|0)==2047))?(fz()|0)==0:0){us(3072)|0;h[f>>3]=l;p=b+ +h[f>>3];us(0)|0;if(a==p){h[k>>3]=p;m=Gr(c[k>>2]|0,c[k+4>>2]|0,1,0)|0;n=D;c[k>>2]=m;c[k+4>>2]=n;q=+h[k>>3]}else q=p;r=q}else if((o+-874|0)>>>0<23?(vy(32)|0)!=0:0){g[f>>2]=d;d=l+ +g[f>>2];(vy(32)|0)==0;r=d}else r=a;i=e;return +r}function Rh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e+4|0;g=e;h=b;b=0;while(1){if(!b)k=h;else{if((a[h>>0]|0)!=58){l=0;break}k=h+1|0}m=Ps(k,g,16)|0;if(m>>>0>255){l=0;break}n=c[g>>2]|0;a[f+b>>0]=m;b=b+1|0;if((b|0)>=6){o=n;p=7;break}else h=n}if((p|0)==7)if(!(a[o>>0]|0)){a[d>>0]=a[f>>0]|0;a[d+1>>0]=a[f+1>>0]|0;a[d+2>>0]=a[f+2>>0]|0;a[d+3>>0]=a[f+3>>0]|0;a[d+4>>0]=a[f+4>>0]|0;a[d+5>>0]=a[f+5>>0]|0;l=d}else l=0;i=e;return l|0}function $h(a){a=+a;var b=0,d=0.0,e=0.0,f=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=+O(+a);do if((g[k>>2]=d,c[k>>2]|0)|0)if((b|0)>=0){if(b>>>0>2139095039){e=1.0/a;break}if(b>>>0>1073741823){e=+dg(b,a,1,0);break}if(b>>>0<838860800){e=-.6366197466850281/a;break}else{f=a*a;e=(f*(f*(f*(2.3525259166490287e-05-f*9.190991789864711e-08)+-1.9125689286738634e-03)+.050443872809410095)+-.19605709612369537)/(f*(f*(f*(f*(f*1.6655924903186126e-11+6.227414584003554e-09)+1.3560879779106472e-06)+2.0255257550161332e-04)+.019916731864213943)+1.0)*a+(+Wi(a)*+Z(+a)-1.0/a)*.6366197466850281;break}}else e=s;else e=-t;while(0);return +e}function Wh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if(!d)return;e=a+32|0;f=e;g=c[f>>2]|0;h=c[f+4>>2]|0;f=kr(g|0,h|0,3)|0;i=f&63;f=fr(d|0,0,3)|0;j=Gr(g|0,h|0,f|0,D|0)|0;f=e;c[f>>2]=j;c[f+4>>2]=D;f=64-i|0;j=a+40+i|0;if(f>>>0>d>>>0){$j(j|0,b|0,d|0)|0;return}$j(j|0,b|0,f|0)|0;j=a+40|0;Zd(a,j);i=b+f|0;b=d-f|0;if(b>>>0>63){f=b;d=i;while(1){Zd(a,d);e=d+64|0;h=f+-64|0;if(h>>>0>63){f=h;d=e}else{k=h;l=e;break}}}else{k=b;l=i}$j(j|0,l|0,k|0)|0;return}function Uh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if(!d)return;e=a+32|0;f=e;g=c[f>>2]|0;h=c[f+4>>2]|0;f=kr(g|0,h|0,3)|0;i=f&63;f=fr(d|0,0,3)|0;j=Gr(g|0,h|0,f|0,D|0)|0;f=e;c[f>>2]=j;c[f+4>>2]=D;f=64-i|0;j=a+40+i|0;if(f>>>0>d>>>0){$j(j|0,b|0,d|0)|0;return}$j(j|0,b|0,f|0)|0;j=a+40|0;Zd(a,j);i=b+f|0;b=d-f|0;if(b>>>0>63){f=b;d=i;while(1){Zd(a,d);e=d+64|0;h=f+-64|0;if(h>>>0>63){f=h;d=e}else{k=h;l=e;break}}}else{k=b;l=i}$j(j|0,l|0,k|0)|0;return}function rh(a,b){a=+a;b=+b;var d=0,e=0.0,f=0,i=0.0,j=0,l=0.0,m=0,n=0;d=(g[k>>2]=a,c[k>>2]|0);e=+O(+a);do if((g[k>>2]=e,c[k>>2]|0)>>>0<=2139095040?(h[k>>3]=b,f=c[k+4>>2]|0,i=+O(+b),h[k>>3]=i,j=c[k+4>>2]|0,!(j>>>0>2146435072|(j|0)==2146435072&(c[k>>2]|0)>>>0>0)):0){i=a;if(i==b){l=b;break}do if(!(a==0.0)){j=(d|0)<0;if(i<b)if(j){m=d+-1|0;break}else{m=d+1|0;break}else if(j){m=d+1|0;break}else{m=d+-1|0;break}}else m=(f|0)<0?-2147483647:1;while(0);l=(c[k>>2]=m,+g[k>>2])}else n=3;while(0);if((n|0)==3)l=a+b;return +l}function Mh(a,b){a=+a;b=+b;var d=0.0,e=0,f=0,g=0.0,i=0;d=+O(+a);h[k>>3]=d;e=c[k+4>>2]|0;do if(!(e>>>0>2146435072|(e|0)==2146435072&(c[k>>2]|0)>>>0>0)?(d=+O(+b),h[k>>3]=d,f=c[k+4>>2]|0,!(f>>>0>2146435072|(f|0)==2146435072&(c[k>>2]|0)>>>0>0)):0){h[k>>3]=b;f=c[k+4>>2]&2146435072;if(!(f>>>0<2146435072|(f|0)==2146435072&0<0))if(b>0.0){g=a*b;break}else{g=a/-b;break}if(+Em(b)!=b){d=b-b;g=d/d;break}if(b>65.0e3){g=+Ti(a,65e3);break}if(b<-65.0e3){g=+Ti(a,-65e3);break}else{g=+Ti(a,~~b);break}}else i=3;while(0);if((i|0)==3)g=a*b;return +g}function mi(b,d,e,f){b=+b;d=d|0;e=e|0;f=f|0;var g=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+48|0;if((i|0)>=(j|0))ca();k=g;l=g+16|0;m=d+-1|0;c[k>>2]=m>>>0>15?14:m;h[k+8>>3]=b;Pp(l,159658,k)|0;k=(a[l>>0]|0)==45&1;c[f>>2]=k;f=a[l+k>>0]|0;if(f<<24>>24==101){n=169626;o=k}else{m=169626;d=f;f=k;k=0;while(1){a[m>>0]=d;p=f+1|0;k=(d<<24>>24!=46&1)+k|0;d=a[l+p>>0]|0;q=169626+k|0;if(d<<24>>24==101){n=q;o=p;break}else{m=q;f=p}}}a[n>>0]=0;c[e>>2]=(Li(l+o+1|0)|0)+1;i=g;return 169626}function ci(a){a=+a;var b=0,d=0.0,e=0,f=0.0,h=0.0;b=(g[k>>2]=a,c[k>>2]|0)>>>31;d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0<=2139095039)if(e>>>0<1062731776)if(e>>>0<830472192){f=(a*8.0+a*1.0270333290100098)*.125;break}else{d=a*a;f=(d*(d*(d*(-.005770270247012377-d*2.3763017452438362e-05)+-.028481749817728996)+-.32504209876060486)+.12837916612625122)/(d*(d*(d*(d*(1.324947370449081e-04-d*3.9602282413397916e-06)+5.0813062116503716e-03)+.06502225250005722)+.3979172110557556)+1.0)*a+a;break}else{if(e>>>0<1086324736)h=1.0-+lg(e,a);else h=1.0;f=b|0?-h:h;break}else f=1.0/a+ +(1-(b<<1)|0);while(0);return +f}function hi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=c[a+84>>2]|0;f=c[a+28>>2]|0;if((f|0)!=(b|0)?(hi(a,f,(c[a+20>>2]|0)-f|0)|0)==-1:0)g=-1;else{f=e+4|0;a:do if((d|0)!=0&(c[f>>2]|0)!=0){a=b;h=d;i=c[e>>2]|0;while(1){j=Kg(i,a,h)|0;if((j|0)<=-1){k=j;break a}l=(c[f>>2]|0)+-1|0;c[f>>2]=l;i=(c[e>>2]|0)+4|0;c[e>>2]=i;if(!((h|0)!=(j|0)&(l|0)!=0)){k=j;break}else{a=a+j|0;h=h-j|0}}}else k=0;while(0);c[c[e>>2]>>2]=0;g=(k|0)<0?k:d}return g|0}function ai(a){a=+a;var b=0,d=0,e=0,f=0,g=0,i=0,j=0,l=0;h[k>>3]=a;b=c[k>>2]|0;d=c[k+4>>2]|0;e=kr(b|0,d|0,52)|0;f=e&2047;switch(f|0){case 0:{e=fr(b|0,d|0,12)|0;g=D;if(!((e|0)==0&(g|0)==0))if((g|0)>-1|(g|0)==-1&e>>>0>4294967295){i=e;e=g;g=-1023;while(1){j=g+-1|0;i=fr(i|0,e|0,1)|0;e=D;if(!((e|0)>-1|(e|0)==-1&i>>>0>4294967295)){l=j;break}else g=j}}else l=-1023;else l=-2147483648;break}case 2047:{l=(b|0)!=0|(d&1048575|0)!=0?-2147483648:2147483647;break}default:l=f+-1023|0}return l|0}function Yh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if(!d)e=0;else{f=c[a>>2]|0;a:do if(!f){g=b;h=0}else{i=d;j=b;k=a;l=f;while(1){i=i+-1|0;m=c[j>>2]|0;if(!((i|0)!=0&(m|0)!=0)){g=j;h=l;break a}if((l|0)!=(m|0)?(m=sx(l)|0,(m|0)!=(sx(c[j>>2]|0)|0)):0){n=j;o=k;break}k=k+4|0;m=j+4|0;l=c[k>>2]|0;if(!l){g=m;h=0;break a}else j=m}g=n;h=c[o>>2]|0}while(0);o=sx(h)|0;e=o-(sx(c[g>>2]|0)|0)|0}return e|0}function ei(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=c[b>>2]|0;c[e>>2]=0;g=as(f,44)|0;c[b>>2]=g;if(!g)c[b>>2]=f+(zi(f)|0);else{c[b>>2]=g+1;a[g>>0]=0}g=c[d>>2]|0;a:do if(!g)h=-1;else{b=g;i=0;b:while(1){j=zi(b)|0;if(!(Vi(b,f,j)|0)){k=f+j|0;switch(a[k>>0]|0){case 0:{h=i;break a;break}case 61:{l=k;m=i;break b;break}default:{}}}i=i+1|0;b=c[d+(i<<2)>>2]|0;if(!b){h=-1;break a}}c[e>>2]=l;h=m}while(0);return h|0}function fi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+176|0;if((i|0)>=(j|0))ca();h=g;k=h+8|0;l=h+4|0;m=g+112+4|0;n=h+44|0;o=h;p=o+112|0;do{c[o>>2]=0;o=o+4|0}while((o|0)<(p|0));c[n>>2]=m;c[h+48>>2]=60;c[h+76>>2]=-1;c[h+32>>2]=7;m=a;while(1)if(!(ts(c[m>>2]|0)|0)){q=m;break}else m=m+4|0;c[h+84>>2]=q;to(h,0);m=fe(h,d,1,e,f)|0;if(b|0){f=(c[l>>2]|0)-(c[k>>2]|0)+(c[h+108>>2]|0)|0;c[b>>2]=(f|0)==0?a:q+(f<<2)|0}i=g;return m|0}function ni(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b+84|0;g=c[f>>2]|0;h=c[g>>2]|0?g:11284;g=b+48|0;i=b+44|0;a:do if(!(c[g>>2]|0))j=0;else{k=0;while(1){l=c[h+(k<<2)>>2]|0;if(!l){j=k;break a}a[(c[i>>2]|0)+k>>0]=(l|0)<128?l&255:64;l=k+1|0;if(l>>>0<(c[g>>2]|0)>>>0)k=l;else{j=l;break}}}while(0);g=c[i>>2]|0;i=b+4|0;c[i>>2]=g;k=g;c[b+8>>2]=k+j;c[f>>2]=h+(j<<2);if((e|0)!=0&(j|0)!=0){c[i>>2]=k+1;a[d>>0]=a[k>>0]|0;m=1}else m=0;return m|0}function ji(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b+84|0;g=c[f>>2]|0;h=c[g>>2]|0?g:11284;g=b+48|0;i=b+44|0;a:do if(!(c[g>>2]|0))j=0;else{k=0;while(1){l=c[h+(k<<2)>>2]|0;if(!l){j=k;break a}a[(c[i>>2]|0)+k>>0]=(l|0)<128?l&255:64;l=k+1|0;if(l>>>0<(c[g>>2]|0)>>>0)k=l;else{j=l;break}}}while(0);g=c[i>>2]|0;i=b+4|0;c[i>>2]=g;k=g;c[b+8>>2]=k+j;c[f>>2]=h+(j<<2);if((e|0)!=0&(j|0)!=0){c[i>>2]=k+1;a[d>>0]=a[k>>0]|0;m=1}else m=0;return m|0}function Sh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+256|0;if((i|0)>=(j|0))ca();h=g;do if((d|0)>(e|0)&(f&73728|0)==0){k=d-e|0;Gl(h|0,b|0,(k>>>0>256?256:k)|0)|0;l=c[a>>2]|0;m=(l&32|0)==0;if(k>>>0>255){n=d-e|0;o=k;p=l;l=m;while(1){if(l){Ug(h,256,a)|0;q=c[a>>2]|0}else q=p;o=o+-256|0;l=(q&32|0)==0;if(o>>>0<=255)break;else p=q}if(l)r=n&255;else break}else if(m)r=k;else break;Ug(h,r,a)|0}while(0);i=g;return}function ii(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=Wd(1160)|0;if(!e)f=0;else{g=e;h=g+120|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=e+112|0;c[e+84>>2]=g;c[g>>2]=b;c[e+116>>2]=d;d=e+120|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[e>>2]=4;c[e+60>>2]=-1;c[e+44>>2]=e+136;c[e+48>>2]=1024;a[e+75>>0]=-1;c[e+36>>2]=10;c[e+40>>2]=11;c[e+12>>2]=4;if(!(c[41513]|0))c[e+76>>2]=-1;Xb(166076);d=c[41518]|0;c[e+56>>2]=d;if(d|0)c[d+52>>2]=e;c[41518]=e;Cd(166076);f=e}return f|0}function qi(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=a[b>>0]|0;a:do if(!(e<<24>>24)){f=0;g=c}else{h=e;i=e&255;j=b;k=c;while(1){l=a[k>>0]|0;if(!(l<<24>>24)){f=h;g=k;break a}if(h<<24>>24!=l<<24>>24?(l=Ht(i)|0,(l|0)!=(Ht(d[k>>0]|0)|0)):0){m=j;n=k;break}j=j+1|0;l=k+1|0;o=a[j>>0]|0;if(!(o<<24>>24)){f=0;g=l;break a}else{h=o;i=o&255;k=l}}f=a[m>>0]|0;g=n}while(0);n=Ht(f&255)|0;return n-(Ht(d[g>>0]|0)|0)|0}function Zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0,l=0,m=0.0,n=0.0,o=0.0;d=i;i=i+80|0;if((i|0)>=(j|0))ca();e=d+64|0;f=d+48|0;g=d+32|0;k=d+16|0;l=d;m=+h[b>>3];n=+h[b+8>>3];h[g>>3]=1.0-(m-n)*(m+n);h[g+8>>3]=m*-2.0*n;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Df(f,e);o=m+ +h[f+8>>3];h[l>>3]=+h[f>>3]-n;h[l+8>>3]=o;c[e>>2]=c[l>>2];c[e+4>>2]=c[l+4>>2];c[e+8>>2]=c[l+8>>2];c[e+12>>2]=c[l+12>>2];Oi(k,e);o=+h[k+8>>3];h[a>>3]=+h[k>>3];h[a+8>>3]=o;i=d;return}function Di(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295){e=d;f=b;g=c;while(1){c=zp(f|0,g|0,10,0)|0;h=e+-1|0;a[h>>0]=c|48;c=Ws(f|0,g|0,10,0)|0;if(g>>>0>9|(g|0)==9&f>>>0>4294967295){e=h;f=c;g=D}else{i=h;j=c;break}}k=i;l=j}else{k=d;l=b}if(!l)m=k;else{b=k;k=l;while(1){l=b+-1|0;a[l>>0]=(k>>>0)%10|0|48;if(k>>>0<10){m=l;break}else{b=l;k=(k>>>0)/10|0}}}return m|0}function Li(b){b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=b;while(1){b=c+1|0;if(!(Ou(a[c>>0]|0)|0)){d=c;e=b;break}else c=b}c=a[d>>0]|0;switch(c<<24>>24|0){case 45:{f=1;g=5;break}case 43:{f=0;g=5;break}default:{h=d;i=c;j=0}}if((g|0)==5){h=e;i=a[e>>0]|0;j=f}f=(i<<24>>24)+-48|0;if(f>>>0<10){i=h;h=f;f=0;while(1){i=i+1|0;e=(f*10|0)-h|0;h=(a[i>>0]|0)+-48|0;if(h>>>0>=10){k=e;break}else f=e}}else k=0;return (j|0?k:0-k|0)|0}function Ki(b){b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=b;while(1){b=c+1|0;if(!(Ou(a[c>>0]|0)|0)){d=c;e=b;break}else c=b}c=a[d>>0]|0;switch(c<<24>>24|0){case 45:{f=1;g=5;break}case 43:{f=0;g=5;break}default:{h=d;i=c;j=0}}if((g|0)==5){h=e;i=a[e>>0]|0;j=f}f=(i<<24>>24)+-48|0;if(f>>>0<10){i=h;h=f;f=0;while(1){i=i+1|0;e=(f*10|0)-h|0;h=(a[i>>0]|0)+-48|0;if(h>>>0>=10){k=e;break}else f=e}}else k=0;return (j|0?k:0-k|0)|0}function ki(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+64|0;if((i|0)>=(j|0))ca();d=b+40|0;e=b+32|0;f=b+24|0;g=b+8|0;c[g>>2]=ec(202,b|0)|0;c[g+4>>2]=-1;if(!((fc(204,g|0)|0)==0?(c[f>>2]=ec(201,b+16|0)|0,c[f+4>>2]=-1,!(gc(203,f|0)|0)):0)){c[e>>2]=1;Wb(1,e|0)|0}e=c[a+4>>2]|0;f=c[a+8>>2]|0;c[d>>2]=c[a>>2];c[d+4>>2]=e;c[d+8>>2]=f;c[d+12>>2]=0;f=ab(307,d|0)|0;d=0;while(1){if((f|0)==(c[7776+(d<<2)>>2]|0)){h=d;break}e=d+1|0;if(e>>>0<13)d=e;else{h=e;break}}i=b;return h|0}function pi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b;while(1)if((a[e>>0]|0)==47)e=e+1|0;else{f=e;break}e=Wg(f,47)|0;do if((e|0)==(f|0)|(a[e>>0]|0)!=0)g=7;else{b=e-f|0;if((b|0)<3){if((a[f>>0]|0)==46?(a[e+-1>>0]|0)==46:0){g=7;break}}else if((b|0)>255){c[($r()|0)>>2]=36;h=0;break}i=d;j=146328;k=i+9|0;do{a[i>>0]=a[j>>0]|0;i=i+1|0;j=j+1|0}while((i|0)<(k|0));$j(d+9|0,f|0,b+1|0)|0;h=d}while(0);if((g|0)==7){c[($r()|0)>>2]=22;h=0}return h|0}function Xh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+1040|0;if((i|0)>=(j|0))ca();f=e;g=e+8|0;c[f>>2]=b;if((c[d+76>>2]|0)>-1)h=Ey(d)|0;else h=0;k=d+74|0;l=a[k>>0]|0;a[k>>0]=l+1|l;a:do if(b){while(1){l=ff(g,f,1024,0)|0;if((l+1|0)>>>0<=1){m=l;n=9;break a}if((Ug(g,l,d)|0)>>>0<l>>>0)break;if(!(c[f>>2]|0)){m=l;n=9;break a}}if(!h)o=-1;else{Dy(d);o=-1}}else{m=0;n=9}while(0);if((n|0)==9)if(!h)o=m;else{Dy(d);o=m}i=e;return o|0}function zi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=b;a:do if(!(d&3)){e=b;f=4}else{g=b;h=d;while(1){if(!(a[g>>0]|0)){i=h;break a}j=g+1|0;h=j;if(!(h&3)){e=j;f=4;break}else g=j}}while(0);if((f|0)==4){f=e;while(1){e=c[f>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))f=f+4|0;else{k=e;l=f;break}}if(!((k&255)<<24>>24))m=l;else{k=l;while(1){l=k+1|0;if(!(a[l>>0]|0)){m=l;break}else k=l}}i=m}return i-d|0}function Ph(a,b){a=+a;b=+b;var d=0,e=0,f=0.0,g=0,i=0,j=0,l=0,m=0,n=0.0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=+O(+a);h[k>>3]=f;g=c[k+4>>2]|0;do if(!(g>>>0>2146435072|(g|0)==2146435072&(c[k>>2]|0)>>>0>0)){f=+O(+b);h[k>>3]=f;i=c[k+4>>2]|0;if(!(i>>>0>2146435072|(i|0)==2146435072&(c[k>>2]|0)>>>0>0)){h[k>>3]=b;i=c[k>>2]|0;j=c[k+4>>2]|0;l=kr(d|0,e|0,63)|0;m=kr(i|0,j|0,63)|0;if((l|0)==(m|0)){n=a<b?b:a;break}else{n=(e|0)<0?b:a;break}}else n=a}else n=b;while(0);return +n}function Oh(a,b){a=+a;b=+b;var d=0,e=0,f=0.0,g=0,i=0,j=0,l=0,m=0,n=0.0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=+O(+a);h[k>>3]=f;g=c[k+4>>2]|0;do if(!(g>>>0>2146435072|(g|0)==2146435072&(c[k>>2]|0)>>>0>0)){f=+O(+b);h[k>>3]=f;i=c[k+4>>2]|0;if(!(i>>>0>2146435072|(i|0)==2146435072&(c[k>>2]|0)>>>0>0)){h[k>>3]=b;i=c[k>>2]|0;j=c[k+4>>2]|0;l=kr(d|0,e|0,63)|0;m=kr(i|0,j|0,63)|0;if((l|0)==(m|0)){n=a<b?a:b;break}else{n=(e|0)<0?a:b;break}}else n=a}else n=b;while(0);return +n}function di(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;if((c[a+76>>2]|0)>-1)g=Ey(a)|0;else g=0;h=a+4|0;k=c[h>>2]|0;l=a+8|0;if(k>>>0<(c[l>>2]|0)>>>0){c[h>>2]=k+1;m=d[k>>0]|0}else m=_m(a)|0;_i(m,a)|0;m=c[h>>2]|0;k=m;n=If(m,10,(c[l>>2]|0)-k|0)|0;if(!n){l=a+92|0;c[f>>2]=0;o=Ot(l,f,a)|0;if((o|0)>0){c[b>>2]=o;p=c[l>>2]|0}else p=0}else{l=n+1|0;c[b>>2]=l-k;c[h>>2]=l;p=m}if(g|0)Dy(a);i=e;return p|0}function Ei(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;do if(b){if(d>>>0<128){a[b>>0]=d;f=1;break}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;f=2;break}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;f=3;break}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;f=4;break}else{c[($r()|0)>>2]=84;f=-1;break}}else f=1;while(0);return f|0}function oi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0.0;e=i;i=i+176|0;if((i|0)>=(j|0))ca();f=e;g=f+8|0;h=f+4|0;k=e+112+4|0;l=f+44|0;m=f;n=m+112|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));c[l>>2]=k;c[f+48>>2]=60;c[f+76>>2]=-1;c[f+32>>2]=8;k=a;while(1)if(!(ts(c[k>>2]|0)|0)){o=k;break}else k=k+4|0;c[f+84>>2]=o;to(f,0);p=+Vd(f,d,1);if(b|0){d=(c[h>>2]|0)-(c[g>>2]|0)+(c[f+108>>2]|0)|0;c[b>>2]=(d|0)==0?a:o+(d<<2)|0}i=e;return +p}function gi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0;e=i;i=i+80|0;if((i|0)>=(j|0))ca();f=e+64|0;g=e+48|0;k=e+32|0;l=e+16|0;m=e;n=+h[b+8>>3];o=+h[d>>3];p=+h[d+8>>3];h[l>>3]=+h[b>>3];h[l+8>>3]=n;h[m>>3]=o;h[m+8>>3]=p;c[g>>2]=c[l>>2];c[g+4>>2]=c[l+4>>2];c[g+8>>2]=c[l+8>>2];c[g+12>>2]=c[l+12>>2];c[f>>2]=c[m>>2];c[f+4>>2]=c[m+4>>2];c[f+8>>2]=c[m+8>>2];c[f+12>>2]=c[m+12>>2];Vg(k,g,f);p=+h[k+8>>3];h[a>>3]=+h[k>>3];h[a+8>>3]=p;i=e;return}function Ih(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;do if(a){if((c[a+76>>2]|0)<=-1){b=Wj(a)|0;break}d=(Ey(a)|0)==0;e=Wj(a)|0;if(d)b=e;else{Dy(a);b=e}}else{if(!(c[1860]|0))f=0;else f=Ih(c[1860]|0)|0;Xb(166076);e=c[41518]|0;if(!e)g=f;else{d=e;e=f;while(1){if((c[d+76>>2]|0)>-1)h=Ey(d)|0;else h=0;if((c[d+20>>2]|0)>>>0>(c[d+28>>2]|0)>>>0)i=Wj(d)|0|e;else i=e;if(h|0)Dy(d);d=c[d+56>>2]|0;if(!d){g=i;break}else e=i}}Cd(166076);b=g}while(0);return b|0}function Ai(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d;g=d+24|0;c[f>>2]=0;c[f+4>>2]=a;c[f+8>>2]=b;c[f+12>>2]=0;h=Xc(340,f|0)|0;if((h|0)==-38){f=b;k=c[f>>2]|0;l=c[f+4>>2]|0;f=l>>>0<0|(l|0)==0&k>>>0<4294967295;l=f?k:-1;c[g>>2]=l;l=b+8|0;b=c[l>>2]|0;k=c[l+4>>2]|0;l=k>>>0<0|(k|0)==0&b>>>0<4294967295;k=l?b:-1;c[g+4>>2]=k;c[e>>2]=a;c[e+4>>2]=g;m=Ua(75,e|0)|0}else m=h;i=d;return m|0}function ri(a){a=a|0;var b=0,d=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;f=a+8|0;g=c[f>>2]|0;h=a+12|0;do if((g|0)>=(c[h>>2]|0)){c[d>>2]=c[a>>2];c[d+4>>2]=a+24;c[d+8>>2]=2048;k=xa(220,d|0)|0;if((k|0)>=1){c[h>>2]=k;c[f>>2]=0;l=0;m=6;break}if((k|0)<0&(k|0)!=-2){c[($r()|0)>>2]=0-k;n=0}else n=0}else{l=g;m=6}while(0);if((m|0)==6){m=a+24+l|0;c[f>>2]=(e[m+8>>1]|0)+l;c[a+4>>2]=c[m+4>>2];n=m}i=b;return n|0}function li(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0;h=i;i=i+32|0;if((i|0)>=(j|0))ca();k=h;do if((g&4095|0)==0&(((g|0)<0)<<31>>31&-4096|0)==0){if(b>>>0>2147483646){c[($r()|0)>>2]=12;l=-1;break}m=(e&16|0)!=0;if(m)Kd[3&7](-1);c[k>>2]=a;c[k+4>>2]=b;c[k+8>>2]=d;c[k+12>>2]=e;c[k+16>>2]=f;c[k+20>>2]=g>>12;n=Or(Cc(192,k|0)|0)|0;if(m){Od[2&3]();l=n}else l=n}else{c[($r()|0)>>2]=22;l=-1}while(0);i=h;return l|0}function Ri(a,b){a=a|0;b=b|0;var d=0,e=0;do if(!(c[41858]|0)){d=Wc(30)|0;if(!(d+-1&d)){c[41860]=d;c[41859]=d;c[41861]=-1;c[41862]=-1;c[41863]=0;c[41851]=0;c[41858]=(ac(0)|0)&-16^1431655768;break}else Sa()}while(0);switch(a|0){case -1:{c[41862]=b;e=1;return e|0}case -2:{if((c[41859]|0)>>>0>b>>>0){e=0;return e|0}if(b+-1&b|0){e=0;return e|0}c[41860]=b;e=1;return e|0}case -3:{c[41861]=b;e=1;return e|0}default:{e=0;return e|0}}return 0}function Yi(a){a=+a;var b=0,d=0.0,e=0.0,f=0.0,g=0.0;h[k>>3]=a;b=c[k+4>>2]&2147483647;do if(b>>>0<=2146435071){d=+O(+a);if(b>>>0>1073741823){e=+Wf(b,d,0);break}if(b>>>0>1059061759){f=d*d;g=d*.5;e=(g+1.0)*(1.0-g)+f*(f*(f*(f*(1.8295404953270067e-06-f*4.618326885321032e-09)+-1.8997929423885472e-04)+.015624999999999995)/(f*(f*(f*(f*1.1661400333379e-09+5.135465502073181e-07)+1.1692678466333745e-04)+.015619102946489001)+1.0));break}else{e=1.0-(b>>>0>939524095?d*(d*.25):d);break}}else e=1.0/(a*a);while(0);return +e}function yi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0;g=i;i=i+384|0;if((i|0)>=(j|0))ca();h=g+8|0;k=g+120|0;l=g;c[l>>2]=b;c[l+4>>2]=d+-1;b=h;m=b+112|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(m|0));a[h+75>>0]=-1;c[h+36>>2]=14;c[h+48>>2]=256;c[h+44>>2]=k;c[h+76>>2]=-1;c[h+84>>2]=l;do if(d)if((d|0)<0){c[($r()|0)>>2]=75;n=-1;break}else{l=xi(h,e,f)|0;hi(h,0,0)|0;n=l>>>0>=d>>>0?-1:l;break}else n=-1;while(0);i=g;return n|0}function xi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+128|0;if((i|0)>=(j|0))ca();g=f+112|0;h=f+72|0;k=f;l=h;m=l+36|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));c[g>>2]=c[e>>2];if((ce(0,d,g,k,h)|0)<0)n=-1;else{if((c[b+76>>2]|0)>-1)o=(Ey(b)|0)!=0;else o=0;e=b+74|0;l=a[e>>0]|0;a[e>>0]=l+1|l;l=c[b>>2]|0;c[b>>2]=l&-33;e=ce(b,d,g,k,h)|0;h=c[b>>2]|0;c[b>>2]=h|l&32;if(o)Dy(b);n=h&32|0?-1:e}i=f;return n|0}function Zi(a){a=+a;var b=0.0,d=0,e=0.0,f=0.0,h=0.0;b=+O(+a);d=(g[k>>2]=b,c[k>>2]|0);do if(d>>>0<=2139095039){b=+O(+a);if(d>>>0>1073741823){e=+Tf(d,b,0);break}if(d>>>0>973078527){f=b*b;h=b*.5;e=(h+1.0)*(1.0-h)+f*(f*(f*(f*(1.8295404515811242e-06-f*4.618327054117799e-09)+-1.8997929873876274e-04)+.015625)/(f*(f*(f*(f*1.1661400733942173e-09+5.135465244165971e-07)+1.1692678526742384e-04)+.015619102865457535)+1.0));break}else{e=1.0-(d>>>0>562036735?b*(b*.25):b);break}}else e=1.0/(a*a);while(0);return +e}function Ti(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0,g=0,i=0.0;if((b|0)>1023){d=a*8988465674311579538646525.0e283;e=b+-1023|0;if((e|0)>1023){f=b+-2046|0;g=(f|0)>1023?1023:f;i=d*8988465674311579538646525.0e283}else{g=e;i=d}}else if((b|0)<-1022){d=a*2.2250738585072014e-308;e=b+1022|0;if((e|0)<-1022){f=b+2044|0;g=(f|0)<-1022?-1022:f;i=d*2.2250738585072014e-308}else{g=e;i=d}}else{g=b;i=a}b=fr(g+1023|0,0,52)|0;g=D;c[k>>2]=b;c[k+4>>2]=g;return +(i*+h[k>>3])}function wi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;h=b+84|0;k=c[h>>2]|0;c[g>>2]=k;do if(k){l=b+44|0;m=ff(c[l>>2]|0,g,c[b+48>>2]|0,0)|0;if((m|0)==-1){c[b+8>>2]=0;c[b+4>>2]=0;n=0;break}o=c[l>>2]|0;l=b+4|0;c[l>>2]=o;p=o;c[b+8>>2]=p+m;c[h>>2]=c[g>>2];if((e|0)!=0&(m|0)!=0){c[l>>2]=p+1;a[d>>0]=a[p>>0]|0;n=1}else n=0}else n=0;while(0);i=f;return n|0}function ti(a){a=+a;var b=0.0,d=0,e=0.0,f=0.0,h=0,i=0.0,j=0.0,l=0.0,m=0.0;b=+O(+a);d=(g[k>>2]=b,c[k>>2]|0);do if(d>>>0>2139095039)e=a+a;else{if(d>>>0<8388608){if(!d){e=a;break}b=a*16777216.0;f=+O(+b);h=(((g[k>>2]=f,c[k>>2]|0)>>>0)/3|0)+642849266|0;i=b}else{h=((d>>>0)/3|0)+709958130|0;i=a}b=(c[k>>2]=(g[k>>2]=i,c[k>>2]|0)&-2147483648|h,+g[k>>2]);f=b*(b*b);j=a;l=j+j;m=b*(l+f)/(f+(j+f));f=m*(m*m);e=m*(l+f)/(f+(j+f))}while(0);return +e}function Fi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Wd(144)|0;if(!e)f=0;else{Gl(e|0,0,144)|0;g=e+112|0;c[e+84>>2]=g;c[g>>2]=b;c[e+116>>2]=d;d=e+120|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[e>>2]=4;c[e+60>>2]=-1;c[e+44>>2]=e+144;c[e+48>>2]=0;a[e+75>>0]=-1;c[e+36>>2]=12;c[e+40>>2]=13;c[e+12>>2]=5;if(!(c[41513]|0))c[e+76>>2]=-1;Xb(166076);d=c[41518]|0;c[e+56>>2]=d;if(d|0)c[d+52>>2]=e;c[41518]=e;Cd(166076);f=e}return f|0}function Xi(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0,i=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=kr(c[k>>2]|0,b|0,63)|0;e=b&2147483647;do if(e>>>0>2146435071)f=1.0/(a*a);else{if(e>>>0>1073741823){f=+Pf(e,+O(+a),0,d);break}if(e>>>0>939524095){g=a*a;i=g*(g*(g*(g*4.9672799960958445e-08+-1.599556310840356e-05)+.001407056669551897)+-.0625)/(g*(g*(g*(g*(g*1.2354227442613791e-11+5.0463625707621704e-09)+1.1771846404262368e-06)+1.8594678558863092e-04)+.019153759953836346)+1.0)}else i=a;f=(i+.5)*a}while(0);return +f}function Qi(b){b=b|0;var c=0,d=0,e=0,f=0,g=0;a:do if((b|0)!=0?(a[b>>0]|0)!=0:0){c=zi(b)|0;while(1){c=c+-1|0;if((a[b+c>>0]|0)!=47){d=c;break}if(!c){e=165782;break a}}while(1){if(!d){e=165788;break a}c=d+-1|0;if((a[b+c>>0]|0)==47){f=c;break}else d=c}while(1){if(!f){e=165782;break a}c=f+-1|0;if((a[b+c>>0]|0)==47)f=c;else{g=f;break}}a[b+g>>0]=0;e=b}else e=165788;while(0);return e|0}function Ii(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;f=a+12|0;g=c[f>>2]|0;h=c[a>>2]|0;if((g|0)>=(h|0)){k=c[a+4>>2]|0;if((h|0)<(k|0)?(l=(c[a+8>>2]|0)+h|0,h=(l|0)>(k|0)?k:l,l=a+16|0,k=ek(c[l>>2]|0,h<<2)|0,(k|0)!=0):0){c[a>>2]=h;c[l>>2]=k;c[e>>2]=c[b>>2];Ii(a,e)|0;m=0}else m=12}else{c[(c[a+16>>2]|0)+(g<<2)>>2]=c[b>>2];c[f>>2]=(c[f>>2]|0)+1;m=0}i=d;return m|0}function Vi(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(!e)f=0;else{g=a[b>>0]|0;a:do if(!(g<<24>>24)){h=0;i=c}else{j=e;k=g;l=b;m=c;while(1){j=j+-1|0;n=a[m>>0]|0;if(!(k<<24>>24==n<<24>>24&((j|0)!=0&n<<24>>24!=0))){h=k;i=m;break a}l=l+1|0;n=m+1|0;k=a[l>>0]|0;if(!(k<<24>>24)){h=0;i=n;break}else m=n}}while(0);f=(h&255)-(d[i>>0]|0)|0}return f|0}function Ji(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;h=c[g>>2]|0;i=c[f>>2]|0;if((c[e>>2]|0)>=(i|0))if((i|0)<=1024?(c[f>>2]=i<<1,f=ek(h,i<<3)|0,(f|0)!=0):0){c[g>>2]=f;j=f;k=5}else l=12;else{j=h;k=5}if((k|0)==5){k=qn(a,0,20)|0;if(!k)m=0;else{a=c[k+4>>2]|0;c[a>>2]=b;c[a+4>>2]=d;c[a+8>>2]=-1;m=k}k=c[e>>2]|0;c[j+(k<<2)>>2]=m;c[e>>2]=k+1;l=(m|0)==0?12:0}return l|0}function si(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=eg(a,0,0,0,8)|0;do if(e){f=qn(a,0,20)|0;if(!f){c[e+4>>2]=0;g=12;break}h=c[f+4>>2]|0;c[h>>2]=-3;c[h+4>>2]=d;c[h+8>>2]=-1;c[e+4>>2]=f;f=eg(a,0,0,0,32)|0;c[e>>2]=f;if(f){h=b+4|0;c[f+4>>2]=c[h>>2];c[f>>2]=c[b>>2];c[f+8>>2]=-1;c[f+12>>2]=-1;c[f+24>>2]=0;c[f+28>>2]=0;c[f+20>>2]=0;c[h>>2]=e;c[b>>2]=1;g=0}else g=12}else g=12;while(0);return g|0}function ej(a){a=a|0;var b=0,c=0,e=0,f=0;do if(a>>>0>=255){if((a&-65538)>>>0<65534){b=a>>8;c=a>>>3&31;e=1<<(a&7);if((d[156285+((d[156285+b>>0]|0)<<5|c)>>0]|0)&e|0){f=0;break}f=((d[158205+((d[158205+b>>0]|0)<<5|c)>>0]|0)&e|0)==0?1:2;break}if((a&65534|0)!=65534)if((a&-131072|0)==131072)f=2;else return ((a+-917760|0)<239|((a|0)==917505|(a+-917536|0)>>>0<95))&1^1|0;else f=-1}else f=(a+1&127)>>>0>32?1:((a|0)!=0)<<31>>31;while(0);return f|0}function Wi(a){a=+a;var b=0,d=0.0,e=0,f=0.0,h=0.0;b=(g[k>>2]=a,c[k>>2]|0)>>>31;d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0>2139095039)f=1.0/(a*a);else{if(e>>>0>1073741823){f=+dg(e,+O(+a),0,b);break}if(e>>>0>838860799){d=a*a;h=d*(d*(d*(d*4.9672799207201024e-08+-1.5995563444448635e-05)+1.4070566976442933e-03)+-.0625)/(d*(d*(d*(d*(d*1.2354227016397878e-11+5.046362439031782e-09)+1.177184685730026e-06)+1.8594678840599954e-04)+.019153760746121407)+1.0)}else h=a;f=(h+.5)*a}while(0);return +f}function Ci(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;h=e&255;a[g>>0]=h;k=b+16|0;l=c[k>>2]|0;if(!l)if(!(sm(b)|0)){m=c[k>>2]|0;n=4}else o=-1;else{m=l;n=4}do if((n|0)==4){l=b+20|0;k=c[l>>2]|0;if(k>>>0<m>>>0?(p=e&255,(p|0)!=(a[b+75>>0]|0)):0){c[l>>2]=k+1;a[k>>0]=h;o=p;break}if((Jd[c[b+36>>2]&31](b,g,1)|0)==1)o=d[g>>0]|0;else o=-1}while(0);i=f;return o|0}function vi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=eg(a,0,0,0,8)|0;do if(e){f=qn(a,0,20)|0;if(!f){c[e>>2]=0;g=12;break}h=c[f+4>>2]|0;c[h>>2]=-3;c[h+4>>2]=d;c[h+8>>2]=-1;c[e>>2]=f;f=eg(a,0,0,0,32)|0;c[e+4>>2]=f;if(f){h=b+4|0;c[f+4>>2]=c[h>>2];c[f>>2]=c[b>>2];c[f+8>>2]=-1;c[f+12>>2]=-1;c[f+24>>2]=0;c[f+28>>2]=0;c[f+20>>2]=0;c[h>>2]=e;c[b>>2]=1;g=0}else g=12}else g=12;while(0);return g|0}function Hi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0;e=i;i=i+256|0;if((i|0)>=(j|0))ca();f=e;a:do if((d|0)>=2?(g=b+(d<<2)|0,c[g>>2]=f,a|0):0){h=a;k=f;while(1){l=h>>>0>256?256:h;$j(k|0,c[b>>2]|0,l|0)|0;m=0;do{n=b+(m<<2)|0;m=m+1|0;$j(c[n>>2]|0,c[b+(m<<2)>>2]|0,l|0)|0;c[n>>2]=(c[n>>2]|0)+l}while((m|0)!=(d|0));if((h|0)==(l|0))break a;h=h-l|0;k=c[g>>2]|0}}while(0);i=e;return}function Pi(a,b){a=a|0;b=b|0;var c=0;do switch(b|0){case 1:{c=ks(a)|0;break}case 2:{c=Rq(a)|0;break}case 3:{c=Ex(a)|0;break}case 4:{c=xr(a)|0;break}case 5:{c=Jw(a)|0;break}case 6:{c=js(a)|0;break}case 7:{c=Zt(a)|0;break}case 8:{c=vo(a)|0;break}case 9:{c=er(a)|0;break}case 10:{c=ts(a)|0;break}case 11:{c=$v(a)|0;break}case 12:{c=cs(a)|0;break}default:c=0}while(0);return c|0}function bi(a,b){a=+a;b=+b;var d=0,e=0,f=0.0,h=0,i=0,j=0.0,l=0;d=(g[k>>2]=a,c[k>>2]|0);e=(g[k>>2]=b,c[k>>2]|0);f=+O(+a);h=(g[k>>2]=f,c[k>>2]|0);f=+O(+b);i=(g[k>>2]=f,c[k>>2]|0);a:do if(!(h>>>0>2139095040|i>>>0>2139095040))if((d|0)==(e|0))j=b;else{do if(h)if(h>>>0>i>>>0|(e^d|0)<0){l=d+-1|0;break}else{l=d+1|0;break}else{if(!i){j=b;break a}l=e&-2147483648|1}while(0);j=(c[k>>2]=l,+g[k>>2])}else j=a+b;while(0);return +j}function Bi(a,b){a=+a;b=b|0;var d=0,e=0,f=0,h=0.0,i=0,j=0,l=0.0;d=(g[k>>2]=a,c[k>>2]|0);e=d>>>23&255;f=e+-127|0;do if((f|0)>22){g[b>>2]=a;if((d&8388607|0)==0|(f|0)!=128)h=(c[k>>2]=d&-2147483648,+g[k>>2]);else h=a}else{if(e>>>0<127){c[b>>2]=d&-2147483648;h=a;break}i=8388607>>>f;if(!(i&d)){g[b>>2]=a;h=(c[k>>2]=d&-2147483648,+g[k>>2]);break}else{j=d&~i;l=(c[k>>2]=j,+g[k>>2]);c[b>>2]=j;h=a-l;break}}while(0);return +h}function nj(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0;c=+g[b>>2];d=+g[b+4>>2];if((!(c==0.0&d>1.0)?(e=c*c,f=1.0-e-d*d,!(f==0.0)):0)?(h=+X(+(c*2.0),+f)*.5,f=h/3.1415927410125732,c=+(~~(f+(!(f>=0.0)?-.5:.5))|0),f=d+-1.0,i=e+f*f,!(i==0.0)):0){f=d+1.0;d=+Z(+((e+f*f)/i))*.25;g[a>>2]=h-c*3.140625-c*9.675025939941406e-04-c*1.5099579909783765e-07+d*0.0;g[a+4>>2]=d+0.0}else{g[a>>2]=9999999680285692465065626.0e13;g[a+4>>2]=9999999680285692465065626.0e13}return}function Gi(a,b){a=+a;b=+b;var d=0.0,e=0.0,f=0.0,h=0;d=+O(+a);do if((g[k>>2]=d,c[k>>2]|0)>>>0<=2139095040?(e=+O(+b),(g[k>>2]=e,c[k>>2]|0)>>>0<=2139095040):0){if(((g[k>>2]=b,c[k>>2]|0)&2139095040)>>>0>=2139095040)if(b>0.0){f=a*b;break}else{f=a/-b;break}if(+Hn(b)!=b){e=b-b;f=e/e;break}if(b>65.0e3){f=+tj(a,65e3);break}if(b<-65.0e3){f=+tj(a,-65e3);break}else{f=+tj(a,~~b);break}}else h=3;while(0);if((h|0)==3)f=a*b;return +f}function tj(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0,h=0,i=0.0;if((b|0)>127){d=a*1701411834604692317316873.0e14;e=b+-127|0;if((e|0)>127){f=b+-254|0;h=(f|0)>127?127:f;i=d*1701411834604692317316873.0e14}else{h=e;i=d}}else if((b|0)<-126){d=a*1.1754943508222875e-38;e=b+126|0;if((e|0)<-126){f=b+252|0;h=(f|0)<-126?-126:f;i=d*1.1754943508222875e-38}else{h=e;i=d}}else{h=b;i=a}return +(i*(c[k>>2]=(h<<23)+1065353216,+g[k>>2]))}function cj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[a+84>>2]|0;f=c[e+4>>2]|0;g=c[e>>2]|0;h=f>>>0<g>>>0?0:f-g|0;if(h>>>0<d>>>0){c[a>>2]=c[a>>2]|16;i=h}else i=d;d=e+12|0;$j(b|0,(c[d>>2]|0)+g|0,i|0)|0;g=(c[e>>2]|0)+i|0;c[e>>2]=g;b=h-i|0;h=c[a+48>>2]|0;f=b>>>0>h>>>0?h:b;b=c[a+44>>2]|0;c[a+4>>2]=b;h=b;c[a+8>>2]=h+f;$j(h|0,(c[d>>2]|0)+g|0,f|0)|0;c[e>>2]=(c[e>>2]|0)+f;return i|0}function Mi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0,l=0,m=0.0,n=0.0,o=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+24|0;h=d+16|0;k=d+8|0;l=d;m=+g[b>>2];n=+g[b+4>>2];g[h>>2]=1.0-(m-n)*(m+n);g[h+4>>2]=m*-2.0*n;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];Hg(f,e);o=m+ +g[f+4>>2];g[l>>2]=+g[f>>2]-n;g[l+4>>2]=o;c[e>>2]=c[l>>2];c[e+4>>2]=c[l+4>>2];Fj(k,e);e=c[k+4>>2]|0;c[a>>2]=c[k>>2];c[a+4>>2]=e;i=d;return}function Ni(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=zi(b)|0;a:do if(d>>>0>=6?(e=b+d+-6|0,(Vk(e,146321,6)|0)==0):0){f=100;do{Am(e)|0;if(!(ep(b,448)|0)){g=b;break a}f=f+-1|0;if(!f)break}while((c[($r()|0)>>2]|0)==17);a[e>>0]=a[146321]|0;a[e+1>>0]=a[146322]|0;a[e+2>>0]=a[146323]|0;a[e+3>>0]=a[146324]|0;a[e+4>>0]=a[146325]|0;a[e+5>>0]=a[146326]|0;g=0}else h=3;while(0);if((h|0)==3){c[($r()|0)>>2]=22;g=0}return g|0}function bj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if((c[d+76>>2]|0)>=0?(Ey(d)|0)!=0:0){if((a[d+75>>0]|0)!=(b|0)?(e=d+20|0,f=c[e>>2]|0,f>>>0<(c[d+16>>2]|0)>>>0):0){c[e>>2]=f+1;a[f>>0]=b;g=b&255}else g=Ci(d,b)|0;Dy(d);h=g}else i=3;do if((i|0)==3){if((a[d+75>>0]|0)!=(b|0)?(g=d+20|0,f=c[g>>2]|0,f>>>0<(c[d+16>>2]|0)>>>0):0){c[g>>2]=f+1;a[f>>0]=b;h=b&255;break}h=Ci(d,b)|0}while(0);return h|0}function aj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if((c[d+76>>2]|0)>=0?(Ey(d)|0)!=0:0){if((a[d+75>>0]|0)!=(b|0)?(e=d+20|0,f=c[e>>2]|0,f>>>0<(c[d+16>>2]|0)>>>0):0){c[e>>2]=f+1;a[f>>0]=b;g=b&255}else g=Ci(d,b)|0;Dy(d);h=g}else i=3;do if((i|0)==3){if((a[d+75>>0]|0)!=(b|0)?(g=d+20|0,f=c[g>>2]|0,f>>>0<(c[d+16>>2]|0)>>>0):0){c[g>>2]=f+1;a[f>>0]=b;h=b&255;break}h=Ci(d,b)|0}while(0);return h|0}function pj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;a:do if((a|0)>0){f=0;while(1){g=c[d+(f<<2)>>2]|0;h=c[e+(f<<2)>>2]|0;if(!(c[b+(f<<2)>>2]|0)){if((g|0)<(h|0)){i=1;break a}if((g|0)>(h|0)){i=0;break a}}else{if((g|0)>(h|0)){i=1;break a}if((g|0)<(h|0)){i=0;break a}}f=f+1|0;if((f|0)>=(a|0)){i=0;break}}}else i=0;while(0);return i|0}function ui(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,g=0,i=0,j=0.0,l=0.0,m=0.0;e=+h[b+8>>3];f=+Y(+(+h[b>>3]+-1246.9717778273416));h[k>>3]=f;b=c[k>>2]|0;g=c[k+4>>2]|0;i=kr(b|0,g|0,52)|0;c[k>>2]=b;c[k+4>>2]=g&1048575|2145386496;f=+h[k>>3];g=d+-247+i|0;i=(g|0)/2|0;c[k>>2]=0;c[k+4>>2]=(i<<20)+1072693248;j=+h[k>>3];c[k>>2]=0;c[k+4>>2]=(g-i<<20)+1072693248;l=+h[k>>3];m=+S(+e)*f*j*l;h[a>>3]=+R(+e)*f*j*l;h[a+8>>3]=m;return}function Oi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0,l=0.0,m=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b>>3];l=+h[b+8>>3];h[f>>3]=k;h[f+8>>3]=l;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];m=+Su(e);h[g>>3]=k;h[g+8>>3]=l;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];l=+gu(e);h[a>>3]=+Z(+m);h[a+8>>3]=l;i=d;return}function Aj(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,g=0.0,i=0.0;c=+h[b>>3];d=+h[b+8>>3];if((!(c==0.0&d>1.0)?(e=c*c,f=1.0-e-d*d,!(f==0.0)):0)?(g=+X(+(c*2.0),+f)*.5,f=g/3.141592653589793,c=+(~~(f+(!(f>=0.0)?-.5:.5))|0),f=d+-1.0,i=e+f*f,!(i==0.0)):0){f=d+1.0;d=+Z(+((e+f*f)/i))*.25;h[a>>3]=g-c*3.141592651605606-c*1.9841871479187034e-09-c*1.1442377452219664e-17+d*0.0;h[a+8>>3]=d+0.0}else{h[a>>3]=1.e+308;h[a+8>>3]=1.e+308}return}function yj(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=b;e=146355;f=d+15|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));if(!c){a[b+14>>0]=48;a[b+15>>0]=0}else{e=14;d=c;while(1){f=e+1|0;if(d>>>0<10){g=f;break}else{e=f;d=(d>>>0)/10|0}}a[b+g>>0]=0;d=c;c=g;while(1){c=c+-1|0;a[b+c>>0]=(d>>>0)%10|0|48;if(d>>>0<10)break;else d=(d>>>0)/10|0}}return}function lj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(d>>>0<8)e=0;else{Xb(166908);f=(c[5680]|0)+-4|0;c[f>>2]=c[5713]<<8|c[5679]<<16|c[41729];do if(d>>>0>=32){if(d>>>0<64){c[5679]=7;break}if(d>>>0<128){c[5679]=15;break}if(d>>>0<256){c[5679]=31;break}else{c[5679]=63;break}}else c[5679]=0;while(0);c[5680]=b+4;Hj(a);c[(c[5680]|0)+-4>>2]=c[5713]<<8|c[5679]<<16|c[41729];Cd(166908);e=f}return e|0}function ij(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0;a=i;i=i+48|0;if((i|0)>=(j|0))ca();b=a+16|0;d=a;e=a+20|0;f=0;while(1){g=jh(e)|0;if(!g){h=0;break}c[d>>2]=g;c[d+4>>2]=32962;c[d+8>>2]=384;k=Or(_b(5,d|0)|0)|0;f=f+1|0;if((k|0)>-1){l=k;m=g;n=5;break}if((f|0)>=100){h=0;break}}if((n|0)==5){n=Kf(l,165671)|0;c[b>>2]=m;Tb(10,b|0)|0;h=n}i=a;return h|0}function gj(b,d,e,f){b=+b;d=d|0;e=e|0;f=f|0;var g=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+1520|0;if((i|0)>=(j|0))ca();k=g;l=g+16|0;m=d>>>0>1400?1400:d;c[k>>2]=m;h[k+8>>3]=b;Pp(l,159637,k)|0;k=(a[l>>0]|0)==45&1;n=l+k|0;if((a[n>>0]|0)==48)o=Bg(n+2|0,165545)|0;else o=0-(gh(n,165788)|0)|0;if((m|0)>(o|0))p=mi(b,m-o|0,e,f)|0;else{c[f>>2]=k;c[e>>2]=1;p=159656+(m>>>0>14?-14:0-d|0)|0}i=g;return p|0}function Si(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0;d=i;i=i+80|0;if((i|0)>=(j|0))ca();e=d;f=zi(b)|0;do if(f>>>0>=6?(g=b+f+-6|0,(Vk(g,146321,6)|0)==0):0){h=100;while(1){Am(g)|0;if(bp(b,e)|0)break;h=h+-1|0;if(!h){k=8;break}}if((k|0)==8){a[b>>0]=0;c[($r()|0)>>2]=17;break}if((c[($r()|0)>>2]|0)!=2)a[b>>0]=0}else k=3;while(0);if((k|0)==3){c[($r()|0)>>2]=22;a[b>>0]=0}i=d;return b|0}function hj(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0,i=0.0,j=0.0,l=0,m=0.0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=kr(d|0,e|0,52)|0;g=f&2047;switch(g|0){case 0:{if(a!=0.0){i=+hj(a*18446744073709551616.0,b);j=i;l=(c[b>>2]|0)+-64|0}else{j=a;l=0}c[b>>2]=l;m=j;break}case 2047:{m=a;break}default:{c[b>>2]=g+-1022;c[k>>2]=d;c[k+4>>2]=e&-2146435073|1071644672;m=+h[k>>3]}}return +m}function kj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=jr(h^a|0,j^b|0,h|0,j|0)|0;b=D;Oe(m,b,jr(k^d|0,l^e|0,k|0,l|0)|0,D,g)|0;l=jr(c[g>>2]^h|0,c[g+4>>2]^j|0,h|0,j|0)|0;j=D;i=f;return (D=j,l)|0}function fj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;h=b;k=h+112|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(k|0));c[g>>2]=a;c[g+4>>2]=557056;c[g+8>>2]=0;a=Or(_b(5,g|0)|0)|0;c[b+60>>2]=a;if((a|0)<0)l=0;else{c[b>>2]=9;c[b+44>>2]=d+8;c[b+48>>2]=e+-8;c[b+32>>2]=1;c[b+40>>2]=2;c[b+12>>2]=1;c[b+76>>2]=-1;l=b}i=f;return l|0}function vj(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0;c=0;while(1){if((d[150017+c>>0]|0)==(b|0)){e=c;f=2;break}c=c+1|0;if((c|0)==87){g=87;h=150105;f=5;break}}if((f|0)==2)if(!e)i=150105;else{g=e;h=150105;f=5}if((f|0)==5)while(1){f=0;e=h;while(1){c=e+1|0;if(!(a[e>>0]|0)){j=c;break}else e=c}g=g+-1|0;if(!g){i=j;break}else{h=j;f=5}}return i|0}function $i(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+32|0;if((i|0)>=(j|0))ca();d=b+16|0;e=b;f=a+20|0;do if(!(c[f>>2]|0)){if((c[a+16>>2]|0?(g=c[a>>2]|0,(g|0)>-1):0)?(g|0)!=(yr()|0):0){c[d>>2]=c[24];c[d+4>>2]=c[25];c[d+8>>2]=c[26];c[d+12>>2]=c[27];Ag(6,e)|0;g=Ai(6,d)|0;c[f>>2]=0-g;if(!((g|0)!=0?(c[41516]|0)!=0:0)){c[f>>2]=1;Ai(6,e)|0}break}c[f>>2]=1}while(0);i=b;return}function dj(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,k=0;d=i;i=i+400|0;if((i|0)>=(j|0))ca();e=d;if(!(jq(e)|0)){f=c>>>0>65?65:c;a:do if(!f)g=0;else{c=0;while(1){h=a[e+65+c>>0]|0;a[b+c>>0]=h;if(!(h<<24>>24)){g=c;break a}h=c+1|0;if(h>>>0<f>>>0)c=h;else{g=h;break}}}while(0);if((g|0)==(f|0)){a[b+(f+-1)>>0]=0;k=0}else k=0}else k=-1;i=d;return k|0}function Ui(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=c[b>>2]|0;do if(!d)e=Fr(a)|0;else{if(!(c[b+4>>2]|0)){f=En(a,d)|0;if(!f){e=Fr(a)|0;break}else{e=f-a>>2;break}}f=c[a>>2]|0;a:do if(!f)g=a;else{h=a;i=f;while(1){if(En(b,i)|0){g=h;break a}j=h+4|0;i=c[j>>2]|0;if(!i){g=j;break}else h=j}}while(0);e=g-a>>2}while(0);return e|0}function _i(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;do if((b|0)!=-1){if((c[d+76>>2]|0)>-1)e=Ey(d)|0;else e=0;if(!((c[d+8>>2]|0)==0?(bk(d)|0)!=0:0))f=6;if((f|0)==6?(g=d+4|0,h=c[g>>2]|0,h>>>0>((c[d+44>>2]|0)+-8|0)>>>0):0){i=h+-1|0;c[g>>2]=i;a[i>>0]=b;c[d>>2]=c[d>>2]&-17;if(!e){j=b;break}Dy(d);j=b;break}if(e){Dy(d);j=-1}else j=-1}else j=-1;while(0);return j|0}function wj(b){b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;if((b|0)!=0?(a[b>>0]|0)!=0:0){c=(zi(b)|0)+-1|0;a:do if(!c)d=0;else{e=c;while(1){f=b+e|0;if((a[f>>0]|0)!=47){d=e;break a}a[f>>0]=0;e=e+-1|0;if(!e){d=0;break}}}while(0);while(1){if(!d){g=0;break}c=d+-1|0;if((a[b+c>>0]|0)==47){g=d;break}else d=c}h=b+g|0}else h=165788;return h|0}function jj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+48|0;if((i|0)>=(j|0))ca();k=h+8|0;l=h+32|0;m=h;c[l>>2]=g;c[l+4>>2]=8;g=(f|0)!=0;if(g){n=f;f=c[n+4>>2]|0;o=m;c[o>>2]=c[n>>2];c[o+4>>2]=f}c[k>>2]=a;c[k+4>>2]=b;c[k+8>>2]=d;c[k+12>>2]=e;c[k+16>>2]=g?m:0;c[k+20>>2]=l;l=Or(mb(308,k|0)|0)|0;i=h;return l|0}function rj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;if(!b)e=a;else{if((c[d+76>>2]|0)>-1)f=Ey(d)|0;else f=0;g=b;b=a;while(1){g=g+-1|0;if(!g){h=b;break}i=rg(d)|0;if((i|0)==-1){h=b;break}j=b+4|0;c[b>>2]=i;if((i|0)==10){h=j;break}else b=j}c[h>>2]=0;b=(c[d>>2]&32|0)==0?h:a;if(f|0)Dy(d);e=(b|0)==(a|0)?0:a}return e|0}function mj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=c[a>>2]|0;a:do if(!e)f=0;else{g=(d|0)==0;h=a;i=e;while(1){if(g){if(Pi(b,i)|0){f=1;break a}}else{j=rx(b)|0;if(Pi(j,c[h>>2]|0)|0){f=1;break a}j=sx(b)|0;if(Pi(j,c[h>>2]|0)|0){f=1;break a}}h=h+4|0;i=c[h>>2]|0;if(!i){f=0;break}}}while(0);return f|0}function uj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==1)e=b-(c[a+8>>2]|0)+(c[a+4>>2]|0)|0;else e=b;b=a+20|0;f=a+28|0;if((c[b>>2]|0)>>>0>(c[f>>2]|0)>>>0?(Jd[c[a+36>>2]&31](a,0,0)|0,(c[b>>2]|0)==0):0)g=-1;else{c[a+16>>2]=0;c[f>>2]=0;c[b>>2]=0;if((Jd[c[a+40>>2]&31](a,e,d)|0)<0)g=-1;else{c[a+8>>2]=0;c[a+4>>2]=0;c[a>>2]=c[a>>2]&-17;g=0}}return g|0}function Cj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;g=c[a+84>>2]|0;if(d>>>0<=2?(c[f>>2]=0,a=g+8|0,c[f+4>>2]=c[a>>2],c[f+8>>2]=c[g+16>>2],h=c[f+(d<<2)>>2]|0,!((b|0)<(0-h|0)|(536870911-h|0)<(b|0))):0){d=g+24|0;c[d>>2]=0;c[d+4>>2]=0;d=h+b|0;c[a>>2]=d;k=d}else{c[($r()|0)>>2]=22;k=-1}i=e;return k|0}function Dj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if(!a){e=c[d>>2]|0;if(!e)f=0;else{g=e;h=3}}else{g=a;h=3}do if((h|0)==3){a=g+((tm(g,b)|0)<<2)|0;if(!(c[a>>2]|0)){c[d>>2]=0;f=0;break}e=a+((Ui(a,b)|0)<<2)|0;c[d>>2]=e;if(!(c[e>>2]|0)){c[d>>2]=0;f=a;break}else{c[d>>2]=e+4;c[e>>2]=0;f=a;break}}while(0);return f|0}function Kj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;a:do if(!b){d=0;e=0}else{f=a;g=b;h=0;i=0;while(1){g=g+-1|0;j=c[f>>2]|0;if(!j){d=h;e=i;break a}k=ej(j)|0;if((k|0)<=-1){d=k;e=i;break a}j=k+i|0;if(!g){d=k;e=j;break}else{f=f+4|0;h=k;i=j}}}while(0);return ((d|0)<0?d:e)|0}function _j(){}function $j(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return Na(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Jj(a){a=+a;var b=0,d=0,e=0,f=0,h=0,i=0;b=(g[k>>2]=a,c[k>>2]|0);d=b>>>23&255;switch(d|0){case 0:{e=b<<9;if(e)if((e|0)>-1){f=-127;h=e;while(1){e=f+-1|0;h=h<<1;if((h|0)<=-1){i=e;break}else f=e}}else i=-127;else i=-2147483648;break}case 255:{i=b&8388607|0?-2147483648:2147483647;break}default:i=d+-127|0}return i|0}function Vj(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0;Xb(166908);a=c[5679]|0;if(!a){b=c[5680]|0;d=($(c[b>>2]|0,1103515245)|0)+12345&2147483647;c[b>>2]=d;e=d}else{d=c[41729]|0;b=c[5680]|0;f=c[5713]|0;g=b+(f<<2)|0;h=(c[g>>2]|0)+(c[b+(d<<2)>>2]|0)|0;c[g>>2]=h;g=f+1|0;c[5713]=(g|0)==(a|0)?0:g;g=d+1|0;c[41729]=(g|0)==(a|0)?0:g;e=h>>>1}Cd(166908);return e|0}function Qj(a){a=a|0;var b=0,e=0,f=0,g=0,h=0;if((c[a+76>>2]|0)>=0?(Ey(a)|0)!=0:0){b=a+4|0;e=c[b>>2]|0;if(e>>>0<(c[a+8>>2]|0)>>>0){c[b>>2]=e+1;f=d[e>>0]|0}else f=_m(a)|0;Dy(a);g=f}else h=3;do if((h|0)==3){f=a+4|0;e=c[f>>2]|0;if(e>>>0<(c[a+8>>2]|0)>>>0){c[f>>2]=e+1;g=d[e>>0]|0;break}else{g=_m(a)|0;break}}while(0);return g|0}function Pj(a){a=a|0;var b=0,e=0,f=0,g=0,h=0;if((c[a+76>>2]|0)>=0?(Ey(a)|0)!=0:0){b=a+4|0;e=c[b>>2]|0;if(e>>>0<(c[a+8>>2]|0)>>>0){c[b>>2]=e+1;f=d[e>>0]|0}else f=_m(a)|0;Dy(a);g=f}else h=3;do if((h|0)==3){f=a+4|0;e=c[f>>2]|0;if(e>>>0<(c[a+8>>2]|0)>>>0){c[f>>2]=e+1;g=d[e>>0]|0;break}else{g=_m(a)|0;break}}while(0);return g|0}function Bj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();g=d;a:do if(!b)h=159261;else{k=b;l=159261;while(1){if(!(a[l>>0]|0)){h=l;break a}k=k+-1|0;m=l+((zi(l)|0)+1)|0;if(!k){h=m;break}else l=m}}while(0);c[g>>2]=(a[h>>0]|0)==0?h+1|0:h;h=(rp(e,f,159547,g)|0)+1|0;i=d;return h|0}function qj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;g=Wd(240)|0;do if(g){c[f>>2]=c[d>>2];h=th(g,240,b,f)|0;if(h>>>0<240){k=ek(g,h+1|0)|0;c[a>>2]=k|0?k:g;l=h;break}de(g);if((h|0)>=0?(k=h+1|0,h=Wd(k)|0,c[a>>2]=h,(h|0)!=0):0)l=th(h,k,b,d)|0;else l=-1}else l=-1;while(0);i=e;return l|0}function Lj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(!b){f=c[e>>2]|0;if(!f)g=0;else{h=f;i=3}}else{h=b;i=3}do if((i|0)==3){b=h+(Bg(h,d)|0)|0;if(!(a[b>>0]|0)){c[e>>2]=0;g=0;break}f=b+(gh(b,d)|0)|0;c[e>>2]=f;if(!(a[f>>0]|0)){c[e>>2]=0;g=b;break}else{c[e>>2]=f+1;a[f>>0]=0;g=b;break}}while(0);return g|0}function sj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e+16|0;g=e;if(If(165667,a[d>>0]|0,4)|0){h=Rm(d)|0|32768;c[g>>2]=b;c[g+4>>2]=h;c[g+8>>2]=438;h=Or(_b(5,g|0)|0)|0;if((h|0)>=0){g=Kf(h,d)|0;if(!g){c[f>>2]=h;Zb(6,f|0)|0;k=0}else k=g}else k=0}else{c[($r()|0)>>2]=22;k=0}i=e;return k|0}function Hj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=c[5679]|0;if(!b)c[c[5680]>>2]=a;else{c[5713]=(b|0)==31|(b|0)==7?3:1;c[41729]=0;if((b|0)>0){d=c[5680]|0;e=0;f=a;a=0;do{g=Zp(f|0,e|0,1284865837,1481765933)|0;f=Gr(g|0,D|0,1,0)|0;e=D;c[d+(a<<2)>>2]=e;a=a+1|0}while((a|0)<(b|0));h=d}else h=c[5680]|0;c[h>>2]=c[h>>2]|1}return}function Mj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0.0;e=i;i=i+112|0;if((i|0)>=(j|0))ca();f=e;g=f;h=g+112|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=f+4|0;c[g>>2]=a;h=f+8|0;c[h>>2]=-1;c[f+44>>2]=a;c[f+76>>2]=-1;to(f,0);k=+Vd(f,d,1);d=(c[g>>2]|0)-(c[h>>2]|0)+(c[f+108>>2]|0)|0;if(b|0)c[b>>2]=d|0?a+d|0:a;i=e;return +k}function Ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d;if(!(fu(a,0,2)|0)){f=c[b+4>>2]|0;g=c[b+8>>2]|0;h=c[b+12>>2]|0;k=c[b+16>>2]|0;l=c[b+20>>2]|0;c[e>>2]=c[b>>2];c[e+4>>2]=f;c[e+8>>2]=g;c[e+12>>2]=h;c[e+16>>2]=k;c[e+20>>2]=l;m=(Rp(a,165899,e)|0)>>>31}else m=1;i=d;return m|0}function ek(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=Wd(b)|0;return d|0}if(b>>>0>4294967231){c[($r()|0)>>2]=12;d=0;return d|0}e=Ae(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(e|0){d=e+8|0;return d|0}e=Wd(b)|0;if(!e){d=0;return d|0}f=c[a+-4>>2]|0;g=(f&-8)-((f&3|0)==0?8:4)|0;$j(e|0,a|0,(g>>>0<b>>>0?g:b)|0)|0;de(a);d=e;return d|0}function mk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=jr(e^a|0,f^b|0,e|0,f|0)|0;b=D;a=g^e;e=h^f;return jr((Oe(i,b,jr(g^c|0,h^d|0,g|0,h|0)|0,D,0)|0)^a|0,D^e|0,a|0,e|0)|0}function dk(a,b){a=+a;b=b|0;var d=0,e=0,f=0.0,h=0.0,i=0,j=0.0;d=(g[k>>2]=a,c[k>>2]|0);e=d>>>23&255;switch(e|0){case 0:{if(a!=0.0){f=+dk(a*18446744073709551616.0,b);h=f;i=(c[b>>2]|0)+-64|0}else{h=a;i=0}c[b>>2]=i;j=h;break}case 255:{j=a;break}default:{c[b>>2]=e+-126;j=(c[k>>2]=d&-2139095041|1056964608,+g[k>>2])}}return +j}function Ij(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=b;c[g+4>>2]=d;c[g+8>>2]=e;c[g+12>>2]=a;e=g+16|0;c[e>>2]=0;d=g+20|0;c[d>>2]=0;switch(a|0){case 208:case 203:case 213:{c[e>>2]=1;break}default:{}}Bu(4,g);g=c[d>>2]|0;if(!g)h=0;else{c[($r()|0)>>2]=g;h=-1}i=f;return h|0}function oj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,i=0.0,j=0.0,l=0.0;e=+g[b+4>>2];f=+Y(+(+g[b>>2]+-162.88958740234375));b=(g[k>>2]=f,c[k>>2]|0);f=(c[k>>2]=b&8388607|2130706432,+g[k>>2]);h=d+-19+(b>>>23)|0;b=(h|0)/2|0;i=(c[k>>2]=(b<<23)+1065353216,+g[k>>2]);j=(c[k>>2]=(h-b<<23)+1065353216,+g[k>>2]);l=+S(+e)*f*i*j;g[a>>2]=+R(+e)*f*i*j;g[a+4>>2]=l;return}function zj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0;e=i;i=i+64|0;if((i|0)>=(j|0))ca();f=e+48|0;g=e+16|0;h=e;c[h>>2]=a;c[h+4>>2]=b;c[h+8>>2]=d;k=dc(207,h|0)|0;if((k|0)==-9?(c[g>>2]=a,c[g+4>>2]=1,(wa(221,g|0)|0)>=0):0){yj(g,a);c[f>>2]=g;c[f+4>>2]=b;c[f+8>>2]=d;l=Or(qd(212,f|0)|0)|0}else l=Or(k)|0;i=e;return l|0}function Nj(a){a=+a;var b=0,d=0.0,e=0,f=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=+O(+a);h[k>>3]=d;e=c[k+4>>2]|0;do if(e>>>0>1071748074)if(e>>>0>1077149696){f=1.0-0.0/d;break}else{f=1.0-2.0/(+cf(d*2.0)+2.0);break}else{if(e>>>0>1070618798){a=+cf(d*2.0);f=a/(a+2.0);break}if(e>>>0>1048575){a=+cf(d*-2.0);f=-a/(a+2.0)}else f=d}while(0);return +((b|0)<0?-f:f)}function Yj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if(!b){e=c[41531]|0;if(!e)f=0;else{g=e;h=3}}else{g=b;h=3}do if((h|0)==3){b=g+(Bg(g,d)|0)|0;if(!(a[b>>0]|0)){c[41531]=0;f=0;break}e=b+(gh(b,d)|0)|0;c[41531]=e;if(!(a[e>>0]|0)){c[41531]=0;f=b;break}else{c[41531]=e+1;a[e>>0]=0;f=b;break}}while(0);return f|0}function Oj(a){a=+a;var b=0,d=0.0,e=0,f=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0>1057791828)if(e>>>0>1092616192){f=0.0/d+1.0;break}else{f=1.0-2.0/(+rf(d*2.0)+2.0);break}else{if(e>>>0>1048757624){a=+rf(d*2.0);f=a/(a+2.0);break}if(e>>>0>8388607){a=+rf(d*-2.0);f=-a/(a+2.0)}else f=d}while(0);return +((b|0)<0?-f:f)}function Fj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0,l=0,m=0.0,n=0.0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;k=c[b>>2]|0;l=c[b+4>>2]|0;c[f>>2]=k;c[f+4>>2]=l;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];m=+Lu(e);c[h>>2]=k;c[h+4>>2]=l;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];n=+au(e);g[a>>2]=+Z(+m);g[a+4>>2]=n;i=d;return}function Wj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a+20|0;d=a+28|0;if((c[b>>2]|0)>>>0>(c[d>>2]|0)>>>0?(Jd[c[a+36>>2]&31](a,0,0)|0,(c[b>>2]|0)==0):0)e=-1;else{f=a+4|0;g=c[f>>2]|0;h=a+8|0;i=c[h>>2]|0;if(g>>>0<i>>>0)Jd[c[a+40>>2]&31](a,g-i|0,1)|0;c[a+16>>2]=0;c[d>>2]=0;c[b>>2]=0;c[h>>2]=0;c[f>>2]=0;e=0}return e|0}function Rj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:do if(!c)f=0;else{g=b;h=c;while(1){i=h>>>1;j=g+($(i,d)|0)|0;k=Rd[e&7](a,j)|0;if(!k){f=j;break a}if((h|0)==1){f=0;break a}l=(k|0)<0;h=l?i:h-i|0;if(!h){f=0;break}else g=l?g:j}}while(0);return f|0}function xj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0;d=i;i=i+4112|0;if((i|0)>=(j|0))ca();e=d;f=d+8|0;if(a)if(!b){c[($r()|0)>>2]=22;g=0}else{h=b;k=a;l=4}else{h=4096;k=f;l=4}if((l|0)==4){c[e>>2]=k;c[e+4>>2]=h;if((Or(_c(183,e|0)|0)|0)>=0)if((k|0)==(f|0))g=Nd[2&7](f)|0;else g=k;else g=0}i=d;return g|0}function Gj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0;f=i;i=i+4112|0;if((i|0)>=(j|0))ca();g=f;h=f+4|0;do if((d|0)>=1){k=zi(a)|0;if(k>>>0>4096){c[($r()|0)>>2]=36;l=-1;break}else{$j(h|0,a|0,k+1|0)|0;Ta(1,g|0)|0;k=He(h,b,d,e,0)|0;Ta(c[g>>2]|0,0)|0;l=k;break}}else l=0;while(0);i=f;return l|0}function kk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;a:do if(!b)c=0;else{d=a;e=b;f=0;while(1){e=e+-1|0;g=We(0,0,4,-1,d,1,0)|0;if((g|0)<0){c=g;break a}h=We(0,0,16,-1,d,28,0)|0;if((h|0)<0){c=h;break a}i=h+(g+f)|0;if(!e){c=i;break}else{d=d+512|0;f=i}}}while(0);return c|0}function Pk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;do if((b|0)!=8){e=b>>>2;if((b&3|0)!=0|(e|0)==0){f=22;return f|0}if(e+1073741823&e|0){f=22;return f|0}if((-64-b|0)>>>0<d>>>0){f=12;return f|0}else{g=tg(b>>>0<16?16:b,d)|0;break}}else g=Wd(d)|0;while(0);if(!g){f=12;return f|0}c[a>>2]=g;f=0;return f|0}function Xj(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0;g=i;i=i+112|0;if((i|0)>=(j|0))ca();h=g;c[h>>2]=0;k=h+4|0;c[k>>2]=a;c[h+44>>2]=a;l=h+8|0;c[l>>2]=(a|0)<0?-1:a+2147483647|0;c[h+76>>2]=-1;to(h,0);m=fe(h,d,1,e,f)|0;if(b|0)c[b>>2]=a+((c[k>>2]|0)+(c[h+108>>2]|0)-(c[l>>2]|0));i=g;return m|0}function hk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;g=c[a+84>>2]|0;if(d>>>0<=2?(c[f>>2]=0,a=g+8|0,c[f+4>>2]=c[a>>2],c[f+8>>2]=c[g+16>>2],g=c[f+(d<<2)>>2]|0,!((b|0)<(0-g|0)|(2147483647-g|0)<(b|0))):0){d=g+b|0;c[a>>2]=d;h=d}else{c[($r()|0)>>2]=22;h=-1}i=e;return h|0}function gk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;g=c[a+84>>2]|0;if((d>>>0<=2?(c[f>>2]=0,c[f+4>>2]=c[g>>2],c[f+8>>2]=c[g+4>>2],a=c[f+(d<<2)>>2]|0,(b|0)>=(0-a|0)):0)?((c[g+8>>2]|0)-a|0)>=(b|0):0){d=a+b|0;c[g>>2]=d;h=d}else{c[($r()|0)>>2]=22;h=-1}i=e;return h|0}function Jk(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,k=0,l=0;c=i;i=i+16|0;if((i|0)>=(j|0))ca();e=c;f=b;b=0;while(1){g=e+b|0;a[g>>0]=0;h=f;k=0;l=7;while(1){k=((d[h>>0]|0)&1)<<l|k&255;a[g>>0]=k;if((l|0)<=0)break;else{h=h+1|0;l=l+-1|0}}b=b+1|0;if((b|0)==8)break;else f=f+8|0}ig(e,166768);i=c;return}function jk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=c[(vd()|0)+48>>2]|0;d=a+76|0;e=c[d>>2]|0;do if((e|0)==(b|0)){f=a+68|0;g=c[f>>2]|0;if((g|0)==2147483647)h=-1;else{c[f>>2]=g+1;h=0}}else{if((e|0)>=0){if(e|0){h=-1;break}}else c[d>>2]=0;if(!(c[d>>2]|0))c[d>>2]=b;c[a+68>>2]=1;h=0}while(0);return h|0}function Uj(a){a=a|0;var b=0,d=0,e=0,f=0;if((c[a+76>>2]|0)>-1)Ey(a)|0;b=(c[a>>2]&1|0)!=0;if(!b){Xb(166076);d=c[a+52>>2]|0;e=a+56|0;if(d|0)c[d+56>>2]=c[e>>2];f=c[e>>2]|0;if(f|0)c[f+52>>2]=d;if((c[41518]|0)==(a|0))c[41518]=f;Cd(166076)}f=Ih(a)|0;d=Nd[c[a+12>>2]&7](a)|0|f;f=c[a+92>>2]|0;if(f|0)de(f);if(!b)de(a);return d|0}function Sk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:do if(!d)e=0;else{f=d;g=b;h=a;while(1){i=c[h>>2]|0;j=c[g>>2]|0;if((j|0)==0|((i|0)==0|(i|0)!=(j|0))){k=i;l=j;break}f=f+-1|0;if(!f){e=0;break a}else{g=g+4|0;h=h+4|0}}e=k-l|0}while(0);return e|0}function bk(b){b=b|0;var d=0,e=0,f=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0)Jd[c[b+36>>2]&31](b,0,0)|0;c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=c[b>>2]|0;if(e&20)if(!(e&4))f=-1;else{c[b>>2]=e|32;f=-1}else{e=c[d>>2]|0;c[b+8>>2]=e;c[b+4>>2]=e;f=0}return f|0}function bl(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=b;while(1){if(d>>>0>=c>>>0){e=-1;break}f=a[d>>0]|0;if(!(f<<24>>24)){g=d;h=4;break}i=d+1|0;if((f&255)>191){j=i;k=d;h=6;break}else d=i}if((h|0)==4)e=1-b+g|0;else if((h|0)==6)if(j>>>0<c>>>0)e=2-b+k|0;else e=-1;return e|0}function Vk(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:do if(!d)e=0;else{f=d;g=b;h=c;while(1){i=a[g>>0]|0;j=a[h>>0]|0;if(i<<24>>24!=j<<24>>24){k=i;l=j;break}f=f+-1|0;if(!f){e=0;break a}else{g=g+1|0;h=h+1|0}}e=(k&255)-(l&255)|0}while(0);return e|0}function Zj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Zh(f,e);k=-+h[f+8>>3];h[a>>3]=1.5707963267948966-+h[f>>3];h[a+8>>3]=k;i=d;return}function fk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;h=f+16|0;if(!(d&4194368))k=0;else{c[h>>2]=e;e=(c[h>>2]|0)+(4-1)&~(4-1);l=c[e>>2]|0;c[h>>2]=e+4;k=l}c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d|32768;c[g+12>>2]=k;k=Or(wc(295,g|0)|0)|0;i=f;return k|0}function Kk(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=c[b>>2]|0;if(d|0){if(!(c[a>>2]|0))e=d;else{f=a+8|0;de(c[d+(c[f>>2]<<2)>>2]|0);if((c[a>>2]|0)>>>0>1){d=1;do{de(c[(c[b>>2]|0)+((c[f>>2]|0)+d<<2)>>2]|0);d=d+1|0}while(d>>>0<(c[a>>2]|0)>>>0)}e=c[b>>2]|0}de(e);c[b>>2]=0;c[a>>2]=0}return}function Mk(b){b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=b+-1|0;a:do if(!c)d=151909;else{b=c;e=151909;while(1){if(!(a[e>>0]|0)){d=e;break a}f=e+1|0;while(1){g=f+1|0;if(!(a[f>>0]|0)){h=g;break}else f=g}b=b+-1|0;if(!b){d=h;break}else e=h}}while(0);return (a[d>>0]|0?d:d+1|0)|0}function Gl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function Yk(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b+(zi(b)|0)|0;a:do if(!d)f=e;else{g=d;h=c;i=e;while(1){j=a[h>>0]|0;if(!(j<<24>>24)){f=i;break a}g=g+-1|0;k=i+1|0;a[i>>0]=j;if(!g){f=k;break}else{h=h+1|0;i=k}}}while(0);a[f>>0]=0;return b|0}function Wk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;a:do if(!d){e=a;f=0}else{g=d;h=b;i=a;while(1){j=c[h>>2]|0;if(!j){e=i;f=g;break a}g=g+-1|0;k=i+4|0;c[i>>2]=j;if(!g){e=k;f=0;break}else{h=h+4|0;i=k}}}while(0);$p(e,0,f)|0;return a|0}function ik(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=kr(c[k>>2]|0,b|0,52)|0;e=d&2047;f=+O(+a);do if(e>>>0<=1048){if(e>>>0>1023){g=+Z(+(f*2.0+1.0/(f+ +P(+(f*f+1.0)))));break}if(e>>>0>996){a=f*f;g=+vg(f+a/(+P(+(a+1.0))+1.0))}else g=f}else g=+Z(+f)+.6931471805599453;while(0);return +((b|0)<0?-g:g)}function Lk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;do if(!d){c[e>>2]=0;h=0}else{if((a[b>>0]|0)>=0){c[e>>2]=1;h=a[b>>0]|0;break}k=Kg(g,b,d)|0;if((k|0)<0){c[e>>2]=1;l=-1}else{c[e>>2]=k;l=c[g>>2]|0}h=l}while(0);i=f;return h|0}function Ok(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e+16|0;g=e;h=e+20|0;k=(b|0)==0?0:d;c[g>>2]=a;c[g+4>>2]=-2147199952;c[g+8>>2]=h;a=Bd(54,g|0)|0;if(!a){c[f>>2]=c[h>>2];h=(rp(b,k,165684,f)|0)>>>0<k>>>0;l=h?0:34}else l=0-a|0;i=e;return l|0}function ak(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+40|0;f=d+8|0;g=d;c[g>>2]=a;c[g+4>>2]=b;h=Ec(197,g|0)|0;if((h|0)==-9?(c[f>>2]=a,c[f+4>>2]=1,(wa(221,f|0)|0)>=0):0){yj(f,a);c[e>>2]=f;c[e+4>>2]=b;k=Or(Gc(195,e|0)|0)|0}else k=Or(h)|0;i=d;return k|0}function xk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b>>3];h[g>>3]=-+h[b+8>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];hf(f,e);k=-+h[f>>3];h[a>>3]=+h[f+8>>3];h[a+8>>3]=k;i=d;return}function uk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b>>3];h[g>>3]=-+h[b+8>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];xg(f,e);k=-+h[f>>3];h[a>>3]=+h[f+8>>3];h[a+8>>3]=k;i=d;return}function qk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b>>3];h[g>>3]=-+h[b+8>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Zh(f,e);k=-+h[f>>3];h[a>>3]=+h[f+8>>3];h[a+8>>3]=k;i=d;return}function ok(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b>>3];h[g>>3]=-+h[b+8>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Aj(f,e);k=-+h[f>>3];h[a>>3]=+h[f+8>>3];h[a+8>>3]=k;i=d;return}function ck(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+40|0;f=d+8|0;g=d;c[g>>2]=a;c[g+4>>2]=b;h=wb(94,g|0)|0;if((h|0)==-9?(c[f>>2]=a,c[f+4>>2]=1,(wa(221,f|0)|0)>=0):0){yj(f,a);c[e>>2]=f;c[e+4>>2]=b;k=Or(Pb(15,e|0)|0)|0}else k=Or(h)|0;i=d;return k|0}function Xk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+((Fr(a)|0)<<2)|0;a:do if(!d)f=e;else{g=d;h=b;i=e;while(1){j=c[h>>2]|0;if(!j){f=i;break a}g=g+-1|0;k=i+4|0;c[i>>2]=j;if(!g){f=k;break}else{h=h+4|0;i=k}}}while(0);c[f>>2]=0;return a|0}function sk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Zj(f,e);k=+h[f>>3];h[a>>3]=-+h[f+8>>3];h[a+8>>3]=k;i=d;return}function Dk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b>>3];h[g>>3]=-+h[b+8>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];bf(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function zk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];bf(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function yk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Uk(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function wk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];hf(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function vk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Df(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function tk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];xg(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function rk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];sk(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function pk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];qk(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function nk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];ok(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function Ik(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Dk(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function Hk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];bg(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function Gk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Oi(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function Fk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];xk(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function Ek(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];uk(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function Ck(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Zj(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function Bk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Zh(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function Ak(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,k=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+32|0;f=d+16|0;g=d;k=+h[b+8>>3];h[g>>3]=+h[b>>3];h[g+8>>3]=k;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];Aj(f,e);k=+h[f+8>>3];h[a>>3]=+h[f>>3];h[a+8>>3]=k;i=d;return}function lk(a){a=+a;var b=0,d=0.0,e=0,f=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0<=1166016511){if(e>>>0>1073741823){f=+Z(+(d*2.0+1.0/(d+ +P(+(d*d+1.0)))));break}if(e>>>0>964689919){a=d*d;f=+Rg(d+a/(+P(+(a+1.0))+1.0))}else f=d}else f=+Z(+d)+.6931471824645996;while(0);return +((b|0)<0?-f:f)}function dl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:do if(!d)e=0;else{f=b;g=a;h=d;while(1){i=c[g>>2]|0;j=c[f>>2]|0;if((i|0)!=(j|0)){k=i;l=j;break}h=h+-1|0;if(!h){e=0;break a}else{f=f+4|0;g=g+4|0}}e=k-l|0}while(0);return e|0}function cl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(!e){f=d;do{f=f+-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2]}while((f|0)!=0)}}else if(!e){e=b;b=a;f=d;while(1){f=f+-1|0;c[b>>2]=c[e>>2];if(!f)break;else{e=e+4|0;b=b+4|0}}}return a|0}function Tk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0;g=i;i=i+48|0;if((i|0)>=(j|0))ca();h=g;k=g+24|0;c[k>>2]=f;f=(c[k>>2]|0)+(4-1)&~(4-1);l=c[f>>2]|0;c[k>>2]=f+4;c[h>>2]=a;c[h+4>>2]=b;c[h+8>>2]=d;c[h+12>>2]=e;c[h+16>>2]=l;l=Or(dd(163,h|0)|0)|0;i=g;return l|0}function $k(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[1831]|0;if((c[d+76>>2]|0)>-1)e=Ey(d)|0;else e=0;do if((Nt(b,d)|0)<0)f=1;else{if((a[d+75>>0]|0)!=10?(g=d+20|0,h=c[g>>2]|0,h>>>0<(c[d+16>>2]|0)>>>0):0){c[g>>2]=h+1;a[h>>0]=10;f=0;break}f=(Ci(d,10)|0)<0}while(0);if(e|0)Dy(d);return f<<31>>31|0}function Tj(a,b){a=+a;b=+b;var d=0,e=0.0,f=0.0,h=0.0;d=(g[k>>2]=a,c[k>>2]|0);e=+O(+a);do if((g[k>>2]=e,c[k>>2]|0)>>>0<=2139095040){f=+O(+b);if((g[k>>2]=f,c[k>>2]|0)>>>0<=2139095040)if(((g[k>>2]=b,c[k>>2]|0)^d|0)<0){h=(d|0)<0?b:a;break}else{h=a<b?b:a;break}else h=a}else h=b;while(0);return +h}function Sj(a,b){a=+a;b=+b;var d=0,e=0.0,f=0.0,h=0.0;d=(g[k>>2]=a,c[k>>2]|0);e=+O(+a);do if((g[k>>2]=e,c[k>>2]|0)>>>0<=2139095040){f=+O(+b);if((g[k>>2]=f,c[k>>2]|0)>>>0<=2139095040)if(((g[k>>2]=b,c[k>>2]|0)^d|0)<0){h=(d|0)<0?a:b;break}else{h=a<b?a:b;break}else h=a}else h=b;while(0);return +h}function Rk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+80|0;if((i|0)>=(j|0))ca();d=b;e=b+4|0;do if((ak(a,e)|0)>=0){if((c[e+12>>2]&61440|0)!=16384){c[($r()|0)>>2]=20;f=0;break}g=Mm(1,2072)|0;if(g){c[d>>2]=1;ef(a,2,d)|0;c[g>>2]=a;f=g}else f=0}else f=0;while(0);i=b;return f|0}function Ol(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=a[b>>0]|0;e=a[c>>0]|0;if(d<<24>>24==0?1:d<<24>>24!=e<<24>>24){f=d;g=e}else{e=b;b=c;do{e=e+1|0;b=b+1|0;c=a[e>>0]|0;d=a[b>>0]|0}while(!(c<<24>>24==0?1:c<<24>>24!=d<<24>>24));f=c;g=d}return (f&255)-(g&255)|0}function Qk(a){a=+a;var b=0,d=0,e=0,f=0,g=0,i=0.0;h[k>>3]=a;b=c[k>>2]|0;d=c[k+4>>2]|0;e=kr(b|0,d|0,52)|0;f=(e&2047)+-1011|0;if((f|0)<=63?(e=(f|0)<12,g=kr(-1,-1,f|0)|0,f=e?-1:g,g=e?2147483647:D,!((f&b|0)==0&(g&d|0)==0)):0){c[k>>2]=b&~f;c[k+4>>2]=d&~g;i=+h[k>>3]}else i=a;return +i}function Nl(b){b=b|0;var d=0,e=0,f=0;de(c[41503]|0);d=b;a:while(1){b=d;b:while(1){switch(a[b>>0]|0){case 0:{e=d;break a;break}case 47:{f=b;break b;break}default:{}}b=b+1|0}d=f+1|0}c[41503]=Nd[2&7](e)|0;if(c[41504]|0)return;Hd(1)|0;c[41504]=1;return}function _k(a){a=+a;var b=0.0,d=0.0,e=0,f=0.0,g=0.0;h[k>>3]=a;b=(c[k+4>>2]|0)<0?-.5:.5;d=+O(+a);h[k>>3]=d;e=c[k+4>>2]|0;do if(e>>>0<1082535490){f=+cf(d);if(e>>>0>=1072693248){g=b*(f+f/(f+1.0));break}if(e>>>0<1045430272)g=a;else g=b*(f*2.0-f*f/(f+1.0))}else g=b*2.0*+ws(d);while(0);return +g}function yl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0;e=i;i=i+368|0;if((i|0)>=(j|0))ca();f=e+112|0;g=e;h=g;k=h+112|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(k|0));c[g+32>>2]=18;c[g+44>>2]=f;c[g+48>>2]=256;c[g+76>>2]=-1;c[g+84>>2]=a;a=_d(g,b,d)|0;i=e;return a|0}function hl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0,l=0.0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;k=c[b+4>>2]|0;c[h>>2]=c[b>>2];c[h+4>>2]=k;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];Mi(f,e);l=-+g[f+4>>2];g[a>>2]=1.5707963705062866-+g[f>>2];g[a+4>>2]=l;i=d;return}function gl(){var b=0,d=0,e=0,f=0,g=0;b=i;i=i+160|0;if((i|0)>=(j|0))ca();d=b+76|0;e=b;f=Pc(165784)|0;if((((((f|0)!=0?(a[f>>0]|0)!=0:0)?(bp(f,d)|0)==0:0)?(bp(165788,e)|0)==0:0)?(c[d>>2]|0)==(c[e>>2]|0):0)?(c[d+72>>2]|0)==(c[e+72>>2]|0):0)g=Nd[2&7](f)|0;else g=xj(0,0)|0;i=b;return g|0}function Zk(a){a=+a;var b=0.0,d=0.0,e=0,f=0.0,h=0.0;b=((g[k>>2]=a,c[k>>2]|0)|0)<0?-.5:.5;d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0<1118925335){f=+rf(d);if(e>>>0>=1065353216){h=b*(f+f/(f+1.0));break}if(e>>>0<964689920)h=a;else h=b*(f*2.0-f*f/(f+1.0))}else h=b*2.0*+Bs(d);while(0);return +h}function nl(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0;d=a+2|0;f=a+4|0;g=Zp((e[c+2>>1]|0)<<16|(e[c>>1]|0)|0,e[c+4>>1]|0|0,(e[d>>1]|0)<<16|(e[a>>1]|0)|0,e[f>>1]|0|0)|0;h=Gr(g|0,D|0,e[c+6>>1]|0|0,0)|0;c=D;b[a>>1]=h;a=kr(h|0,c|0,16)|0;b[d>>1]=a;b[f>>1]=c;D=c&65535;return h|0}function Nk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;Ta(1,g|0)|0;Xb(166920);if(!b)a[169790]=0;else{h=Ns(b,31)|0;$j(169790,b|0,h|0)|0;a[169790+h>>0]=0}c[41732]=d;c[5716]=e;if((d&8|0)!=0&(c[5715]|0)<0)Qq();Cd(166920);Ta(c[g>>2]|0,0)|0;i=f;return}function kl(a){a=+a;var b=0,c=0,d=0.0,e=0.0,f=0.0,h=0.0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();c=b;d=+Bi(a,c);e=+g[c>>2];do if(+O(+e)<8.0)if(d!=0.0){f=+yh(d*3.321928024291992);h=f*+g[23788+(~~e+7<<2)>>2];break}else{h=+g[23788+(~~e+7<<2)>>2];break}else h=+wh(a*3.321928094887362);while(0);i=b;return +h}function zl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0;f=i;i=i+112|0;if((i|0)>=(j|0))ca();g=f;h=g;k=h+112|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(k|0));c[g+36>>2]=9;c[g+44>>2]=d;c[g+48>>2]=0;c[g+60>>2]=b;a[g+75>>0]=-1;c[g+76>>2]=-1;b=sg(g,d,e)|0;i=f;return b|0}function Uk(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0;d=+h[b>>3];e=+O(+d);h[k>>3]=e;if(!((c[k>>2]|0)==0?(c[k+4>>2]|0)==2146435072:0)?(e=+h[b+8>>3],f=+O(+e),h[k>>3]=f,!((c[k>>2]|0)==0?(c[k+4>>2]|0)==2146435072:0)):0){h[a>>3]=d;h[a+8>>3]=e}else{e=+An(0.0,d);h[a>>3]=t;h[a+8>>3]=e}return}function ll(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=$r()|0;g=c[f>>2]|0;h=a+16|0;Xb(h|0);c[f>>2]=0;i=ri(a)|0;a=c[f>>2]|0;if(!a){c[f>>2]=g;if(!i)j=0;else{$j(b|0,i|0,e[i+8>>1]|0|0)|0;j=b}Cd(h|0);c[d>>2]=j;k=0}else{Cd(h|0);k=a}return k|0}function fl(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0;h[k>>3]=a;b=c[k>>2]|0;d=c[k+4>>2]|0;e=kr(b|0,d|0,52)|0;switch(e&2047|0){case 0:{f=+O(+a);h[k>>3]=f;g=(c[k>>2]|0)!=0|(c[k+4>>2]|0)!=0?3:2;break}case 2047:{g=(b|0)==0&(d&1048575|0)==0&1;break}default:g=4}return g|0}function ml(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0;h=i;i=i+32|0;if((i|0)>=(j|0))ca();k=h;l=h+8|0;c[l>>2]=a;c[l+4>>2]=b;c[l+8>>2]=d;c[l+12>>2]=e;c[l+16>>2]=f;c[l+20>>2]=g;c[k>>2]=11;c[k+4>>2]=l;l=Or(oc(102,k|0)|0)|0;i=h;return l|0}function jl(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0;h=i;i=i+32|0;if((i|0)>=(j|0))ca();k=h;l=h+8|0;c[l>>2]=a;c[l+4>>2]=b;c[l+8>>2]=d;c[l+12>>2]=e;c[l+16>>2]=f;c[l+20>>2]=g;c[k>>2]=12;c[k+4>>2]=l;l=Or(oc(102,k|0)|0)|0;i=h;return l|0}function al(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;if((i|0)>=(j|0))ca();d=b;e=b+16|0;f=c[a+64>>2]|0;Uj(a)|0;do{c[d>>2]=f;c[d+4>>2]=e;c[d+8>>2]=0;c[d+12>>2]=0;a=Nb(114,d|0)|0}while((a|0)==-4);g=a;if((g|0)<0)h=Or(g)|0;else h=c[e>>2]|0;i=b;return h|0}function dm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[b>>2]|0;if((e|0)==0|((d|0)==0|(d|0)!=(e|0))){f=d;g=e}else{e=a;a=b;do{e=e+4|0;a=a+4|0;b=c[e>>2]|0;d=c[a>>2]|0}while(!((d|0)==0|((b|0)==0|(b|0)!=(d|0))));f=b;g=d}return f-g|0}function ql(a){a=+a;var b=0,c=0,d=0.0,e=0.0,f=0.0,g=0.0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();c=b;d=+eh(a,c);e=+h[c>>3];do if(+O(+e)<16.0)if(d!=0.0){f=+wh(d*3.321928094887362);g=f*+h[6904+(~~e+15<<3)>>3];break}else{g=+h[6904+(~~e+15<<3)>>3];break}else g=+Q(10.0,+a);while(0);i=b;return +g}function pl(a){a=+a;var b=0,c=0,d=0.0,e=0.0,f=0.0,g=0.0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();c=b;d=+fq(a,c);e=+h[c>>3];do if(+O(+e)<16.0)if(d!=0.0){f=+ny(d*3.321928094887362);g=f*+h[6904+(~~e+15<<3)>>3];break}else{g=+h[6904+(~~e+15<<3)>>3];break}else g=+Q(10.0,+a);while(0);i=b;return +g}function el(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+48|0;if((i|0)>=(j|0))ca();d=b+40|0;e=b+8|0;f=b;c[f>>2]=a;g=Ad(133,f|0)|0;if((g|0)==-9?(c[e>>2]=a,c[e+4>>2]=1,(wa(221,e|0)|0)>=0):0){yj(e,a);c[d>>2]=e;h=Or(Rb(12,d|0)|0)|0}else h=Or(g)|0;i=b;return h|0}function vm(a,b,c){a=+a;b=+b;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0;d=a*a;e=d*(d*d)*(d*1.58969099521155e-10+-2.5050760253406863e-08)+(d*(d*2.7557313707070068e-06+-1.984126982985795e-04)+.00833333333332249);f=d*a;if(!c)g=f*(d*e+-.16666666666666632)+a;else g=a-(f*.16666666666666632+(d*(b*.5-f*e)-b));return +g}function wl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0,l=0.0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;k=c[b>>2]|0;g[h>>2]=-+g[b+4>>2];c[h+4>>2]=k;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];kf(f,e);l=-+g[f>>2];c[a>>2]=c[f+4>>2];g[a+4>>2]=l;i=d;return}function vl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0,l=0.0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;k=c[b>>2]|0;g[h>>2]=-+g[b+4>>2];c[h+4>>2]=k;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];Lg(f,e);l=-+g[f>>2];c[a>>2]=c[f+4>>2];g[a+4>>2]=l;i=d;return}function sl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0,l=0.0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;k=c[b>>2]|0;g[h>>2]=-+g[b+4>>2];c[h+4>>2]=k;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];Mi(f,e);l=-+g[f>>2];c[a>>2]=c[f+4>>2];g[a+4>>2]=l;i=d;return}function rl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0,l=0.0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;k=c[b>>2]|0;g[h>>2]=-+g[b+4>>2];c[h+4>>2]=k;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];nj(f,e);l=-+g[f>>2];c[a>>2]=c[f+4>>2];g[a+4>>2]=l;i=d;return}function ul(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0;g=i;i=i+32|0;if((i|0)>=(j|0))ca();h=g;k=g+8|0;c[k>>2]=a;c[k+4>>2]=b;c[k+8>>2]=d;c[k+12>>2]=e;c[k+16>>2]=f;c[k+20>>2]=0;c[h>>2]=15;c[h+4>>2]=k;k=Or(oc(102,h|0)|0)|0;i=g;return k|0}function tl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0;g=i;i=i+32|0;if((i|0)>=(j|0))ca();h=g;k=g+8|0;c[k>>2]=a;c[k+4>>2]=b;c[k+8>>2]=d;c[k+12>>2]=e;c[k+16>>2]=f;c[k+20>>2]=0;c[h>>2]=14;c[h+4>>2]=k;k=Or(oc(102,h|0)|0)|0;i=g;return k|0}function il(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;do if(ir(b)|0){yj(g,b);h=$n(g,d,e)|0;if((h|0)<0){k=c[($r()|0)>>2]|0;break}if((h|0)==(e|0))k=34;else{a[d+h>>0]=0;k=0}}else k=25;while(0);i=f;return k|0}function El(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+8|0;f=d;g=d+16|0;h=Cg(1,524290,0)|0;if((h|0)>=0?(c[g+16>>2]=a,c[f>>2]=g,a=Rl(h,35088,f)|0,c[e>>2]=h,Zb(6,e|0)|0,(a|0)>=0):0)k=tt(b,g,16)|0;else k=0;i=d;return k|0}function Il(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+48|0;if((i|0)>=(j|0))ca();d=b+8|0;e=b;f=b+16|0;g=Cg(1,524290,0)|0;if((g|0)<0)h=-1;else{tt(f,a,16)|0;c[e>>2]=f;a=Rl(g,35123,e)|0;c[d>>2]=g;Zb(6,d|0)|0;h=(a|0)<0?0:c[f+16>>2]|0}i=b;return h|0}function xl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+20|0;c[f>>2]=c[a+60>>2];c[f+4>>2]=0;c[f+8>>2]=b;c[f+12>>2]=g;c[f+16>>2]=d;if((Or(hb(140,f|0)|0)|0)<0){c[g>>2]=-1;h=-1}else h=c[g>>2]|0;i=e;return h|0}function Jl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=0;c[g+8>>2]=b;c[g+12>>2]=((b|0)<0)<<31>>31;c[g+16>>2]=d;c[g+20>>2]=((d|0)<0)<<31>>31;c[g+24>>2]=e;e=0-(Oc(272,g|0)|0)|0;i=f;return e|0}function Bl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;k=c[b>>2]|0;g[h>>2]=-+g[b+4>>2];c[h+4>>2]=k;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];jf(f,e);e=c[f+4>>2]|0;c[a>>2]=c[f>>2];c[a+4>>2]=e;i=d;return}function Al(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,k=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d+8|0;h=d;k=c[b+4>>2]|0;c[h>>2]=c[b>>2];c[h+4>>2]=k;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];hl(f,e);e=c[f>>2]|0;g[a>>2]=-+g[f+4>>2];c[a+4>>2]=e;i=d;return}function ol(a,b){a=+a;b=+b;var d=0.0,e=0,f=0.0;d=+O(+a);h[k>>3]=d;e=c[k+4>>2]|0;if(!(e>>>0>2146435072|(e|0)==2146435072&(c[k>>2]|0)>>>0>0)){d=+O(+b);h[k>>3]=d;e=c[k+4>>2]|0;if(e>>>0>2146435072|(e|0)==2146435072&(c[k>>2]|0)>>>0>0)f=b;else f=a>b?a-b:0.0}else f=a;return +f}function Dl(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=(a[c>>0]|0)==95;g=ze(b,c,d)|0;d=ze(164124,f?164111:164121,e)|0;if((d|0)!=0?(g|0)!=0&(Ol(d,f?164145:164166)|0)==0:0)h=g;else h=(a[c>>0]|0)==42?164180:165066;i=e;return h|0}function Cl(a){a=+a;var b=0,d=0,e=0.0,f=0.0;h[k>>3]=a;b=kr(c[k>>2]|0,c[k+4>>2]|0,52)|0;d=b&2047;do if(d>>>0>=1024)if(d>>>0<1049){e=+Z(+(a*2.0-1.0/(+P(+(a*a+-1.0))+a)));break}else{e=+Z(+a)+.6931471805599453;break}else{f=a+-1.0;e=+vg(f+ +P(+(f*f+f*2.0)))}while(0);return +e}function Hl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;h=f+8|0;c[h>>2]=a;c[h+4>>2]=b;c[h+8>>2]=d;c[h+12>>2]=e;c[h+16>>2]=0;c[h+20>>2]=0;c[g>>2]=8;c[g+4>>2]=h;h=Or(oc(102,g|0)|0)|0;i=f;return h|0}function Ml(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+16|0;c[g>>2]=d;d=(c[g>>2]|0)+(4-1)&~(4-1);h=c[d>>2]|0;c[g>>2]=d+4;c[f>>2]=a;c[f+4>>2]=b|32768;c[f+8>>2]=h;h=Or(_b(5,f|0)|0)|0;i=e;return h|0}function Fl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d;f=d+8|0;c[f>>2]=b;b=c[1861]|0;g=c[41503]|0;Nt(g|0?g:146154,b)|0;if(a|0){gm(153018,2,1,b)|0;sg(b,a,f)|0}c[e>>2]=vj(c[($r()|0)>>2]|0)|0;Rp(b,146164,e)|0;i=d;return}function fm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+112|0;if((i|0)>=(j|0))ca();f=e;g=f;h=g+112|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[f+32>>2]=6;c[f+44>>2]=a;c[f+76>>2]=-1;c[f+84>>2]=a;a=$d(f,b,d)|0;i=e;return a|0}function Rl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+16|0;c[g>>2]=d;d=(c[g>>2]|0)+(4-1)&~(4-1);h=c[d>>2]|0;c[g>>2]=d+4;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=h;h=Or(Bd(54,f|0)|0)|0;i=e;return h|0}function Rm(b){b=b|0;var c=0,d=0,e=0,f=0;c=(as(b,43)|0)==0;d=a[b>>0]|0;e=c?d<<24>>24!=114&1:2;c=(as(b,120)|0)==0;f=c?e:e|128;e=(as(b,101)|0)==0;b=e?f:f|524288;f=d<<24>>24==114?b:b|64;b=d<<24>>24==119?f|512:f;return (d<<24>>24==97?b|1024:b)|0}function Bm(b){b=b|0;var c=0,d=0,e=0,f=0,g=0;if((b+-1|0)>>>0>63|(b|0)==0)c=149346;else{d=b;b=149346;while(1){e=b;while(1){f=e+1|0;if(!(a[e>>0]|0)){g=f;break}else e=f}d=d+-1|0;if(!d){c=g;break}else b=g}}return c|0}function sm(b){b=b|0;var d=0,e=0,f=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=c[b>>2]|0;if(!(e&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);f=0}else{c[b>>2]=e|32;f=-1}return f|0}function Ul(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b+8|0;e=Ml(a,589824,b)|0;do if((e|0)>=0){a=Mm(1,2072)|0;if(!a){c[d>>2]=e;Zb(6,d|0)|0;f=0;break}else{c[a>>2]=e;f=a;break}}else f=0;while(0);i=b;return f|0}function Tl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+8|0;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[f>>2]=17;c[f+4>>2]=g;g=Or(oc(102,f|0)|0)|0;i=e;return g|0}function Sl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+8|0;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[f>>2]=16;c[f+4>>2]=g;g=Or(oc(102,f|0)|0)|0;i=e;return g|0}function Xl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+8|0;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[f>>2]=2;c[f+4>>2]=g;g=Or(oc(102,f|0)|0)|0;i=e;return g|0}function Wl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+8|0;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[f>>2]=5;c[f+4>>2]=g;g=Or(oc(102,f|0)|0)|0;i=e;return g|0}function Vl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+8|0;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[f>>2]=3;c[f+4>>2]=g;g=Or(oc(102,f|0)|0)|0;i=e;return g|0}function Ql(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+8|0;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[f>>2]=7;c[f+4>>2]=g;g=Or(oc(102,f|0)|0)|0;i=e;return g|0}function Pl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+8|0;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[f>>2]=6;c[f+4>>2]=g;g=Or(oc(102,f|0)|0)|0;i=e;return g|0}function Em(a){a=+a;var b=0,d=0,e=0.0,f=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=b&2146435072;if(!(d>>>0>1126170624|(d|0)==1126170624&0>0)){d=(b|0)<0;e=d?a+-4503599627370496.0+4503599627370496.0:a+4503599627370496.0+-4503599627370496.0;if(e==0.0)f=d?-0.0:0.0;else f=e}else f=a;return +f}function gm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=$(d,b)|0;if((c[e+76>>2]|0)>-1){g=(Ey(e)|0)==0;h=Ug(a,f,e)|0;if(g)i=h;else{Dy(e);i=h}}else i=Ug(a,f,e)|0;if((i|0)==(f|0))j=d;else j=(i>>>0)/(b>>>0)|0;return j|0}function Zl(a){a=+a;var b=0.0,d=0,e=0.0;b=+O(+a);h[k>>3]=b;d=c[k+4>>2]|0;do if(d>>>0<1072049730)if(d>>>0<1045430272)e=1.0;else{a=+cf(b);e=a*a/((a+1.0)*2.0)+1.0}else if(d>>>0<1082535490){a=+Y(+b);e=(a+1.0/a)*.5;break}else{e=+ws(b);break}while(0);return +e}function Yl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d;f=d+8|0;c[f>>2]=a;c[f+4>>2]=b;b=f+8|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[e>>2]=13;c[e+4>>2]=f;f=Or(oc(102,e|0)|0)|0;i=d;return f|0}function $l(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+32|0;if((i|0)>=(j|0))ca();e=d;f=d+8|0;c[f>>2]=a;c[f+4>>2]=b;b=f+8|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[e>>2]=4;c[e+4>>2]=f;f=Or(oc(102,e|0)|0)|0;i=d;return f|0}function om(a){a=a|0;var b=0,d=0,e=0,f=0;if(!(c[a>>2]|0))b=a+4|0;else{d=a+8|0;e=a+4|0;f=0;do{de((c[(c[e>>2]|0)+((c[d>>2]|0)+f<<2)>>2]|0)+-4|0);f=f+1|0}while(f>>>0<(c[a>>2]|0)>>>0);b=e}de(c[b>>2]|0);c[a>>2]=0;c[b>>2]=0;return}function wm(a){a=a|0;var b=0,d=0,e=0;if(c[41858]|0){b=c[41859]|0;d=sr(b,a)|0;return d|0}e=Wc(30)|0;if(e+-1&e|0)Sa();c[41860]=e;c[41859]=e;c[41861]=-1;c[41862]=-1;c[41863]=0;c[41851]=0;c[41858]=(ac(0)|0)&-16^1431655768;b=c[41859]|0;d=sr(b,a)|0;return d|0}function em(a){a=+a;var b=0.0,d=0,e=0.0;b=+O(+a);d=(g[k>>2]=b,c[k>>2]|0);do if(d>>>0>=1073741824)if(d>>>0<1166016512){e=+Z(+(a*2.0-1.0/(+P(+(a*a+-1.0))+a)));break}else{e=+Z(+a)+.6931471824645996;break}else{b=a+-1.0;e=+Rg(b+ +P(+(b*b+b*2.0)))}while(0);return +e}function _l(a){a=+a;var b=0.0,d=0,e=0.0;b=+O(+a);d=(g[k>>2]=b,c[k>>2]|0);do if(d>>>0<1060205079)if(d>>>0<964689920)e=1.0;else{a=+rf(b);e=a*a/((a+1.0)*2.0)+1.0}else if(d>>>0<1118925335){a=+Y(+b);e=(a+1.0/a)*.5;break}else{e=+Bs(b);break}while(0);return +e}function im(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=0;c[f+8>>2]=b;c[f+12>>2]=((b|0)<0)<<31>>31;c[f+16>>2]=d;c[f+20>>2]=((d|0)<0)<<31>>31;d=0-($c(324,f|0)|0)|0;i=e;return d|0}function cm(a){a=a|0;var b=0,d=0,e=0,f=0.0;b=i;i=i+32|0;if((i|0)>=(j|0))ca();d=b+16|0;e=b;f=+h[a+8>>3];h[e>>3]=+h[a>>3];h[e+8>>3]=f;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];f=+Su(d);i=b;return +f}function bm(a){a=a|0;var b=0,d=0,e=0,f=0.0;b=i;i=i+32|0;if((i|0)>=(j|0))ca();d=b+16|0;e=b;f=+h[a+8>>3];h[e>>3]=+h[a>>3];h[e+8>>3]=f;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];f=+gu(d);i=b;return +f}function Om(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a+84|0;f=c[e>>2]|0;g=d+256|0;h=If(f,0,g)|0;i=(h|0)==0?g:h-f|0;h=i>>>0<d>>>0?i:d;$j(b|0,f|0,h|0)|0;c[a+4>>2]=f+h;b=f+i|0;c[a+8>>2]=b;c[e>>2]=b;return h|0}function Kl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0;e=i;i=i+288|0;if((i|0)>=(j|0))ca();f=e;g=e+4|0;h=pi(a,e+8|0)|0;if(!h)k=-1;else{Ta(1,g|0)|0;c[f>>2]=d;d=Ml(h,b|657408,f)|0;Ta(c[g>>2]|0,0)|0;k=d}i=e;return k|0}function am(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+80|0;if((i|0)>=(j|0))ca();g=f;c[b+36>>2]=4;if((c[b>>2]&64|0)==0?(c[g>>2]=c[b+60>>2],c[g+4>>2]=21505,c[g+8>>2]=f+12,Bd(54,g|0)|0):0)a[b+75>>0]=-1;g=Ff(b,d,e)|0;i=f;return g|0}function un(b){b=b|0;var c=0,d=0,e=0,f=0,g=0;c=b;b=0;d=0;while(1){e=a[c>>0]|0;if(!(e<<24>>24)){f=d;break}g=(If(164880,e<<24>>24,65)|0)-164880<<b|d;b=b+6|0;if((b|0)>=36){f=g;break}else{c=c+1|0;d=g}}return f|0}function Cm(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0.0;d=c[b>>2]|0;e=(c[k>>2]=d,+g[k>>2]);if((d&2147483647|0)!=2139095040?(f=c[b+4>>2]|0,(f&2147483647|0)!=2139095040):0){c[a>>2]=d;c[a+4>>2]=f}else{h=+ip(0.0,e);g[a>>2]=t;g[a+4>>2]=h}return}function hm(a){a=+a;var b=0,d=0,e=0,f=0.0,g=0.0;h[k>>3]=a;b=c[k+4>>2]|0;d=kr(c[k>>2]|0,b|0,52)|0;e=d&2047;f=+O(+a);if(e>>>0<1022)if(e>>>0<991)g=f;else{a=f*2.0;g=+vg(a+f*a/(1.0-f))*.5}else g=+vg(f/(1.0-f)*2.0)*.5;return +((b|0)<0?-g:g)}function um(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=qn(b,2,16)|0;if(!h)i=0;else{b=c[h+4>>2]|0;c[b>>2]=d;c[b+4>>2]=e;c[b+8>>2]=f;f=b+12|0;a[f>>0]=a[f>>0]&-2|g&1;c[h+16>>2]=c[d+16>>2];i=h}return i|0}function rm(a){a=a|0;var b=0;do if(!(c[41858]|0)){b=Wc(30)|0;if(!(b+-1&b)){c[41860]=b;c[41859]=b;c[41861]=-1;c[41862]=-1;c[41863]=0;c[41851]=0;c[41858]=(ac(0)|0)&-16^1431655768;break}else Sa()}while(0);b=c[41859]|0;return sr(b,a+-1+b&0-b)|0}function lm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=e;c[g+20>>2]=((e|0)<0)<<31>>31;e=Or(Yc(180,g|0)|0)|0;i=f;return e|0}function jm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=0;c[g+16>>2]=e;c[g+20>>2]=((e|0)<0)<<31>>31;e=Or(Zc(181,g|0)|0)|0;i=f;return e|0}function tm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;a:do if(!d)e=a;else{f=a;g=d;while(1){if(!(En(b,g)|0)){e=f;break a}h=f+4|0;g=c[h>>2]|0;if(!g){e=h;break}else f=h}}while(0);return e-a>>2|0}function Bn(a,b){a=+a;b=+b;var c=0.0,d=0.0,e=0.0,f=0.0;c=a*a;d=c*c;e=c*.5;f=1.0-e;return +(f+(1.0-f-e+(c*(c*(c*(c*2.480158728947673e-05+-.001388888888887411)+.0416666666666666)+d*d*(c*(2.087572321298175e-09-c*1.1359647557788195e-11)+-2.7557314351390663e-07))-a*b)))}function Am(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;kd(0,e|0)|0;f=0;g=(c[e+4>>2]|0)*65537^(e>>>4)+b;while(1){a[b+f>>0]=(g&15)+65|g<<1&32;f=f+1|0;if((f|0)==6)break;else g=g>>>5}i=d;return b|0}function qm(a){a=a|0;var b=0,d=0,e=0;if(!(c[a>>2]&128))b=1;else b=(c[a+20>>2]|0)>>>0>(c[a+28>>2]|0)>>>0?2:1;d=Jd[c[a+40>>2]&31](a,0,b)|0;if((d|0)<0)e=d;else e=d-(c[a+8>>2]|0)+(c[a+4>>2]|0)+(c[a+20>>2]|0)-(c[a+28>>2]|0)|0;return e|0}function pm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;if((i|0)>=(j|0))ca();f=e;g=e+20|0;c[f>>2]=a;c[f+4>>2]=0;c[f+8>>2]=b;c[f+12>>2]=g;c[f+16>>2]=d;d=(Or(hb(140,f|0)|0)|0)!=0;i=e;return (d?-1:c[g>>2]|0)|0}function zm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;f=b;g=f+64|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));c[e>>2]=a;c[e+4>>2]=64;c[e+8>>2]=b;b=Or(nc(268,e|0)|0)|0;i=d;return b|0}function xm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;f=b;g=f+64|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));c[e>>2]=a;c[e+4>>2]=64;c[e+8>>2]=b;b=Or(mc(269,e|0)|0)|0;i=d;return b|0}function tn(b){b=b|0;var c=0,d=0,e=0,f=0,g=0;c=a[b>>0]|0;d=97;e=1;f=156212;while(1){if(c<<24>>24==d<<24>>24?(Ol(b,f)|0)==0:0){g=e;break}f=f+6|0;d=a[f>>0]|0;if(!(d<<24>>24)){g=0;break}else e=e+1|0}return g|0}function Sm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=Wd(e+9|0)|0;if(!g)h=-1;else{c[c[b>>2]>>2]=g;c[g>>2]=0;e=g+4|0;Wu(e,d)|0;if(f|0){f=e+(zi(e)|0)|0;a[f>>0]=47;a[f+1>>0]=0}c[b>>2]=g;h=0}return h|0}function Qm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;if(!(Jw(c[c[a>>2]>>2]|0)|0))b=0;else{d=0;while(1){e=c[a>>2]|0;f=(d*10|0)+-48+(c[e>>2]|0)|0;g=e+4|0;c[a>>2]=g;if(!(Jw(c[g>>2]|0)|0)){b=f;break}else d=f}}return b|0}function km(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=c[1861]|0;f=c[41503]|0;Nt(f|0?f:146154,b)|0;if(!a){aj(10,b)|0;i=d;return}gm(153018,2,1,b)|0;sg(b,a,e)|0;aj(10,b)|0;i=d;return}function nm(b){b=b|0;var d=0,e=0,f=0;d=c[1861]|0;e=vj(c[($r()|0)>>2]|0)|0;if((c[d+76>>2]|0)>-1)f=Ey(d)|0;else f=0;if(b|0?a[b>>0]|0:0){gm(b,zi(b)|0,1,d)|0;aj(58,d)|0;aj(32,d)|0}gm(e,zi(e)|0,1,d)|0;aj(10,d)|0;if(f|0)Dy(d);return}function Ll(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b+8|0;e=b;c[e>>2]=a;f=Or(Tb(10,e|0)|0)|0;if(f)if((c[($r()|0)>>2]|0)==21){c[d>>2]=a;g=Or(fd(40,d|0)|0)|0}else g=f;else g=0;i=b;return g|0}function Gm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=i;i=i+128|0;if((i|0)>=(j|0))ca();e=d;f=be(a,b,c)|0;if((f|0)!=0&(be(164567,164585,e)|0)==(e|0)){c=(Vk(e,164615,116)|0)==0;g=c?f:165066}else g=165066;i=d;return g|0}function mm(a){a=+a;var b=0,d=0.0,e=0,f=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);if(e>>>0<1056964608)if(e>>>0<796917760)f=d;else{a=d*2.0;f=+Rg(a+d*a/(1.0-d))*.5}else f=+Rg(d/(1.0-d)*2.0)*.5;return +((b|0)<0?-f:f)}function Hm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=i;i=i+128|0;if((i|0)>=(j|0))ca();e=d;f=he(a,b,c)|0;if((f|0)!=0&(he(164945,164963,e)|0)==(e|0)){c=(Vk(e,164993,73)|0)==0;g=c?f:165066}else g=165066;i=d;return g|0}function Nm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=i;i=i+64|0;if((i|0)>=(j|0))ca();e=d;f=Re(a,b,c)|0;if((f|0)!=0&(Re(164750,164768,e)|0)==(e|0)){c=(Vk(e,164781,35)|0)==0;g=c?f:165066}else g=165066;i=d;return g|0}function ym(a){a=a|0;var b=0,d=0;if(a|0){if((c[a+76>>2]|0)>-1)Ey(a)|0;if((c[a+20>>2]|0)>>>0>(c[a+28>>2]|0)>>>0)Jd[c[a+36>>2]&31](a,0,0)|0;b=c[a+4>>2]|0;d=c[a+8>>2]|0;if(b>>>0<d>>>0)Jd[c[a+40>>2]&31](a,b-d|0,1)|0}return}function rn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=Fr(a)|0;a:do if((d|0)>-1){e=a+(d<<2)|0;while(1){if((c[e>>2]|0)==(b|0)){f=e;break a}e=e+-4|0;if(e>>>0<a>>>0){f=0;break}}}else f=0;while(0);return f|0}function Zm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if((c[b+76>>2]|0)>-1)e=Ey(b)|0;else e=0;f=b+74|0;g=a[f>>0]|0;if(!(g<<24>>24)){h=(d>>31|(0-d|0)>>>31)&255;a[f>>0]=h;i=h}else i=g;if(e|0)Dy(b);return i<<24>>24|0}function Fm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;e=c[1861]|0;f=(a|0)!=0;g=Mk(c[(Ty()|0)>>2]|0)|0;c[d>>2]=f?a:169844;c[d+4>>2]=f?153018:169844;c[d+8>>2]=g;Rp(e,153021,d)|0;i=b;return}function ln(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(!a){d=0;return d|0}if(b>>>0>4294967231){c[($r()|0)>>2]=12;d=0;return d|0}else{e=a+-8|0;f=(Ae(e,b>>>0<11?16:b+11&-8)|0)==(e|0);d=f?a:0;return d|0}return 0}function Tm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=0;c[e+4>>2]=b;b=e+8|0;c[b>>2]=0;f=e+12|0;c[f>>2]=a;pc(0,e|0,e|0)|0;i=d;return ((c[b>>2]|0)*1e6|0)+(c[f>>2]|0)|0}function Mm(a,b){a=a|0;b=b|0;var d=0,e=0;if(a){d=$(b,a)|0;if((b|a)>>>0>65535)e=((d>>>0)/(a>>>0)|0|0)==(b|0)?d:-1;else e=d}else e=0;d=Wd(e)|0;if(!d)return d|0;if(!(c[d+-4>>2]&3))return d|0;Gl(d|0,0,e|0)|0;return d|0}function Um(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+400|0;if((i|0)>=(j|0))ca();e=d;jq(e)|0;if((b|0)!=0?(f=e+325|0,(zi(f)|0)>>>0<b>>>0):0){Wu(a,f)|0;g=0}else{c[($r()|0)>>2]=22;g=-1}i=d;return g|0}function Lm(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+32|0;if((i|0)>=(j|0))ca();h=g;c[h>>2]=a;c[h+4>>2]=b;c[h+8>>2]=d;c[h+12>>2]=e;c[h+16>>2]=f;f=Or(eb(303,h|0)|0)|0;i=g;return f|0}function Km(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+32|0;if((i|0)>=(j|0))ca();h=g;c[h>>2]=a;c[h+4>>2]=b;c[h+8>>2]=d;c[h+12>>2]=e;c[h+16>>2]=f;f=Or(ib(142,h|0)|0)|0;i=g;return f|0}function Im(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+32|0;if((i|0)>=(j|0))ca();h=g;c[h>>2]=a;c[h+4>>2]=b;c[h+8>>2]=d;c[h+12>>2]=e;c[h+16>>2]=f;f=Or(zc(298,h|0)|0)|0;i=g;return f|0}function an(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a:do if(!d)e=0;else{f=a;g=d;while(1){if((c[f>>2]|0)==(b|0)){e=f;break a}g=g+-1|0;if(!g){e=0;break}else f=f+4|0}}while(0);return e|0}function Fn(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else $j(b,c,d)|0;return b|0}function sn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=$(d,c)|0;f=a>>>16;a=(e>>>16)+($(d,f)|0)|0;d=b>>>16;b=$(d,c)|0;return (D=(a>>>16)+($(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function qo(a,b){a=+a;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0;c=a*a;d=c*c;e=c*a;f=e*(c*.13339200271297674+.3333313950307914)+a+e*d*(c*.024528318116654728+.05338123784456704+d*(c*.009465647849436732+.002974357433599673));return +(b|0?-1.0/f:f)}function Wm(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;g=b;h=0;do{c[f>>2]=d[a+h>>0];g=g+(Pp(g,(h|0)==0?152995:153e3,f)|0)|0;h=h+1|0}while((h|0)!=6);i=e;return b|0}function Dm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;c[e+4>>2]=a;a=e+8|0;c[a>>2]=0;Bu(6,e);e=c[a>>2]|0;if(!e)f=0;else{c[($r()|0)>>2]=e;f=-1}i=d;return f|0}function hn(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=vj(b)|0;b=zi(e)|0;if(b>>>0>=d>>>0)if(!d)f=34;else{g=d+-1|0;$j(c|0,e|0,g|0)|0;a[c+g>>0]=0;f=34}else{$j(c|0,e|0,b+1|0)|0;f=0}return f|0}function jn(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=zi(c)|0;a:do if(!(a[b>>0]|0))e=0;else{f=b;while(1){if(!(zh(f,c,d)|0)){e=f;break a}f=f+1|0;if(!(a[f>>0]|0)){e=0;break}}}while(0);return e|0}function bn(a){a=+a;var b=0,d=0.0,e=0;b=(g[k>>2]=a,c[k>>2]|0);switch(b>>>23&255|0){case 0:{d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0)|0?3:2;break}case 255:{e=(b&8388607|0)==0&1;break}default:e=4}return e|0}function En(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!b)d=a+((Fr(a)|0)<<2)|0;else{e=a;while(1){a=c[e>>2]|0;if((a|0)==0|(a|0)==(b|0)){f=e;g=a;break}else e=e+4|0}d=g|0?f:0}return d|0}function On(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((d|0)>1){e=d;d=c;c=b;while(1){a[d>>0]=a[c+1>>0]|0;a[d+1>>0]=a[c>>0]|0;e=e+-2|0;if((e|0)<=1)break;else{d=d+2|0;c=c+2|0}}}return}function Ym(a){a=a|0;var b=0;b=a+32|0;c[b>>2]=0;c[b+4>>2]=0;c[a>>2]=c[1789];c[a+4>>2]=c[1790];c[a+8>>2]=c[1791];c[a+12>>2]=c[1792];c[a+16>>2]=c[1793];c[a+20>>2]=c[1794];c[a+24>>2]=c[1795];c[a+28>>2]=c[1796];return}function mn(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d+8|0;f=(b|0)==0?169534:b;a[f>>0]=0;b=Ml(146346,524545,d)|0;if((b|0)>-1){il(b,f,20)|0;c[e>>2]=b;Zb(6,e|0)|0}i=d;return f|0}function Xm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;c[g+16>>2]=0;e=Or(Cb(333,g|0)|0)|0;i=f;return e|0}function Vm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+32|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;c[g+16>>2]=0;e=Or(Fb(334,g|0)|0)|0;i=f;return e|0}function fn(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;e=c[a>>2]|0;c[d>>2]=e&255;c[d+4>>2]=e>>>8&255;c[d+8>>2]=e>>>16&255;c[d+12>>2]=e>>>24;rp(169610,16,153006,d)|0;i=b;return 169610}function cn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;g=a&-4096;c[f>>2]=g;c[f+4>>2]=(a+b+4096+-1&-4096)-g;c[f+8>>2]=d;d=Or(tb(125,f|0)|0)|0;i=e;return d|0}function qn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=eg(a,0,0,1,32)|0;if((e|0)!=0?(f=eg(a,0,0,1,d)|0,c[e+4>>2]=f,(f|0)!=0):0){c[e>>2]=b;c[e+8>>2]=-1;c[e+12>>2]=-1;g=e}else g=0;return g|0}function dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;if((d|0)==4)g=0;else{c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;g=0-(yc(219,f|0)|0)|0}i=e;return g|0}function $m(b,d){b=b|0;d=d|0;var e=0,f=0;if((b|0)!=0?(a[b>>0]|0)!=0:0)if(d)if((a[d>>0]|0)==47?(a[d+1>>0]|0)==0:0)e=165782;else f=6;else e=165782;else f=6;if((f|0)==6){c[($r()|0)>>2]=22;e=0}return e|0}function Xn(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[m+(b>>>24)>>0]|0)+24|0}function Hn(a){a=+a;var b=0,d=0,e=0.0,f=0.0;b=(g[k>>2]=a,c[k>>2]|0);if((b&2130706432)>>>0<=1249902592){d=(b|0)<0;e=d?a+-8388608.0+8388608.0:a+8388608.0+-8388608.0;if(e==0.0)f=d?-0.0:0.0;else f=e}else f=a;return +f}function vo(a){a=a|0;var b=0;if(a>>>0>=255)if((a+-57344|0)>>>0<8185|(a>>>0<8232|(a+-8234|0)>>>0<47062))b=1;else return ((a+-65532|0)>>>0>1048579|(a&65534|0)==65534)&1^1|0;else b=(a+1&127)>>>0>32&1;return b|0}function In(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=mk(b|0,d|0,e|0,f|0)|0;h=a;c[h>>2]=g;c[h+4>>2]=D;h=kj(b|0,d|0,e|0,f|0)|0;f=a+8|0;c[f>>2]=h;c[f+4>>2]=D;return}function Gn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=mk(b|0,d|0,e|0,f|0)|0;h=a;c[h>>2]=g;c[h+4>>2]=D;h=kj(b|0,d|0,e|0,f|0)|0;f=a+8|0;c[f>>2]=h;c[f+4>>2]=D;return}function xn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;if(b>>>0>2){c[($r()|0)>>2]=22;g=-1}else{c[f>>2]=d;g=Rl(a,b+21506|0,f)|0}i=e;return g|0}function Nn(b){b=b|0;var d=0,e=0,f=0,g=0;d=c[1831]|0;if((a[d+75>>0]|0)!=(b|0)?(e=d+20|0,f=c[e>>2]|0,f>>>0<(c[d+16>>2]|0)>>>0):0){c[e>>2]=f+1;a[f>>0]=b;g=b&255}else g=Ci(d,b)|0;return g|0}function Dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Mm(1,132)|0;if(e|0){f=e+112|0;Wu(f,d)|0;c[e+4>>2]=f;f=c[b>>2]|0;if(f|0)c[f>>2]=e;c[b>>2]=e;if(!(c[a>>2]|0))c[a>>2]=e}return e|0}function bo(b){b=b|0;var c=0,d=0,e=0;if(!b)c=170101;else{d=170101;e=b;while(1){a[d>>0]=a[164880+(e&63)>>0]|0;b=d+1|0;e=e>>>6;if(!e){c=b;break}else d=b}}a[c>>0]=0;return 170101}function on(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;e=Or(fb(300,g|0)|0)|0;i=f;return e|0}function nn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;e=Or(nd(297,g|0)|0)|0;i=f;return e|0}function kn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;e=Or(db(302,g|0)|0)|0;i=f;return e|0}function gn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;e=Or(Yb(320,g|0)|0)|0;i=f;return e|0}function en(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=a;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;e=Or(cb(305,g|0)|0)|0;i=f;return e|0}function _m(a){a=a|0;var b=0,e=0,f=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();e=b;if((c[a+8>>2]|0)==0?(bk(a)|0)!=0:0)f=-1;else if((Jd[c[a+32>>2]&31](a,e,1)|0)==1)f=d[e>>0]|0;else f=-1;i=b;return f|0}function wn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=0;c[e+8>>2]=b;c[e+12>>2]=((b|0)<0)<<31>>31;b=Or(md(193,e|0)|0)|0;i=d;return b|0}function vn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=0;c[e+8>>2]=b;c[e+12>>2]=((b|0)<0)<<31>>31;b=Or(Hc(194,e|0)|0)|0;i=d;return b|0}function pn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;do{c[e>>2]=a;c[e+4>>2]=b;f=Ca(63,e|0)|0}while((f|0)==-16);g=f;e=Or(g)|0;i=d;return e|0}function ko(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;if((a[d+75>>0]|0)!=(b|0)?(e=d+20|0,f=c[e>>2]|0,f>>>0<(c[d+16>>2]|0)>>>0):0){c[e>>2]=f+1;a[f>>0]=b;g=b&255}else g=Ci(d,b)|0;return g|0}function Pm(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;while(1)if((cd(a|0,d|0,0)|0)<0)if((c[($r()|0)>>2]|0)==4)continue;else break;else if(!(c[d>>2]&127))break;else continue;i=b;return}function Ln(a){a=+a;var b=0,d=0.0;h[k>>3]=a;b=c[k+4>>2]&2146435072;do if(b>>>0<2146435072|(b|0)==2146435072&0<0)if(a==0.0){d=-1.0/(a*a);break}else{d=+(ai(a)|0);break}else d=a*a;while(0);return +d}function Kn(a){a=+a;var b=0,d=0.0;h[k>>3]=a;b=c[k+4>>2]&2146435072;do if(b>>>0<2146435072|(b|0)==2146435072&0<0)if(a==0.0){d=-1.0/(a*a);break}else{d=+(dy(a)|0);break}else d=a*a;while(0);return +d}function Lo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;f=b+75|0;a[f>>0]=-1;switch(e|0){case 2:{c[b+48>>2]=0;break}case 1:{a[f>>0]=10;break}default:{}}c[b>>2]=c[b>>2]|64;return 0}function Cn(a){a=+a;var b=0,d=0,e=0,f=0.0;b=(g[k>>2]=a,c[k>>2]|0);d=(b>>>23&255)+-118|0;if((d|0)<=31?(e=(d|0)<9?2147483647:-1>>>d,(e&b|0)!=0):0)f=(c[k>>2]=b&~e,+g[k>>2]);else f=a;return +f}function mo(a){a=a|0;var b=0,d=0;Xb(166908);b=(c[5680]|0)+-4|0;c[b>>2]=c[5713]<<8|c[5679]<<16|c[41729];c[5680]=a+4;d=c[a>>2]|0;c[5679]=d>>>16;c[5713]=d>>>8&255;c[41729]=d&255;Cd(166908);return b|0}function to(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;if((b|0)!=0&(f|0)>(b|0))c[a+100>>2]=e+b;else c[a+100>>2]=d;return}function Jm(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function zn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+144|0;if((i|0)>=(j|0))ca();e=d+8|0;f=d;c[f>>2]=32;if((Pg(a,b,e,f)|0)<0)g=-1;else g=Lb(c[f>>2]|0,e|0)|0;i=d;return g|0}function yo(a,b,c){a=+a;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0.0;d=c+-1|0;c=b;e=+h[b>>3]+a;while(1){c=c+8|0;f=e*a+ +h[c>>3];d=d+-1|0;if(!d){g=f;break}else e=f}return +g}function oo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b>>2]|0;if(!e)f=0;else{g=e+(gh(e,d)|0)|0;if(!(a[g>>0]|0))h=0;else{a[g>>0]=0;h=g+1|0}c[b>>2]=h;f=e}return f|0}function xo(b){b=b|0;var d=0;c[b>>2]=c[b>>2]&-1516;d=b+4|0;c[d>>2]=c[d>>2]&-2;d=b+12|0;c[d>>2]=c[d>>2]&-32844;d=b+8|0;c[d>>2]=c[d>>2]&-305|48;a[b+23>>0]=1;a[b+22>>0]=0;return}function kp(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;e=c&255;c=d;while(1){if(!c){f=0;break}c=c+-1|0;d=b+c|0;if((a[d>>0]|0)==e<<24>>24){f=d;break}}return f|0}function Jo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a+20|0;f=c[e>>2]|0;g=(c[a+16>>2]|0)-f|0;a=g>>>0>d>>>0?d:g;$j(f|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+a;return d|0}function ro(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;if(b>>>0>64){d=b+-65&-64;e=b;do{Fh(a,c,64);e=e+-64|0}while(e>>>0>64);f=b+-64-d|0}else f=b;Fh(a,c,f);return}function lo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;if(b>>>0>32){d=b+-33&-32;e=b;do{Gh(a,c,32);e=e+-32|0}while(e>>>0>32);f=b+-32-d|0}else f=b;Gh(a,c,f);return}function yn(a,b){a=+a;b=+b;var d=0.0,e=0.0;d=+O(+a);if((g[k>>2]=d,c[k>>2]|0)>>>0<=2139095040){d=+O(+b);if((g[k>>2]=d,c[k>>2]|0)>>>0>2139095040)e=b;else e=a>b?a-b:0.0}else e=a;return +e}function Io(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;e=Fr(b)|0;if(e>>>0>=d>>>0){if(d|0){f=d+-1|0;No(a,b,f)|0;c[a+(f<<2)>>2]=0}}else No(a,b,e+1|0)|0;return e|0}function Jn(a,b){a=a|0;b=b|0;var d=0,e=0;do if(b)if(!(b&-4112)){d=a+8|0;c[d>>2]=c[d>>2]&-4112|b;e=0;break}else{c[($r()|0)>>2]=22;e=-1;break}else e=0;while(0);return e|0}function Go(a,b,c){a=+a;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0.0;d=c;c=b;e=+h[b>>3];while(1){c=c+8|0;f=e*a+ +h[c>>3];d=d+-1|0;if(!d){g=f;break}else e=f}return +g}function No(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(d|0){e=d;d=b;b=a;while(1){e=e+-1|0;c[b>>2]=c[d>>2];if(!e)break;else{d=d+4|0;b=b+4|0}}}return a|0}function Ao(){var a=0,b=0,d=0;a=166e3;b=Zp(c[a>>2]|0,c[a+4>>2]|0,1284865837,1481765933)|0;a=Gr(b|0,D|0,1,0)|0;b=D;d=166e3;c[d>>2]=a;c[d+4>>2]=b;d=kr(a|0,b|0,33)|0;return d|0}function wo(a){a=a|0;var b=0,c=0,d=0;if(a)if(!(a&1)){b=a;a=0;while(1){b=b>>>1;if(b&1|0){c=a;break}else a=a+1|0}d=c+2|0}else d=1;else d=0;return d|0}function co(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((c[a+76>>2]|0)>-1){e=(Ey(a)|0)==0;f=uj(a,b,d)|0;if(e)g=f;else{Dy(a);g=f}}else g=uj(a,b,d)|0;return g|0}function Eo(a,b){a=a|0;b=b|0;var e=0,f=0;e=Nf(a)|0;if(((e|0)!=-1?(a=Nf(b)|0,(a|0)!=-1):0)?(d[160043+e>>0]|0)<=207:0)f=a<<16|e;else{c[($r()|0)>>2]=22;f=-1}return f|0}function ho(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(ed(168,f|0)|0)|0;i=e;return d|0}function go(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(qd(212,f|0)|0)|0;i=e;return d|0}function fo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(kb(144,f|0)|0)|0;i=e;return d|0}function ao(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(Kc(198,f|0)|0)|0;i=e;return d|0}function _n(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(bc(146,f|0)|0)|0;i=e;return d|0}function Zn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(Bc(218,f|0)|0)|0;i=e;return d|0}function Yn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(xc(296,f|0)|0)|0;i=e;return d|0}function Wn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(gb(301,f|0)|0)|0;i=e;return d|0}function Vn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(yc(219,f|0)|0)|0;i=e;return d|0}function Un(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(Ac(299,f|0)|0)|0;i=e;return d|0}function Tn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(Sc(211,f|0)|0)|0;i=e;return d|0}function Sn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(cc(209,f|0)|0)|0;i=e;return d|0}function Qn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(bb(304,f|0)|0)|0;i=e;return d|0}function Pn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(xa(220,f|0)|0)|0;i=e;return d|0}function io(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(Qb(14,f|0)|0)|0;i=e;return d|0}function eo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(lb(145,f|0)|0)|0;i=e;return d|0}function Rn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(Gb(97,f|0)|0)|0;i=e;return d|0}function Bo(a){a=a|0;b[11924]=b[a>>1]|0;b[11925]=b[a+2>>1]|0;b[11926]=b[a+4>>1]|0;b[11927]=b[a+6>>1]|0;b[11928]=b[a+8>>1]|0;b[11929]=b[a+10>>1]|0;b[11930]=b[a+12>>1]|0;return}function $n(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(pb(85,f|0)|0)|0;i=e;return d|0}function no(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or(Vb(3,f|0)|0)|0;i=e;return d|0}function jo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=a;c[f+4>>2]=b;c[f+8>>2]=d;d=Or($b(4,f|0)|0)|0;i=e;return d|0}function hp(b){b=b|0;var c=0,d=0,e=0;c=a[b>>0]|0;if(c<<24>>24){d=b;e=c;do{a[d>>0]=Ht(e<<24>>24)|0;d=d+1|0;e=a[d>>0]|0}while(e<<24>>24!=0)}return b|0}function gp(b){b=b|0;var c=0,d=0,e=0;c=a[b>>0]|0;if(c<<24>>24){d=b;e=c;do{a[d>>0]=Gt(e<<24>>24)|0;d=d+1|0;e=a[d>>0]|0}while(e<<24>>24!=0)}return b|0}function Mn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;Kd[3&7](-1);c[e>>2]=a;c[e+4>>2]=b;b=Or(Kb(91,e|0)|0)|0;Od[2&3]();i=d;return b|0}function so(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Hb(96,e|0)|0)|0;i=d;return ((b|0)<0?b:20-b|0)|0}function ap(a){a=a|0;var b=0,d=0,e=0;if((c[a+76>>2]|0)>-1){b=(Ey(a)|0)==0;d=(c[a>>2]|0)>>>4&1;if(b)e=d;else{Dy(a);e=d}}else e=(c[a>>2]|0)>>>4&1;return e|0}function Wo(a){a=a|0;var b=0,d=0,e=0;if((c[a+76>>2]|0)>-1){b=(Ey(a)|0)==0;d=(c[a>>2]|0)>>>5&1;if(b)e=d;else{Dy(a);e=d}}else e=(c[a>>2]|0)>>>5&1;return e|0}function uo(a,b,c){a=+a;b=b|0;c=c|0;var d=0,e=0,f=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d+8|0;f=d;_g(a,e,f);h[b>>3]=+h[e>>3];h[c>>3]=+h[f>>3];i=d;return}function Ko(a,b){a=a|0;b=b|0;var d=0;if(!a)d=Mm(1,24)|0;else{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;d=b}return d|0}function Co(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;if((sf(e,2,a)|0)<0)f=0;else{c[b>>2]=c[e+4>>2];f=1}i=d;return f|0}function Fo(a){a=+a;var b=0.0;do if(((g[k>>2]=a,c[k>>2]|0)&2139095040)>>>0<2139095040)if(a==0.0){b=-1.0/(a*a);break}else{b=+(Jj(a)|0);break}else b=a*a;while(0);return +b}function zo(a){a=a|0;var b=0;if((c[a+76>>2]|0)>-1){b=(Ey(a)|0)==0;uj(a,0,0)|0;c[a>>2]=c[a>>2]&-33;if(!b)Dy(a)}else{uj(a,0,0)|0;c[a>>2]=c[a>>2]&-33}return}function To(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;e=b+4|0;c[d>>2]=e;f=(Rl(a,21545,d)|0)<0;i=b;return (f?-1:c[e>>2]|0)|0}function Ro(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;e=b+4|0;c[d>>2]=e;f=(Rl(a,21519,d)|0)<0;i=b;return (f?-1:c[e>>2]|0)|0}function Po(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;e=b+4|0;c[d>>2]=e;f=(Rl(a,35077,d)|0)<0;i=b;return (f?-1:c[e>>2]|0)|0}function Do(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if((c[b+76>>2]|0)>-1){d=(Ey(b)|0)==0;e=Kh(a,b)|0;if(d)f=e;else{Dy(b);f=e}}else f=Kh(a,b)|0;return f|0}function So(a){a=a|0;var b=0,d=0,e=0;if(!a)b=c[5714]|0;else{do{d=c[5714]|0;e=c[5714]|0;if((e|0)==(d|0))c[5714]=a}while((e|0)!=(d|0));b=d}return b|0}function Yp(a){a=a|0;var b=0,d=0;if(!a){b=0;return b|0}d=c[a+-4>>2]|0;a=d&3;if((a|0)==1){b=0;return b|0}b=(d&-8)-((a|0)==0?8:4)|0;return b|0}function Xo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;f=d+4|0;c[f>>2]=b;c[e>>2]=f;f=Rl(a,21520,e)|0;i=d;return f|0}function Bp(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;do if((b|0)<=-1)if(b>>>0<3221225472){d=b&65535;break}else{d=b&255;break}else d=b&16777215;while(0);return d|0}function An(a,b){a=+a;b=+b;var d=0,e=0;h[k>>3]=b;d=c[k+4>>2]|0;b=+O(+a);h[k>>3]=b;e=d&-2147483648|c[k+4>>2];c[k>>2]=c[k>>2];c[k+4>>2]=e;return +(+h[k>>3])}function Oo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();g=d;c[g>>2]=f;f=Ne(a,b,e,g)|0;i=d;return f|0}function mp(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if(((a[c>>0]|0)!=0?(Ol(c,159691)|0)!=0:0)?(Ol(c,159693)|0)!=0:0)e=0;else if(!d)e=Mm(1,4)|0;else e=d;return e|0}function jp(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;c[d+4>>2]=0;a=(Jb(d|0,d|0)|0)==0;i=b;return (a?0:c[d>>2]|0)|0}function Ho(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;c[d+4>>2]=21513;c[d+8>>2]=1;a=Or(Bd(54,d|0)|0)|0;i=b;return a|0}function Cp(){var a=0,b=0,e=0,f=0;a=c[1801]|0;b=a+4|0;e=c[b>>2]|0;if(e>>>0<(c[a+8>>2]|0)>>>0){c[b>>2]=e+1;f=d[e>>0]|0}else f=_m(a)|0;return f|0}function Jp(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;do if((b|0)<=-1)if(b>>>0<3221225472){d=b>>>16;break}else{d=b>>>8;break}else d=b>>>24;while(0);return d|0}function po(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=a;Ta(1,b|0)|0;Xb(166920);wp(c[5715]|0)|0;c[5715]=-1;Cd(166920);Ta(c[b>>2]|0,0)|0;i=a;return}function Eq(a){a=a|0;var b=0;b=($(c[a>>2]|0,1103515245)|0)+12345|0;c[a>>2]=b;a=b>>>11^b;b=a<<7&-1658038656^a;a=b<<15&-272236544^b;return (a>>>18^a)>>>1|0}function np(a){a=a|0;var b=0,d=0,e=0;if(jk(a)|0){b=a+76|0;d=a+80|0;do{e=c[b>>2]|0;if(e|0)Gd(b|0,d|0,e|0,1)}while((jk(a)|0)!=0)}return}function vp(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;e=b+4|0;c[e>>2]=0;c[d>>2]=e;e=Rl(a,1074025521,d)|0;i=b;return e|0}function up(a,b,d){a=+a;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=b;h[f+8>>3]=a;Pp(d,159663,f)|0;i=e;return d|0}function rp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=e;e=th(a,b,d,g)|0;i=f;return e|0}function qp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=e;e=Ne(a,b,d,g)|0;i=f;return e|0}function pp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;if((i|0)>=(j|0))ca();g=f;c[g>>2]=e;e=yi(a,b,d,g)|0;i=f;return e|0}function bp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Gc(195,e|0)|0)|0;i=d;return b|0}function _o(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Ra(150,e|0)|0)|0;i=d;return b|0}function Uo(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(ad(151,e|0)|0)|0;i=d;return b|0}function Qo(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(sd(205,e|0)|0)|0;i=d;return b|0}function Mo(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Tc(121,e|0)|0)|0;i=d;return b|0}function $o(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Fc(196,e|0)|0)|0;i=d;return b|0}function tp(b,d){b=b|0;d=d|0;var e=0;if((b|0)!=0?(a[b>>0]|0)!=0:0){if(d|0?qi(d,160037)|0:0)e=5}else e=5;if((e|0)==5)c[($r()|0)>>2]=22;return 0}function fp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Pb(15,e|0)|0)|0;i=d;return b|0}function ep(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Uc(39,e|0)|0)|0;i=d;return b|0}function dp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Rc(33,e|0)|0)|0;i=d;return b|0}function cp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Vc(38,e|0)|0)|0;i=d;return b|0}function Zo(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(zd(57,e|0)|0)|0;i=d;return b|0}function Yo(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(rb(83,e|0)|0)|0;i=d;return b|0}function Vo(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Wa(77,e|0)|0)|0;i=d;return b|0}function lp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;c[e+4>>2]=b;b=Or(Ub(9,e|0)|0)|0;i=d;return b|0}function sp(a){a=a|0;var b=0,d=0,e=0;if((c[a+76>>2]|0)>-1){b=(Ey(a)|0)==0;d=rg(a)|0;if(b)e=d;else{Dy(a);e=d}}else e=rg(a)|0;return e|0}function op(a){a=a|0;var b=0,d=0,e=0;if((c[a+76>>2]|0)>-1){b=(Ey(a)|0)==0;d=qm(a)|0;if(b)e=d;else{Dy(a);e=d}}else e=qm(a)|0;return e|0}function dq(a){a=a|0;var b=0,e=0,f=0;b=a+4|0;e=c[b>>2]|0;if(e>>>0<(c[a+8>>2]|0)>>>0){c[b>>2]=e+1;f=d[e>>0]|0}else f=_m(a)|0;return f|0}function Zq(a){a=+a;var b=0.0,c=0.0;b=a*a;c=b*a;return +(c*(b*b)*(b*2.718311493989822e-06+-1.9839334836096632e-04)+(c*(b*.008333329385889463+-.16666666641626524)+a))}function zp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f|0;Oe(a,b,d,e,g)|0;i=f;return (D=c[g+4>>2]|0,c[g>>2]|0)|0}function $p(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(d|0){e=d;d=a;while(1){e=e+-1|0;c[d>>2]=b;if(!e)break;else d=d+4|0}}return a|0}function wp(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Zb(6,d|0)|0;d=Or((a|0)==-4?-115:a)|0;i=b;return d|0}function Gp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=((Rl(a,21505,e)|0)!=0)<<31>>31;i=d;return b|0}function iq(a,b){a=a|0;b=b|0;var d=0,e=0;if(!(b&-4112)){d=a+8|0;c[d>>2]=c[d>>2]&-4112|b;e=0}else{c[($r()|0)>>2]=22;e=-1}return e|0}function Xp(a){a=a|0;b[83728]=b[11924]|0;b[83729]=b[11925]|0;b[83730]=b[11926]|0;b[11924]=b[a>>1]|0;b[11925]=b[a+2>>1]|0;b[11926]=b[a+4>>1]|0;return 167456}function Ip(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;if(b|0){d=b;do{de(c[d>>2]|0);b=d;d=c[d+4>>2]|0;de(b)}while((d|0)!=0)}de(a);return}function Cq(a,b){a=a|0;b=b|0;var d=0,e=0;d=a;e=b;while(1){b=c[e>>2]|0;c[d>>2]=b;if(!b)break;else{d=d+4|0;e=e+4|0}}return a|0}function gq(a,b){a=a|0;b=b|0;var c=0;do if(a>>>0>=256)if(a>>>0<65536){c=a<<16;break}else{c=a<<8;break}else c=a<<24;while(0);return c|b|0}function xq(a,b){a=a|0;b=b|0;var d=0;d=c[c[(c[a>>2]|0)+4>>2]>>2]|0;a=c[c[(c[b>>2]|0)+4>>2]>>2]|0;return ((d|0)<(a|0)?-1:(d|0)>(a|0)&1)|0}function Rq(a){a=a|0;var b=0;if(a>>>0<131072)b=(d[146370+((d[146370+(a>>>8)>>0]|0)<<5|a>>>3&31)>>0]|0)>>>(a&7)&1;else b=a>>>0<196606&1;return b|0}function xp(){var a=0,b=0;Xb(166076);a=c[41518]|0;if(a|0){b=a;do{ym(b);b=c[b+56>>2]|0}while((b|0)!=0)}ym(c[1830]|0);ym(c[1860]|0);return}function oq(b,c){b=b|0;c=c|0;var d=0,e=0;d=Ns(b,c)|0;c=Wd(d+1|0)|0;if(!c)e=0;else{$j(c|0,b|0,d|0)|0;a[c+d>>0]=0;e=c}return e|0}function Zp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=sn(e,a)|0;f=D;return (D=($(b,a)|0)+($(d,e)|0)+f|f&0,c|0|0)|0}function Ep(a){a=a|0;var c=0,d=0;c=i;i=i+16|0;if((i|0)>=(j|0))ca();d=c;b[d>>1]=13070;b[d+2>>1]=a;b[d+4>>1]=a>>>16;Xp(d)|0;i=c;return}function Lp(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;i=i+16|0;if((i|0)>=(j|0))ca();d=(gg(a,b,166156,166172,32,c)|0)==0;i=c;return (d?166156:0)|0}function Kp(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;i=i+16|0;if((i|0)>=(j|0))ca();d=(Fg(a,b,166720,166736,32,c)|0)==0;i=c;return (d?166720:0)|0}function Hp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=b;b=ue(a,f,d,0)|0;i=e;return b|0}function Fp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=b;b=ff(a,f,d,0)|0;i=e;return b|0}function Ap(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=b;b=uf(a,f,3,d)|0;i=e;return b|0}function Oq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a+8>>2]|0;e=c[a+4>>2]|0;if((d|0)==(e|0))f=0;else{c[b>>2]=d-e;f=e}return f|0}function Kq(a){a=+a;var b=0.0;b=+Nu(+a);D=+O(b)>=1.0?(b>0.0?~~+aa(+N(b/4294967296.0),4294967295.0)>>>0:~~+_((b-+(~~b>>>0))/4294967296.0)>>>0):0;return ~~b>>>0|0}function Hq(a){a=+a;var b=0.0;b=+Ku(+a);D=+O(b)>=1.0?(b>0.0?~~+aa(+N(b/4294967296.0),4294967295.0)>>>0:~~+_((b-+(~~b>>>0))/4294967296.0)>>>0):0;return ~~b>>>0|0}function Up(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=$d(a,b,f)|0;i=e;return d|0}function Tp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=fm(a,b,f)|0;i=e;return d|0}function Sp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=zl(a,b,f)|0;i=e;return d|0}function Rp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=sg(a,b,f)|0;i=e;return d|0}function Qp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=_d(a,b,f)|0;i=e;return d|0}function Pp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=nt(a,b,f)|0;i=e;return d|0}function Op(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=yl(a,b,f)|0;i=e;return d|0}function Nq(a){a=+a;var b=0.0;b=+Em(a);D=+O(b)>=1.0?(b>0.0?~~+aa(+N(b/4294967296.0),4294967295.0)>>>0:~~+_((b-+(~~b>>>0))/4294967296.0)>>>0):0;return ~~b>>>0|0}function Np(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=qj(a,b,f)|0;i=e;return d|0}function Mp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;d=xi(a,b,f)|0;i=e;return d|0}function Lq(a){a=+a;var b=0.0;b=+Hn(a);D=+O(b)>=1.0?(b>0.0?~~+aa(+N(b/4294967296.0),4294967295.0)>>>0:~~+_((b-+(~~b>>>0))/4294967296.0)>>>0):0;return ~~b>>>0|0}function Iq(a){a=+a;var b=0.0;b=+Yx(a);D=+O(b)>=1.0?(b>0.0?~~+aa(+N(b/4294967296.0),4294967295.0)>>>0:~~+_((b-+(~~b>>>0))/4294967296.0)>>>0):0;return ~~b>>>0|0}function bq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=a;a=(gm(e,4,1,b)|0)+-1|0;i=d;return a|0}function Vq(a,b){a=a|0;b=b|0;var c=0;switch(b|0){case 1:{c=rx(a)|0;break}case 2:{c=sx(a)|0;break}default:c=a}return c|0}function Xq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=(b|0)<0?-1:0;return b>>c-32|0}function Wp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=sg(c[1831]|0,a,e)|0;i=d;return b|0}function Mq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=Ns(a,c)|0;if((d|0)==(c|0))e=zi(b)|0;else e=gf(a+d|0,b,c-d|0)|0;return e+d|0}function Aq(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;e=(ah(d,4,1,a)|0)!=0;i=b;return (e?c[d>>2]|0:-1)|0}function Dp(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=c[a+60>>2];a=Or(Zb(6,d|0)|0)|0;i=b;return a|0}function qq(a){a=a|0;var b=0;if((c[a+76>>2]|0)>-1){b=(Ey(a)|0)==0;c[a>>2]=c[a>>2]&-49;if(!b)Dy(a)}else c[a>>2]=c[a>>2]&-49;return}function fq(a,b){a=+a;b=b|0;var c=0,d=0,e=0.0;c=i;i=i+16|0;if((i|0)>=(j|0))ca();d=c;e=+eh(a,d);h[b>>3]=+h[d>>3];i=c;return +e}function Yq(b){b=b|0;var d=0,e=0;d=Qf(b,2147483647,c[1801]|0)|0;if(d|0?(e=b+((zi(b)|0)+-1)|0,(a[e>>0]|0)==10):0)a[e>>0]=0;return d|0}function Tq(b){b=b|0;var d=0;if(((b|0)!=0?(a[b>>0]|0)!=0:0)?(Ol(b,159668)|0)!=0:0){c[($r()|0)>>2]=22;d=0}else d=159668;return d|0}function Sq(a,b){a=a|0;b=b|0;var d=0;d=a+16|0;Xb(d|0);c[a+4>>2]=pm(c[a>>2]|0,b,0)|0;c[a+12>>2]=0;c[a+8>>2]=0;Cd(d|0);return}function zq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=Rl(a,21514,e)|0;i=d;return b|0}function yq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=Rl(a,21515,e)|0;i=d;return b|0}function nq(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=0;e=Rl(a,21513,d)|0;i=b;return e|0}function yp(a){a=a|0;var b=0,c=0,d=0;b=i;i=i+272|0;if((i|0)>=(j|0))ca();c=pi(a,b)|0;if(!c)d=-1;else d=lq(c)|0;i=b;return d|0}function tr(a){a=+a;var b=0.0;b=a*a;a=b*b;return +(1.0-b*.499999997251031+a*.04166662332373906+b*a*(b*2.439044879627741e-05+-.001388676377460993))}function Qq(){var a=0;a=Cg(1,524290,0)|0;do if((a|0)>=0)if((Vl(a,146062,12)|0)<0){wp(a)|0;break}else{c[5715]=a;break}while(0);return}function er(a){a=a|0;var b=0;if(a>>>0<131072)b=(d[153044+((d[153044+(a>>>8)>>0]|0)<<5|a>>>3&31)>>0]|0)>>>(a&7)&1;else b=0;return b|0}function Fq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=Ml(a,577,e)|0;i=d;return b|0}function sq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;if((i|0)>=(j|0))ca();f=e;c[f>>2]=d;ug(a,b,f);i=e;return}function Bq(a,b){a=a|0;b=b|0;var c=0,d=0;c=Cy()|0;if(c)if((zi(c)|0)>>>0<b>>>0){Wu(a,c)|0;d=0}else d=34;else d=6;return d|0}function jr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return (D=e,a-c>>>0|0)|0}function ip(a,b){a=+a;b=+b;var d=0;d=(g[k>>2]=b,c[k>>2]|0);b=+O(+a);return +(c[k>>2]=d&-2147483648|(g[k>>2]=b,c[k>>2]|0),+g[k>>2])}function fr(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}D=a<<c-32;return 0}function Jq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=ou(a,e)|0;i=d;return b|0}function Gq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=ku(a,e)|0;i=d;return b|0}function Dq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;if((i|0)>=(j|0))ca();e=d;c[e>>2]=b;b=bu(a,e)|0;i=d;return b|0}function kq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(Ib(118,d|0)|0)|0;i=b;return a|0}function jq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(ub(122,d|0)|0)|0;i=b;return a|0}function hq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(nb(147,d|0)|0)|0;i=b;return a|0}function eq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(Xa(132,d|0)|0)|0;i=b;return a|0}function dr(a,b){a=a|0;b=b|0;var c=0,d=0;c=(b|0)>0|(b|0)==0&a>>>0>0;d=jr(0,0,a|0,b|0)|0;D=c?b:D;return (c?a:d)|0}function cq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(Pa(152,d|0)|0)|0;i=b;return a|0}function br(a,b){a=a|0;b=b|0;var c=0,d=0;c=(b|0)>0|(b|0)==0&a>>>0>0;d=jr(0,0,a|0,b|0)|0;D=c?b:D;return (c?a:d)|0}function aq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(yb(148,d|0)|0)|0;i=b;return a|0}function Wq(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Md[a&1](b|0,c|0,d|0,e|0,f|0,g|0)|0}function wq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(gd(41,d|0)|0)|0;i=b;return a|0}function vq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(yd(51,d|0)|0)|0;i=b;return a|0}function uq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(Ed(34,d|0)|0)|0;i=b;return a|0}function tq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(hd(42,d|0)|0)|0;i=b;return a|0}function rq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(Rb(12,d|0)|0)|0;i=b;return a|0}function pq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(fd(40,d|0)|0)|0;i=b;return a|0}function mq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(Da(60,d|0)|0)|0;i=b;return a|0}function lq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();d=b;c[d>>2]=a;a=Or(Tb(10,d|0)|0)|0;i=b;return a|0}function _q(a){a=a|0;var b=0;b=a+16|0;Xb(b|0);pm(c[a>>2]|0,0,0)|0;c[a+12>>2]=0;c[a+8>>2]=0;c[a+4>>2]=0;Cd(b|0);return}function kr(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=0;return b>>>c-32|0}function Vp(a){a=a|0;var b=0;b=nl(a,23854)|0;a=fr(b|0,D|0,4)|0;b=D|1072693248;c[k>>2]=a;c[k+4>>2]=b;return +(+h[k>>3]+-1.0)}function _p(){var a=0,b=0;a=nl(23848,23854)|0;b=fr(a|0,D|0,4)|0;a=D|1072693248;c[k>>2]=b;c[k+4>>2]=a;return +(+h[k>>3]+-1.0)}function $q(a){a=a|0;var b=0,c=0,d=0;b=(zi(a)|0)+1|0;c=Wd(b)|0;if(!c)d=0;else{$j(c|0,a|0,b|0)|0;d=c}return d|0}function xr(a){a=a|0;var b=0;if((a&-2|0)==8232|(a>>>0<32|(a+-127|0)>>>0<33))b=1;else b=(a+-65529|0)>>>0<3;return b&1|0}function ar(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Qd[a&1](b|0,c|0,d|0,e|0,f|0,g|0)}function sr(a,b){a=a|0;b=b|0;var c=0;if(a>>>0<9){c=Wd(b)|0;return c|0}else{c=tg(a,b)|0;return c|0}return 0}function Pq(b,c){b=b|0;c=c|0;var d=0;if(!c)return;else d=0;do{a[b+d>>0]=0;d=d+1|0}while((d|0)!=(c|0));return}function Gr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return (D=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function rr(a){a=a|0;var b=0,d=0;if((a|0)==-1)b=0;else{d=c[41860]|0;b=a+-1+d&0-d}c[41850]=b;return b|0}function pr(a){a=a|0;var b=0,c=0,d=0;b=(Fr(a)|0)+1|0;c=Wd(b<<2)|0;if(!c)d=0;else d=No(c,a,b)|0;return d|0}function Cr(a){a=+a;var b=0;h[k>>3]=a;b=c[k+4>>2]&2146435072;return (b>>>0<2146435072|(b|0)==2146435072&0<0)&1|0}function qr(a){a=a|0;var b=0,d=0;b=il(a,169554,32)|0;if(!b)d=169554;else{c[($r()|0)>>2]=b;d=0}return d|0}function or(a){a=a|0;var b=0,d=0;b=Ok(a,169822,22)|0;if(!b)d=169822;else{c[($r()|0)>>2]=b;d=0}return d|0}function ir(a){a=a|0;var b=0,c=0;b=i;i=i+64|0;if((i|0)>=(j|0))ca();c=(Gp(a,b)|0)==0&1;i=b;return c|0}function Mr(a){a=a|0;var b=0,c=0;if(!(Ol(a,153028)|0))b=1;else{c=(Ol(a,153036)|0)==0;b=c?2:0}return b|0}function Lr(a,b){a=a|0;b=b|0;var d=0,e=0;d=op(a)|0;if((d|0)<0)e=-1;else{c[b>>2]=d;e=0}return e|0}function Fr(a){a=a|0;var b=0,d=0;b=a;while(1)if(!(c[b>>2]|0)){d=b;break}else b=b+4|0;return d-a>>2|0}function mr(a){a=a|0;var b=0,c=0;b=i;i=i+16|0;if((i|0)>=(j|0))ca();c=Ml(165674,a,b)|0;i=b;return c|0}function hr(a,b){a=+a;b=+b;var c=0,d=0.0;c=i;i=i+16|0;if((i|0)>=(j|0))ca();d=+we(a,b,c);i=c;return +d}function gr(a,b){a=+a;b=+b;var c=0,d=0.0;c=i;i=i+16|0;if((i|0)>=(j|0))ca();d=+Ue(a,b,c);i=c;return +d}function Er(a){a=a|0;var b=0;if(a|0){b=a;do{a=b;b=c[b>>2]|0;de(a)}while((b|0)!=0)}return}function ur(a){a=a|0;var b=0;b=a+8|0;if(!(c[b>>2]|0))c[b>>2]=0-(Ai(c[a+4>>2]|0,c[a>>2]|0)|0);return}function Uq(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function Hr(a){a=a|0;var b=0;if(!(c[a+16>>2]|0))b=0;else b=(c[a+20>>2]|0)-(c[a+28>>2]|0)|0;return b|0}function cr(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=Or(Oa(153,a|0)|0)|0;i=a;return b|0}function nr(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=Or(sb(29,a|0)|0)|0;i=a;return b|0}function lr(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=Or(za(66,a|0)|0)|0;i=a;return b|0}function Zr(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=(b|0)/(d|0)|0;c[a+4>>2]=(b|0)%(d|0)|0;return}function Xr(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=(b|0)/(d|0)|0;c[a+4>>2]=(b|0)%(d|0)|0;return}function Sr(a){a=a|0;c[a+16>>2]=0;c[a+28>>2]=0;c[a+20>>2]=0;c[a+8>>2]=0;c[a+4>>2]=0;return 0}function Pr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=zi(b)|0;if(d>>>0<c>>>0)Wu(a,b)|0;return d|0}function Tr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=zi(b)|0;if(d>>>0<c>>>0)Wu(a,b)|0;return d|0}function Or(a){a=a|0;var b=0;if(a>>>0>4294963200){c[($r()|0)>>2]=0-a;b=-1}else b=a;return b|0}function Nr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Pd[a&0](b|0,c|0,d|0,e|0)|0}function zr(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=jc(200,a|0)|0;i=a;return b|0}function yr(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=Jc(199,a|0)|0;i=a;return b|0}function wr(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=hc(202,a|0)|0;i=a;return b|0}function vr(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=ic(201,a|0)|0;i=a;return b|0}function es(a){a=a|0;var b=0;if((a+-48|0)>>>0<10)b=1;else b=((a|32)+-97|0)>>>0<6;return b&1|0}function cs(a){a=a|0;var b=0;if((a+-48|0)>>>0<10)b=1;else b=((a|32)+-97|0)>>>0<6;return b&1|0}function as(b,c){b=b|0;c=c|0;var d=0;d=Wg(b,c)|0;return ((a[d>>0]|0)==(c&255)<<24>>24?d:0)|0}function Ur(a){a=a|0;var b=0;b=Mm(1,4)|0;if((a|0)!=(-1|0)&(b|0)!=0)c[b>>2]=c[a>>2];return b|0}function Dr(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=tc(20,a|0)|0;i=a;return b|0}function Br(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=Ba(65,a|0)|0;i=a;return b|0}function Ar(){var a=0,b=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();b=Aa(64,a|0)|0;i=a;return b|0}function Qr(a){a=a|0;var b=0,d=0;b=(vd()|0)+180|0;d=c[b>>2]|0;if(a|0)c[b>>2]=a;return d|0}function Kr(a){a=a|0;var b=0,d=0;b=a+68|0;d=(c[b>>2]|0)+-1|0;c[b>>2]=d;if(!d)Dy(a);return}function ws(a){a=+a;return +(+Y(+(a+-1416.0996898839683))*2247116418577894884661631.0e283*2247116418577894884661631.0e283)}function Bs(a){a=+a;return +(+Y(+(a+-162.88958740234375))*1661534994731144841129758.0e11*1661534994731144841129758.0e11)}function _r(a,b){a=a|0;b=b|0;var c=0.0;c=-+h[b+8>>3];h[a>>3]=+h[b>>3];h[a+8>>3]=c;return}function Yr(a,b){a=a|0;b=b|0;var c=0.0;c=-+h[b+8>>3];h[a>>3]=+h[b>>3];h[a+8>>3]=c;return}function fs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Wk(a,b,c)|0;return d+((Hs(b,c)|0)<<2)|0}function bs(a,b){a=a|0;b=b|0;var d=0.0;d=-+g[b+4>>2];c[a>>2]=c[b>>2];g[a+4>>2]=d;return}function Jr(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;if((i|0)>=(j|0))ca();return b|0}function ms(a,b){a=a|0;b=b|0;var d=0;d=a+((Ui(a,b)|0)<<2)|0;return (c[d>>2]|0?d:0)|0}function Vr(a){a=a|0;var b=0;if(!(c[a>>2]&4))b=(c[a+16>>2]|0)!=0;else b=1;return b&1|0}function Wr(a){a=a|0;var b=0;if(!(c[a>>2]&8))b=(c[a+8>>2]|0)!=0;else b=1;return b&1|0}function As(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return ((d|0)==1?b:c)|0}function xs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=fi(a,b,c,0,-2147483648)|0;return d|0}function vs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Xj(a,b,c,-2147483648,0)|0;return d|0}function ss(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Xj(a,b,c,0,-2147483648)|0;return d|0}function rs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Xj(a,b,c,0,-2147483648)|0;return d|0}function Gs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=fi(a,b,c,-2147483648,0)|0;return d|0}function Fs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=fi(a,b,c,0,-2147483648)|0;return d|0}function qs(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ha(0);return 0}function gs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ye(a,b,c,d,e,0)|0}function ds(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ye(a,b,c,d,e,1)|0}function Hs(a,b){a=a|0;b=b|0;var c=0;c=an(a,0,b)|0;return ((c|0)==0?b:c-a>>2)|0}function Ns(a,b){a=a|0;b=b|0;var c=0;c=If(a,0,b)|0;return ((c|0)==0?b:c-a|0)|0}function Cs(b,c){b=b|0;c=c|0;var d=0;d=b+(gh(b,c)|0)|0;return (a[d>>0]|0?d:0)|0}function Rr(){var a=0;a=i;i=i+16|0;if((i|0)>=(j|0))ca();Qc(36,a|0)|0;i=a;return}function Ir(a){a=+a;var b=0;h[k>>3]=a;b=kr(c[k>>2]|0,c[k+4>>2]|0,63)|0;return b|0}function hs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Jd[a&31](b|0,c|0,d|0)|0}function Es(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return on(b,c,d,e)|0}function Ts(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=fi(a,b,c,-1,-1)|0;return d|0}function Qs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=fi(a,b,c,-1,-1)|0;return d|0}function Ms(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Xj(a,b,c,-1,-1)|0;return d|0}function Ls(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Xj(a,b,c,-1,-1)|0;return d|0}function _s(a){a=a|0;return (a&255)<<24|(a>>8&255)<<16|(a>>16&255)<<8|a>>>24|0}function Vs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=fi(a,b,c,-1,0)|0;return d|0}function Ps(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Xj(a,b,c,-1,0)|0;return d|0}function Ks(a,b){a=a|0;b=b|0;var d=0;d=a+4|0;c[d>>2]=(c[d>>2]|0)+b;return}function $r(){var a=0;if(!(c[41512]|0))a=166100;else a=c[(vd()|0)+64>>2]|0;return a|0}function ns(a){a=a|0;var b=0;if(!(Ow(a)|0))b=0;else b=(Vt(a)|0)==0;return b&1|0}function ks(a){a=a|0;var b=0;if(!(Jw(a)|0))b=(Rq(a)|0)!=0;else b=1;return b&1|0}function js(a){a=a|0;var b=0;if(!(ts(a)|0))b=(vo(a)|0)!=0;else b=0;return b&1|0}function is(a,b){a=a|0;b=b|0;var c=0;if(!a)c=0;else c=Ei(a,b,0)|0;return c|0}function ls(a){a=a|0;if((c[a+76>>2]|0)>-1?Ey(a)|0:0)Dy(a);return c[a+60>>2]|0}function Ss(a,b){a=a|0;b=b|0;return Pv((c[a>>2]|0)+11|0,(c[b>>2]|0)+11|0)|0}function Os(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(0)}function Is(a,b){a=a|0;b=b|0;return Af((c[a>>2]|0)+11|0,(c[b>>2]|0)+11|0)|0}function Xs(a,b){a=a|0;b=b|0;var c=0;c=Cq(a,b)|0;return c+((Fr(b)|0)<<2)|0}function Us(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=ss(a,b,c)|0;return d|0}function Rs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=Ms(a,b,c)|0;return d|0}function ps(a){a=a|0;var b=0;b=nl(a,23854)|0;a=kr(b|0,D|0,16)|0;return a|0}function os(a){a=a|0;var b=0;b=nl(a,23854)|0;a=kr(b|0,D|0,17)|0;return a|0}function ct(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ((d|0)==1?b:c)|0}function ts(a){a=a|0;var b=0;if(!a)b=0;else b=(En(8008,a)|0)!=0;return b&1|0}function zs(){var a=0,b=0;a=nl(23848,23854)|0;b=kr(a|0,D|0,17)|0;return b|0}function ys(){var a=0,b=0;a=nl(23848,23854)|0;b=kr(a|0,D|0,16)|0;return b|0}function dt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ml(a,b,c,d,0,0)|0}function bt(a,b,c){a=a|0;b=b|0;c=c|0;$j(a|0,b|0,c|0)|0;return a+c|0}function $s(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return jl(a,b,c,d,0,0)|0}function Ds(a){a=a|0;var b=0;if(!a)b=1;else b=(c[a>>2]|0)==0;return b&1|0}function Ws(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Oe(a,b,c,d,0)|0}function gt(a,b,c){a=a|0;b=b|0;c=c|0;return Jf(0,a,b,c|0?c:166956)|0}function Js(a){a=+a;return ((g[k>>2]=a,c[k>>2]|0)&2139095040)>>>0<2139095040|0}function us(a){a=a|0;var b=0;if(!(a&-3073))b=yy(a)|0;else b=-1;return b|0}function jt(a){a=a|0;var b=0;b=166e3;c[b>>2]=a+-1;c[b+4>>2]=0;return}function mt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return -1}function ft(a,b,c){a=a|0;b=b|0;c=c|0;Lo(a,b,b|0?0:2,c)|0;return}function lt(a,b){a=a|0;b=b|0;Cq(a+((Fr(a)|0)<<2)|0,b)|0;return a|0}function ht(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return vs(a,b,c)|0}function et(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ps(a,b,c)|0}function Zs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return zh(a,b,c)|0}function Ys(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Yh(a,b,c)|0}function st(a,b,c){a=a|0;b=b|0;c=c|0;Fn(b|0,a|0,c|0)|0;return}function Wt(a){a=a|0;var b=0;b=a&65535;return (b<<8|b>>>8)&65535|0}function Ut(a){a=a|0;var b=0;b=a&65535;return (b<<8|b>>>8)&65535|0}function nt(a,b,c){a=a|0;b=b|0;c=c|0;return th(a,2147483647,b,c)|0}function at(a,b,c){a=a|0;b=b|0;c=c|0;return Rd[a&7](b|0,c|0)|0}function Lt(a,b,c){a=a|0;b=b|0;c=c|0;return ((c|0)==1?a:b)|0}function vt(a,b,c){a=a|0;b=b|0;c=c|0;return nn(a,b,c|4096,0)|0}function Ht(a){a=a|0;var b=0;b=(Lw(a)|0)==0;return (b?a:a|32)|0}function Gt(a){a=a|0;var b=0;b=(Nw(a)|0)==0;return (b?a:a&95)|0}function xt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ka(0);return 0}function rt(a){a=+a;var b=0,c=0.0;b=vy(32)|0;c=+Em(a);return ~~c|0}function wt(a){a=a|0;var b=0;b=wp(c[a>>2]|0)|0;de(a);return b|0}function tt(a,b,c){a=a|0;b=b|0;c=c|0;tf(a,b,c)|0;return a|0}function Vt(a){a=a|0;return ((a+-48|0)>>>0<10|(jw(a)|0)!=0)&1|0}function At(a,b){a=a|0;b=b|0;Wu(a+(zi(a)|0)|0,b)|0;return a|0}function Nt(a,b){a=a|0;b=b|0;return (gm(a,zi(a)|0,1,b)|0)+-1|0}function Ct(a,b){a=a|0;b=b|0;return Ol(c[a>>2]|0,c[b>>2]|0)|0}function Tt(a,b){a=a|0;b=b|0;Lo(a,b,b|0?0:2,1024)|0;return}function Et(a,b,c){a=a|0;b=b|0;c=c|0;return Ij(210,a,b,c)|0}function Dt(a,b,c){a=a|0;b=b|0;c=c|0;return Ij(208,a,b,c)|0}function $t(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return d|0}function ut(a){a=+a;var b=0,c=0.0;b=vy(32)|0;c=+Em(a);return +c}function qt(a){a=+a;var b=0,c=0.0;b=vy(32)|0;c=+Hn(a);return +c}function Zt(a){a=a|0;return ((a|0)==223|(rx(a)|0)!=(a|0))&1|0}function Ot(a,b,c){a=a|0;b=b|0;c=c|0;return pf(a,b,10,c)|0}function ot(a,b,c){a=a|0;b=b|0;c=c|0;return uf(a,b,0,c)|0}function Ou(a){a=a|0;return ((a|0)==32|(a+-9|0)>>>0<5)&1|0}function It(a,b){a=a|0;b=b|0;return kp(a,b,(zi(a)|0)+1|0)|0}function Ft(a,b,c){a=a|0;b=b|0;c=c|0;return Io(a,b,c,0)|0}function pt(a,b,c){a=a|0;b=b|0;c=c|0;Ld[a&1](b|0,c|0)}function zt(a,b,c){a=a|0;b=b|0;c=c|0;return Ff(a,b,c)|0}function yt(a,b,c){a=a|0;b=b|0;c=c|0;return Om(a,b,c)|0}function nu(a,b,c){a=a|0;b=b|0;c=c|0;return Vk(a,b,c)|0}function fu(a,b,c){a=a|0;b=b|0;c=c|0;return co(a,b,c)|0}function du(a,b,c){a=a|0;b=b|0;c=c|0;return +(+Mj(a,b,1))}function cu(a,b,c){a=a|0;b=b|0;c=c|0;return +(+Mj(a,b,0))}function Yt(a,b,c){a=a|0;b=b|0;c=c|0;return +(+Mj(a,b,2))}function St(a){a=a|0;return (c[a+8>>2]|0)-(c[a+4>>2]|0)|0}function Mt(){var a=0;a=c[41850]|0;return ((a|0)==0?-1:a)|0}function Xt(a,b){a=a|0;b=b|0;return ee(c[a+12>>2]|0,b)|0}function Ru(a,b){a=a|0;b=b|0;return (a+-48|0)>>>0<10|0}function uu(a,b,c){a=a|0;b=b|0;c=c|0;return bp(b,c)|0}function qu(a,b,c){a=a|0;b=b|0;c=c|0;return ak(b,c)|0}function pu(a,b,c){a=a|0;b=b|0;c=c|0;return $o(b,c)|0}function iu(a,b,c){a=a|0;b=b|0;c=c|0;return Ol(a,b)|0}function hu(a,b,c){a=a|0;b=b|0;c=c|0;return dm(a,b)|0}function eu(a,b){a=a|0;b=b|0;return co(a,c[b>>2]|0,0)|0}function _t(a,b,c){a=a|0;b=b|0;c=c|0;return Pi(a,b)|0}function Rt(a,b,c){a=a|0;b=b|0;c=c|0;return Vq(a,b)|0}function Qt(a,b,c){a=a|0;b=b|0;c=c|0;return qi(a,b)|0}function Pt(a,b,c){a=a|0;b=b|0;c=c|0;return Pu(a,b)|0}function zu(a,b,c){a=a|0;b=b|0;c=c|0;ea(28);return 0}function yu(a,b,c){a=a|0;b=b|0;c=c|0;ea(29);return 0}function xu(a,b,c){a=a|0;b=b|0;c=c|0;ea(30);return 0}function wu(a,b,c){a=a|0;b=b|0;c=c|0;ea(31);return 0}function ou(a,b){a=a|0;b=b|0;return $d(c[1801]|0,a,b)|0}function lu(a,b){a=a|0;b=b|0;return sg(c[1831]|0,a,b)|0}function ku(a,b){a=a|0;b=b|0;return _d(c[1801]|0,a,b)|0}function cv(a){a=a|0;return (d[a+75>>0]|0)>>>7&255^1|0}function bu(a,b){a=a|0;b=b|0;return xi(c[1831]|0,a,b)|0}function Vu(a,b){a=a|0;b=b|0;Gl(a|0,0,b|0)|0;return}function Ju(a,b,c){a=a|0;b=b|0;c=c|0;ea(19);return 0}function Iu(a,b,c){a=a|0;b=b|0;c=c|0;ea(20);return 0}function Hu(a,b,c){a=a|0;b=b|0;c=c|0;ea(21);return 0}function Gu(a,b,c){a=a|0;b=b|0;c=c|0;ea(22);return 0}function Fu(a,b,c){a=a|0;b=b|0;c=c|0;ea(23);return 0}function Eu(a,b,c){a=a|0;b=b|0;c=c|0;ea(24);return 0}function Du(a,b,c){a=a|0;b=b|0;c=c|0;ea(25);return 0}function Cu(a,b,c){a=a|0;b=b|0;c=c|0;ea(26);return 0}function Bt(a,c){a=a|0;c=c|0;b[a>>1]=vy(c)|0;return 0}function Au(a,b,c){a=a|0;b=b|0;c=c|0;ea(27);return 0}function tu(a,b,c){a=+a;b=+b;c=c|0;return +(+we(a,b,c))}function nv(a){a=a|0;return (a>>>0<32|(a|0)==127)&1|0}function mu(a,b,c){a=+a;b=+b;c=+c;return +(+Fd(+a,+b,+c))}function gu(a){a=a|0;return +(+X(+(+h[a+8>>3]),+(+h[a>>3])))}function au(a){a=a|0;return +(+X(+(+g[a+4>>2]),+(+g[a>>2])))}function Mu(a,b,c){a=a|0;b=b|0;c=c|0;ea(0);return 0}function rv(a){a=a|0;return ((a|0)==32|(a|0)==9)&1|0}function kt(a){a=+a;return (g[k>>2]=a,c[k>>2]|0)>>>31|0}function Qu(a,b){a=a|0;b=b|0;return Of(-100,a,b,256)|0}function it(a,b){a=a|0;b=b|0;if(!o){o=a;p=b}}function bv(a,b){a=a|0;b=b|0;return io(a,b|4096,0)|0}function jw(a){a=a|0;return ((a|32)+-97|0)>>>0<26|0}function ju(a,b){a=a|0;b=b|0;return Nd[a&7](b|0)|0}function ev(a,b,c){a=a|0;b=b|0;c=c|0;return b|0}function Wu(a,b){a=a|0;b=b|0;zg(a,b)|0;return a|0}function Uu(a,b){a=a|0;b=b|0;return Ij(204,a,b,0)|0}function Tu(a,b){a=a|0;b=b|0;return Ij(203,a,b,0)|0}function $u(a,b){a=a|0;b=b|0;return Vh(a,b,169642)|0}function Su(a){a=a|0;return +(+cg(+h[a>>3],+h[a+8>>3]))}function Lu(a){a=a|0;return +(+sh(+g[a>>2],+g[a+4>>2]))}function Kt(a){a=a|0;if(!(c[a+68>>2]|0))Dy(a);return}function Jt(a){a=a|0;if(!(c[a+68>>2]|0))Dy(a);return}function ww(a){a=a|0;return ((a|0)>0?a:0-a|0)|0}function su(a){a=a|0;Xb(166908);Hj(a);Cd(166908);return}function jv(a){a=a|0;return (c[a>>2]|0)>>>2&1^1|0}function iv(a){a=a|0;return (c[a>>2]|0)>>>3&1^1|0}function Xu(a,b){a=a|0;b=b|0;return gn(a,0,b,0)|0}function ov(a,b,c){a=a|0;b=b|0;c=c|0;return -1}function Nu(a){a=+a;return a>=0.0?+N(a+.5):+_(a-.5)}function Ku(a){a=+a;return a>=0.0?+N(a+.5):+_(a-.5)}function Pu(a,b){a=a|0;b=b|0;return Yh(a,b,-1)|0}function vv(a){a=+a;var b=0;b=Nq(a)|0;return b|0}function tv(a,b){a=a|0;b=b|0;return +(+Mj(a,b,1))}function sv(a,b){a=a|0;b=b|0;return +(+Mj(a,b,0))}function pv(a,b){a=a|0;b=b|0;return +(+Mj(a,b,2))}function hv(a){a=a|0;return Yf(a,166932,169845,256)|0}function gv(a,b){a=a|0;b=b|0;return +(+oi(a,b,1))}function fv(a,b){a=a|0;b=b|0;return +(+oi(a,b,0))}function dv(a,b){a=a|0;b=b|0;return +(+oi(a,b,2))}function _u(a,b){a=a|0;b=b|0;return xh(a,0,b)|0}function Zu(a,b){a=a|0;b=b|0;return xh(a,b,0)|0}function Bv(a,b){a=a|0;b=b|0;return Kg(0,a,b)|0}function ru(a){a=a|0;return Nd[c[a+12>>2]&7](a)|0}function Bu(a,b){a=a|0;b=b|0;Kd[a&7](b);return}function mv(a){a=a|0;c[a>>2]=c[a>>2]|32;return}function Tw(a){a=a|0;return (a>>>0<128?a:-1)|0}function Sw(a){a=a|0;return (a>>>0<128?a:-1)|0}function Pw(a){a=a|0;return (a+-48|0)>>>0<10|0}function Ow(a){a=a|0;return (a+-33|0)>>>0<94|0}function Nw(a){a=a|0;return (a+-97|0)>>>0<26|0}function Mw(a){a=a|0;return (a+-32|0)>>>0<95|0}function Lw(a){a=a|0;return (a+-65|0)>>>0<26|0}function Jw(a){a=a|0;return (a+-48|0)>>>0<10|0}function mw(a,b){a=a|0;b=b|0;return as(a,b)|0}function lw(a,b){a=a|0;b=b|0;return Do(a,b)|0}function kv(a){a=+a;return +(+Ti(a,0-(ai(a)|0)|0))}function av(a){a=+a;return +(+tj(a,0-(Jj(a)|0)|0))}function Vv(a,b){a=a|0;b=b|0;return ve(a,b)|0}function Qv(a,b){a=a|0;b=b|0;return It(a,b)|0}function Pv(a,b){a=a|0;b=b|0;return Ol(a,b)|0}function Ov(a,b){a=a|0;b=b|0;return dm(a,b)|0}function Av(a,b){a=a|0;b=b|0;return sj(a,b)|0}function $v(a){a=a|0;return (sx(a)|0)!=(a|0)|0}function zw(a,b){a=a|0;b=b|0;ma(6);return 0}function zv(a,b){a=a|0;b=b|0;return vj(a)|0}function yw(a,b){a=a|0;b=b|0;ma(7);return 0}function yv(a,b){a=a|0;b=b|0;return sx(a)|0}function xv(a,b){a=a|0;b=b|0;return rx(a)|0}function vw(a){a=a|0;return c[a+8>>2]&4111|0}function uw(a){a=a|0;return c[a+8>>2]&4111|0}function tw(a,b){a=+a;b=b|0;return +(+tj(a,b))}function sw(a,b){a=+a;b=b|0;return +(+pw(a,b))}function qw(a,b){a=+a;b=b|0;return +(+Ti(a,b))}function qv(a,b){a=a|0;b=b|0;return cs(a)|0}function pw(a,b){a=+a;b=b|0;return +(+Ti(a,b))}function ow(a,b){a=a|0;b=b|0;return tn(a)|0}function lv(a,b){a=+a;b=b|0;return +(+te(a,b))}function kw(a,b){a=a|0;b=b|0;return Vt(a)|0}function iw(a,b){a=a|0;b=b|0;return jw(a)|0}function hw(a,b){a=a|0;b=b|0;return rv(a)|0}function gw(a,b){a=a|0;b=b|0;return nv(a)|0}function fw(a,b){a=a|0;b=b|0;return Ow(a)|0}function ew(a,b){a=a|0;b=b|0;return Nw(a)|0}function dw(a,b){a=a|0;b=b|0;return Mw(a)|0}function cw(a,b){a=a|0;b=b|0;return ns(a)|0}function bw(a,b){a=a|0;b=b|0;return Ou(a)|0}function aw(a,b){a=a|0;b=b|0;return Lw(a)|0}function _v(a,b){a=a|0;b=b|0;return wp(a)|0}function Zv(a,b){a=+a;b=b|0;return +(+tj(a,b))}function Yv(a,b){a=+a;b=b|0;return +(+qw(a,b))}function Yu(a,b){a=a|0;b=b|0;Kd[a&7](b|0)}function Xv(a,b){a=a|0;b=b|0;return Ht(a)|0}function Wv(a,b){a=a|0;b=b|0;return Gt(a)|0}function Uv(a,b){a=a|0;b=b|0;return Mr(a)|0}function Nv(a,b){a=a|0;b=b|0;return ks(a)|0}function Mv(a,b){a=a|0;b=b|0;return Rq(a)|0}function Lv(a,b){a=a|0;b=b|0;return Ex(a)|0}function Kv(a,b){a=a|0;b=b|0;return xr(a)|0}function Jv(a,b){a=a|0;b=b|0;return Jw(a)|0}function Iv(a,b){a=a|0;b=b|0;return js(a)|0}function Hv(a,b){a=a|0;b=b|0;return Zt(a)|0}function Gv(a,b){a=a|0;b=b|0;return vo(a)|0}function Fv(a,b){a=a|0;b=b|0;return er(a)|0}function Ev(a,b){a=a|0;b=b|0;return ts(a)|0}function Dw(a,b){a=+a;b=b|0;return +(+hj(a,b))}function Dv(a,b){a=a|0;b=b|0;return $v(a)|0}function Cw(a,b){a=+a;b=b|0;return +(+Ti(a,b))}function Cv(a,b){a=a|0;b=b|0;return es(a)|0}function Aw(a,b){a=a|0;b=b|0;ma(0);return 0}function rw(a){a=a|0;return Do(a,c[1831]|0)|0}function Iw(a){a=a|0;return Ij(210,-1,a,-1)|0}function Hw(a){a=a|0;return Ij(208,-1,a,-1)|0}function Bw(a){a=a|0;return aj(a,c[1831]|0)|0}function wv(a){a=a|0;return fx(sc(a|0)|0)|0}function vu(a,b){a=a|0;b=b|0;i=a;j=b}function uv(a,b){a=+a;b=+b;return +(+Tv(a,b))}function nw(a,b){a=+a;b=+b;return +(+An(a,b))}function mx(a,b){a=a|0;b=b|0;return -1|0}function bx(a,b){a=a|0;b=b|0;return 159677}function _w(a,b){a=+a;b=+b;return +(+ol(a,b))}function Yw(a,b){a=+a;b=+b;return +(+Ph(a,b))}function Xw(a,b){a=+a;b=+b;return +(+Oh(a,b))}function Ww(a,b){a=+a;b=+b;return +(+Ce(a,b))}function Tv(a,b){a=+a;b=+b;return +(+wg(a,b))}function Sv(a,b){a=+a;b=+b;return +(+wg(a,b))}function Rv(a,b){a=+a;b=+b;return +(+hr(a,b))}function Qw(a,b){a=+a;b=+b;return +(+cg(a,b))}function ix(a,b){a=a|0;b=b|0;return b|0}function Vw(a){a=a|0;return Ij(214,a,0,0)|0}function Uw(a){a=a|0;return Ij(213,a,0,0)|0}function Gw(a){a=a|0;Lo(a,0,1,0)|0;return}function $w(){de(c[41503]|0);c[41503]=0;return}function ax(a){a=a|0;return c[a+48>>2]|0}function ux(a){a=a|0;return +(+h[a+8>>3])}function qx(a){a=a|0;return +(+g[a+4>>2])}function px(a){a=a|0;return +(+h[a+8>>3])}function nx(a){a=a|0;return c[a+4>>2]|0}function ex(a,b){a=a|0;b=b|0;return -1}function dx(a,b){a=a|0;b=b|0;return -1}function Fw(a){a=a|0;return Rh(a,169586)|0}function Ew(a){a=a|0;return Wm(a,169592)|0}function Cx(a){a=a|0;return a>>>0<128|0}function tx(a,b){a=a|0;b=b|0;return 0}function lx(a,b){a=a|0;b=b|0;return 0}function jx(a,b){a=a|0;b=b|0;return 0}function Zw(a,b){a=a|0;b=b|0;return 0}function cx(a){a=a|0;return xh(a,0,0)|0}function ox(a){a=+a;return +(+te(a,166120))}function kx(a){a=+a;return +(+te(a,166120))}function gx(a){a=+a;return +(+ye(a,166120))}function zx(a){a=a|0;return +(+h[a>>3])}function wx(a){a=a|0;Uj(a)|0;return 1}function vx(a,b){a=a|0;b=b|0;ga(0)}function hx(a){a=a|0;return _s(a|0)|0}function fx(a){a=a|0;return _s(a|0)|0}function Fx(a){a=a|0;return c[a>>2]|0}function Dx(a){a=a|0;return +(+h[a>>3])}function Ax(a){a=a|0;return +(+g[a>>2])}function xw(a){a=a|0;return Dh(a,0)|0}function sx(a){a=a|0;return Lf(a,1)|0}function rx(a){a=a|0;return Lf(a,0)|0}function Lx(a){a=a|0;return +(+tv(a,0))}function Ux(a){a=a|0;return a&127|0}function Ix(a){a=a|0;wp(a)|0;return}function Nx(a){a=+a;return ~~+Nu(+a)|0}function Gx(a){a=+a;return ~~+Ku(+a)|0}function Tx(a){a=a|0;return sp(a)|0}function Sx(a){a=+a;return ~~+Hn(a)|0}function Rx(a){a=a|0;ia(0);return 0}function Qx(a){a=a|0;ia(7);return 0}function Kx(a){a=a|0;return op(a)|0}function Jx(a){a=+a;return ~~+Yx(a)|0}function Ex(a){a=a|0;return rv(a)|0}function yx(a){a=a|0;de(a);return}function Yx(a){a=+a;return +(+Nu(+a))}function Px(a){a=a|0;de(a);return}function Hx(a){a=a|0;de(a);return}function xy(a){a=+a;return +(+Nh(a))}function qy(a){a=+a;return +(+Qg(a))}function py(a){a=+a;return +(+Zl(a))}function oy(a){a=+a;return +(+Ah(a))}function ny(a){a=+a;return +(+wh(a))}function my(a){a=+a;return +(+ag(a))}function ly(a){a=+a;return +(+Em(a))}function ky(a){a=+a;return +(+_k(a))}function jy(a){a=+a;return +(+Nj(a))}function hy(a){a=+a;return +(+Cl(a))}function gy(a){a=+a;return +(+ik(a))}function fy(a){a=+a;return +(+hm(a))}function ey(a){a=+a;return +(+cf(a))}function dy(a){a=+a;return ai(a)|0}function cy(a){a=+a;return +(+Xf(a))}function by(a){a=+a;return +(+vg(a))}function ay(a){a=+a;return rt(a)|0}function _x(a){a=+a;return +(+Qk(a))}function Xx(){return Pj(c[1801]|0)|0}function Wx(a){a=+a;return +(+zf(a))}function Vx(a){a=+a;return +(+zf(a))}function Ox(){return sp(c[1801]|0)|0}function Bx(a){a=+a;return +(+ut(a))}function ty(a){a=a|0;return a|0}function xx(a){a=a|0;Od[a&3]()}function Uy(a){a=a|0;return +s}function Ry(a){a=a|0;return +s}function Qy(a){a=a|0;return +s}function By(a){a=a|0;uc(a|0)}function zy(a){a=a|0;return 0}function yy(a){a=a|0;return 0}function wy(a){a=a|0;return 0}function vy(a){a=a|0;return 0}function uy(a){a=a|0;return 0}function sy(a){a=a|0;return 0}function ry(a){a=a|0;return 0}function Vy(a){a=a|0;return 0}function Sy(a){a=a|0;return 0}function Oy(a){a=a|0;return 0}function Ny(a){a=a|0;return 0}function My(a){a=a|0;return 0}function Ly(a){a=a|0;return 0}function Fy(a){a=a|0;return 0}function Ey(a){a=a|0;return 0}function Cy(){return Pc(146338)|0}function Ay(a){a=a|0;return 0}function Rw(){Od[3&3]();return}function Kw(){Od[3&3]();return}function _y(a){a=a|0;return}function Mx(){return c[41849]|0}function Ky(a){a=a|0;return}function Jy(){return Zo(0,0)|0}function Iy(a){a=a|0;return}function Dy(a){a=a|0;return}function $x(){return c[41848]|0}function iy(a){a=a|0;D=a}function Zx(a){a=a|0;i=a}function Py(){Ih(0)|0;return}function Hy(a){a=a|0;fa(0)}function Gy(a){a=a|0;fa(7)}function bz(){return 166208}function Ty(){return 166020}function cz(){return 11292}function az(){return 11176}function Zy(){return D|0}function $y(){return i|0}function Xy(){return 9636}function Wy(){return 8096}function hz(){return 0}function gz(){return 0}function fz(){return 0}function ez(){return 0}function dz(){return 0}function Yy(){return 4}function lz(){return}function jz(){return}function iz(){return}function kz(){ja(0)}\nfunction Sd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0;g=i;i=i+16|0;if((i|0)>=(j|0))ca();h=g;k=c[a+4>>2]|0;a=k+56|0;l=(c[a>>2]&8|0)==0?d:0;d=k+40|0;m=c[d>>2]|0;if((m|0)>0&(l|0)!=0){n=Wd(m<<2)|0;if(!n)o=12;else{p=n;q=3}}else{p=0;q=3}if((q|0)==3){if(!(c[k+60>>2]|0)){c[h>>2]=0;n=f&1;m=f&2;r=c[a>>2]&4;if(!p)s=0;else s=c[d>>2]|0;t=s<<2;u=c[k+52>>2]|0;v=u<<3;w=v+8|0;x=t+12+v+(w+($(t,u)|0)<<1)|0;y=Wd(x)|0;if(!y){z=12;A=0}else{Gl(y|0,0,x|0)|0;x=y+t|0;B=x&3;C=x+((B|0)==0?0:4-B|0)|0;B=C+w|0;x=B&3;D=B+((x|0)==0?0:4-x|0)|0;x=D+w|0;w=x&3;B=x+((w|0)==0?0:4-w|0)|0;w=B+v|0;v=w&3;if((u|0)>0){x=0;E=w+((v|0)==0?0:4-v|0)|0;while(1){c[D+(x<<3)+4>>2]=E;v=E+t|0;c[C+(x<<3)+4>>2]=v;x=x+1|0;if((x|0)==(u|0)){F=0;break}else E=v+t|0}do{c[B+(F<<3)>>2]=-1;F=F+1|0}while((F|0)!=(u|0))}u=Kg(h,b,4)|0;if((u|0)<1)if((u|0)<0){G=0;H=1}else{I=1;q=201}else{I=u;q=201}a:do if((q|0)==201){u=k+8|0;F=(r|0)!=0;E=(s|0)>0;x=k+12|0;v=k+44|0;w=k+32|0;J=k+36|0;K=(s|0)==0;L=(n|0)==0;M=(s|0)<1;N=-1;O=0;P=0;Q=I;R=0;S=D;T=C;U=C;V=b+I|0;W=y;while(1){if((N|0)<0){X=c[u>>2]|0;Y=X+8|0;b:do if(!(c[Y>>2]|0)){Z=N;_=O;aa=U}else{ba=(P|0)!=0;da=(R|0)==95;ea=(P|0)==0;fa=F&(R|0)==10;ga=L&(P|0)<1;ha=Y;ia=N;ja=O;ka=U;la=X;while(1){ma=ha;na=la;c:while(1){oa=na+12|0;if((c[B+(c[oa>>2]<<3)>>2]|0)>=(P|0)){pa=ia;qa=ja;ra=ka;sa=na;break}ta=na+20|0;ua=c[ta>>2]|0;if(!ua){va=ma;wa=oa;xa=na;q=236;break}d:do if(fa|(ga|(ua&1|0)==0)){if(ua&2|0?(ya=c[h>>2]|0,!((ya|m|0)==0|F&(ya|0)==10)):0)break;do if(ua&16|0){if(da)break d;if(ks(R)|0)break d;ya=c[h>>2]|0;if((ya|0)==95)break;if(!(ks(ya)|0))break d}while(0);ya=c[ta>>2]|0;if(!(ya&32))za=ya;else{if(da){ya=c[h>>2]|0;if((ya|0)==95)break;else Aa=ya}else{ya=(ks(R)|0)==0;Ba=c[h>>2]|0;if(ya|(Ba|0)==95)break;else Aa=Ba}if(ks(Aa)|0)break;za=c[ta>>2]|0}Ba=c[h>>2]|0;do if((Ba|0)!=0&(ba&(za&64|0)!=0)){if(da){Ca=Ba;Da=1}else{ya=(ks(R)|0)!=0;Ca=c[h>>2]|0;Da=ya}if((Ca|0)==95)if(Da)break d;else break;else if(Da^(ks(Ca)|0)!=0)break;else break d}while(0);if(!(c[ta>>2]&128)){va=ma;wa=oa;xa=na;q=236;break c}Ba=c[h>>2]|0;if(ea|(Ba|0)==0)break;if(da){Ea=Ba;Fa=1}else{Ba=(ks(R)|0)!=0;Ea=c[h>>2]|0;Fa=Ba}if((Ea|0)==95)if(Fa){va=ma;wa=oa;xa=na;q=236;break c}else break;else if(Fa^(ks(Ea)|0)!=0)break;else{va=ma;wa=oa;xa=na;q=236;break c}}while(0);ma=na+40|0;if(!(c[ma>>2]|0)){Z=ia;_=ja;aa=ka;break b}else na=na+32|0}if((q|0)==236){q=0;c[ka>>2]=c[va>>2];if(E)Gl(c[ka+4>>2]|0,-1,t|0)|0;na=c[xa+16>>2]|0;do if(na|0){ma=c[na>>2]|0;if((ma|0)<=-1)break;oa=ka+4|0;ta=ma;ma=na;do{if((ta|0)<(s|0))c[(c[oa>>2]|0)+(ta<<2)>>2]=P;ma=ma+4|0;ta=c[ma>>2]|0}while((ta|0)>-1)}while(0);na=(c[ka>>2]|0)!=(c[x>>2]|0);if(M|na){Ga=ka+4|0;Ha=na?ia:P;Ia=na?ja:1}else{na=ka+4|0;ta=c[na>>2]|0;ma=0;do{c[p+(ma<<2)>>2]=c[ta+(ma<<2)>>2];ma=ma+1|0}while((ma|0)!=(s|0));Ga=na;Ha=P;Ia=1}na=c[wa>>2]|0;c[B+(na<<3)>>2]=P;c[B+(na<<3)+4>>2]=Ga;pa=Ha;qa=Ia;ra=ka+8|0;sa=xa}ha=sa+40|0;if(!(c[ha>>2]|0)){Z=pa;_=qa;aa=ra;break}else{ia=pa;ja=qa;ka=ra;la=sa+32|0}}}while(0);c[aa>>2]=0;X=c[h>>2]|0;if(!X){Ja=Z;break}else{Ka=X;La=Z;Ma=_}}else{if(K){Ja=N;break}X=c[h>>2]|0;if((U|0)!=(T|0)&(X|0)!=0){Ka=X;La=N;Ma=O}else{Ja=N;break}}X=P+Q|0;Y=Kg(h,V,4)|0;if((Y|0)<1)if((Y|0)<0){G=0;H=1;break a}else Na=1;else Na=Y;Y=V+Na|0;if((Ma|0)!=0&(c[v>>2]|0)!=0){if(!(c[T>>2]|0))Oa=S;else{la=c[J>>2]|0;ka=c[la>>2]|0;ja=(ka|0)>-1;ia=T;ha=S;while(1){da=ia+4|0;e:do if(ja){ea=la;ba=ka;ga=0;while(1){fa=c[ea+((ga|1)<<2)>>2]|0;if((ba|0)>=(s|0)){Pa=ha;break e}na=c[da>>2]|0;if((c[na+(fa<<2)>>2]|0)==(c[p+(fa<<2)>>2]|0)?(c[na+(ba<<2)>>2]|0)<(c[p+(ba<<2)>>2]|0):0){Pa=ha;break e}ga=ga+2|0;ea=c[J>>2]|0;ba=c[ea+(ga<<2)>>2]|0;if((ba|0)<=-1){Qa=na;break}}Ra=da;Sa=Qa;q=265}else{Ra=da;Sa=c[da>>2]|0;q=265}while(0);if((q|0)==265){q=0;c[ha>>2]=c[ia>>2];da=ha+4|0;ba=c[da>>2]|0;c[da>>2]=Sa;c[Ra>>2]=ba;Pa=ha+8|0}ia=ia+8|0;if(!(c[ia>>2]|0)){Oa=Pa;break}else ha=Pa}}c[Oa>>2]=0;Ta=0;Ua=S;Va=T}else{Ta=Ma;Ua=T;Va=S}ha=c[Ua>>2]|0;if(!ha){Wa=La;Xa=Ta;Ya=Va;Za=W}else{ia=(X|0)!=0;ka=(Ka|0)==95;la=(X|0)==0;ja=F&(Ka|0)==10;ba=L&(X|0)<1;da=ha;ha=La;ga=Ta;ea=Ua;na=Va;fa=W;while(1){ma=da+8|0;if(!(c[ma>>2]|0)){_a=ha;$a=ga;ab=na;bb=fa}else{ta=ea+4|0;oa=fa;ua=ma;ma=ha;Ba=ga;ya=na;cb=da;while(1){f:do if((c[cb>>2]|0)>>>0>Ka>>>0){db=ma;eb=Ba;fb=ya;gb=oa}else{if((c[cb+4>>2]|0)>>>0<Ka>>>0){db=ma;eb=Ba;fb=ya;gb=oa;break}hb=cb+20|0;ib=c[hb>>2]|0;do if(ib|0){if(!(ja|(ba|(ib&1|0)==0))){db=ma;eb=Ba;fb=ya;gb=oa;break f}if(ib&2|0?(jb=c[h>>2]|0,!((jb|m|0)==0|F&(jb|0)==10)):0){db=ma;eb=Ba;fb=ya;gb=oa;break f}do if(ib&16|0){if(ka){db=ma;eb=Ba;fb=ya;gb=oa;break f}if(ks(Ka)|0){db=ma;eb=Ba;fb=ya;gb=oa;break f}jb=c[h>>2]|0;if((jb|0)==95)break;if(!(ks(jb)|0)){db=ma;eb=Ba;fb=ya;gb=oa;break f}}while(0);jb=c[hb>>2]|0;if(!(jb&32))kb=jb;else{if(ka){jb=c[h>>2]|0;if((jb|0)==95){db=ma;eb=Ba;fb=ya;gb=oa;break f}else lb=jb}else{jb=(ks(Ka)|0)==0;mb=c[h>>2]|0;if(jb|(mb|0)==95){db=ma;eb=Ba;fb=ya;gb=oa;break f}else lb=mb}if(ks(lb)|0){db=ma;eb=Ba;fb=ya;gb=oa;break f}kb=c[hb>>2]|0}mb=c[h>>2]|0;do if((mb|0)!=0&(ia&(kb&64|0)!=0)){if(ka){nb=mb;ob=1}else{jb=(ks(Ka)|0)!=0;nb=c[h>>2]|0;ob=jb}if((nb|0)==95)if(ob){db=ma;eb=Ba;fb=ya;gb=oa;break f}else break;else if(ob^(ks(nb)|0)!=0)break;else{db=ma;eb=Ba;fb=ya;gb=oa;break f}}while(0);do if(c[hb>>2]&128|0){mb=c[h>>2]|0;if(la|(mb|0)==0){db=ma;eb=Ba;fb=ya;gb=oa;break f}if(ka){pb=mb;qb=1}else{mb=(ks(Ka)|0)!=0;pb=c[h>>2]|0;qb=mb}if((pb|0)==95)if(qb)break;else{db=ma;eb=Ba;fb=ya;gb=oa;break f}else if(qb^(ks(pb)|0)!=0){db=ma;eb=Ba;fb=ya;gb=oa;break f}else break}while(0);mb=c[hb>>2]|0;do if(!(mb&4))rb=mb;else{if(c[a>>2]&2|0){rb=mb;break}if(!(Pi(Ka,c[cb+24>>2]|0)|0)){db=ma;eb=Ba;fb=ya;gb=oa;break f}rb=c[hb>>2]|0}while(0);do if(rb&4|0){if(!(c[a>>2]&2))break;mb=sx(Ka)|0;jb=cb+24|0;if(Pi(mb,c[jb>>2]|0)|0)break;mb=rx(Ka)|0;if(!(Pi(mb,c[jb>>2]|0)|0)){db=ma;eb=Ba;fb=ya;gb=oa;break f}}while(0);if(!(c[hb>>2]&8))break;if(mj(c[cb+28>>2]|0,Ka,c[a>>2]&2)|0){db=ma;eb=Ba;fb=ya;gb=oa;break f}}while(0);if(E){hb=c[ta>>2]|0;ib=0;do{c[oa+(ib<<2)>>2]=c[hb+(ib<<2)>>2];ib=ib+1|0}while((ib|0)!=(s|0))}ib=c[cb+16>>2]|0;do if(ib|0){hb=c[ib>>2]|0;if((hb|0)>-1){sb=hb;tb=ib}else break;do{if((sb|0)<(s|0))c[oa+(sb<<2)>>2]=X;tb=tb+4|0;sb=c[tb>>2]|0}while((sb|0)>-1)}while(0);ib=c[cb+12>>2]|0;hb=B+(ib<<3)|0;if((c[hb>>2]|0)>=(X|0)){jb=c[B+(ib<<3)+4>>2]|0;mb=c[jb>>2]|0;if(!(pj(s,c[w>>2]|0,oa,mb)|0)){db=ma;eb=Ba;fb=ya;gb=oa;break}c[jb>>2]=oa;if((c[ua>>2]|0)!=(c[x>>2]|0)){db=ma;eb=Ba;fb=ya;gb=mb;break}if(E)ub=0;else{db=X;eb=1;fb=ya;gb=mb;break}while(1){c[p+(ub<<2)>>2]=c[oa+(ub<<2)>>2];ub=ub+1|0;if((ub|0)==(s|0)){db=X;eb=1;fb=ya;gb=mb;break f}}}mb=c[ua>>2]|0;c[ya>>2]=mb;jb=ya+4|0;vb=c[jb>>2]|0;c[jb>>2]=oa;c[hb>>2]=X;c[B+(ib<<3)+4>>2]=jb;do if((mb|0)==(c[x>>2]|0)){if((ma|0)==-1){if(!E){wb=X;xb=1;break}}else{if(!E){wb=ma;xb=Ba;break}if((c[oa>>2]|0)>(c[p>>2]|0)){wb=ma;xb=Ba;break}}yb=c[jb>>2]|0;zb=0;do{c[p+(zb<<2)>>2]=c[yb+(zb<<2)>>2];zb=zb+1|0}while((zb|0)<(s|0));wb=X;xb=1}else{wb=ma;xb=Ba}while(0);db=wb;eb=xb;fb=ya+8|0;gb=vb}while(0);ua=cb+40|0;if(!(c[ua>>2]|0)){_a=db;$a=eb;ab=fb;bb=gb;break}else{oa=gb;ma=db;Ba=eb;ya=fb;cb=cb+32|0}}}ea=ea+8|0;da=c[ea>>2]|0;if(!da){Wa=_a;Xa=$a;Ya=ab;Za=bb;break}else{ha=_a;ga=$a;na=ab;fa=bb}}}c[Ya>>2]=0;N=Wa;O=Xa;P=X;Q=Na;R=Ka;S=Ua;T=Va;U=Ya;V=Y;W=Za}G=Ja;H=Ja>>>31}while(0);de(y);z=H;A=G}Ab=A;Bb=z}else{c[h>>2]=0;z=f&1;A=f&2;f=c[a>>2]&4;G=Ko(0,0)|0;g:do if(G){H=eg(G,0,0,0,32)|0;if(!H){Ip(G);Cb=12;Db=0;break}c[H+24>>2]=0;c[H+28>>2]=0;y=c[d>>2]|0;if(y){Ja=Wd(y<<2)|0;if(!Ja){Eb=0;Fb=0;Gb=12;Hb=0;Ib=Ja}else{Jb=Ja;q=9}}else{Jb=0;q=9}h:do if((q|0)==9){Ja=c[k+28>>2]|0;if(Ja){Za=Wd(Ja<<3)|0;if(!Za){Eb=0;Fb=Za;Gb=12;Hb=0;Ib=Jb;break}else Kb=Za}else Kb=0;Za=k+52|0;Ja=c[Za>>2]|0;if(Ja){Ya=Wd(Ja<<2)|0;if(!Ya){Eb=0;Fb=Kb;Gb=12;Hb=Ya;Ib=Jb;break}else Lb=Ya}else Lb=0;Ya=k+8|0;Ja=k+12|0;Va=(p|0)==0;Ua=(p|0)!=0;Ka=k+32|0;Na=(f|0)!=0;Xa=(Jb|0)==0;Wa=(Kb|0)==0;bb=(Lb|0)==0;ab=(z|0)==0;$a=y;_a=-1;fb=1;eb=-1;db=H;gb=b;i:while(1){if(($a|0)>0){xb=$a;wb=0;while(1){c[Jb+(wb<<2)>>2]=-1;if(Va)Mb=xb;else{c[p+(wb<<2)>>2]=-1;Mb=c[d>>2]|0}wb=wb+1|0;if((wb|0)>=(Mb|0))break;else xb=Mb}}xb=c[Za>>2]|0;if((xb|0)>0)Gl(Lb|0,0,((xb|0)>1?xb:1)<<2|0)|0;xb=c[h>>2]|0;wb=fb+eb|0;s=Kg(h,gb,4)|0;if((s|0)<1)if((s|0)<0){Eb=0;Fb=Kb;Gb=1;Hb=Lb;Ib=Jb;break h}else Nb=1;else Nb=s;s=gb+Nb|0;B=c[h>>2]|0;ub=c[Ya>>2]|0;sb=ub+8|0;if(c[sb>>2]|0){tb=(wb|0)!=0;rb=(xb|0)==95;pb=(wb|0)==0;qb=Na&(xb|0)==10;nb=ab&(wb|0)<1;ob=sb;sb=0;kb=db;lb=0;m=ub;while(1){ub=m+20|0;Ta=c[ub>>2]|0;j:do if(Ta){if(!(qb|(nb|(Ta&1|0)==0))){Ob=sb;Pb=kb;Qb=lb;break}if(Ta&2|0?(La=c[h>>2]|0,!((La|A|0)==0|Na&(La|0)==10)):0){Ob=sb;Pb=kb;Qb=lb;break}do if(Ta&16|0){if(rb){Ob=sb;Pb=kb;Qb=lb;break j}if(ks(xb)|0){Ob=sb;Pb=kb;Qb=lb;break j}La=c[h>>2]|0;if((La|0)==95)break;if(!(ks(La)|0)){Ob=sb;Pb=kb;Qb=lb;break j}}while(0);vb=c[ub>>2]|0;if(!(vb&32))Rb=vb;else{if(rb){vb=c[h>>2]|0;if((vb|0)==95){Ob=sb;Pb=kb;Qb=lb;break}else Sb=vb}else{vb=(ks(xb)|0)==0;La=c[h>>2]|0;if(vb|(La|0)==95){Ob=sb;Pb=kb;Qb=lb;break}else Sb=La}if(ks(Sb)|0){Ob=sb;Pb=kb;Qb=lb;break}Rb=c[ub>>2]|0}La=c[h>>2]|0;do if((La|0)!=0&(tb&(Rb&64|0)!=0)){if(rb){Tb=La;Ub=1}else{vb=(ks(xb)|0)!=0;Tb=c[h>>2]|0;Ub=vb}if((Tb|0)==95)if(Ub){Ob=sb;Pb=kb;Qb=lb;break j}else break;else if(Ub^(ks(Tb)|0)!=0)break;else{Ob=sb;Pb=kb;Qb=lb;break j}}while(0);if(!(c[ub>>2]&128)){q=52;break}La=c[h>>2]|0;if(pb|(La|0)==0){Ob=sb;Pb=kb;Qb=lb;break}if(rb){Vb=La;Wb=1}else{La=(ks(xb)|0)!=0;Vb=c[h>>2]|0;Wb=La}if((Vb|0)==95)if(Wb){q=52;break}else{Ob=sb;Pb=kb;Qb=lb;break}else if(Wb^(ks(Vb)|0)!=0){Ob=sb;Pb=kb;Qb=lb;break}else{q=52;break}}else q=52;while(0);do if((q|0)==52){q=0;if(!lb){Ob=c[m+16>>2]|0;Pb=kb;Qb=c[ob>>2]|0;break}ub=kb+28|0;Ta=c[ub>>2]|0;if(!Ta){La=eg(G,0,0,0,32)|0;if(!La){q=56;break i}c[La+24>>2]=kb;c[La+28>>2]=0;vb=eg(G,0,0,0,c[d>>2]<<2)|0;c[La+20>>2]=vb;if(!vb){q=63;break i}c[ub>>2]=La;Xb=La}else Xb=Ta;c[Xb>>2]=wb;c[Xb+4>>2]=s;c[Xb+8>>2]=c[ob>>2];c[Xb+12>>2]=c[m+12>>2];c[Xb+16>>2]=c[h>>2];if((c[d>>2]|0)>0){Ta=c[Xb+20>>2]|0;La=0;do{c[Ta+(La<<2)>>2]=c[Jb+(La<<2)>>2];La=La+1|0}while((La|0)<(c[d>>2]|0))}La=c[m+16>>2]|0;if(!La){Ob=sb;Pb=Xb;Qb=lb;break}Ta=c[La>>2]|0;if((Ta|0)<=-1){Ob=sb;Pb=Xb;Qb=lb;break}ub=c[Xb+20>>2]|0;vb=Ta;Ta=La;do{Ta=Ta+4|0;c[ub+(vb<<2)>>2]=wb;vb=c[Ta>>2]|0}while((vb|0)>-1);Ob=sb;Pb=Xb;Qb=lb}while(0);ob=m+40|0;if(!(c[ob>>2]|0)){Yb=Ob;Zb=Pb;_b=Qb;break}else{sb=Ob;kb=Pb;lb=Qb;m=m+32|0}}if(Yb){m=c[Yb>>2]|0;if((m|0)>-1){lb=m;m=Yb;while(1){c[Jb+(lb<<2)>>2]=wb;kb=m+4|0;lb=c[kb>>2]|0;if((lb|0)<=-1){$b=kb;break}else m=kb}}else $b=Yb}else $b=0;if(!_b){ac=_a;bc=$b;cc=wb;dc=Nb;ec=Zb;fc=0;gc=s;q=174}else{hc=_a;ic=$b;jc=wb;kc=Nb;lc=Zb;mc=_b;nc=s;q=82}}else{ac=_a;bc=0;cc=wb;dc=Nb;ec=db;fc=0;gc=s;q=174}k:while(1){l:do if((q|0)==82){q=0;if((mc|0)==(c[Ja>>2]|0)){if((hc|0)>=(jc|0)){if(!(Ua&(hc|0)==(jc|0))){ac=hc;bc=ic;cc=jc;dc=kc;ec=lc;fc=mc;gc=nc;q=174;continue k}if(!(pj(c[d>>2]|0,c[Ka>>2]|0,Jb,p)|0)){ac=hc;bc=ic;cc=hc;dc=kc;ec=lc;fc=mc;gc=nc;q=174;continue k}}if(Va){ac=jc;bc=ic;cc=jc;dc=kc;ec=lc;fc=mc;gc=nc;q=174;continue k}if((c[d>>2]|0)>0)oc=0;else{ac=jc;bc=ic;cc=jc;dc=kc;ec=lc;fc=mc;gc=nc;q=174;continue k}while(1){c[p+(oc<<2)>>2]=c[Jb+(oc<<2)>>2];m=oc+1|0;if((m|0)<(c[d>>2]|0))oc=m;else{ac=jc;bc=ic;cc=jc;dc=kc;ec=lc;fc=mc;gc=nc;q=174;continue k}}}m=mc+8|0;do if(!(c[m>>2]|0))q=97;else{if(!(c[mc+20>>2]&256)){q=97;break}lb=c[mc+24>>2]|0;Gf(lb+1|0,Kb,c[a>>2]&-9,k,Jb,jc);kb=c[Kb+(lb<<3)>>2]|0;sb=c[Kb+(lb<<3)+4>>2]|0;lb=sb-kb|0;if(Vi(b+kb|0,nc+-1|0,lb)|0){ac=hc;bc=ic;cc=jc;dc=kc;ec=lc;fc=mc;gc=nc;q=174;continue k}ob=(sb|0)==(kb|0);kb=ob&1;sb=Lb+(c[mc+12>>2]<<2)|0;if(ob?c[sb>>2]|0:0){ac=hc;bc=ic;cc=jc;dc=kc;ec=lc;fc=mc;gc=nc;q=174;continue k}c[sb>>2]=kb;kb=lb+-1|0;lb=nc+kb|0;sb=c[h>>2]|0;ob=jc+kc+kb|0;kb=Kg(h,lb,4)|0;if((kb|0)<1)if((kb|0)<0){pc=2;qc=hc;rc=ic;sc=ob;tc=kb;uc=lc;vc=mc;wc=lb;break l}else xc=1;else xc=kb;yc=ob;zc=xc;Ac=sb;Bc=lb+xc|0}while(0);if((q|0)==97){q=0;lb=c[h>>2]|0;if(!lb){ac=hc;bc=ic;cc=jc;dc=kc;ec=lc;fc=mc;gc=nc;q=174;continue k}sb=jc+kc|0;ob=Kg(h,nc,4)|0;if((ob|0)<1){if((ob|0)<0){pc=2;qc=hc;rc=ic;sc=sb;tc=ob;uc=lc;vc=mc;wc=nc;break}Cc=ob+1|0}else Cc=ob;yc=sb;zc=Cc;Ac=lb;Bc=nc+Cc|0}if(!(c[m>>2]|0)){ac=hc;bc=ic;cc=yc;dc=zc;ec=lc;fc=mc;gc=Bc;q=174;continue k}lb=(yc|0)!=0;sb=(Ac|0)==95;ob=(yc|0)==0;kb=Na&(Ac|0)==10;xb=ab&(yc|0)<1;rb=m;pb=0;tb=ic;nb=lc;qb=mc;m:while(1){n:do if((c[qb>>2]|0)>>>0>Ac>>>0){Dc=pb;Ec=tb;Fc=nb}else{if((c[qb+4>>2]|0)>>>0<Ac>>>0){Dc=pb;Ec=tb;Fc=nb;break}vb=qb+20|0;Ta=c[vb>>2]|0;do if(Ta|0){if(!(kb|(xb|(Ta&1|0)==0))){Dc=pb;Ec=tb;Fc=nb;break n}if(Ta&2|0?(ub=c[h>>2]|0,!((ub|A|0)==0|Na&(ub|0)==10)):0){Dc=pb;Ec=tb;Fc=nb;break n}do if(Ta&16|0){if(sb){Dc=pb;Ec=tb;Fc=nb;break n}if(ks(Ac)|0){Dc=pb;Ec=tb;Fc=nb;break n}ub=c[h>>2]|0;if((ub|0)==95)break;if(!(ks(ub)|0)){Dc=pb;Ec=tb;Fc=nb;break n}}while(0);ub=c[vb>>2]|0;if(!(ub&32))Gc=ub;else{if(sb){ub=c[h>>2]|0;if((ub|0)==95){Dc=pb;Ec=tb;Fc=nb;break n}else Hc=ub}else{ub=(ks(Ac)|0)==0;La=c[h>>2]|0;if(ub|(La|0)==95){Dc=pb;Ec=tb;Fc=nb;break n}else Hc=La}if(ks(Hc)|0){Dc=pb;Ec=tb;Fc=nb;break n}Gc=c[vb>>2]|0}La=c[h>>2]|0;do if((La|0)!=0&(lb&(Gc&64|0)!=0)){if(sb){Ic=La;Jc=1}else{ub=(ks(Ac)|0)!=0;Ic=c[h>>2]|0;Jc=ub}if((Ic|0)==95)if(Jc){Dc=pb;Ec=tb;Fc=nb;break n}else break;else if(Jc^(ks(Ic)|0)!=0)break;else{Dc=pb;Ec=tb;Fc=nb;break n}}while(0);do if(c[vb>>2]&128|0){La=c[h>>2]|0;if(ob|(La|0)==0){Dc=pb;Ec=tb;Fc=nb;break n}if(sb){Kc=La;Lc=1}else{La=(ks(Ac)|0)!=0;Kc=c[h>>2]|0;Lc=La}if((Kc|0)==95)if(Lc)break;else{Dc=pb;Ec=tb;Fc=nb;break n}else if(Lc^(ks(Kc)|0)!=0){Dc=pb;Ec=tb;Fc=nb;break n}else break}while(0);La=c[vb>>2]|0;do if(!(La&4))Mc=La;else{if(c[a>>2]&2|0){Mc=La;break}if(!(Pi(Ac,c[qb+24>>2]|0)|0)){Dc=pb;Ec=tb;Fc=nb;break n}Mc=c[vb>>2]|0}while(0);do if(Mc&4|0){if(!(c[a>>2]&2))break;La=sx(Ac)|0;ub=qb+24|0;if(Pi(La,c[ub>>2]|0)|0)break;La=rx(Ac)|0;if(!(Pi(La,c[ub>>2]|0)|0)){Dc=pb;Ec=tb;Fc=nb;break n}}while(0);if(!(c[vb>>2]&8))break;if(mj(c[qb+28>>2]|0,Ac,c[a>>2]&2)|0){Dc=pb;Ec=tb;Fc=nb;break n}}while(0);if(!pb){Dc=c[rb>>2]|0;Ec=c[qb+16>>2]|0;Fc=nb;break}vb=nb+28|0;Ta=c[vb>>2]|0;if(!Ta){ub=eg(G,0,0,0,32)|0;if(!ub){Nc=tb;Oc=nb;q=148;break m}c[ub+24>>2]=nb;c[ub+28>>2]=0;La=eg(G,0,0,0,c[d>>2]<<2)|0;c[ub+20>>2]=La;if(!La){Pc=tb;Qc=nb;q=155;break m}c[vb>>2]=ub;Rc=ub}else Rc=Ta;c[Rc>>2]=yc;c[Rc+4>>2]=Bc;c[Rc+8>>2]=c[rb>>2];c[Rc+12>>2]=c[qb+12>>2];c[Rc+16>>2]=c[h>>2];if((c[d>>2]|0)>0){Ta=c[Rc+20>>2]|0;ub=0;do{c[Ta+(ub<<2)>>2]=c[Jb+(ub<<2)>>2];ub=ub+1|0}while((ub|0)<(c[d>>2]|0))}ub=c[qb+16>>2]|0;if(!ub){Dc=pb;Ec=tb;Fc=Rc;break}Ta=c[ub>>2]|0;if((Ta|0)<=-1){Dc=pb;Ec=tb;Fc=Rc;break}vb=c[Rc+20>>2]|0;La=Ta;Ta=ub;do{c[vb+(La<<2)>>2]=yc;Ta=Ta+4|0;La=c[Ta>>2]|0}while((La|0)>-1);Dc=pb;Ec=tb;Fc=Rc}while(0);rb=qb+40|0;if(!(c[rb>>2]|0)){Sc=Dc;Tc=Ec;Uc=Fc;q=170;break}else{pb=Dc;tb=Ec;nb=Fc;qb=qb+32|0}}if((q|0)==148){q=0;Ip(G);if(!Xa)de(Jb);if(!Wa)de(Kb);if(bb){pc=1;qc=hc;rc=Nc;sc=yc;tc=zc;uc=Oc;vc=mc;wc=Bc;break}de(Lb);pc=1;qc=hc;rc=Nc;sc=yc;tc=zc;uc=Oc;vc=mc;wc=Bc;break}else if((q|0)==155){q=0;Ip(G);if(!Xa)de(Jb);if(!Wa)de(Kb);if(bb){pc=1;qc=hc;rc=Pc;sc=yc;tc=zc;uc=Qc;vc=mc;wc=Bc;break}de(Lb);pc=1;qc=hc;rc=Pc;sc=yc;tc=zc;uc=Qc;vc=mc;wc=Bc;break}else if((q|0)==170){q=0;if(!Sc){ac=hc;bc=Tc;cc=yc;dc=zc;ec=Uc;fc=mc;gc=Bc;q=174;continue k}if(!Tc){pc=0;qc=hc;rc=0;sc=yc;tc=zc;uc=Uc;vc=Sc;wc=Bc;break}qb=c[Tc>>2]|0;if((qb|0)>-1){Vc=qb;Wc=Tc}else{pc=0;qc=hc;rc=Tc;sc=yc;tc=zc;uc=Uc;vc=Sc;wc=Bc;break}while(1){qb=Wc+4|0;c[Jb+(Vc<<2)>>2]=yc;Vc=c[qb>>2]|0;if((Vc|0)<=-1){pc=0;qc=hc;rc=qb;sc=yc;tc=zc;uc=Uc;vc=Sc;wc=Bc;break}else Wc=qb}}}else if((q|0)==174){q=0;qb=c[ec+24>>2]|0;if(!qb){if((ac|0)>-1|(c[h>>2]|0)==0){pc=27;qc=ac;rc=bc;sc=cc;tc=dc;uc=ec;vc=fc;wc=gc;break}c[h>>2]=B;pc=3;qc=ac;rc=bc;sc=cc;tc=dc;uc=ec;vc=fc;wc=s;break}nb=c[ec+8>>2]|0;if(c[nb+20>>2]&256|0)c[Lb+(c[ec+12>>2]<<2)>>2]=0;tb=c[ec>>2]|0;pb=c[ec+4>>2]|0;c[h>>2]=c[ec+16>>2];rb=c[d>>2]|0;if((rb|0)<=0){pc=0;qc=ac;rc=bc;sc=tb;tc=dc;uc=qb;vc=nb;wc=pb;break}sb=c[ec+20>>2]|0;ob=0;do{c[Jb+(ob<<2)>>2]=c[sb+(ob<<2)>>2];ob=ob+1|0}while((ob|0)!=(rb|0));pc=0;qc=ac;rc=bc;sc=tb;tc=dc;uc=qb;vc=nb;wc=pb}while(0);switch(pc|0){case 2:{Eb=0;Fb=Kb;Gb=1;Hb=Lb;Ib=Jb;break h;break}case 27:{Xc=qc;q=184;break i;break}case 0:{hc=qc;ic=rc;jc=sc;kc=tc;lc=uc;mc=vc;nc=wc;q=82;break}case 3:{break k;break}default:{Cb=12;Db=0;break g}}}$a=c[d>>2]|0;_a=qc;fb=tc;eb=wb;db=uc;gb=wc}if((q|0)==56){Ip(G);if(!Xa)de(Jb);if(!Wa)de(Kb);if(bb){Cb=12;Db=0;break g}de(Lb);Cb=12;Db=0;break g}else if((q|0)==63){Ip(G);if(!Xa)de(Jb);if(!Wa)de(Kb);if(bb){Cb=12;Db=0;break g}de(Lb);Cb=12;Db=0;break g}else if((q|0)==184){Eb=Xc;Fb=Kb;Gb=Xc>>>31;Hb=Lb;Ib=Jb;break}}while(0);Ip(G);if(Ib|0)de(Ib);if(Fb|0)de(Fb);if(!Hb){Cb=Gb;Db=Eb}else{de(Hb);Cb=Gb;Db=Eb}}else{Cb=12;Db=0}while(0);Ab=Db;Bb=Cb}if(!Bb)Gf(l,e,c[a>>2]|0,k,p,Ab);if(!p)o=Bb;else{de(p);o=Bb}}i=g;return o|0}function Td(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0;d=i;i=i+384|0;if((i|0)>=(j|0))ca();e=d+276|0;f=d+272|0;g=d+268|0;h=d+320|0;k=d+264|0;l=d+8|0;m=d;n=c[b+4>>2]|0;o=n+12|0;p=c[o>>2]|0;if(!(c[b+40>>2]|0)){q=b+20|0;c[f>>2]=c[q>>2];c[e>>2]=c[f>>2];Ii(n,e)|0;c[f>>2]=2;c[e>>2]=c[f>>2];Ii(n,e)|0;c[q>>2]=(c[q>>2]|0)+1}c[f>>2]=0;c[e>>2]=c[f>>2];q=Ii(n,e)|0;r=b+12|0;s=b+16|0;c[s>>2]=c[r>>2];t=c[o>>2]|0;u=(q|0)==0;a:do if(!((q|0)!=0|u&(t|0)>(p|0)^1)){v=n+16|0;w=b+36|0;x=b+24|0;y=b+20|0;z=b+28|0;A=e+1|0;B=e+12|0;C=e+40|0;D=e+24|0;E=e+8|0;F=t;G=0;H=0;b:while(1){I=F+-1|0;c[o>>2]=I;J=c[v>>2]|0;c:do switch(c[J+(I<<2)>>2]|0){case 0:{if(c[w>>2]&1|0?(c[f>>2]=7,c[e>>2]=c[f>>2],K=Ii(n,e)|0,K|0):0){L=G;M=H;N=K;break c}c[f>>2]=3;c[e>>2]=c[f>>2];L=G;M=H;N=Ii(n,e)|0;break}case 3:{c[f>>2]=5;c[e>>2]=c[f>>2];K=Ii(n,e)|0;if(!K){c[f>>2]=4;c[e>>2]=c[f>>2];L=G;M=H;N=Ii(n,e)|0}else{L=G;M=H;N=K}break}case 4:{c[f>>2]=9;c[e>>2]=c[f>>2];K=Ii(n,e)|0;if(!K){c[f>>2]=1;c[e>>2]=c[f>>2];L=G;M=H;N=Ii(n,e)|0}else{L=G;M=H;N=K}break}case 5:{K=c[r>>2]|0;O=a[K>>0]|0;if(O<<24>>24!=0?(P=c[w>>2]&1,Q=(P|0)!=0,!(O<<24>>24==124&Q)):0){do if(!((G|0)>0&(O<<24>>24==41&Q))){if(O<<24>>24==92&(P|0)==0?(a[K+1>>0]|0)==41:0)break;c[f>>2]=5;c[e>>2]=c[f>>2];R=Ii(n,e)|0;if(R|0){L=G;M=H;N=R;break c}c[f>>2]=H;c[e>>2]=c[f>>2];R=Ii(n,e)|0;if(R|0){L=G;M=H;N=R;break c}c[f>>2]=6;c[e>>2]=c[f>>2];R=Ii(n,e)|0;if(R|0){L=G;M=H;N=R;break c}c[f>>2]=4;c[e>>2]=c[f>>2];L=G;M=H;N=Ii(n,e)|0;break c}while(0);O=(P|G|0)==0?8:0;Q=G+-1|0;if(!P){c[r>>2]=K+2;L=Q;M=H;N=O}else{L=Q;M=H;N=O}}else{L=G;M=H;N=0}break}case 6:{O=F+-2|0;c[o>>2]=O;Q=c[J+(O<<2)>>2]|0;O=H;R=qn(c[b>>2]|0,1,8)|0;if(!R){S=12;break a}T=c[R+4>>2]|0;c[T>>2]=Q;c[T+4>>2]=O;c[R+16>>2]=(c[O+16>>2]|0)+(c[Q+16>>2]|0);L=G;M=R;N=0;break}case 7:{R=c[r>>2]|0;switch(a[R>>0]|0){case 124:break;case 41:{c[r>>2]=R+1;L=G;M=H;N=0;break c;break}default:{L=G;M=H;N=0;break c}}c[f>>2]=7;c[e>>2]=c[f>>2];R=Ii(n,e)|0;if(!R){c[f>>2]=H;c[e>>2]=c[f>>2];Q=Ii(n,e)|0;if(!Q){c[f>>2]=8;c[e>>2]=c[f>>2];O=Ii(n,e)|0;if(!O){c[f>>2]=3;c[e>>2]=c[f>>2];T=Ii(n,e)|0;if(!T){c[r>>2]=(c[r>>2]|0)+1;L=G;M=H;N=0}else{L=G;M=H;N=T}}else{L=G;M=H;N=O}}else{L=G;M=H;N=Q}}else{L=G;M=H;N=R}break}case 8:{R=F+-2|0;c[o>>2]=R;Q=c[J+(R<<2)>>2]|0;R=H;O=qn(c[b>>2]|0,3,8)|0;if(!O){S=12;break a}T=c[O+4>>2]|0;c[T>>2]=Q;c[T+4>>2]=R;c[O+16>>2]=(c[R+16>>2]|0)+(c[Q+16>>2]|0);L=G;M=O;N=0;break}case 9:{O=c[r>>2]|0;Q=a[O>>0]|0;switch(Q<<24>>24|0){case 63:case 43:{if(!(c[w>>2]&1)){L=G;M=H;N=0;break c}else U=38;break}case 42:{U=38;break}case 92:{R=c[w>>2]|0;if(R&1|0){L=G;M=H;N=0;break c}T=O+1|0;if((a[T>>0]|0)!=123){L=G;M=H;N=0;break c}c[r>>2]=T;V=T;W=R;break}case 123:{R=c[w>>2]|0;if(!(R&1)){L=G;M=H;N=0;break c}else{V=O;W=R}break}default:{L=G;M=H;N=0;break c}}if((U|0)==38){U=0;c[r>>2]=O+1;O=um(c[b>>2]|0,H,Q<<24>>24==43&1,Q<<24>>24==63?1:-1,0)|0;if(!O){S=12;break a}c[f>>2]=9;c[e>>2]=c[f>>2];L=G;M=O;N=Ii(n,e)|0;break c}O=V+1|0;c[r>>2]=O;Q=a[O>>0]|0;if((Q+-48&255)<10){R=Q<<24>>24;if((R+-48|0)>>>0<10){X=R;Y=-1;Z=O}else{S=10;break a}while(1){R=X+-48+(((Y|0)<0?0:Y)*10|0)|0;T=Z+1|0;_=a[T>>0]|0;X=_<<24>>24;if((X+-48|0)>>>0>=10){$=_;aa=R;ba=T;break}else{Y=R;Z=T}}}else{$=Q;aa=-1;ba=O}if($<<24>>24==44){K=ba+1|0;P=a[K>>0]|0;T=P<<24>>24;if((T+-48|0)>>>0<10){R=T;T=-1;_=K;while(1){da=R+-48+(((T|0)<0?0:T)*10|0)|0;ea=_+1|0;fa=a[ea>>0]|0;R=fa<<24>>24;if((R+-48|0)>>>0>=10){ga=fa;ha=da;ia=ea;U=50;break}else{T=da;_=ea}}}else{ja=P;ka=-1;la=K}}else{ga=$;ha=aa;ia=ba;U=50}if((U|0)==50){U=0;if((ha|0)>-1?(aa|0)>(ha|0)|(ha|0)>255:0){S=10;break a}else{ja=ga;ka=ha;la=ia}}if(!(ja<<24>>24)){S=9;break a}if((la|0)==(O|0)){S=10;break a}if(!(W&1)){if(ja<<24>>24!=92){S=10;break a}if((a[la+1>>0]|0)!=125){S=10;break a}ma=la+2|0}else{if(ja<<24>>24!=125){S=10;break a}ma=la+1|0}_=ma;if(ka|aa){T=(ka&aa|0)<0;R=um(c[b>>2]|0,H,T?1:aa,T?1:ka,0)|0;if(!R){S=12;break a}else na=R}else{R=qn(c[b>>2]|0,0,20)|0;if(!R){S=12;break a}T=c[R+4>>2]|0;c[T>>2]=-1;c[T+4>>2]=-1;c[T+8>>2]=-1;na=R}c[r>>2]=_;c[f>>2]=9;c[e>>2]=c[f>>2];L=G;M=na;N=Ii(n,e)|0;break}case 1:{_=c[r>>2]|0;d:do switch(a[_>>0]|0){case 40:{if(!(c[w>>2]&1))oa=_;else{pa=_;U=67}break}case 91:{R=_+1|0;c[r>>2]=R;T=Wd(128)|0;c[k>>2]=T;if(!T){U=72;break b}if((a[R>>0]|0)==94){T=_+2|0;c[r>>2]=T;qa=T;ra=1}else{qa=R;ra=0}c[e>>2]=0;c[f>>2]=32;R=0;T=qa;Q=0;e:while(1){switch(a[T>>0]|0){case 0:{sa=R;ta=T;ua=7;break e;break}case 93:{if(T>>>0>(c[r>>2]|0)>>>0){va=R;wa=T;xa=Q;U=78;break e}break}default:{}}ea=Kg(g,T,-1)|0;if((ea|0)<0){c[g>>2]=-1;ya=1}else ya=ea;ea=T+ya|0;if((a[ea>>0]|0)==45?(a[ea+1>>0]|0)!=93:0){da=c[g>>2]|0;fa=T+(ya+1)|0;za=Kg(g,fa,-1)|0;if((za|0)<0){c[g>>2]=-1;Aa=-1;Ba=1}else{Aa=c[g>>2]|0;Ba=za}za=fa+Ba|0;if(da>>>0>Aa>>>0){Ca=3;Da=R;Ea=za;Fa=11}else{Ga=0;Ha=Aa;Ia=da;Ja=za;Ka=Q;U=97}}else U=87;f:do if((U|0)==87){U=0;g:do switch(a[T>>0]|0){case 91:{switch(a[T+1>>0]|0){case 61:case 46:{Ca=3;Da=R;Ea=T;Fa=3;break f;break}case 58:break;default:{La=Q;break g}}za=T+2|0;da=za;while(1){fa=a[da>>0]|0;Ma=fa<<24>>24==0;if(fa<<24>>24!=58&(Ma^1))da=da+1|0;else break}if(Ma){Na=0;Oa=T;Pa=4}else{fa=da-T+-2|0;Qa=(fa|0)>63?63:fa;tt(h,za,Qa)|0;a[h+Qa>>0]=0;Qa=tn(h)|0;Na=Qa;Oa=da+2|0;Pa=(Qa|0)==0?4:Q}Ga=Na;Ha=1114111;Ia=0;Ja=Oa;Ka=Pa;U=97;break f;break}case 45:{if((a[T+1>>0]|0)==93)La=Q;else La=(c[r>>2]|0)==(T|0)?Q:11;break}default:La=Q}while(0);Qa=c[g>>2]|0;Ga=0;Ha=Qa;Ia=Qa;Ja=ea;Ka=La;U=97}while(0);h:do if((U|0)==97){U=0;if(!Ka){if(ra&(Ga|0)!=0)if((R|0)>63){Ra=R;Sa=12}else{c[l+(R<<2)>>2]=Ga;Ra=R+1|0;Sa=0}else{ea=Ji(c[b>>2]|0,Ia,Ha,e,f,k)|0;if(ea|0){Ca=3;Da=R;Ea=Ja;Fa=ea;break}c[(c[(c[(c[k>>2]|0)+((c[e>>2]|0)+-1<<2)>>2]|0)+4>>2]|0)+12>>2]=Ga;Ra=R;Sa=0}if(!((Sa|Ga|0)!=0|(c[w>>2]&2|0)==0)){ea=Ia;Qa=Sa;while(1){if(ea>>>0>Ha>>>0){Ta=Qa;break}do if(!(Zt(ea)|0)){fa=ea+1|0;if(!($v(ea)|0)){Ua=fa;Va=Qa;break}Wa=sx(ea)|0;i:do if(!($v(fa)|0)){Xa=Wa;Ya=fa}else{Za=Wa;_a=fa;while(1){if(_a>>>0>Ha>>>0|(sx(_a)|0)!=(Za+1|0)){Xa=Za;Ya=_a;break i}$a=_a+1|0;ab=sx(_a)|0;if(!($v($a)|0)){Xa=ab;Ya=$a;break}else{Za=ab;_a=$a}}}while(0);Ua=Ya;Va=Ji(c[b>>2]|0,Wa,Xa,e,f,k)|0}else{fa=rx(ea)|0;_a=ea+1|0;j:do if(!(Zt(_a)|0)){bb=fa;cb=_a}else{Za=fa;$a=_a;while(1){if($a>>>0>Ha>>>0|(rx($a)|0)!=(Za+1|0)){bb=Za;cb=$a;break j}ab=rx($a)|0;db=$a+1|0;if(!(Zt(db)|0)){bb=ab;cb=db;break}else{Za=ab;$a=db}}}while(0);Ua=cb;Va=Ji(c[b>>2]|0,fa,bb,e,f,k)|0}while(0);if(!Va){ea=Ua;Qa=0}else{Ca=3;Da=Ra;Ea=Ja;Fa=Va;break h}}if(!Ta)eb=0;else{Ca=3;Da=Ra;Ea=Ja;Fa=Ta;break}}else eb=Sa;Ca=0;Da=Ra;Ea=Ja;Fa=eb}else{Ca=3;Da=R;Ea=Ja;Fa=Ka}}while(0);if(!(Ca|Fa)){R=Da;T=Ea;Q=Fa}else{sa=Da;ta=Ea;ua=Fa;break}}if((U|0)==78){U=0;sa=va;ta=wa+1|0;ua=xa}Q=c[e>>2]|0;c[r>>2]=ta;k:do if(!ua){if(ra)Ie(c[k>>2]|0,Q,4,4);if((Q|0)>0){T=(sa|0)>0;R=sa<<2;Qa=R+4|0;ea=c[k>>2]|0;da=0;za=0;_a=0;Wa=0;while(1){$a=c[(c[ea+(_a<<2)>>2]|0)+4>>2]|0;Za=c[$a>>2]|0;db=$a+4|0;ab=c[db>>2]|0;do if(ra){if((Za|0)<(da|0)){fb=ab+1|0;gb=ea;hb=(fb|0)>=(da|0)?fb:da;ib=za;jb=Wa;kb=0;break}if((Za|0)>(za|0)){c[$a>>2]=za;c[db>>2]=Za+-1;lb=$a}else lb=0;fb=ab+1|0;mb=fb;nb=fb;ob=lb;U=130}else{mb=da;nb=za;ob=$a;U=130}while(0);do if((U|0)==130){U=0;if(!ob){gb=ea;hb=mb;ib=nb;jb=Wa;kb=0}else{c[ob+8>>2]=c[x>>2];if(T){$a=eg(c[b>>2]|0,0,0,0,Qa)|0;ab=ob+16|0;c[ab>>2]=$a;if(!$a){pb=Wa;qb=12;break k}$j($a|0,l|0,R|0)|0;c[(c[ab>>2]|0)+(sa<<2)>>2]=0}else c[ob+16>>2]=0;if(!Wa){ab=c[k>>2]|0;gb=ab;hb=mb;ib=nb;jb=c[ab+(_a<<2)>>2]|0;kb=0;break}ab=c[k>>2]|0;$a=c[ab+(_a<<2)>>2]|0;Za=qn(c[b>>2]|0,3,8)|0;if(!Za)rb=0;else{db=c[Za+4>>2]|0;c[db>>2]=Wa;c[db+4>>2]=$a;c[Za+16>>2]=(c[$a+16>>2]|0)+(c[Wa+16>>2]|0);rb=Za}gb=ab;hb=mb;ib=nb;jb=rb;kb=(rb|0)==0?12:0}}while(0);_a=_a+1|0;if(!((_a|0)<(Q|0)&(kb|0)==0)){sb=ib;tb=jb;ub=kb;break}else{ea=gb;da=hb;za=ib;Wa=jb}}}else{sb=0;tb=0;ub=0}if(ra&(ub|0)==0){Wa=c[x>>2]|0;za=qn(c[b>>2]|0,0,20)|0;if(za){da=c[za+4>>2]|0;c[da>>2]=sb;c[da+4>>2]=1114111;c[da+8>>2]=Wa;if((sa|0)>0){Wa=sa<<2;ea=eg(c[b>>2]|0,0,0,0,Wa+4|0)|0;_a=da+16|0;c[_a>>2]=ea;if(!ea){pb=tb;qb=12;break}$j(ea|0,l|0,Wa|0)|0;c[(c[_a>>2]|0)+(sa<<2)>>2]=0}else c[da+16>>2]=0;if(tb){da=qn(c[b>>2]|0,3,8)|0;if(!da){pb=0;qb=12}else{_a=c[da+4>>2]|0;c[_a>>2]=tb;c[_a+4>>2]=za;c[da+16>>2]=(c[za+16>>2]|0)+(c[tb+16>>2]|0);pb=da;qb=0}}else{pb=za;qb=0}}else{pb=tb;qb=12}}else{pb=tb;qb=ub}}else{pb=0;qb=ua}while(0);de(c[k>>2]|0);c[x>>2]=(c[x>>2]|0)+1;if(!qb){L=G;M=pb;N=0;break c}else{S=qb;break a}break}case 92:{Q=_+1|0;za=a[Q>>0]|0;do if(!(c[w>>2]&1))if(za<<24>>24!=40){da=_+1|0;_a=a[da>>0]|0;if(_a<<24>>24==41){U=215;break d}else{vb=da;wb=_a;break}}else{c[r>>2]=Q;pa=Q;U=67;break d}else{vb=Q;wb=za}while(0);za=wb<<24>>24==0;if(za){S=5;break a}else{xb=11184;yb=0}while(1){if((a[11180+(yb<<3)>>0]|0)==wb<<24>>24){zb=xb;break}yb=yb+1|0;Q=11180+(yb<<3)+4|0;if((yb|0)==12){zb=Q;break}else xb=Q}Q=c[zb>>2]|0;if(Q|0){_a=e;da=b;Wa=_a+40|0;do{c[_a>>2]=c[da>>2];_a=_a+4|0;da=da+4|0}while((_a|0)<(Wa|0));c[B>>2]=Q;c[C>>2]=1;da=Td(e)|0;if(da|0){Ab=da;U=160;break b}c[r>>2]=(c[r>>2]|0)+2;c[x>>2]=c[D>>2];L=G;M=c[E>>2]|0;N=0;break c}if(za){S=5;break a}c[r>>2]=vb;da=a[vb>>0]|0;l:do switch(da|0){case 98:{_a=qn(c[b>>2]|0,0,20)|0;if(!_a)Bb=0;else{Wa=c[_a+4>>2]|0;c[Wa>>2]=-2;c[Wa+4>>2]=64;c[Wa+8>>2]=-1;Bb=_a}c[r>>2]=(c[r>>2]|0)+1;Cb=Bb;break}case 66:{_a=qn(c[b>>2]|0,0,20)|0;if(!_a)Db=0;else{Wa=c[_a+4>>2]|0;c[Wa>>2]=-2;c[Wa+4>>2]=128;c[Wa+8>>2]=-1;Db=_a}c[r>>2]=(c[r>>2]|0)+1;Cb=Db;break}case 60:{_a=qn(c[b>>2]|0,0,20)|0;if(!_a)Eb=0;else{Wa=c[_a+4>>2]|0;c[Wa>>2]=-2;c[Wa+4>>2]=16;c[Wa+8>>2]=-1;Eb=_a}c[r>>2]=(c[r>>2]|0)+1;Cb=Eb;break}case 62:{_a=qn(c[b>>2]|0,0,20)|0;if(!_a)Fb=0;else{Wa=c[_a+4>>2]|0;c[Wa>>2]=-2;c[Wa+4>>2]=32;c[Wa+8>>2]=-1;Fb=_a}c[r>>2]=(c[r>>2]|0)+1;Cb=Fb;break}case 120:{_a=_+2|0;c[r>>2]=_a;Wa=a[_a>>0]|0;if(Wa<<24>>24==123){ea=_+3|0;c[r>>2]=ea;R=ea;ea=_a;_a=0;m:while(1){Qa=a[R>>0]|0;switch(Qa<<24>>24){case 0:case 125:{Gb=ea;Hb=_a;break m;break}default:{}}if(!(cs(Qa<<24>>24)|0)){U=191;break b}Qa=c[r>>2]|0;a[e+_a>>0]=a[Qa>>0]|0;T=_a+1|0;R=Qa+1|0;c[r>>2]=R;if(T>>>0>31){Gb=Qa;Hb=T;break}else{ea=Qa;_a=T}}c[r>>2]=Gb+2;a[e+Hb>>0]=0;_a=vs(e,0,16)|0;ea=c[x>>2]|0;R=qn(c[b>>2]|0,0,20)|0;if(!R)Ib=0;else{T=c[R+4>>2]|0;c[T>>2]=_a;c[T+4>>2]=_a;c[T+8>>2]=ea;Ib=R}c[x>>2]=(c[x>>2]|0)+1;Cb=Ib;break l}else{a[e>>0]=0;a[e+1>>0]=0;a[e+2>>0]=0;R=(cs(Wa<<24>>24)|0)==0;ea=c[r>>2]|0;if(R)Jb=ea;else{a[e>>0]=a[ea>>0]|0;R=ea+1|0;c[r>>2]=R;Jb=R}if(cs(a[Jb>>0]|0)|0){R=c[r>>2]|0;a[A>>0]=a[R>>0]|0;c[r>>2]=R+1}R=vs(e,0,16)|0;ea=c[x>>2]|0;T=qn(c[b>>2]|0,0,20)|0;if(!T)Kb=0;else{_a=c[T+4>>2]|0;c[_a>>2]=R;c[_a+4>>2]=R;c[_a+8>>2]=ea;Kb=T}c[x>>2]=(c[x>>2]|0)+1;Cb=Kb;break l}break}default:{T=(Jw(da)|0)==0;ea=c[r>>2]|0;if(T){oa=ea;break d}T=(a[ea>>0]|0)+-48|0;ea=c[x>>2]|0;_a=qn(c[b>>2]|0,0,20)|0;if(!_a){S=12;break a}R=c[_a+4>>2]|0;c[R>>2]=-4;c[R+4>>2]=T;c[R+8>>2]=ea;c[x>>2]=(c[x>>2]|0)+1;ea=c[z>>2]|0;c[z>>2]=(T|0)<(ea|0)?ea:T;c[r>>2]=(c[r>>2]|0)+1;L=G;M=_a;N=0;break c}}while(0);if(!Cb){S=12;break a}else{L=G;M=Cb;N=0;break c}break}case 46:{da=(c[w>>2]&4|0)==0;za=c[x>>2]|0;Q=qn(c[b>>2]|0,0,20)|0;_a=(Q|0)==0;if(da){if(_a){S=12;break a}da=c[Q+4>>2]|0;c[da>>2]=0;c[da+4>>2]=1114111;c[da+8>>2]=za;Lb=Q;Mb=(c[x>>2]|0)+1|0}else{if(_a){S=12;break a}_a=c[Q+4>>2]|0;c[_a>>2]=0;c[_a+4>>2]=9;c[_a+8>>2]=za;za=c[x>>2]|0;_a=qn(c[b>>2]|0,0,20)|0;if(!_a){S=12;break a}da=c[_a+4>>2]|0;c[da>>2]=11;c[da+4>>2]=1114111;c[da+8>>2]=za+1;za=qn(c[b>>2]|0,3,8)|0;if(!za){S=12;break a}da=c[za+4>>2]|0;c[da>>2]=Q;c[da+4>>2]=_a;c[za+16>>2]=(c[_a+16>>2]|0)+(c[Q+16>>2]|0);Lb=za;Mb=(c[x>>2]|0)+2|0}c[x>>2]=Mb;c[r>>2]=(c[r>>2]|0)+1;L=G;M=Lb;N=0;break c;break}case 94:{if(!(c[w>>2]&1)){if((_|0)!=(c[s>>2]|0)){oa=_;break d}c[f>>2]=5;c[e>>2]=c[f>>2];za=Ii(n,e)|0;if(za|0){L=G;M=H;N=za;break c}}za=qn(c[b>>2]|0,0,20)|0;if(!za){S=12;break a}Q=c[za+4>>2]|0;c[Q>>2]=-2;c[Q+4>>2]=1;c[Q+8>>2]=-1;c[r>>2]=(c[r>>2]|0)+1;L=G;M=za;N=0;break c;break}case 36:{if((c[w>>2]&1|0)==0?a[_+1>>0]|0:0){oa=_;break d}za=qn(c[b>>2]|0,0,20)|0;if(!za){S=12;break a}Q=c[za+4>>2]|0;c[Q>>2]=-2;c[Q+4>>2]=2;c[Q+8>>2]=-1;c[r>>2]=(c[r>>2]|0)+1;L=G;M=za;N=0;break c;break}case 41:{if(!G)oa=_;else U=214;break}case 63:case 43:case 123:case 124:case 42:{U=214;break}case 0:{U=215;break}default:oa=_}while(0);if((U|0)==67){U=0;O=G+1|0;c[r>>2]=pa+1;c[f>>2]=c[y>>2];c[e>>2]=c[f>>2];K=Ii(n,e)|0;if(K|0){L=O;M=H;N=K;break c}c[f>>2]=2;c[e>>2]=c[f>>2];K=Ii(n,e)|0;if(K|0){L=O;M=H;N=K;break c}c[f>>2]=0;c[e>>2]=c[f>>2];K=Ii(n,e)|0;if(K|0){L=O;M=H;N=K;break c}c[y>>2]=(c[y>>2]|0)+1;L=O;M=H;N=0;break c}else if((U|0)==214){U=0;if(!(c[w>>2]&1))oa=_;else U=215}if((U|0)==215){U=0;O=qn(c[b>>2]|0,0,20)|0;if(!O){S=12;break a}K=c[O+4>>2]|0;c[K>>2]=-1;c[K+4>>2]=-1;c[K+8>>2]=-1;L=G;M=O;N=0;break c}O=Kg(m,oa,-1)|0;if((O|0)<0){c[m>>2]=-1;Nb=1}else Nb=O;do if(!(c[w>>2]&2))U=226;else{if(($v(c[m>>2]|0)|0)==0?(Zt(c[m>>2]|0)|0)==0:0){U=226;break}O=c[b>>2]|0;K=rx(c[m>>2]|0)|0;P=rx(c[m>>2]|0)|0;za=c[x>>2]|0;Q=qn(O,0,20)|0;if(!Q){S=12;break a}O=c[Q+4>>2]|0;c[O>>2]=K;c[O+4>>2]=P;c[O+8>>2]=za;za=c[b>>2]|0;O=sx(c[m>>2]|0)|0;P=sx(c[m>>2]|0)|0;K=c[x>>2]|0;_a=qn(za,0,20)|0;if(!_a){S=12;break a}za=c[_a+4>>2]|0;c[za>>2]=O;c[za+4>>2]=P;c[za+8>>2]=K;K=qn(c[b>>2]|0,3,8)|0;if(!K){S=12;break a}za=c[K+4>>2]|0;c[za>>2]=Q;c[za+4>>2]=_a;c[K+16>>2]=(c[_a+16>>2]|0)+(c[Q+16>>2]|0);Ob=K}while(0);if((U|0)==226){U=0;_=c[m>>2]|0;K=c[x>>2]|0;Q=qn(c[b>>2]|0,0,20)|0;if(!Q){S=12;break a}_a=c[Q+4>>2]|0;c[_a>>2]=_;c[_a+4>>2]=_;c[_a+8>>2]=K;Ob=Q}c[x>>2]=(c[x>>2]|0)+1;c[r>>2]=(c[r>>2]|0)+Nb;L=G;M=Ob;N=0;break}case 2:{Q=F+-2|0;c[o>>2]=Q;K=c[J+(Q<<2)>>2]|0;Q=H;if((c[Q+12>>2]|0)>-1){_a=qn(c[b>>2]|0,0,20)|0;if(!_a){S=12;break a}_=c[_a+4>>2]|0;c[_>>2]=-1;c[_+4>>2]=-1;c[_+8>>2]=-1;_=qn(c[b>>2]|0,1,8)|0;if(!_){S=12;break a}za=c[_+4>>2]|0;c[za>>2]=_a;c[za+4>>2]=Q;za=Q+16|0;Q=_+16|0;c[Q>>2]=(c[za>>2]|0)+(c[_a+16>>2]|0);c[Q>>2]=c[za>>2];Pb=_}else Pb=H;_=Pb;c[_+12>>2]=K;K=_+16|0;c[K>>2]=(c[K>>2]|0)+1;L=G;M=Pb;N=0;break}case 10:{K=F+-2|0;c[o>>2]=K;c[w>>2]=c[J+(K<<2)>>2];L=G;M=H;N=0;break}default:{L=G;M=H;N=0}}while(0);F=c[o>>2]|0;J=(N|0)==0;if((N|0)!=0|J&(F|0)>(p|0)^1){Qb=J;Rb=L;Sb=M;Tb=N;U=235;break a}else{G=L;H=M}}if((U|0)==72){S=12;break}else if((U|0)==160){S=Ab;break}else if((U|0)==191){S=9;break}}else{Qb=u;Rb=0;Sb=0;Tb=q;U=235}while(0);if((U|0)==235){U=(Rb|0)>0;if(U|Qb^1)S=U?8:Tb;else{c[b+8>>2]=Sb;S=Tb}}i=d;return S|0}function Ud(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0;e=i;i=i+64|0;if((i|0)>=(j|0))ca();f=e+56|0;g=e+52|0;h=e+48|0;k=e+44|0;l=e;m=Wd(20)|0;a:do if(!m)n=12;else{o=Wd(2048)|0;p=m+16|0;c[p>>2]=o;if(!o){de(m);n=12;break}c[m>>2]=512;c[m+4>>2]=10240;c[m+8>>2]=128;o=m+12|0;c[o>>2]=0;q=Ko(0,0)|0;if(!q){de(c[p>>2]|0);de(m);n=12;break}r=l;s=r+44|0;do{c[r>>2]=0;r=r+4|0}while((r|0)<(s|0));c[l>>2]=q;c[l+4>>2]=m;c[l+12>>2]=b;c[l+36>>2]=d;r=l+28|0;c[r>>2]=-1;s=Td(l)|0;b:do if(!s){t=l+20|0;u=c[t>>2]|0;c[a>>2]=u+-1;v=c[l+8>>2]|0;w=c[r>>2]|0;if((w|0)>-1?c[l+32>>2]|0:0){x=0;y=2;z=0;A=0;break}if((w|0)<(u|0)){B=Mm(1,68)|0;if(!B){x=0;y=12;z=0;A=B}else{C=w>>>31;c[B+60>>2]=C^1;c[B+64>>2]=c[l+32>>2];c[B+28>>2]=u;if((d&8|0)==0|(C|0)!=1){C=Yd(0,m,v,B)|0;if(C|0){x=0;y=C;z=0;A=B;break}C=c[B+40>>2]|0;if((C|0)>0){u=(C<<2)+4|0;w=Wd(u)|0;if(!w){x=0;y=12;z=0;A=B;break}c[B+32>>2]=w;Gl(w|0,-1,u|0)|0;D=w}else D=0;w=Mm(C<<1|1,4)|0;c[B+36>>2]=w;if(!w){x=0;y=12;z=0;A=B;break}w=Mm(c[t>>2]|0,12)|0;if(!w){x=0;y=12;z=0;A=B;break}c[B+16>>2]=w;w=Yd(q,m,v,B)|0;if(!w)E=D;else{x=0;y=w;z=0;A=B;break}}else E=0;w=l+24|0;t=c[o>>2]|0;c[h>>2]=0;c[k>>2]=0;c[g>>2]=v;c[f>>2]=c[g>>2];C=Ii(m,f)|0;c:do if(!C){c[g>>2]=0;c[f>>2]=c[g>>2];u=Ii(m,f)|0;if(!u){F=c[o>>2]|0;do if((F|0)>(t|0)){G=F;H=0;I=0;J=0;d:while(1){K=G+-1|0;c[o>>2]=K;L=c[p>>2]|0;M=c[L+(K<<2)>>2]|0;K=G+-2|0;c[o>>2]=K;N=c[L+(K<<2)>>2]|0;e:do switch(M|0){case 0:{switch(c[N>>2]|0){case 0:{K=c[N+4>>2]|0;O=c[K>>2]|0;if(!((O|0)>-1|(O|0)==-4)){P=H;Q=I;R=J;break e}O=K+8|0;K=(c[O>>2]|0)+H|0;c[O>>2]=K;if((K|0)<=(c[k>>2]|0)){P=H;Q=I;R=J;break e}c[k>>2]=K;P=H;Q=I;R=J;break e;break}case 3:{K=c[N+4>>2]|0;c[g>>2]=c[K+4>>2];c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}c[g>>2]=0;c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}c[g>>2]=c[K>>2];c[f>>2]=c[g>>2];K=Ii(m,f)|0;if(K|0){S=J;T=K;U=86;break d}c[g>>2]=0;c[f>>2]=c[g>>2];V=Ii(m,f)|0;break}case 1:{K=c[N+4>>2]|0;c[g>>2]=c[K+4>>2];c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}c[g>>2]=0;c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}c[g>>2]=c[K>>2];c[f>>2]=c[g>>2];K=Ii(m,f)|0;if(K|0){S=J;T=K;U=86;break d}c[g>>2]=0;c[f>>2]=c[g>>2];V=Ii(m,f)|0;break}case 2:{K=c[N+4>>2]|0;c[g>>2]=H;c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}c[g>>2]=N;c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}c[g>>2]=1;c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}c[g>>2]=c[K>>2];c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}c[g>>2]=0;c[f>>2]=c[g>>2];O=Ii(m,f)|0;if(O|0){S=J;T=O;U=86;break d}if((c[K+4>>2]|0)<=1?(c[K+8>>2]|0)<=1:0)W=H;else{c[h>>2]=0;W=0}P=W;Q=I+1|0;R=J;break e;break}default:{P=H;Q=I;R=J;break e}}if(!V){P=H;Q=I;R=J}else{S=J;T=V;U=86;break d}break}case 1:{K=N+4|0;O=c[K>>2]|0;X=G+-3|0;c[o>>2]=X;Y=c[L+(X<<2)>>2]|0;c[h>>2]=Y;X=O+4|0;Z=c[X>>2]|0;_=(Z|0)>1;if(!_){$=O+8|0;aa=c[$>>2]|0;if((aa|0)>1){c[f>>2]=0;if((Z|0)>0)U=50;else{ba=Z;da=$;ea=aa;fa=Y;ga=0;U=59}}else ha=Y}else{c[f>>2]=0;U=50}do if((U|0)==50){U=0;aa=me(q,m,c[O>>2]|0,_?1:2,h,E,g,k)|0;if(!aa){ia=1;ja=Y;ka=0}else{la=aa;U=55;break d}while(1){aa=c[g>>2]|0;if(!ka)if(!aa){la=12;U=55;break d}else ma=aa;else{$=qn(q,1,8)|0;if(!$){la=12;U=55;break d}Z=c[$+4>>2]|0;c[Z>>2]=ka;c[Z+4>>2]=aa;c[$+16>>2]=(c[aa+16>>2]|0)+(c[ka+16>>2]|0);ma=$}$=c[X>>2]|0;if((ia|0)>=($|0)){na=ja;oa=$;pa=ma;break}ja=c[h>>2]|0;ia=ia+1|0;aa=me(q,m,c[O>>2]|0,(ia|0)<($|0)?1:2,h,E,g,k)|0;if(aa|0){la=aa;U=55;break d}else ka=ma}aa=O+8|0;$=c[aa>>2]|0;if(($|0)!=-1){ba=oa;da=aa;ea=$;fa=na;ga=pa;U=59;break}$=c[h>>2]|0;aa=me(q,m,c[O>>2]|0,0,h,0,f,k)|0;if(aa|0){qa=aa;break d}aa=um(q,c[f>>2]|0,0,-1,0)|0;c[f>>2]=aa;if(!aa){qa=12;break d}c[h>>2]=$;ra=aa;sa=$;ta=pa;U=78}while(0);do if((U|0)==59){U=0;if((ba|0)<(ea|0)){X=0;_=ba;while(1){$=c[h>>2]|0;aa=me(q,m,c[O>>2]|0,0,h,0,g,k)|0;if(aa|0){ua=aa;U=74;break d}if(!X){aa=c[g>>2]|0;c[f>>2]=aa;va=aa}else{aa=c[g>>2]|0;Z=qn(q,1,8)|0;if(!Z)wa=0;else{xa=c[Z+4>>2]|0;c[xa>>2]=aa;c[xa+4>>2]=X;c[Z+16>>2]=(c[X+16>>2]|0)+(c[aa+16>>2]|0);wa=Z}c[f>>2]=wa;va=wa}if(!va){ua=12;U=74;break d}Z=qn(q,0,20)|0;if(!Z){ua=12;U=74;break d}aa=c[Z+4>>2]|0;c[aa>>2]=-1;c[aa+4>>2]=-1;c[aa+8>>2]=-1;aa=qn(q,3,8)|0;if(!aa){U=73;break d}xa=c[aa+4>>2]|0;c[xa>>2]=Z;c[xa+4>>2]=va;c[aa+16>>2]=(c[va+16>>2]|0)+(c[Z+16>>2]|0);c[f>>2]=aa;_=_+1|0;if((_|0)>=(c[da>>2]|0)){ya=aa;za=$;break}else X=aa}}else{ya=0;za=fa}c[h>>2]=za;X=(ya|0)==0;if(!ga)if(X){qa=12;break d}else{Aa=za;Ba=ya;U=81;break}else if(X){Aa=za;Ba=ga;U=81;break}else{ra=ya;sa=za;ta=ga;U=78;break}}while(0);if((U|0)==78){U=0;O=qn(q,1,8)|0;if(!O){qa=12;break d}X=c[O+4>>2]|0;c[X>>2]=ta;c[X+4>>2]=ra;c[O+16>>2]=(c[ra+16>>2]|0)+(c[ta+16>>2]|0);Aa=sa;Ba=O;U=81}if((U|0)==81){U=0;c[K>>2]=c[Ba+4>>2];c[N>>2]=c[Ba>>2];ha=Aa}O=I+-1|0;X=ha-Y+J|0;if(!O){c[h>>2]=X;P=X;Q=0;R=X}else{P=ha;Q=O;R=X}break}default:{P=H;Q=I;R=J}}while(0);G=c[o>>2]|0;if((G|0)<=(t|0)){S=R;T=0;U=86;break}else{H=P;I=Q;J=R}}if((U|0)==55)qa=la;else if((U|0)==73){c[f>>2]=0;ua=12;U=74}else if((U|0)==86){Ca=c[k>>2]|0;Da=S;Ea=T;break}if((U|0)==74)qa=ua;Fa=qa;break c}else{Ca=0;Da=0;Ea=0}while(0);F=(c[w>>2]|0)+Da|0;J=(Ca|0)>(F|0)?Ca:F;c[w>>2]=J;if(Ea|0){x=0;y=Ea;z=0;A=B;break b}c[w>>2]=J+1;F=qn(q,0,20)|0;if(!F){x=0;y=12;z=0;A=B;break b}I=c[F+4>>2]|0;c[I>>2]=0;c[I+4>>2]=0;c[I+8>>2]=J;J=qn(q,1,8)|0;if(!J){x=0;y=12;z=0;A=B;break b}I=c[J+4>>2]|0;c[I>>2]=v;c[I+4>>2]=F;c[J+16>>2]=(c[F+16>>2]|0)+(c[v+16>>2]|0);F=c[o>>2]|0;c[g>>2]=J;c[f>>2]=c[g>>2];I=Ii(m,f)|0;if(I|0){x=0;y=I;z=0;A=B;break b}c[g>>2]=0;c[f>>2]=c[g>>2];I=Ii(m,f)|0;if(I|0){x=0;y=I;z=0;A=B;break b}I=c[o>>2]|0;f:do if((I|0)>(F|0)){H=I;g:while(1){G=H+-1|0;c[o>>2]=G;N=c[p>>2]|0;L=c[N+(G<<2)>>2]|0;G=H+-2|0;c[o>>2]=G;M=c[N+(G<<2)>>2]|0;h:do switch(L|0){case 0:{switch(c[M>>2]|0){case 0:{G=c[M+4>>2]|0;N=c[G>>2]|0;if((N|0)==-4){c[M+8>>2]=0;X=G+8|0;O=c[X>>2]|0;_=eg(q,0,0,1,64)|0;if(!_){Ga=M;U=98;break g}c[_>>2]=O;c[_+4>>2]=0;c[_+8>>2]=1114111;c[_+20>>2]=0;c[_+24>>2]=0;O=_+28|0;c[O>>2]=-1;c[O+4>>2]=-1;c[O+8>>2]=-1;c[O+12>>2]=-1;c[M+24>>2]=_;_=c[X>>2]|0;X=c[G+4>>2]|0;O=eg(q,0,0,1,64)|0;if(!O){Ha=M;U=100;break g}c[O>>2]=_;c[O+4>>2]=0;c[O+8>>2]=1114111;c[O+20>>2]=0;c[O+24>>2]=0;c[O+28>>2]=X;c[O+32>>2]=-1;c[O+36>>2]=-1;c[O+40>>2]=-1;c[M+28>>2]=O;break h}O=M+8|0;if((N|0)<0){c[O>>2]=1;X=eg(q,0,0,1,32)|0;if(!X){Ia=M;U=104;break g}c[X>>2]=-1;c[X+4>>2]=-1;c[X+8>>2]=-1;c[M+24>>2]=X;X=eg(q,0,0,1,32)|0;if(!X){Ja=M;U=106;break g}c[X>>2]=-1;c[X+4>>2]=-1;c[X+8>>2]=-1;c[M+28>>2]=X;break h}else{c[O>>2]=0;O=G+8|0;X=c[O>>2]|0;_=G+4|0;aa=c[_>>2]|0;$=eg(q,0,0,1,64)|0;if(!$){Ka=M;U=109;break g}c[$>>2]=X;c[$+4>>2]=N;c[$+8>>2]=aa;c[$+20>>2]=0;c[$+24>>2]=0;aa=$+28|0;c[aa>>2]=-1;c[aa+4>>2]=-1;c[aa+8>>2]=-1;c[aa+12>>2]=-1;c[M+24>>2]=$;$=c[O>>2]|0;O=c[G>>2]|0;aa=c[_>>2]|0;_=c[G+12>>2]|0;N=c[G+16>>2]|0;G=eg(q,0,0,1,64)|0;if(!G){La=M;U=111;break g}c[G>>2]=$;c[G+4>>2]=O;c[G+8>>2]=aa;c[G+20>>2]=_;c[G+24>>2]=N;N=G+28|0;c[N>>2]=-1;c[N+4>>2]=-1;c[N+8>>2]=-1;c[N+12>>2]=-1;c[M+28>>2]=G;break h}break}case 3:{c[g>>2]=M;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}c[g>>2]=1;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}G=M+4|0;c[g>>2]=c[(c[G>>2]|0)+4>>2];c[f>>2]=c[g>>2];N=Ii(m,f)|0;if(N|0){x=0;y=N;z=0;A=B;break b}c[g>>2]=0;c[f>>2]=c[g>>2];N=Ii(m,f)|0;if(N|0){x=0;y=N;z=0;A=B;break b}c[g>>2]=c[c[G>>2]>>2];c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}c[g>>2]=0;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(!G)break h;else{x=0;y=G;z=0;A=B;break b}break}case 1:{c[g>>2]=M;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}c[g>>2]=2;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}G=M+4|0;c[g>>2]=c[(c[G>>2]|0)+4>>2];c[f>>2]=c[g>>2];N=Ii(m,f)|0;if(N|0){x=0;y=N;z=0;A=B;break b}c[g>>2]=0;c[f>>2]=c[g>>2];N=Ii(m,f)|0;if(N|0){x=0;y=N;z=0;A=B;break b}c[g>>2]=c[c[G>>2]>>2];c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}c[g>>2]=0;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(!G)break h;else{x=0;y=G;z=0;A=B;break b}break}case 2:{c[g>>2]=M;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}c[g>>2]=3;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}c[g>>2]=c[c[M+4>>2]>>2];c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(G|0){x=0;y=G;z=0;A=B;break b}c[g>>2]=0;c[f>>2]=c[g>>2];G=Ii(m,f)|0;if(!G)break h;else{x=0;y=G;z=0;A=B;break b}break}default:break h}break}case 1:{G=c[M+4>>2]|0;N=c[G>>2]|0;_=G+4|0;aa=c[_>>2]|0;if(!(c[N+8>>2]|0))Ma=(c[aa+8>>2]|0)!=0;else Ma=1;c[M+8>>2]=Ma&1;O=Le(q,c[N+24>>2]|0,c[aa+24>>2]|0,0,0)|0;c[M+24>>2]=O;if(!O){x=0;y=12;z=0;A=B;break b}O=Le(q,c[(c[G>>2]|0)+28>>2]|0,c[(c[_>>2]|0)+28>>2]|0,0,0)|0;c[M+28>>2]=O;if(!O){x=0;y=12;z=0;A=B;break b}break}case 3:{O=c[M+4>>2]|0;_=c[O>>2]|0;do if(!(c[O+4>>2]|0))U=135;else{if(c[_+8>>2]|0){U=135;break}c[M+8>>2]=0}while(0);if((U|0)==135){U=0;c[M+8>>2]=1}c[M+24>>2]=c[_+24>>2];c[M+28>>2]=c[_+28>>2];break}case 2:{O=c[M+4>>2]|0;Y=c[O>>2]|0;K=Y+8|0;if(!(c[K>>2]|0))Na=0;else Na=(c[(c[O+4>>2]|0)+8>>2]|0)!=0;c[M+8>>2]=Na&1;if(c[K>>2]|0){K=Te(m,Y,0,0,f)|0;if(K|0){Oa=K;break g}K=Wd((c[f>>2]<<2)+4|0)|0;if(!K){Oa=12;break g}c[K>>2]=-1;c[g>>2]=0;G=Te(m,c[O>>2]|0,K,g,0)|0;if(G|0){Pa=K;Qa=G;U=145;break g}G=O+4|0;aa=M+24|0;c[aa>>2]=Le(q,c[(c[G>>2]|0)+24>>2]|0,c[(c[O>>2]|0)+24>>2]|0,K,c[g>>2]|0)|0;de(K);if(!(c[aa>>2]|0)){Oa=12;break g}else Ra=G}else{c[M+24>>2]=c[Y+24>>2];Ra=O+4|0}Y=c[Ra>>2]|0;if(c[Y+8>>2]|0){G=Te(m,Y,0,0,f)|0;if(G|0){Oa=G;break g}G=Wd((c[f>>2]<<2)+4|0)|0;if(!G){Oa=12;break g}c[G>>2]=-1;c[g>>2]=0;aa=Te(m,c[Ra>>2]|0,G,g,0)|0;if(aa|0){Sa=G;Ta=aa;U=152;break g}aa=M+28|0;c[aa>>2]=Le(q,c[(c[O>>2]|0)+28>>2]|0,c[(c[Ra>>2]|0)+28>>2]|0,G,c[g>>2]|0)|0;de(G);if(!(c[aa>>2]|0)){Oa=12;break g}}else c[M+28>>2]=c[Y+28>>2];break}default:{}}while(0);H=c[o>>2]|0;if((H|0)<=(F|0))break f}if((U|0)==98){c[Ga+24>>2]=0;x=0;y=12;z=0;A=B;break b}else if((U|0)==100){c[Ha+28>>2]=0;x=0;y=12;z=0;A=B;break b}else if((U|0)==104){c[Ia+24>>2]=0;x=0;y=12;z=0;A=B;break b}else if((U|0)==106){c[Ja+28>>2]=0;x=0;y=12;z=0;A=B;break b}else if((U|0)==109){c[Ka+24>>2]=0;x=0;y=12;z=0;A=B;break b}else if((U|0)==111){c[La+28>>2]=0;x=0;y=12;z=0;A=B;break b}else if((U|0)==145){de(Pa);Oa=Qa}else if((U|0)==152){de(Sa);Oa=Ta}x=0;y=Oa;z=0;A=B;break b}while(0);F=c[w>>2]|0;I=F<<2;H=Wd(I)|0;if(!H){x=H;y=12;z=0;A=B;break b}M=Wd(I)|0;if(!M){x=H;y=12;z=M;A=B;break b}if((F|0)>0)Gl(H|0,0,((F|0)>1?F:1)<<2|0)|0;qh(J,0,H,0)|0;F=c[w>>2]|0;if((F|0)>0){I=0;L=0;while(1){c[M+(L<<2)>>2]=I;Y=H+(L<<2)|0;aa=I+1+(c[Y>>2]|0)|0;c[Y>>2]=0;L=L+1|0;if((L|0)>=(F|0)){Ua=aa;break}else I=aa}}else Ua=0;I=Mm(Ua+1|0,32)|0;if(!I){x=H;y=12;z=M;A=B;break b}c[B>>2]=I;F=B+4|0;c[F>>2]=Ua;L=qh(J,I,H,M)|0;if(L|0){x=H;y=L;z=M;A=B;break b}c[B+20>>2]=0;L=J+24|0;aa=0;Y=c[L>>2]|0;while(1){G=aa+1|0;if((c[Y>>2]|0)>-1){aa=G;Y=Y+32|0}else{Va=G;break}}Y=Mm(Va,32)|0;if(!Y){x=H;y=12;z=M;A=B;break b}c[B+8>>2]=Y;aa=c[L>>2]|0;G=c[aa>>2]|0;if((G|0)>-1){O=G;G=aa;aa=0;while(1){c[Y+(aa<<5)+8>>2]=I+(c[M+(O<<2)>>2]<<5);c[Y+(aa<<5)+12>>2]=O;K=Y+(aa<<5)+16|0;c[K>>2]=0;N=G+12|0;$=c[N>>2]|0;if($|0){X=0;while(1){Z=X+1|0;if((c[$+(X<<2)>>2]|0)>-1)X=Z;else{Wa=Z;break}}X=Wa<<2;$=Wd(X)|0;c[K>>2]=$;if(!$){x=H;y=12;z=M;A=B;break b}$j($|0,c[N>>2]|0,X|0)|0}c[Y+(aa<<5)+20>>2]=c[G+16>>2];X=aa+1|0;G=G+32|0;O=c[G>>2]|0;if((O|0)<=-1){Xa=X;break}else aa=X}}else Xa=0;c[Y+(Xa<<5)+8>>2]=0;c[F>>2]=Ua;c[B+12>>2]=I+(c[M+(c[c[J+28>>2]>>2]<<2)>>2]<<5);c[B+52>>2]=c[w>>2];c[B+56>>2]=d;Ip(q);de(c[p>>2]|0);de(m);de(H);de(M);c[a+4>>2]=B;n=0;break a}else Fa=u}else Fa=C;while(0);x=0;y=Fa;z=0;A=B}}else{x=0;y=6;z=0;A=0}}else{x=0;y=s;z=0;A=0}while(0);Ip(q);de(c[p>>2]|0);de(m);if(x|0)de(x);if(z|0)de(z);c[a+4>>2]=A;Sf(a);n=y}while(0);i=e;return n|0}function Vd(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0.0,aa=0,ba=0.0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0.0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0.0,wa=0,xa=0.0,ya=0.0,za=0,Aa=0.0,Ba=0,Ca=0.0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0.0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0.0,Sa=0,Ta=0,Ua=0,Va=0.0,Wa=0.0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0.0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0.0,hd=0.0,id=0.0,jd=0.0,kd=0.0,ld=0.0,md=0.0,nd=0,od=0,pd=0.0,qd=0,rd=0.0;g=i;i=i+512|0;if((i|0)>=(j|0))ca();h=g;switch(e|0){case 0:{k=24;l=-149;m=4;break}case 1:{k=53;l=-1074;m=4;break}case 2:{k=53;l=-1074;m=4;break}default:n=0.0}a:do if((m|0)==4){e=b+4|0;o=b+100|0;do{p=c[e>>2]|0;if(p>>>0<(c[o>>2]|0)>>>0){c[e>>2]=p+1;q=d[p>>0]|0}else q=vh(b)|0}while((Ou(q)|0)!=0);r=q;b:do switch(r|0){case 43:case 45:{p=1-(((r|0)==45&1)<<1)|0;u=c[e>>2]|0;if(u>>>0<(c[o>>2]|0)>>>0){c[e>>2]=u+1;v=d[u>>0]|0;w=p;break b}else{v=vh(b)|0;w=p;break b}break}default:{v=r;w=1}}while(0);p=v;u=0;while(1){if((p|32|0)!=(a[152912+u>>0]|0)){x=p;y=u;break}do if(u>>>0<7){z=c[e>>2]|0;if(z>>>0<(c[o>>2]|0)>>>0){c[e>>2]=z+1;A=d[z>>0]|0;break}else{A=vh(b)|0;break}}else A=p;while(0);z=u+1|0;if(z>>>0<8){p=A;u=z}else{x=A;y=z;break}}c:do switch(y|0){case 8:break;case 3:{m=23;break}default:{u=(f|0)!=0;if(u&y>>>0>3)if((y|0)==8)break c;else{m=23;break c}d:do if(!y){p=x;z=0;while(1){if((p|32|0)!=(a[152921+z>>0]|0)){B=p;C=z;break d}do if(z>>>0<2){E=c[e>>2]|0;if(E>>>0<(c[o>>2]|0)>>>0){c[e>>2]=E+1;F=d[E>>0]|0;break}else{F=vh(b)|0;break}}else F=p;while(0);E=z+1|0;if(E>>>0<3){p=F;z=E}else{B=F;C=E;break}}}else{B=x;C=y}while(0);switch(C|0){case 3:{z=c[e>>2]|0;if(z>>>0<(c[o>>2]|0)>>>0){c[e>>2]=z+1;G=d[z>>0]|0}else G=vh(b)|0;if((G|0)==40)H=1;else{if(!(c[o>>2]|0)){n=s;break a}c[e>>2]=(c[e>>2]|0)+-1;n=s;break a}while(1){z=c[e>>2]|0;if(z>>>0<(c[o>>2]|0)>>>0){c[e>>2]=z+1;I=d[z>>0]|0}else I=vh(b)|0;if(!((I+-48|0)>>>0<10|(I+-65|0)>>>0<26)?!((I|0)==95|(I+-97|0)>>>0<26):0){J=I;K=H;break}H=H+1|0}if((J|0)==41){n=s;break a}z=(c[o>>2]|0)==0;if(!z)c[e>>2]=(c[e>>2]|0)+-1;if(!u){c[($r()|0)>>2]=22;to(b,0);n=0.0;break a}if(!K){n=s;break a}else L=K;while(1){L=L+-1|0;if(!z)c[e>>2]=(c[e>>2]|0)+-1;if(!L){n=s;break a}}break}case 0:{do if((B|0)==48){z=c[e>>2]|0;if(z>>>0<(c[o>>2]|0)>>>0){c[e>>2]=z+1;M=d[z>>0]|0}else M=vh(b)|0;if((M|32|0)!=120){if(!(c[o>>2]|0)){N=48;break}c[e>>2]=(c[e>>2]|0)+-1;N=48;break}z=c[e>>2]|0;if(z>>>0<(c[o>>2]|0)>>>0){c[e>>2]=z+1;P=d[z>>0]|0;Q=0}else{P=vh(b)|0;Q=0}e:while(1){switch(P|0){case 46:{R=Q;m=74;break e;break}case 48:break;default:{S=0;T=0;U=0;V=0;W=P;X=Q;Y=0;Z=0;_=1.0;aa=0;ba=0.0;break e}}z=c[e>>2]|0;if(z>>>0<(c[o>>2]|0)>>>0){c[e>>2]=z+1;P=d[z>>0]|0;Q=1;continue}else{P=vh(b)|0;Q=1;continue}}if((m|0)==74){z=c[e>>2]|0;if(z>>>0<(c[o>>2]|0)>>>0){c[e>>2]=z+1;da=d[z>>0]|0}else da=vh(b)|0;if((da|0)==48){z=0;u=0;while(1){p=c[e>>2]|0;if(p>>>0<(c[o>>2]|0)>>>0){c[e>>2]=p+1;ea=d[p>>0]|0}else ea=vh(b)|0;p=Gr(z|0,u|0,-1,-1)|0;E=D;if((ea|0)==48){z=p;u=E}else{S=0;T=0;U=p;V=E;W=ea;X=1;Y=1;Z=0;_=1.0;aa=0;ba=0.0;break}}}else{S=0;T=0;U=0;V=0;W=da;X=R;Y=1;Z=0;_=1.0;aa=0;ba=0.0}}while(1){u=W+-48|0;z=W|32;if(u>>>0>=10){E=(W|0)==46;if(!(E|(z+-97|0)>>>0<6)){fa=U;ga=T;ha=V;ia=S;ja=W;ka=X;la=Y;ma=aa;na=ba;break}if(E)if(!Y){oa=T;pa=S;qa=T;ra=S;sa=X;ta=1;ua=Z;va=_;wa=aa;xa=ba}else{fa=U;ga=T;ha=V;ia=S;ja=46;ka=X;la=Y;ma=aa;na=ba;break}else m=86}else m=86;if((m|0)==86){m=0;E=(W|0)>57?z+-87|0:u;do if(!((S|0)<0|(S|0)==0&T>>>0<8)){if((S|0)<0|(S|0)==0&T>>>0<14){ya=_*.0625;za=Z;Aa=ya;Ba=aa;Ca=ba+ya*+(E|0);break}if((Z|0)!=0|(E|0)==0){za=Z;Aa=_;Ba=aa;Ca=ba}else{za=1;Aa=_;Ba=aa;Ca=ba+_*.5}}else{za=Z;Aa=_;Ba=E+(aa<<4)|0;Ca=ba}while(0);E=Gr(T|0,S|0,1,0)|0;oa=U;pa=V;qa=E;ra=D;sa=1;ta=Y;ua=za;va=Aa;wa=Ba;xa=Ca}E=c[e>>2]|0;if(E>>>0<(c[o>>2]|0)>>>0){c[e>>2]=E+1;S=ra;T=qa;U=oa;V=pa;W=d[E>>0]|0;X=sa;Y=ta;Z=ua;_=va;aa=wa;ba=xa;continue}else{S=ra;T=qa;U=oa;V=pa;W=vh(b)|0;X=sa;Y=ta;Z=ua;_=va;aa=wa;ba=xa;continue}}if(!ka){E=(c[o>>2]|0)==0;if(!E)c[e>>2]=(c[e>>2]|0)+-1;if(f){if(!E?(E=c[e>>2]|0,c[e>>2]=E+-1,la|0):0)c[e>>2]=E+-2}else to(b,0);n=+(w|0)*0.0;break a}E=(la|0)==0;u=E?ga:fa;z=E?ia:ha;if((ia|0)<0|(ia|0)==0&ga>>>0<8){E=ga;p=ia;Da=ma;while(1){Ea=Da<<4;E=Gr(E|0,p|0,1,0)|0;p=D;if(!((p|0)<0|(p|0)==0&E>>>0<8)){Fa=Ea;break}else Da=Ea}}else Fa=ma;if((ja|32|0)==112){Da=mf(b,f)|0;E=D;if((Da|0)==0&(E|0)==-2147483648){if(!f){to(b,0);n=0.0;break a}if(!(c[o>>2]|0)){Ga=0;Ha=0}else{c[e>>2]=(c[e>>2]|0)+-1;Ga=0;Ha=0}}else{Ga=Da;Ha=E}}else if(!(c[o>>2]|0)){Ga=0;Ha=0}else{c[e>>2]=(c[e>>2]|0)+-1;Ga=0;Ha=0}E=fr(u|0,z|0,2)|0;Da=Gr(E|0,D|0,-32,-1)|0;E=Gr(Da|0,D|0,Ga|0,Ha|0)|0;Da=D;if(!Fa){n=+(w|0)*0.0;break a}if((Da|0)>0|(Da|0)==0&E>>>0>(0-l|0)>>>0){c[($r()|0)>>2]=34;n=+(w|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break a}p=l+-106|0;Ea=((p|0)<0)<<31>>31;if((Da|0)<(Ea|0)|(Da|0)==(Ea|0)&E>>>0<p>>>0){c[($r()|0)>>2]=34;n=+(w|0)*2.2250738585072014e-308*2.2250738585072014e-308;break a}if((Fa|0)>-1){p=E;Ea=Da;Ia=Fa;ya=na;while(1){Ja=!(ya>=.5);Ka=Ja&1|Ia<<1;La=Ka^1;Ma=ya+(Ja?ya:ya+-1.0);Ja=Gr(p|0,Ea|0,-1,-1)|0;Na=D;if((Ka|0)>-1){p=Ja;Ea=Na;Ia=La;ya=Ma}else{Oa=Ja;Pa=Na;Qa=La;Ra=Ma;break}}}else{Oa=E;Pa=Da;Qa=Fa;Ra=na}Ia=jr(32,0,l|0,((l|0)<0)<<31>>31|0)|0;Ea=Gr(Oa|0,Pa|0,Ia|0,D|0)|0;Ia=D;if(0>(Ia|0)|0==(Ia|0)&k>>>0>Ea>>>0)if((Ea|0)<0){Sa=0;m=127}else{Ta=Ea;m=125}else{Ta=k;m=125}if((m|0)==125)if((Ta|0)<53){Sa=Ta;m=127}else{Ua=Ta;Va=+(w|0);Wa=0.0}if((m|0)==127){ya=+(w|0);Ua=Sa;Va=ya;Wa=+nw(+Ti(1.0,84-Sa|0),ya)}Ea=(Qa&1|0)==0&(Ra!=0.0&(Ua|0)<32);ya=Va*(Ea?0.0:Ra)+(Wa+Va*+(((Ea&1)+Qa|0)>>>0))-Wa;if(!(ya!=0.0))c[($r()|0)>>2]=34;n=+pw(ya,Oa);break a}else N=B;while(0);Ea=l+k|0;Ia=0-Ea|0;p=N;z=0;f:while(1){switch(p|0){case 46:{Xa=z;m=138;break f;break}case 48:break;default:{Ya=p;Za=0;_a=0;$a=z;ab=0;break f}}u=c[e>>2]|0;if(u>>>0<(c[o>>2]|0)>>>0){c[e>>2]=u+1;p=d[u>>0]|0;z=1;continue}else{p=vh(b)|0;z=1;continue}}if((m|0)==138){z=c[e>>2]|0;if(z>>>0<(c[o>>2]|0)>>>0){c[e>>2]=z+1;bb=d[z>>0]|0}else bb=vh(b)|0;if((bb|0)==48){z=0;p=0;while(1){u=Gr(z|0,p|0,-1,-1)|0;La=D;Na=c[e>>2]|0;if(Na>>>0<(c[o>>2]|0)>>>0){c[e>>2]=Na+1;cb=d[Na>>0]|0}else cb=vh(b)|0;if((cb|0)==48){z=u;p=La}else{Ya=cb;Za=u;_a=La;$a=1;ab=1;break}}}else{Ya=bb;Za=0;_a=0;$a=Xa;ab=1}}c[h>>2]=0;p=Ya+-48|0;z=(Ya|0)==46;g:do if(z|p>>>0<10){La=h+496|0;u=Ya;Na=0;Ja=0;Ka=z;db=p;eb=Za;fb=_a;gb=$a;hb=ab;ib=0;jb=0;kb=0;h:while(1){do if(Ka)if(!hb){lb=Na;mb=Ja;nb=Na;ob=Ja;pb=gb;qb=1;rb=ib;sb=jb;tb=kb}else{ub=eb;vb=fb;wb=Na;xb=Ja;yb=gb;zb=ib;Ab=jb;Bb=kb;break h}else{Cb=Gr(Na|0,Ja|0,1,0)|0;Db=D;Eb=(u|0)!=48;if((jb|0)>=125){if(!Eb){lb=eb;mb=fb;nb=Cb;ob=Db;pb=gb;qb=hb;rb=ib;sb=jb;tb=kb;break}c[La>>2]=c[La>>2]|1;lb=eb;mb=fb;nb=Cb;ob=Db;pb=gb;qb=hb;rb=ib;sb=jb;tb=kb;break}Fb=h+(jb<<2)|0;if(!ib)Gb=db;else Gb=u+-48+((c[Fb>>2]|0)*10|0)|0;c[Fb>>2]=Gb;Fb=ib+1|0;Hb=(Fb|0)==9;lb=eb;mb=fb;nb=Cb;ob=Db;pb=1;qb=hb;rb=Hb?0:Fb;sb=(Hb&1)+jb|0;tb=Eb?Cb:kb}while(0);Cb=c[e>>2]|0;if(Cb>>>0<(c[o>>2]|0)>>>0){c[e>>2]=Cb+1;Ib=d[Cb>>0]|0}else Ib=vh(b)|0;db=Ib+-48|0;Ka=(Ib|0)==46;if(!(Ka|db>>>0<10)){Jb=Ib;Kb=lb;Lb=nb;Mb=mb;Nb=ob;Ob=pb;Pb=qb;Qb=rb;Rb=sb;Sb=tb;m=161;break g}else{u=Ib;Na=nb;Ja=ob;eb=lb;fb=mb;gb=pb;hb=qb;ib=rb;jb=sb;kb=tb}}Tb=wb;Ub=xb;Vb=ub;Wb=vb;Xb=(yb|0)!=0;Yb=zb;Zb=Ab;_b=Bb;m=169}else{Jb=Ya;Kb=Za;Lb=0;Mb=_a;Nb=0;Ob=$a;Pb=ab;Qb=0;Rb=0;Sb=0;m=161}while(0);do if((m|0)==161){p=(Pb|0)==0;z=p?Lb:Kb;kb=p?Nb:Mb;p=(Ob|0)!=0;if(!((Jb|32|0)==101&p))if((Jb|0)>-1){Tb=Lb;Ub=Nb;Vb=z;Wb=kb;Xb=p;Yb=Qb;Zb=Rb;_b=Sb;m=169;break}else{$b=Lb;ac=Nb;bc=p;cc=z;dc=kb;ec=Qb;fc=Rb;gc=Sb;m=171;break}p=mf(b,f)|0;jb=D;if((p|0)==0&(jb|0)==-2147483648){if(!f){to(b,0);hc=0.0;break}if(!(c[o>>2]|0)){ic=0;jc=0}else{c[e>>2]=(c[e>>2]|0)+-1;ic=0;jc=0}}else{ic=p;jc=jb}jb=Gr(ic|0,jc|0,z|0,kb|0)|0;kc=jb;lc=Lb;mc=D;nc=Nb;oc=Qb;pc=Rb;qc=Sb;m=173}while(0);if((m|0)==169)if(c[o>>2]|0){c[e>>2]=(c[e>>2]|0)+-1;if(Xb){kc=Vb;lc=Tb;mc=Wb;nc=Ub;oc=Yb;pc=Zb;qc=_b;m=173}else m=172}else{$b=Tb;ac=Ub;bc=Xb;cc=Vb;dc=Wb;ec=Yb;fc=Zb;gc=_b;m=171}if((m|0)==171)if(bc){kc=cc;lc=$b;mc=dc;nc=ac;oc=ec;pc=fc;qc=gc;m=173}else m=172;do if((m|0)==172){c[($r()|0)>>2]=22;to(b,0);hc=0.0}else if((m|0)==173){jb=c[h>>2]|0;if(!jb){hc=+(w|0)*0.0;break}if(((nc|0)<0|(nc|0)==0&lc>>>0<10)&((kc|0)==(lc|0)&(mc|0)==(nc|0))?k>>>0>30|(jb>>>k|0)==0:0){hc=+(w|0)*+(jb>>>0);break}jb=(l|0)/-2|0;kb=((jb|0)<0)<<31>>31;if((mc|0)>(kb|0)|(mc|0)==(kb|0)&kc>>>0>jb>>>0){c[($r()|0)>>2]=34;hc=+(w|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}jb=l+-106|0;kb=((jb|0)<0)<<31>>31;if((mc|0)<(kb|0)|(mc|0)==(kb|0)&kc>>>0<jb>>>0){c[($r()|0)>>2]=34;hc=+(w|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if(!oc)rc=pc;else{if((oc|0)<9){jb=h+(pc<<2)|0;kb=c[jb>>2]|0;z=oc;while(1){p=kb*10|0;z=z+1|0;if((z|0)==9){sc=p;break}else kb=p}c[jb>>2]=sc}rc=pc+1|0}if((qc|0)<9?(qc|0)<=(kc|0)&(kc|0)<18:0){if((kc|0)==9){hc=+(w|0)*+((c[h>>2]|0)>>>0);break}if((kc|0)<9){hc=+(w|0)*+((c[h>>2]|0)>>>0)/+(c[7976+(8-kc<<2)>>2]|0);break}kb=k+27+($(kc,-3)|0)|0;z=c[h>>2]|0;if((kb|0)>30|(z>>>kb|0)==0){hc=+(w|0)*+(z>>>0)*+(c[7976+(kc+-10<<2)>>2]|0);break}}z=(kc|0)%9|0;if(!z){tc=0;uc=0;vc=kc;wc=rc}else{kb=(kc|0)>-1?z:z+9|0;z=c[7976+(8-kb<<2)>>2]|0;if(rc){p=1e9/(z|0)|0;ib=0;hb=0;gb=0;fb=kc;while(1){eb=h+(gb<<2)|0;Ja=c[eb>>2]|0;Na=((Ja>>>0)/(z>>>0)|0)+hb|0;c[eb>>2]=Na;eb=$((Ja>>>0)%(z>>>0)|0,p)|0;Ja=(gb|0)==(ib|0)&(Na|0)==0;gb=gb+1|0;Na=Ja?fb+-9|0:fb;u=Ja?gb&127:ib;if((gb|0)==(rc|0)){xc=eb;yc=u;zc=Na;break}else{ib=u;hb=eb;fb=Na}}if(!xc){Ac=yc;Bc=zc;Cc=rc}else{c[h+(rc<<2)>>2]=xc;Ac=yc;Bc=zc;Cc=rc+1|0}}else{Ac=0;Bc=kc;Cc=0}tc=Ac;uc=0;vc=9-kb+Bc|0;wc=Cc}i:while(1){fb=(vc|0)<18;hb=(vc|0)==18;ib=h+(tc<<2)|0;gb=uc;p=wc;while(1){if(!fb){if(!hb){Dc=tc;Ec=gb;Fc=vc;Gc=p;break i}if((c[ib>>2]|0)>>>0>=9007199){Dc=tc;Ec=gb;Fc=18;Gc=p;break i}}z=0;jb=p+127|0;Na=p;while(1){eb=jb&127;u=h+(eb<<2)|0;Ja=fr(c[u>>2]|0,0,29)|0;db=Gr(Ja|0,D|0,z|0,0)|0;Ja=D;if(Ja>>>0>0|(Ja|0)==0&db>>>0>1e9){Ka=Ws(db|0,Ja|0,1e9,0)|0;La=zp(db|0,Ja|0,1e9,0)|0;Hc=La;Ic=Ka}else{Hc=db;Ic=0}c[u>>2]=Hc;u=(eb|0)==(tc|0);db=(eb|0)!=(Na+127&127|0)|u?Na:(Hc|0)==0?eb:Na;if(u){Jc=Ic;Kc=db;break}else{z=Ic;jb=eb+-1|0;Na=db}}Na=gb+-29|0;if(!Jc){gb=Na;p=Kc}else{Lc=Na;Mc=Jc;Nc=Kc;break}}p=tc+127&127;if((p|0)==(Nc|0)){gb=Nc+127&127;ib=h+((Nc+126&127)<<2)|0;c[ib>>2]=c[ib>>2]|c[h+(gb<<2)>>2];Oc=gb}else Oc=Nc;c[h+(p<<2)>>2]=Mc;tc=p;uc=Lc;vc=vc+9|0;wc=Oc}j:while(1){Pc=Gc+1&127;kb=h+((Gc+127&127)<<2)|0;p=Dc;gb=Ec;ib=Fc;while(1){hb=(ib|0)==18;fb=(ib|0)>27?9:1;Na=hb^1;Qc=p;Rc=gb;while(1){Sc=Qc&127;Tc=(Sc|0)==(Gc|0);do if(!Tc){jb=c[h+(Sc<<2)>>2]|0;if(jb>>>0<9007199){m=219;break}if(jb>>>0>9007199)break;jb=Qc+1&127;if((jb|0)==(Gc|0)){m=219;break}z=c[h+(jb<<2)>>2]|0;if(z>>>0<254740991){m=219;break}if(!(z>>>0>254740991|Na)){Uc=Sc;Vc=Qc;Wc=Rc;Xc=Gc;break j}}else m=219;while(0);if((m|0)==219?(m=0,hb):0){m=220;break j}z=Rc+fb|0;if((Qc|0)==(Gc|0)){Qc=Gc;Rc=z}else{Yc=z;Zc=Qc;break}}hb=(1<<fb)+-1|0;Na=1e9>>>fb;z=Zc;jb=0;db=Zc;eb=ib;while(1){u=h+(db<<2)|0;Ka=c[u>>2]|0;La=(Ka>>>fb)+jb|0;c[u>>2]=La;u=$(Ka&hb,Na)|0;Ka=(db|0)==(z|0)&(La|0)==0;db=db+1&127;La=Ka?eb+-9|0:eb;Ja=Ka?db:z;if((db|0)==(Gc|0)){_c=u;$c=Ja;ad=La;break}else{z=Ja;jb=u;eb=La}}if(!_c){p=$c;gb=Yc;ib=ad;continue}if((Pc|0)!=($c|0)){bd=Yc;cd=_c;dd=$c;ed=ad;break}c[kb>>2]=c[kb>>2]|1;p=$c;gb=Yc;ib=ad}c[h+(Gc<<2)>>2]=cd;Dc=dd;Ec=bd;Fc=ed;Gc=Pc}if((m|0)==220)if(Tc){c[h+(Pc+-1<<2)>>2]=0;Uc=Gc;Vc=Qc;Wc=Rc;Xc=Pc}else{Uc=Sc;Vc=Qc;Wc=Rc;Xc=Gc}ya=+((c[h+(Uc<<2)>>2]|0)>>>0);ib=Vc+1&127;if((ib|0)==(Xc|0)){gb=Vc+2&127;c[h+(gb+-1<<2)>>2]=0;fd=gb}else fd=Xc;Ma=+(w|0);gd=Ma*(ya*1.0e9+ +((c[h+(ib<<2)>>2]|0)>>>0));ib=Wc+53|0;gb=ib-l|0;p=(gb|0)<(k|0);kb=p&1;eb=p?((gb|0)<0?0:gb):k;if((eb|0)<53){ya=+nw(+Ti(1.0,105-eb|0),gd);hd=+Ww(gd,+Ti(1.0,53-eb|0));id=ya;jd=hd;kd=ya+(gd-hd)}else{id=0.0;jd=0.0;kd=gd}jb=Vc+2&127;do if((jb|0)==(fd|0))ld=jd;else{z=c[h+(jb<<2)>>2]|0;do if(z>>>0>=5e8){if(z>>>0>5e8){md=Ma*.75+jd;break}if((Vc+3&127|0)==(fd|0)){md=Ma*.5+jd;break}else{md=Ma*.75+jd;break}}else{if((z|0)==0?(Vc+3&127|0)==(fd|0):0){md=jd;break}md=Ma*.25+jd}while(0);if((53-eb|0)<=1){ld=md;break}if(+Ww(md,1.0)!=0.0){ld=md;break}ld=md+1.0}while(0);Ma=kd+ld-id;do if((ib&2147483647|0)>(-2-Ea|0)){if(!(+O(+Ma)>=9007199254740992.0)){nd=kb;od=Wc;pd=Ma}else{nd=p&(eb|0)==(gb|0)?0:kb;od=Wc+1|0;pd=Ma*.5}if((od+50|0)<=(Ia|0)?!(ld!=0.0&(nd|0)!=0):0){qd=od;rd=pd;break}c[($r()|0)>>2]=34;qd=od;rd=pd}else{qd=Wc;rd=Ma}while(0);hc=+pw(rd,qd)}while(0);n=hc;break a;break}default:{if(c[o>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;c[($r()|0)>>2]=22;to(b,0);n=0.0;break a}}}}while(0);if((m|0)==23){Ia=(c[o>>2]|0)==0;if(!Ia)c[e>>2]=(c[e>>2]|0)+-1;if((f|0)!=0&y>>>0>3){Ea=y;do{if(!Ia)c[e>>2]=(c[e>>2]|0)+-1;Ea=Ea+-1|0}while(Ea>>>0>3)}}n=+(w|0)*t}while(0);i=g;return +n}function Xd(e,f,g,l,m){e=e|0;f=f|0;g=g|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0.0,fb=0.0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0.0,mb=0.0,nb=0.0,ob=0.0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0.0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0.0,_b=0.0,$b=0.0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0;n=i;i=i+624|0;if((i|0)>=(j|0))ca();o=n+24|0;p=n+16|0;q=n+588|0;r=n+576|0;s=n;t=n+536|0;u=n+8|0;v=n+528|0;w=(e|0)!=0;x=t+40|0;y=x;z=t+39|0;t=u+4|0;A=q;B=0-A|0;C=r+12|0;E=r+11|0;r=C;F=r-A|0;G=-2-A|0;H=r+2|0;I=o+288|0;J=q+9|0;K=J;L=q+8|0;M=0;N=0;O=0;P=f;a:while(1){do if((M|0)>-1)if((N|0)>(2147483647-M|0)){c[($r()|0)>>2]=75;Q=-1;break}else{Q=N+M|0;break}else Q=M;while(0);f=a[P>>0]|0;if(!(f<<24>>24)){R=Q;S=O;T=244;break}else{U=f;V=P}b:while(1){switch(U<<24>>24){case 37:{W=V;X=V;T=9;break b;break}case 0:{Y=V;Z=V;break b;break}default:{}}f=V+1|0;U=a[f>>0]|0;V=f}c:do if((T|0)==9)while(1){T=0;if((a[W+1>>0]|0)!=37){Y=W;Z=X;break c}f=X+1|0;_=W+2|0;if((a[_>>0]|0)==37){W=_;X=f;T=9}else{Y=_;Z=f;break}}while(0);f=Z-P|0;if(w?(c[e>>2]&32|0)==0:0)Ug(P,f,e)|0;if((Z|0)!=(P|0)){M=Q;N=f;P=Y;continue}_=Y+1|0;aa=a[_>>0]|0;ba=(aa<<24>>24)+-48|0;if(ba>>>0<10){da=(a[Y+2>>0]|0)==36;ea=da?Y+3|0:_;fa=a[ea>>0]|0;ga=da?ba:-1;ha=da?1:O;ia=ea}else{fa=aa;ga=-1;ha=O;ia=_}_=fa<<24>>24;d:do if((_&-32|0)==32){aa=_;ea=fa;da=0;ba=ia;while(1){if(!(1<<aa+-32&75913)){ja=ea;ka=da;la=ba;break d}ma=1<<(ea<<24>>24)+-32|da;na=ba+1|0;oa=a[na>>0]|0;aa=oa<<24>>24;if((aa&-32|0)!=32){ja=oa;ka=ma;la=na;break}else{ea=oa;da=ma;ba=na}}}else{ja=fa;ka=0;la=ia}while(0);do if(ja<<24>>24==42){_=la+1|0;ba=(a[_>>0]|0)+-48|0;if(ba>>>0<10?(a[la+2>>0]|0)==36:0){c[m+(ba<<2)>>2]=10;pa=1;qa=la+3|0;ra=c[l+((a[_>>0]|0)+-48<<3)>>2]|0}else{if(ha|0){sa=-1;break a}if(!w){ta=ka;ua=0;va=_;wa=0;break}ba=(c[g>>2]|0)+(4-1)&~(4-1);da=c[ba>>2]|0;c[g>>2]=ba+4;pa=0;qa=_;ra=da}if((ra|0)<0){ta=ka|8192;ua=pa;va=qa;wa=0-ra|0}else{ta=ka;ua=pa;va=qa;wa=ra}}else{da=(ja<<24>>24)+-48|0;if(da>>>0<10){_=la;ba=0;ea=da;while(1){da=(ba*10|0)+ea|0;aa=_+1|0;ea=(a[aa>>0]|0)+-48|0;if(ea>>>0>=10){xa=da;ya=aa;break}else{_=aa;ba=da}}if((xa|0)<0){sa=-1;break a}else{ta=ka;ua=ha;va=ya;wa=xa}}else{ta=ka;ua=ha;va=la;wa=0}}while(0);e:do if((a[va>>0]|0)==46){ba=va+1|0;_=a[ba>>0]|0;if(_<<24>>24!=42){ea=(_<<24>>24)+-48|0;if(ea>>>0<10){za=ba;Aa=0;Ba=ea}else{Ca=0;Da=ba;break}while(1){ba=(Aa*10|0)+Ba|0;ea=za+1|0;Ba=(a[ea>>0]|0)+-48|0;if(Ba>>>0>=10){Ca=ba;Da=ea;break e}else{za=ea;Aa=ba}}}ba=va+2|0;ea=(a[ba>>0]|0)+-48|0;if(ea>>>0<10?(a[va+3>>0]|0)==36:0){c[m+(ea<<2)>>2]=10;Ca=c[l+((a[ba>>0]|0)+-48<<3)>>2]|0;Da=va+4|0;break}if(ua|0){sa=-1;break a}if(w){ea=(c[g>>2]|0)+(4-1)&~(4-1);_=c[ea>>2]|0;c[g>>2]=ea+4;Ca=_;Da=ba}else{Ca=0;Da=ba}}else{Ca=-1;Da=va}while(0);ba=Da;_=0;while(1){ea=(a[ba>>0]|0)+-65|0;if(ea>>>0>57){sa=-1;break a}da=ba+1|0;aa=a[152338+(_*58|0)+ea>>0]|0;ea=aa&255;if((ea+-1|0)>>>0<8){ba=da;_=ea}else{Ea=da;Fa=aa;Ga=ea;Ha=ba;Ia=_;break}}if(!(Fa<<24>>24)){sa=-1;break}_=(ga|0)>-1;do if(Fa<<24>>24==19)if(_){sa=-1;break a}else T=52;else{if(_){c[m+(ga<<2)>>2]=Ga;ba=l+(ga<<3)|0;ea=c[ba+4>>2]|0;aa=s;c[aa>>2]=c[ba>>2];c[aa+4>>2]=ea;T=52;break}if(!w){sa=0;break a}nf(s,Ga,g)}while(0);if((T|0)==52?(T=0,!w):0){M=Q;N=f;O=ua;P=Ea;continue}_=a[Ha>>0]|0;ea=(Ia|0)!=0&(_&15|0)==3?_&-33:_;_=ta&-65537;aa=(ta&8192|0)==0?ta:_;f:do switch(ea|0){case 110:{switch(Ia|0){case 0:{c[c[s>>2]>>2]=Q;M=Q;N=f;O=ua;P=Ea;continue a;break}case 1:{c[c[s>>2]>>2]=Q;M=Q;N=f;O=ua;P=Ea;continue a;break}case 2:{ba=c[s>>2]|0;c[ba>>2]=Q;c[ba+4>>2]=((Q|0)<0)<<31>>31;M=Q;N=f;O=ua;P=Ea;continue a;break}case 3:{b[c[s>>2]>>1]=Q;M=Q;N=f;O=ua;P=Ea;continue a;break}case 4:{a[c[s>>2]>>0]=Q;M=Q;N=f;O=ua;P=Ea;continue a;break}case 6:{c[c[s>>2]>>2]=Q;M=Q;N=f;O=ua;P=Ea;continue a;break}case 7:{ba=c[s>>2]|0;c[ba>>2]=Q;c[ba+4>>2]=((Q|0)<0)<<31>>31;M=Q;N=f;O=ua;P=Ea;continue a;break}default:{M=Q;N=f;O=ua;P=Ea;continue a}}break}case 112:{Ja=aa|8;Ka=Ca>>>0>8?Ca:8;La=120;T=64;break}case 88:case 120:{Ja=aa;Ka=Ca;La=ea;T=64;break}case 111:{ba=s;da=c[ba>>2]|0;na=c[ba+4>>2]|0;if((da|0)==0&(na|0)==0)Ma=x;else{ba=x;ma=da;da=na;while(1){na=ba+-1|0;a[na>>0]=ma&7|48;ma=kr(ma|0,da|0,3)|0;da=D;if((ma|0)==0&(da|0)==0){Ma=na;break}else ba=na}}if(!(aa&8)){Na=Ma;Oa=aa;Pa=Ca;Qa=0;Ra=152818;T=77}else{ba=y-Ma|0;Na=Ma;Oa=aa;Pa=(Ca|0)>(ba|0)?Ca:ba+1|0;Qa=0;Ra=152818;T=77}break}case 105:case 100:{ba=s;da=c[ba>>2]|0;ma=c[ba+4>>2]|0;if((ma|0)<0){ba=jr(0,0,da|0,ma|0)|0;na=D;oa=s;c[oa>>2]=ba;c[oa+4>>2]=na;Sa=ba;Ta=na;Ua=1;Va=152818;T=76;break f}if(!(aa&2048)){na=aa&1;Sa=da;Ta=ma;Ua=na;Va=(na|0)==0?152818:152820;T=76}else{Sa=da;Ta=ma;Ua=1;Va=152819;T=76}break}case 117:{ma=s;Sa=c[ma>>2]|0;Ta=c[ma+4>>2]|0;Ua=0;Va=152818;T=76;break}case 99:{a[z>>0]=c[s>>2];Wa=z;Xa=_;Ya=1;Za=0;_a=152818;$a=x;break}case 109:{ab=vj(c[($r()|0)>>2]|0)|0;T=82;break}case 115:{ma=c[s>>2]|0;ab=ma|0?ma:152828;T=82;break}case 67:{c[u>>2]=c[s>>2];c[t>>2]=0;c[s>>2]=u;bb=u;cb=-1;T=86;break}case 83:{ma=c[s>>2]|0;if(!Ca){Sh(e,32,wa,0,aa);db=0;T=97}else{bb=ma;cb=Ca;T=86}break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{eb=+h[s>>3];c[p>>2]=0;h[k>>3]=eb;if((c[k+4>>2]|0)>=0)if(!(aa&2048)){ma=aa&1;fb=eb;gb=ma;hb=(ma|0)==0?152836:152841}else{fb=eb;gb=1;hb=152838}else{fb=-eb;gb=1;hb=152835}h[k>>3]=fb;ma=c[k+4>>2]&2146435072;do if(ma>>>0<2146435072|(ma|0)==2146435072&0<0){eb=+Dw(fb,p)*2.0;da=eb!=0.0;if(da)c[p>>2]=(c[p>>2]|0)+-1;na=ea|32;if((na|0)==97){ba=ea&32;oa=(ba|0)==0?hb:hb+9|0;ib=gb|2;jb=12-Ca|0;do if(!(Ca>>>0>11|(jb|0)==0)){kb=jb;lb=8.0;while(1){kb=kb+-1|0;mb=lb*16.0;if(!kb){nb=mb;break}else lb=mb}if((a[oa>>0]|0)==45){ob=-(nb+(-eb-nb));break}else{ob=eb+nb-nb;break}}else ob=eb;while(0);jb=c[p>>2]|0;kb=(jb|0)<0?0-jb|0:jb;pb=Di(kb,((kb|0)<0)<<31>>31,C)|0;if((pb|0)==(C|0)){a[E>>0]=48;qb=E}else qb=pb;a[qb+-1>>0]=(jb>>31&2)+43;jb=qb+-2|0;a[jb>>0]=ea+15;pb=(Ca|0)<1;kb=(aa&8|0)==0;lb=ob;rb=q;while(1){sb=~~lb;tb=rb+1|0;a[rb>>0]=d[152802+sb>>0]|ba;lb=(lb-+(sb|0))*16.0;do if((tb-A|0)==1){if(kb&(pb&lb==0.0)){ub=tb;break}a[tb>>0]=46;ub=rb+2|0}else ub=tb;while(0);if(!(lb!=0.0)){vb=ub;break}else rb=ub}rb=vb;pb=jb;kb=(Ca|0)!=0&(G+rb|0)<(Ca|0)?H+Ca-pb|0:F-pb+rb|0;ba=kb+ib|0;Sh(e,32,wa,ba,aa);if(!(c[e>>2]&32))Ug(oa,ib,e)|0;Sh(e,48,wa,ba,aa^65536);tb=rb-A|0;if(!(c[e>>2]&32))Ug(q,tb,e)|0;rb=r-pb|0;Sh(e,48,kb-(tb+rb)|0,0,0);if(!(c[e>>2]&32))Ug(jb,rb,e)|0;Sh(e,32,wa,ba,aa^8192);wb=(ba|0)<(wa|0)?wa:ba;break}ba=(Ca|0)<0?6:Ca;if(da){rb=(c[p>>2]|0)+-28|0;c[p>>2]=rb;xb=eb*268435456.0;yb=rb}else{xb=eb;yb=c[p>>2]|0}rb=(yb|0)<0?o:I;tb=rb;lb=xb;kb=rb;while(1){pb=~~lb>>>0;c[kb>>2]=pb;sb=kb+4|0;lb=(lb-+(pb>>>0))*1.0e9;if(!(lb!=0.0)){zb=sb;break}else kb=sb}kb=c[p>>2]|0;if((kb|0)>0){da=kb;jb=rb;ib=zb;while(1){oa=(da|0)>29?29:da;sb=ib+-4|0;do if(sb>>>0<jb>>>0)Ab=jb;else{pb=0;Bb=sb;while(1){Cb=fr(c[Bb>>2]|0,0,oa|0)|0;Db=Gr(Cb|0,D|0,pb|0,0)|0;Cb=D;Eb=zp(Db|0,Cb|0,1e9,0)|0;c[Bb>>2]=Eb;Eb=Ws(Db|0,Cb|0,1e9,0)|0;Bb=Bb+-4|0;if(Bb>>>0<jb>>>0){Fb=Eb;break}else pb=Eb}if(!Fb){Ab=jb;break}pb=jb+-4|0;c[pb>>2]=Fb;Ab=pb}while(0);sb=ib;while(1){if(sb>>>0<=Ab>>>0){Gb=sb;break}pb=sb+-4|0;if(!(c[pb>>2]|0))sb=pb;else{Gb=sb;break}}sb=(c[p>>2]|0)-oa|0;c[p>>2]=sb;if((sb|0)>0){da=sb;jb=Ab;ib=Gb}else{Hb=sb;Ib=Ab;Jb=Gb;break}}}else{Hb=kb;Ib=rb;Jb=zb}if((Hb|0)<0){ib=((ba+25|0)/9|0)+1|0;jb=(na|0)==102;da=Hb;sb=Ib;pb=Jb;while(1){Bb=0-da|0;Eb=(Bb|0)>9?9:Bb;do if(sb>>>0<pb>>>0){Bb=(1<<Eb)+-1|0;Cb=1e9>>>Eb;Db=0;Kb=sb;while(1){Lb=c[Kb>>2]|0;c[Kb>>2]=(Lb>>>Eb)+Db;Mb=$(Lb&Bb,Cb)|0;Kb=Kb+4|0;if(Kb>>>0>=pb>>>0){Nb=Mb;break}else Db=Mb}Db=(c[sb>>2]|0)==0?sb+4|0:sb;if(!Nb){Ob=Db;Pb=pb;break}c[pb>>2]=Nb;Ob=Db;Pb=pb+4|0}else{Ob=(c[sb>>2]|0)==0?sb+4|0:sb;Pb=pb}while(0);oa=jb?rb:Ob;Db=(Pb-oa>>2|0)>(ib|0)?oa+(ib<<2)|0:Pb;da=(c[p>>2]|0)+Eb|0;c[p>>2]=da;if((da|0)>=0){Qb=Ob;Rb=Db;break}else{sb=Ob;pb=Db}}}else{Qb=Ib;Rb=Jb}do if(Qb>>>0<Rb>>>0){pb=(tb-Qb>>2)*9|0;sb=c[Qb>>2]|0;if(sb>>>0<10){Sb=pb;break}else{Tb=pb;Ub=10}while(1){Ub=Ub*10|0;pb=Tb+1|0;if(sb>>>0<Ub>>>0){Sb=pb;break}else Tb=pb}}else Sb=0;while(0);sb=(na|0)==103;Eb=(ba|0)!=0;pb=ba-((na|0)!=102?Sb:0)+((Eb&sb)<<31>>31)|0;if((pb|0)<(((Rb-tb>>2)*9|0)+-9|0)){da=pb+9216|0;pb=rb+4+(((da|0)/9|0)+-1024<<2)|0;ib=((da|0)%9|0)+1|0;if((ib|0)<9){da=10;jb=ib;while(1){ib=da*10|0;jb=jb+1|0;if((jb|0)==9){Vb=ib;break}else da=ib}}else Vb=10;da=c[pb>>2]|0;jb=(da>>>0)%(Vb>>>0)|0;na=(pb+4|0)==(Rb|0);do if(na&(jb|0)==0){Wb=Qb;Xb=pb;Yb=Sb}else{lb=(((da>>>0)/(Vb>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;ib=(Vb|0)/2|0;if(jb>>>0<ib>>>0)Zb=.5;else Zb=na&(jb|0)==(ib|0)?1.0:1.5;do if(!gb){_b=lb;$b=Zb}else{if((a[hb>>0]|0)!=45){_b=lb;$b=Zb;break}_b=-lb;$b=-Zb}while(0);ib=da-jb|0;c[pb>>2]=ib;if(!(_b+$b!=_b)){Wb=Qb;Xb=pb;Yb=Sb;break}kb=ib+Vb|0;c[pb>>2]=kb;if(kb>>>0>999999999){kb=Qb;ib=pb;while(1){Db=ib+-4|0;c[ib>>2]=0;if(Db>>>0<kb>>>0){oa=kb+-4|0;c[oa>>2]=0;ac=oa}else ac=kb;oa=(c[Db>>2]|0)+1|0;c[Db>>2]=oa;if(oa>>>0>999999999){kb=ac;ib=Db}else{bc=ac;cc=Db;break}}}else{bc=Qb;cc=pb}ib=(tb-bc>>2)*9|0;kb=c[bc>>2]|0;if(kb>>>0<10){Wb=bc;Xb=cc;Yb=ib;break}else{dc=ib;ec=10}while(1){ec=ec*10|0;ib=dc+1|0;if(kb>>>0<ec>>>0){Wb=bc;Xb=cc;Yb=ib;break}else dc=ib}}while(0);pb=Xb+4|0;fc=Wb;gc=Yb;hc=Rb>>>0>pb>>>0?pb:Rb}else{fc=Qb;gc=Sb;hc=Rb}pb=0-gc|0;jb=hc;while(1){if(jb>>>0<=fc>>>0){ic=0;jc=jb;break}da=jb+-4|0;if(!(c[da>>2]|0))jb=da;else{ic=1;jc=jb;break}}do if(sb){jb=(Eb&1^1)+ba|0;if((jb|0)>(gc|0)&(gc|0)>-5){kc=ea+-1|0;lc=jb+-1-gc|0}else{kc=ea+-2|0;lc=jb+-1|0}jb=aa&8;if(jb|0){mc=kc;nc=lc;oc=jb;break}do if(ic){jb=c[jc+-4>>2]|0;if(!jb){pc=9;break}if(!((jb>>>0)%10|0)){qc=10;rc=0}else{pc=0;break}while(1){qc=qc*10|0;da=rc+1|0;if((jb>>>0)%(qc>>>0)|0|0){pc=da;break}else rc=da}}else pc=9;while(0);jb=((jc-tb>>2)*9|0)+-9|0;if((kc|32|0)==102){da=jb-pc|0;na=(da|0)<0?0:da;mc=kc;nc=(lc|0)<(na|0)?lc:na;oc=0;break}else{na=jb+gc-pc|0;jb=(na|0)<0?0:na;mc=kc;nc=(lc|0)<(jb|0)?lc:jb;oc=0;break}}else{mc=ea;nc=ba;oc=aa&8}while(0);ba=nc|oc;tb=(ba|0)!=0&1;Eb=(mc|32|0)==102;if(Eb){sc=(gc|0)>0?gc:0;tc=0}else{sb=(gc|0)<0?pb:gc;jb=Di(sb,((sb|0)<0)<<31>>31,C)|0;if((r-jb|0)<2){sb=jb;while(1){na=sb+-1|0;a[na>>0]=48;if((r-na|0)<2)sb=na;else{uc=na;break}}}else uc=jb;a[uc+-1>>0]=(gc>>31&2)+43;sb=uc+-2|0;a[sb>>0]=mc;sc=r-sb|0;tc=sb}sb=gb+1+nc+tb+sc|0;Sh(e,32,wa,sb,aa);if(!(c[e>>2]&32))Ug(hb,gb,e)|0;Sh(e,48,wa,sb,aa^65536);do if(Eb){pb=fc>>>0>rb>>>0?rb:fc;na=pb;while(1){da=Di(c[na>>2]|0,0,J)|0;do if((na|0)==(pb|0)){if((da|0)!=(J|0)){vc=da;break}a[L>>0]=48;vc=L}else{if(da>>>0<=q>>>0){vc=da;break}Gl(q|0,48,da-A|0)|0;kb=da;while(1){ib=kb+-1|0;if(ib>>>0>q>>>0)kb=ib;else{vc=ib;break}}}while(0);if(!(c[e>>2]&32))Ug(vc,K-vc|0,e)|0;da=na+4|0;if(da>>>0>rb>>>0){wc=da;break}else na=da}do if(ba|0){if(c[e>>2]&32|0)break;Ug(165788,1,e)|0}while(0);if((nc|0)>0&wc>>>0<jc>>>0){na=nc;pb=wc;while(1){da=Di(c[pb>>2]|0,0,J)|0;if(da>>>0>q>>>0){Gl(q|0,48,da-A|0)|0;kb=da;while(1){ib=kb+-1|0;if(ib>>>0>q>>>0)kb=ib;else{xc=ib;break}}}else xc=da;if(!(c[e>>2]&32))Ug(xc,(na|0)>9?9:na,e)|0;pb=pb+4|0;kb=na+-9|0;if(!((na|0)>9&pb>>>0<jc>>>0)){yc=kb;break}else na=kb}}else yc=nc;Sh(e,48,yc+9|0,9,0)}else{na=ic?jc:fc+4|0;if((nc|0)>-1){pb=(oc|0)==0;kb=nc;ib=fc;while(1){Db=Di(c[ib>>2]|0,0,J)|0;if((Db|0)==(J|0)){a[L>>0]=48;zc=L}else zc=Db;do if((ib|0)==(fc|0)){Db=zc+1|0;if(!(c[e>>2]&32))Ug(zc,1,e)|0;if(pb&(kb|0)<1){Ac=Db;break}if(c[e>>2]&32|0){Ac=Db;break}Ug(165788,1,e)|0;Ac=Db}else{if(zc>>>0<=q>>>0){Ac=zc;break}Gl(q|0,48,zc+B|0)|0;Db=zc;while(1){oa=Db+-1|0;if(oa>>>0>q>>>0)Db=oa;else{Ac=oa;break}}}while(0);da=K-Ac|0;if(!(c[e>>2]&32))Ug(Ac,(kb|0)>(da|0)?da:kb,e)|0;Db=kb-da|0;ib=ib+4|0;if(!(ib>>>0<na>>>0&(Db|0)>-1)){Bc=Db;break}else kb=Db}}else Bc=nc;Sh(e,48,Bc+18|0,18,0);if(c[e>>2]&32|0)break;Ug(tc,r-tc|0,e)|0}while(0);Sh(e,32,wa,sb,aa^8192);wb=(sb|0)<(wa|0)?wa:sb}else{ba=(ea&32|0)!=0;rb=fb!=fb|0.0!=0.0;Eb=rb?0:gb;tb=Eb+3|0;Sh(e,32,wa,tb,_);jb=c[e>>2]|0;if(!(jb&32)){Ug(hb,Eb,e)|0;Cc=c[e>>2]|0}else Cc=jb;if(!(Cc&32))Ug(rb?(ba?152921:152862):ba?152854:152858,3,e)|0;Sh(e,32,wa,tb,aa^8192);wb=(tb|0)<(wa|0)?wa:tb}while(0);M=Q;N=wb;O=ua;P=Ea;continue a;break}default:{Wa=P;Xa=aa;Ya=Ca;Za=0;_a=152818;$a=x}}while(0);g:do if((T|0)==64){T=0;ea=s;f=c[ea>>2]|0;ma=c[ea+4>>2]|0;ea=La&32;if(!((f|0)==0&(ma|0)==0)){tb=x;ba=f;f=ma;while(1){ma=tb+-1|0;a[ma>>0]=d[152802+(ba&15)>>0]|ea;ba=kr(ba|0,f|0,4)|0;f=D;if((ba|0)==0&(f|0)==0){Dc=ma;break}else tb=ma}tb=s;if((Ja&8|0)==0|(c[tb>>2]|0)==0&(c[tb+4>>2]|0)==0){Na=Dc;Oa=Ja;Pa=Ka;Qa=0;Ra=152818;T=77}else{Na=Dc;Oa=Ja;Pa=Ka;Qa=2;Ra=152818+(La>>4)|0;T=77}}else{Na=x;Oa=Ja;Pa=Ka;Qa=0;Ra=152818;T=77}}else if((T|0)==76){T=0;Na=Di(Sa,Ta,x)|0;Oa=aa;Pa=Ca;Qa=Ua;Ra=Va;T=77}else if((T|0)==82){T=0;tb=If(ab,0,Ca)|0;f=(tb|0)==0;Wa=ab;Xa=_;Ya=f?Ca:tb-ab|0;Za=0;_a=152818;$a=f?ab+Ca|0:tb}else if((T|0)==86){T=0;tb=0;f=0;ba=bb;while(1){ea=c[ba>>2]|0;if(!ea){Ec=tb;Fc=f;break}ma=is(v,ea)|0;if((ma|0)<0|ma>>>0>(cb-tb|0)>>>0){Ec=tb;Fc=ma;break}ea=ma+tb|0;if(cb>>>0>ea>>>0){tb=ea;f=ma;ba=ba+4|0}else{Ec=ea;Fc=ma;break}}if((Fc|0)<0){sa=-1;break a}Sh(e,32,wa,Ec,aa);if(!Ec){db=0;T=97}else{ba=0;f=bb;while(1){tb=c[f>>2]|0;if(!tb){db=Ec;T=97;break g}ma=is(v,tb)|0;ba=ma+ba|0;if((ba|0)>(Ec|0)){db=Ec;T=97;break g}if(!(c[e>>2]&32))Ug(v,ma,e)|0;if(ba>>>0>=Ec>>>0){db=Ec;T=97;break}else f=f+4|0}}}while(0);if((T|0)==97){T=0;Sh(e,32,wa,db,aa^8192);M=Q;N=(wa|0)>(db|0)?wa:db;O=ua;P=Ea;continue}if((T|0)==77){T=0;_=(Pa|0)>-1?Oa&-65537:Oa;f=s;ba=(c[f>>2]|0)!=0|(c[f+4>>2]|0)!=0;if((Pa|0)!=0|ba){f=(ba&1^1)+(y-Na)|0;Wa=Na;Xa=_;Ya=(Pa|0)>(f|0)?Pa:f;Za=Qa;_a=Ra;$a=x}else{Wa=x;Xa=_;Ya=0;Za=Qa;_a=Ra;$a=x}}_=$a-Wa|0;f=(Ya|0)<(_|0)?_:Ya;ba=Za+f|0;ma=(wa|0)<(ba|0)?ba:wa;Sh(e,32,ma,ba,Xa);if(!(c[e>>2]&32))Ug(_a,Za,e)|0;Sh(e,48,ma,ba,Xa^65536);Sh(e,48,f,_,0);if(!(c[e>>2]&32))Ug(Wa,_,e)|0;Sh(e,32,ma,ba,Xa^8192);M=Q;N=ma;O=ua;P=Ea}h:do if((T|0)==244)if(!e)if(S){Ea=1;while(1){P=c[m+(Ea<<2)>>2]|0;if(!P){Gc=Ea;break}nf(l+(Ea<<3)|0,P,g);Ea=Ea+1|0;if((Ea|0)>=10){sa=1;break h}}if((Gc|0)<10){Ea=Gc;while(1){if(c[m+(Ea<<2)>>2]|0){sa=-1;break h}Ea=Ea+1|0;if((Ea|0)>=10){sa=1;break}}}else sa=1}else sa=0;else sa=R;while(0);i=n;return sa|0}function Wd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,Ma=0,Na=0;do if(a>>>0<245){b=a>>>0<11?16:a+11&-8;d=b>>>3;e=c[41740]|0;f=e>>>d;if(f&3|0){g=(f&1^1)+d|0;h=167e3+(g<<1<<2)|0;i=h+8|0;j=c[i>>2]|0;k=j+8|0;l=c[k>>2]|0;do if((h|0)!=(l|0)){if(l>>>0<(c[41744]|0)>>>0)Sa();m=l+12|0;if((c[m>>2]|0)==(j|0)){c[m>>2]=h;c[i>>2]=l;break}else Sa()}else c[41740]=e&~(1<<g);while(0);l=g<<3;c[j+4>>2]=l|3;i=j+l+4|0;c[i>>2]=c[i>>2]|1;n=k;return n|0}i=c[41742]|0;if(b>>>0>i>>>0){if(f|0){l=2<<d;h=f<<d&(l|0-l);l=(h&0-h)+-1|0;h=l>>>12&16;m=l>>>h;l=m>>>5&8;o=m>>>l;m=o>>>2&4;p=o>>>m;o=p>>>1&2;q=p>>>o;p=q>>>1&1;r=(l|h|m|o|p)+(q>>>p)|0;p=167e3+(r<<1<<2)|0;q=p+8|0;o=c[q>>2]|0;m=o+8|0;h=c[m>>2]|0;do if((p|0)!=(h|0)){if(h>>>0<(c[41744]|0)>>>0)Sa();l=h+12|0;if((c[l>>2]|0)==(o|0)){c[l>>2]=p;c[q>>2]=h;s=c[41742]|0;break}else Sa()}else{c[41740]=e&~(1<<r);s=i}while(0);i=(r<<3)-b|0;c[o+4>>2]=b|3;e=o+b|0;c[e+4>>2]=i|1;c[e+i>>2]=i;if(s|0){h=c[41745]|0;q=s>>>3;p=167e3+(q<<1<<2)|0;d=c[41740]|0;f=1<<q;if(d&f){q=p+8|0;k=c[q>>2]|0;if(k>>>0<(c[41744]|0)>>>0)Sa();else{t=q;u=k}}else{c[41740]=d|f;t=p+8|0;u=p}c[t>>2]=h;c[u+12>>2]=h;c[h+8>>2]=u;c[h+12>>2]=p}c[41742]=i;c[41745]=e;n=m;return n|0}e=c[41741]|0;if(e){i=(e&0-e)+-1|0;e=i>>>12&16;p=i>>>e;i=p>>>5&8;h=p>>>i;p=h>>>2&4;f=h>>>p;h=f>>>1&2;d=f>>>h;f=d>>>1&1;k=c[167264+((i|e|p|h|f)+(d>>>f)<<2)>>2]|0;f=(c[k+4>>2]&-8)-b|0;d=k;h=k;while(1){k=c[d+16>>2]|0;if(!k){p=c[d+20>>2]|0;if(!p){v=f;w=h;break}else x=p}else x=k;k=(c[x+4>>2]&-8)-b|0;p=k>>>0<f>>>0;f=p?k:f;d=x;h=p?x:h}h=c[41744]|0;if(w>>>0<h>>>0)Sa();d=w+b|0;if(w>>>0>=d>>>0)Sa();f=c[w+24>>2]|0;m=c[w+12>>2]|0;do if((m|0)==(w|0)){o=w+20|0;r=c[o>>2]|0;if(!r){p=w+16|0;k=c[p>>2]|0;if(!k){y=0;break}else{z=k;A=p}}else{z=r;A=o}while(1){o=z+20|0;r=c[o>>2]|0;if(r|0){z=r;A=o;continue}o=z+16|0;r=c[o>>2]|0;if(!r){B=z;C=A;break}else{z=r;A=o}}if(C>>>0<h>>>0)Sa();else{c[C>>2]=0;y=B;break}}else{o=c[w+8>>2]|0;if(o>>>0<h>>>0)Sa();r=o+12|0;if((c[r>>2]|0)!=(w|0))Sa();p=m+8|0;if((c[p>>2]|0)==(w|0)){c[r>>2]=m;c[p>>2]=o;y=m;break}else Sa()}while(0);do if(f|0){m=c[w+28>>2]|0;h=167264+(m<<2)|0;if((w|0)==(c[h>>2]|0)){c[h>>2]=y;if(!y){c[41741]=c[41741]&~(1<<m);break}}else{if(f>>>0<(c[41744]|0)>>>0)Sa();m=f+16|0;if((c[m>>2]|0)==(w|0))c[m>>2]=y;else c[f+20>>2]=y;if(!y)break}m=c[41744]|0;if(y>>>0<m>>>0)Sa();c[y+24>>2]=f;h=c[w+16>>2]|0;do if(h|0)if(h>>>0<m>>>0)Sa();else{c[y+16>>2]=h;c[h+24>>2]=y;break}while(0);h=c[w+20>>2]|0;if(h|0)if(h>>>0<(c[41744]|0)>>>0)Sa();else{c[y+20>>2]=h;c[h+24>>2]=y;break}}while(0);if(v>>>0<16){f=v+b|0;c[w+4>>2]=f|3;h=w+f+4|0;c[h>>2]=c[h>>2]|1}else{c[w+4>>2]=b|3;c[d+4>>2]=v|1;c[d+v>>2]=v;h=c[41742]|0;if(h|0){f=c[41745]|0;m=h>>>3;h=167e3+(m<<1<<2)|0;o=c[41740]|0;p=1<<m;if(o&p){m=h+8|0;r=c[m>>2]|0;if(r>>>0<(c[41744]|0)>>>0)Sa();else{D=m;E=r}}else{c[41740]=o|p;D=h+8|0;E=h}c[D>>2]=f;c[E+12>>2]=f;c[f+8>>2]=E;c[f+12>>2]=h}c[41742]=v;c[41745]=d}n=w+8|0;return n|0}else F=b}else F=b}else if(a>>>0<=4294967231){h=a+11|0;f=h&-8;p=c[41741]|0;if(p){o=0-f|0;r=h>>>8;if(r)if(f>>>0>16777215)G=31;else{h=(r+1048320|0)>>>16&8;m=r<<h;r=(m+520192|0)>>>16&4;k=m<<r;m=(k+245760|0)>>>16&2;e=14-(r|h|m)+(k<<m>>>15)|0;G=f>>>(e+7|0)&1|e<<1}else G=0;e=c[167264+(G<<2)>>2]|0;a:do if(!e){H=o;I=0;J=0;K=86}else{m=o;k=0;h=f<<((G|0)==31?0:25-(G>>>1)|0);r=e;i=0;while(1){q=c[r+4>>2]&-8;j=q-f|0;if(j>>>0<m>>>0)if((q|0)==(f|0)){L=j;M=r;N=r;K=90;break a}else{O=j;P=r}else{O=m;P=i}j=c[r+20>>2]|0;r=c[r+16+(h>>>31<<2)>>2]|0;q=(j|0)==0|(j|0)==(r|0)?k:j;j=(r|0)==0;if(j){H=O;I=q;J=P;K=86;break}else{m=O;k=q;h=h<<(j&1^1);i=P}}}while(0);if((K|0)==86){if((I|0)==0&(J|0)==0){e=2<<G;o=p&(e|0-e);if(!o){F=f;break}e=(o&0-o)+-1|0;o=e>>>12&16;b=e>>>o;e=b>>>5&8;d=b>>>e;b=d>>>2&4;i=d>>>b;d=i>>>1&2;h=i>>>d;i=h>>>1&1;Q=c[167264+((e|o|b|d|i)+(h>>>i)<<2)>>2]|0}else Q=I;if(!Q){R=H;S=J}else{L=H;M=Q;N=J;K=90}}if((K|0)==90)while(1){K=0;i=(c[M+4>>2]&-8)-f|0;h=i>>>0<L>>>0;d=h?i:L;i=h?M:N;h=c[M+16>>2]|0;if(h|0){L=d;M=h;N=i;K=90;continue}M=c[M+20>>2]|0;if(!M){R=d;S=i;break}else{L=d;N=i;K=90}}if((S|0)!=0?R>>>0<((c[41742]|0)-f|0)>>>0:0){p=c[41744]|0;if(S>>>0<p>>>0)Sa();i=S+f|0;if(S>>>0>=i>>>0)Sa();d=c[S+24>>2]|0;h=c[S+12>>2]|0;do if((h|0)==(S|0)){b=S+20|0;o=c[b>>2]|0;if(!o){e=S+16|0;k=c[e>>2]|0;if(!k){T=0;break}else{U=k;V=e}}else{U=o;V=b}while(1){b=U+20|0;o=c[b>>2]|0;if(o|0){U=o;V=b;continue}b=U+16|0;o=c[b>>2]|0;if(!o){W=U;X=V;break}else{U=o;V=b}}if(X>>>0<p>>>0)Sa();else{c[X>>2]=0;T=W;break}}else{b=c[S+8>>2]|0;if(b>>>0<p>>>0)Sa();o=b+12|0;if((c[o>>2]|0)!=(S|0))Sa();e=h+8|0;if((c[e>>2]|0)==(S|0)){c[o>>2]=h;c[e>>2]=b;T=h;break}else Sa()}while(0);do if(d|0){h=c[S+28>>2]|0;p=167264+(h<<2)|0;if((S|0)==(c[p>>2]|0)){c[p>>2]=T;if(!T){c[41741]=c[41741]&~(1<<h);break}}else{if(d>>>0<(c[41744]|0)>>>0)Sa();h=d+16|0;if((c[h>>2]|0)==(S|0))c[h>>2]=T;else c[d+20>>2]=T;if(!T)break}h=c[41744]|0;if(T>>>0<h>>>0)Sa();c[T+24>>2]=d;p=c[S+16>>2]|0;do if(p|0)if(p>>>0<h>>>0)Sa();else{c[T+16>>2]=p;c[p+24>>2]=T;break}while(0);p=c[S+20>>2]|0;if(p|0)if(p>>>0<(c[41744]|0)>>>0)Sa();else{c[T+20>>2]=p;c[p+24>>2]=T;break}}while(0);do if(R>>>0>=16){c[S+4>>2]=f|3;c[i+4>>2]=R|1;c[i+R>>2]=R;d=R>>>3;if(R>>>0<256){p=167e3+(d<<1<<2)|0;h=c[41740]|0;b=1<<d;if(h&b){d=p+8|0;e=c[d>>2]|0;if(e>>>0<(c[41744]|0)>>>0)Sa();else{Y=d;Z=e}}else{c[41740]=h|b;Y=p+8|0;Z=p}c[Y>>2]=i;c[Z+12>>2]=i;c[i+8>>2]=Z;c[i+12>>2]=p;break}p=R>>>8;if(p)if(R>>>0>16777215)_=31;else{b=(p+1048320|0)>>>16&8;h=p<<b;p=(h+520192|0)>>>16&4;e=h<<p;h=(e+245760|0)>>>16&2;d=14-(p|b|h)+(e<<h>>>15)|0;_=R>>>(d+7|0)&1|d<<1}else _=0;d=167264+(_<<2)|0;c[i+28>>2]=_;h=i+16|0;c[h+4>>2]=0;c[h>>2]=0;h=c[41741]|0;e=1<<_;if(!(h&e)){c[41741]=h|e;c[d>>2]=i;c[i+24>>2]=d;c[i+12>>2]=i;c[i+8>>2]=i;break}e=R<<((_|0)==31?0:25-(_>>>1)|0);h=c[d>>2]|0;while(1){if((c[h+4>>2]&-8|0)==(R|0)){$=h;K=148;break}d=h+16+(e>>>31<<2)|0;b=c[d>>2]|0;if(!b){aa=d;ba=h;K=145;break}else{e=e<<1;h=b}}if((K|0)==145)if(aa>>>0<(c[41744]|0)>>>0)Sa();else{c[aa>>2]=i;c[i+24>>2]=ba;c[i+12>>2]=i;c[i+8>>2]=i;break}else if((K|0)==148){h=$+8|0;e=c[h>>2]|0;b=c[41744]|0;if(e>>>0>=b>>>0&$>>>0>=b>>>0){c[e+12>>2]=i;c[h>>2]=i;c[i+8>>2]=e;c[i+12>>2]=$;c[i+24>>2]=0;break}else Sa()}}else{e=R+f|0;c[S+4>>2]=e|3;h=S+e+4|0;c[h>>2]=c[h>>2]|1}while(0);n=S+8|0;return n|0}else F=f}else F=f}else F=-1;while(0);S=c[41742]|0;if(S>>>0>=F>>>0){R=S-F|0;$=c[41745]|0;if(R>>>0>15){ba=$+F|0;c[41745]=ba;c[41742]=R;c[ba+4>>2]=R|1;c[ba+R>>2]=R;c[$+4>>2]=F|3}else{c[41742]=0;c[41745]=0;c[$+4>>2]=S|3;R=$+S+4|0;c[R>>2]=c[R>>2]|1}n=$+8|0;return n|0}$=c[41743]|0;if($>>>0>F>>>0){R=$-F|0;c[41743]=R;$=c[41746]|0;S=$+F|0;c[41746]=S;c[S+4>>2]=R|1;c[$+4>>2]=F|3;n=$+8|0;return n|0}do if(!(c[41858]|0)){$=Wc(30)|0;if(!($+-1&$)){c[41860]=$;c[41859]=$;c[41861]=-1;c[41862]=-1;c[41863]=0;c[41851]=0;c[41858]=(ac(0)|0)&-16^1431655768;break}else Sa()}while(0);$=F+48|0;R=c[41860]|0;S=F+47|0;ba=R+S|0;aa=0-R|0;R=ba&aa;if(R>>>0<=F>>>0){n=0;return n|0}_=c[41850]|0;if(_|0?(Z=c[41848]|0,Y=Z+R|0,Y>>>0<=Z>>>0|Y>>>0>_>>>0):0){n=0;return n|0}b:do if(!(c[41851]&4)){_=c[41746]|0;c:do if(_){Y=167408;while(1){Z=c[Y>>2]|0;if(Z>>>0<=_>>>0?(T=Y+4|0,(Z+(c[T>>2]|0)|0)>>>0>_>>>0):0){ca=Y;da=T;break}Y=c[Y+8>>2]|0;if(!Y){K=173;break c}}Y=ba-(c[41743]|0)&aa;if(Y>>>0<2147483647){T=La(Y|0)|0;if((T|0)==((c[ca>>2]|0)+(c[da>>2]|0)|0)){if((T|0)!=(-1|0)){ea=T;fa=Y;K=193;break b}}else{ga=T;ha=Y;K=183}}}else K=173;while(0);do if((K|0)==173?(_=La(0)|0,(_|0)!=(-1|0)):0){f=_;Y=c[41859]|0;T=Y+-1|0;if(!(T&f))ia=R;else ia=R-f+(T+f&0-Y)|0;Y=c[41848]|0;f=Y+ia|0;if(ia>>>0>F>>>0&ia>>>0<2147483647){T=c[41850]|0;if(T|0?f>>>0<=Y>>>0|f>>>0>T>>>0:0)break;T=La(ia|0)|0;if((T|0)==(_|0)){ea=_;fa=ia;K=193;break b}else{ga=T;ha=ia;K=183}}}while(0);d:do if((K|0)==183){T=0-ha|0;do if($>>>0>ha>>>0&(ha>>>0<2147483647&(ga|0)!=(-1|0))?(_=c[41860]|0,f=S-ha+_&0-_,f>>>0<2147483647):0)if((La(f|0)|0)==(-1|0)){La(T|0)|0;break d}else{ja=f+ha|0;break}else ja=ha;while(0);if((ga|0)!=(-1|0)){ea=ga;fa=ja;K=193;break b}}while(0);c[41851]=c[41851]|4;K=190}else K=190;while(0);if((((K|0)==190?R>>>0<2147483647:0)?(ja=La(R|0)|0,R=La(0)|0,ja>>>0<R>>>0&((ja|0)!=(-1|0)&(R|0)!=(-1|0))):0)?(ga=R-ja|0,ga>>>0>(F+40|0)>>>0):0){ea=ja;fa=ga;K=193}if((K|0)==193){ga=(c[41848]|0)+fa|0;c[41848]=ga;if(ga>>>0>(c[41849]|0)>>>0)c[41849]=ga;ga=c[41746]|0;do if(ga){ja=167408;do{R=c[ja>>2]|0;ha=ja+4|0;S=c[ha>>2]|0;if((ea|0)==(R+S|0)){ka=R;la=ha;ma=S;na=ja;K=203;break}ja=c[ja+8>>2]|0}while((ja|0)!=0);if(((K|0)==203?(c[na+12>>2]&8|0)==0:0)?ga>>>0<ea>>>0&ga>>>0>=ka>>>0:0){c[la>>2]=ma+fa;ja=ga+8|0;S=(ja&7|0)==0?0:0-ja&7;ja=ga+S|0;ha=fa-S+(c[41743]|0)|0;c[41746]=ja;c[41743]=ha;c[ja+4>>2]=ha|1;c[ja+ha+4>>2]=40;c[41747]=c[41862];break}ha=c[41744]|0;if(ea>>>0<ha>>>0){c[41744]=ea;oa=ea}else oa=ha;ha=ea+fa|0;ja=167408;while(1){if((c[ja>>2]|0)==(ha|0)){pa=ja;qa=ja;K=211;break}ja=c[ja+8>>2]|0;if(!ja){ra=167408;break}}if((K|0)==211)if(!(c[qa+12>>2]&8)){c[pa>>2]=ea;ja=qa+4|0;c[ja>>2]=(c[ja>>2]|0)+fa;ja=ea+8|0;S=ea+((ja&7|0)==0?0:0-ja&7)|0;ja=ha+8|0;R=ha+((ja&7|0)==0?0:0-ja&7)|0;ja=S+F|0;$=R-S-F|0;c[S+4>>2]=F|3;do if((R|0)!=(ga|0)){if((R|0)==(c[41745]|0)){ia=(c[41742]|0)+$|0;c[41742]=ia;c[41745]=ja;c[ja+4>>2]=ia|1;c[ja+ia>>2]=ia;break}ia=c[R+4>>2]|0;if((ia&3|0)==1){da=ia&-8;ca=ia>>>3;e:do if(ia>>>0>=256){aa=c[R+24>>2]|0;ba=c[R+12>>2]|0;do if((ba|0)==(R|0)){T=R+16|0;f=T+4|0;_=c[f>>2]|0;if(!_){Y=c[T>>2]|0;if(!Y){sa=0;break}else{ta=Y;ua=T}}else{ta=_;ua=f}while(1){f=ta+20|0;_=c[f>>2]|0;if(_|0){ta=_;ua=f;continue}f=ta+16|0;_=c[f>>2]|0;if(!_){va=ta;wa=ua;break}else{ta=_;ua=f}}if(wa>>>0<oa>>>0)Sa();else{c[wa>>2]=0;sa=va;break}}else{f=c[R+8>>2]|0;if(f>>>0<oa>>>0)Sa();_=f+12|0;if((c[_>>2]|0)!=(R|0))Sa();T=ba+8|0;if((c[T>>2]|0)==(R|0)){c[_>>2]=ba;c[T>>2]=f;sa=ba;break}else Sa()}while(0);if(!aa)break;ba=c[R+28>>2]|0;f=167264+(ba<<2)|0;do if((R|0)!=(c[f>>2]|0)){if(aa>>>0<(c[41744]|0)>>>0)Sa();T=aa+16|0;if((c[T>>2]|0)==(R|0))c[T>>2]=sa;else c[aa+20>>2]=sa;if(!sa)break e}else{c[f>>2]=sa;if(sa|0)break;c[41741]=c[41741]&~(1<<ba);break e}while(0);ba=c[41744]|0;if(sa>>>0<ba>>>0)Sa();c[sa+24>>2]=aa;f=R+16|0;T=c[f>>2]|0;do if(T|0)if(T>>>0<ba>>>0)Sa();else{c[sa+16>>2]=T;c[T+24>>2]=sa;break}while(0);T=c[f+4>>2]|0;if(!T)break;if(T>>>0<(c[41744]|0)>>>0)Sa();else{c[sa+20>>2]=T;c[T+24>>2]=sa;break}}else{T=c[R+8>>2]|0;ba=c[R+12>>2]|0;aa=167e3+(ca<<1<<2)|0;do if((T|0)!=(aa|0)){if(T>>>0<oa>>>0)Sa();if((c[T+12>>2]|0)==(R|0))break;Sa()}while(0);if((ba|0)==(T|0)){c[41740]=c[41740]&~(1<<ca);break}do if((ba|0)==(aa|0))xa=ba+8|0;else{if(ba>>>0<oa>>>0)Sa();f=ba+8|0;if((c[f>>2]|0)==(R|0)){xa=f;break}Sa()}while(0);c[T+12>>2]=ba;c[xa>>2]=T}while(0);ya=R+da|0;za=da+$|0}else{ya=R;za=$}ca=ya+4|0;c[ca>>2]=c[ca>>2]&-2;c[ja+4>>2]=za|1;c[ja+za>>2]=za;ca=za>>>3;if(za>>>0<256){ia=167e3+(ca<<1<<2)|0;aa=c[41740]|0;f=1<<ca;do if(!(aa&f)){c[41740]=aa|f;Aa=ia+8|0;Ba=ia}else{ca=ia+8|0;_=c[ca>>2]|0;if(_>>>0>=(c[41744]|0)>>>0){Aa=ca;Ba=_;break}Sa()}while(0);c[Aa>>2]=ja;c[Ba+12>>2]=ja;c[ja+8>>2]=Ba;c[ja+12>>2]=ia;break}f=za>>>8;do if(!f)Ca=0;else{if(za>>>0>16777215){Ca=31;break}aa=(f+1048320|0)>>>16&8;da=f<<aa;_=(da+520192|0)>>>16&4;ca=da<<_;da=(ca+245760|0)>>>16&2;Y=14-(_|aa|da)+(ca<<da>>>15)|0;Ca=za>>>(Y+7|0)&1|Y<<1}while(0);f=167264+(Ca<<2)|0;c[ja+28>>2]=Ca;ia=ja+16|0;c[ia+4>>2]=0;c[ia>>2]=0;ia=c[41741]|0;Y=1<<Ca;if(!(ia&Y)){c[41741]=ia|Y;c[f>>2]=ja;c[ja+24>>2]=f;c[ja+12>>2]=ja;c[ja+8>>2]=ja;break}Y=za<<((Ca|0)==31?0:25-(Ca>>>1)|0);ia=c[f>>2]|0;while(1){if((c[ia+4>>2]&-8|0)==(za|0)){Da=ia;K=281;break}f=ia+16+(Y>>>31<<2)|0;da=c[f>>2]|0;if(!da){Ea=f;Fa=ia;K=278;break}else{Y=Y<<1;ia=da}}if((K|0)==278)if(Ea>>>0<(c[41744]|0)>>>0)Sa();else{c[Ea>>2]=ja;c[ja+24>>2]=Fa;c[ja+12>>2]=ja;c[ja+8>>2]=ja;break}else if((K|0)==281){ia=Da+8|0;Y=c[ia>>2]|0;da=c[41744]|0;if(Y>>>0>=da>>>0&Da>>>0>=da>>>0){c[Y+12>>2]=ja;c[ia>>2]=ja;c[ja+8>>2]=Y;c[ja+12>>2]=Da;c[ja+24>>2]=0;break}else Sa()}}else{Y=(c[41743]|0)+$|0;c[41743]=Y;c[41746]=ja;c[ja+4>>2]=Y|1}while(0);n=S+8|0;return n|0}else ra=167408;while(1){ja=c[ra>>2]|0;if(ja>>>0<=ga>>>0?($=ja+(c[ra+4>>2]|0)|0,$>>>0>ga>>>0):0){Ga=$;break}ra=c[ra+8>>2]|0}S=Ga+-47|0;$=S+8|0;ja=S+(($&7|0)==0?0:0-$&7)|0;$=ga+16|0;S=ja>>>0<$>>>0?ga:ja;ja=S+8|0;R=ea+8|0;ha=(R&7|0)==0?0:0-R&7;R=ea+ha|0;Y=fa+-40-ha|0;c[41746]=R;c[41743]=Y;c[R+4>>2]=Y|1;c[R+Y+4>>2]=40;c[41747]=c[41862];Y=S+4|0;c[Y>>2]=27;c[ja>>2]=c[41852];c[ja+4>>2]=c[41853];c[ja+8>>2]=c[41854];c[ja+12>>2]=c[41855];c[41852]=ea;c[41853]=fa;c[41855]=0;c[41854]=ja;ja=S+24|0;do{ja=ja+4|0;c[ja>>2]=7}while((ja+4|0)>>>0<Ga>>>0);if((S|0)!=(ga|0)){ja=S-ga|0;c[Y>>2]=c[Y>>2]&-2;c[ga+4>>2]=ja|1;c[S>>2]=ja;R=ja>>>3;if(ja>>>0<256){ha=167e3+(R<<1<<2)|0;ia=c[41740]|0;da=1<<R;if(ia&da){R=ha+8|0;f=c[R>>2]|0;if(f>>>0<(c[41744]|0)>>>0)Sa();else{Ha=R;Ia=f}}else{c[41740]=ia|da;Ha=ha+8|0;Ia=ha}c[Ha>>2]=ga;c[Ia+12>>2]=ga;c[ga+8>>2]=Ia;c[ga+12>>2]=ha;break}ha=ja>>>8;if(ha)if(ja>>>0>16777215)Ja=31;else{da=(ha+1048320|0)>>>16&8;ia=ha<<da;ha=(ia+520192|0)>>>16&4;f=ia<<ha;ia=(f+245760|0)>>>16&2;R=14-(ha|da|ia)+(f<<ia>>>15)|0;Ja=ja>>>(R+7|0)&1|R<<1}else Ja=0;R=167264+(Ja<<2)|0;c[ga+28>>2]=Ja;c[ga+20>>2]=0;c[$>>2]=0;ia=c[41741]|0;f=1<<Ja;if(!(ia&f)){c[41741]=ia|f;c[R>>2]=ga;c[ga+24>>2]=R;c[ga+12>>2]=ga;c[ga+8>>2]=ga;break}f=ja<<((Ja|0)==31?0:25-(Ja>>>1)|0);ia=c[R>>2]|0;while(1){if((c[ia+4>>2]&-8|0)==(ja|0)){Ka=ia;K=307;break}R=ia+16+(f>>>31<<2)|0;da=c[R>>2]|0;if(!da){Ma=R;Na=ia;K=304;break}else{f=f<<1;ia=da}}if((K|0)==304)if(Ma>>>0<(c[41744]|0)>>>0)Sa();else{c[Ma>>2]=ga;c[ga+24>>2]=Na;c[ga+12>>2]=ga;c[ga+8>>2]=ga;break}else if((K|0)==307){ia=Ka+8|0;f=c[ia>>2]|0;ja=c[41744]|0;if(f>>>0>=ja>>>0&Ka>>>0>=ja>>>0){c[f+12>>2]=ga;c[ia>>2]=ga;c[ga+8>>2]=f;c[ga+12>>2]=Ka;c[ga+24>>2]=0;break}else Sa()}}}else{f=c[41744]|0;if((f|0)==0|ea>>>0<f>>>0)c[41744]=ea;c[41852]=ea;c[41853]=fa;c[41855]=0;c[41749]=c[41858];c[41748]=-1;f=0;do{ia=167e3+(f<<1<<2)|0;c[ia+12>>2]=ia;c[ia+8>>2]=ia;f=f+1|0}while((f|0)!=32);f=ea+8|0;ia=(f&7|0)==0?0:0-f&7;f=ea+ia|0;ja=fa+-40-ia|0;c[41746]=f;c[41743]=ja;c[f+4>>2]=ja|1;c[f+ja+4>>2]=40;c[41747]=c[41862]}while(0);fa=c[41743]|0;if(fa>>>0>F>>>0){ea=fa-F|0;c[41743]=ea;fa=c[41746]|0;ga=fa+F|0;c[41746]=ga;c[ga+4>>2]=ea|1;c[fa+4>>2]=F|3;n=fa+8|0;return n|0}}c[($r()|0)>>2]=12;n=0;return n|0}function Yd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0;g=i;i=i+16|0;if((i|0)>=(j|0))ca();h=g+4|0;k=g;l=d+12|0;m=c[l>>2]|0;n=(b|0)==0|(f|0)==0;if(!n){c[f+48>>2]=0;c[c[f+36>>2]>>2]=-1}o=c[f+28>>2]|0;p=Wd((o<<3)+8|0)|0;do if(!p)q=12;else{c[p>>2]=-1;r=Wd((o<<2)+4|0)|0;if(!r){de(p);q=12;break}c[r>>2]=-1;s=0;while(1)if(s>>>0>o>>>0)break;else s=s+1|0;c[k>>2]=e;c[h>>2]=c[k>>2];Ii(d,h)|0;c[k>>2]=0;c[h>>2]=c[k>>2];s=Ii(d,h)|0;t=c[l>>2]|0;a:do if((s|0)!=0|(t|0)<=(m|0)){u=-1;v=0;w=0;x=p;y=s;z=0}else{A=d+16|0;B=f+32|0;C=f+16|0;D=f+36|0;E=t;F=0;G=-1;H=1;I=0;J=0;K=p;L=0;while(1){M=E+-1|0;c[l>>2]=M;N=c[A>>2]|0;switch(c[N+(M<<2)>>2]|0){case 6:{M=E+-2|0;c[l>>2]=M;O=c[N+(M<<2)>>2]|0;M=0;while(1){P=K+(M<<2)|0;Q=M+1|0;if((c[P>>2]|0)>-1)M=Q;else{R=P;S=Q;break}}c[R>>2]=O<<1|1;c[K+(S<<2)>>2]=-1;M=0;while(1)if((c[r+(M<<2)>>2]|0)>-1)M=M+1|0;else{T=M;break}c[r+(T+-1<<2)>>2]=-1;U=F;V=G;W=H;X=I;Y=J;Z=K;_=0;$=L;break}case 0:{M=E+-2|0;c[l>>2]=M;O=c[N+(M<<2)>>2]|0;M=O+12|0;Q=c[M>>2]|0;if((Q|0)>-1){P=0;while(1){aa=K+(P<<2)|0;ba=P+1|0;if((c[aa>>2]|0)>-1)P=ba;else{da=aa;ea=ba;break}}c[da>>2]=Q<<1;c[K+(ea<<2)>>2]=-1;if(!n){P=0;while(1)if((c[r+(P<<2)>>2]|0)>-1)P=P+1|0;else{fa=P;break}P=(c[C>>2]|0)+(Q*12|0)+8|0;c[P>>2]=0;if((fa|0)>0){ba=Wd((fa<<2)+4|0)|0;if(!ba){u=G;v=I;w=J;x=K;y=12;z=L;break a}c[P>>2]=ba;P=c[r>>2]|0;if((P|0)>-1){aa=P;P=ba;ga=0;while(1){c[P>>2]=aa;ga=ga+1|0;aa=c[r+(ga<<2)>>2]|0;ha=ba+(ga<<2)|0;if((aa|0)<=-1){ia=ha;break}else P=ha}}else ia=ba;c[ia>>2]=-1}}c[k>>2]=c[M>>2];c[h>>2]=c[k>>2];P=Ii(d,h)|0;if(P|0){u=G;v=I;w=J;x=K;y=P;z=L;break a}c[k>>2]=6;c[h>>2]=c[k>>2];P=Ii(d,h)|0;if(P|0){u=G;v=I;w=J;x=K;y=P;z=L;break a}}b:do switch(c[O>>2]|0){case 0:{P=c[c[O+4>>2]>>2]|0;if((P|0)>-1|(P|0)==-4?(c[K>>2]|0)>-1:0){if(n){c[O+20>>2]=1;ja=G;ka=I;la=0}else{P=vi(b,O,L)|0;c[(c[B>>2]|0)+(L<<2)>>2]=F;if((G|0)>-1){aa=c[D>>2]|0;ga=0;while(1){Q=aa+(ga<<2)|0;ha=ga+1|0;if((c[Q>>2]|0)>-1)ga=ha;else{ma=Q;na=ha;oa=ga;break}}c[ma>>2]=L;c[aa+(na<<2)>>2]=G;c[aa+(oa+2<<2)>>2]=-1;pa=-1;qa=I+1|0}else{pa=G;qa=I}ga=c[K>>2]|0;if((ga|0)>-1){ha=c[C>>2]|0;Q=ga;ga=0;do{ra=(Q|0)/2|0;if(!(Q&1))c[ha+(ra*12|0)>>2]=L;else c[ha+(ra*12|0)+4>>2]=L;ga=ga+1|0;Q=c[K+(ga<<2)>>2]|0}while((Q|0)>-1)}c[K>>2]=-1;ja=pa;ka=qa;la=P}c[K>>2]=-1;sa=F;ta=ja;ua=H+1|0;va=ka;wa=J+1|0;xa=la;ya=H}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=0;ya=L}break}case 1:{Q=c[O+4>>2]|0;ga=c[Q>>2]|0;ha=c[Q+4>>2]|0;c[k>>2]=O;c[h>>2]=c[k>>2];Q=Ii(d,h)|0;if(!Q){c[k>>2]=5;c[h>>2]=c[k>>2];aa=Ii(d,h)|0;if(!aa){c[k>>2]=ha;c[h>>2]=c[k>>2];ra=Ii(d,h)|0;if(!ra){c[k>>2]=0;c[h>>2]=c[k>>2];za=Ii(d,h)|0;if(!za){Aa=ga+20|0;c[k>>2]=(c[Aa>>2]|0)+H;c[h>>2]=c[k>>2];Ba=Ii(d,h)|0;if(!Ba){if((c[Aa>>2]|0)>0){Aa=(c[ha+20>>2]|0)>0;Ca=(Aa&1)+H|0;Da=Aa?H:-1}else{Ca=H;Da=-1}c[k>>2]=Da;c[h>>2]=c[k>>2];Aa=Ii(d,h)|0;if(!Aa){c[k>>2]=4;c[h>>2]=c[k>>2];ha=Ii(d,h)|0;if(!ha){c[k>>2]=ga;c[h>>2]=c[k>>2];ga=Ii(d,h)|0;if(!ga){c[k>>2]=0;c[h>>2]=c[k>>2];sa=F;ta=G;ua=Ca;va=I;wa=J;xa=Ii(d,h)|0;ya=L}else{sa=F;ta=G;ua=Ca;va=I;wa=J;xa=ga;ya=L}}else{sa=F;ta=G;ua=Ca;va=I;wa=J;xa=ha;ya=L}}else{sa=F;ta=G;ua=Ca;va=I;wa=J;xa=Aa;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Ba;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=za;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=ra;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=aa;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Q;ya=L}break}case 2:{Q=c[O+4>>2]|0;if(n){if((c[K>>2]|0)>-1)Ea=1;else Ea=(a[Q+12>>0]&1)!=0;c[k>>2]=Ea&1;c[h>>2]=c[k>>2];aa=Ii(d,h)|0;if(aa|0){sa=F;ta=G;ua=H;va=I;wa=J;xa=aa;ya=L;break b}}else{c[k>>2]=L;c[h>>2]=c[k>>2];aa=Ii(d,h)|0;if(aa|0){sa=F;ta=G;ua=H;va=I;wa=J;xa=aa;ya=L;break b}c[k>>2]=a[Q+12>>0]&1;c[h>>2]=c[k>>2];aa=Ii(d,h)|0;if(aa|0){sa=F;ta=G;ua=H;va=I;wa=J;xa=aa;ya=L;break b}}c[k>>2]=O;c[h>>2]=c[k>>2];aa=Ii(d,h)|0;if(!aa){c[k>>2]=1;c[h>>2]=c[k>>2];ra=Ii(d,h)|0;if(!ra){c[k>>2]=c[Q>>2];c[h>>2]=c[k>>2];za=Ii(d,h)|0;if(!za){c[k>>2]=0;c[h>>2]=c[k>>2];Ba=Ii(d,h)|0;if(!Ba){if((c[K>>2]|0)<=-1?(a[Q+12>>0]&1)==0:0){sa=0;ta=G;ua=H;va=I;wa=J;xa=0;ya=L;break b}if(n){Fa=G;Ga=I;Ha=0}else{Aa=vi(b,O,L)|0;c[(c[B>>2]|0)+(L<<2)>>2]=(a[Q+12>>0]&1)==0?F:1;if((G|0)>-1){Q=c[D>>2]|0;ha=0;while(1){ga=Q+(ha<<2)|0;Ia=ha+1|0;if((c[ga>>2]|0)>-1)ha=Ia;else{Ja=ga;Ka=Ia;La=ha;break}}c[Ja>>2]=L;c[Q+(Ka<<2)>>2]=G;c[Q+(La+2<<2)>>2]=-1;Ma=-1;Na=I+1|0}else{Ma=G;Na=I}ha=c[K>>2]|0;if((ha|0)>-1){P=c[C>>2]|0;Ia=ha;ha=0;do{ga=(Ia|0)/2|0;if(!(Ia&1))c[P+(ga*12|0)>>2]=L;else c[P+(ga*12|0)+4>>2]=L;ha=ha+1|0;Ia=c[K+(ha<<2)>>2]|0}while((Ia|0)>-1)}c[K>>2]=-1;Fa=Ma;Ga=Na;Ha=Aa}c[K>>2]=-1;sa=0;ta=Fa;ua=H+1|0;va=Ga;wa=J+1|0;xa=Ha;ya=H}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Ba;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=za;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=ra;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=aa;ya=L}break}case 3:{Ia=c[O+4>>2]|0;ha=c[Ia>>2]|0;P=c[Ia+4>>2]|0;Ia=(c[K>>2]|0)>-1;Q=H+1|0;c[k>>2]=Ia?Q:H;c[h>>2]=c[k>>2];ga=Ii(d,h)|0;if(!ga){c[k>>2]=Ia?H:L;c[h>>2]=c[k>>2];Ia=Ii(d,h)|0;if(!Ia){c[k>>2]=K;c[h>>2]=c[k>>2];Oa=Ii(d,h)|0;if(!Oa){c[k>>2]=(c[K>>2]|0)>>>31^1;c[h>>2]=c[k>>2];Pa=Ii(d,h)|0;if(!Pa){c[k>>2]=O;c[h>>2]=c[k>>2];Qa=Ii(d,h)|0;if(!Qa){c[k>>2]=P;c[h>>2]=c[k>>2];Ra=Ii(d,h)|0;if(!Ra){c[k>>2]=ha;c[h>>2]=c[k>>2];Sa=Ii(d,h)|0;if(!Sa){c[k>>2]=3;c[h>>2]=c[k>>2];Ta=Ii(d,h)|0;if(!Ta){c[k>>2]=P;c[h>>2]=c[k>>2];P=Ii(d,h)|0;if(!P){c[k>>2]=0;c[h>>2]=c[k>>2];Ua=Ii(d,h)|0;if(!Ua){c[k>>2]=2;c[h>>2]=c[k>>2];Va=Ii(d,h)|0;if(Va|0){sa=F;ta=G;ua=H;va=I;wa=J;xa=Va;ya=L;break b}c[k>>2]=ha;c[h>>2]=c[k>>2];ha=Ii(d,h)|0;if(ha|0){sa=F;ta=G;ua=H;va=I;wa=J;xa=ha;ya=L;break b}c[k>>2]=0;c[h>>2]=c[k>>2];ha=Ii(d,h)|0;if(ha|0){sa=F;ta=G;ua=H;va=I;wa=J;xa=ha;ya=L;break b}if((c[K>>2]|0)>-1){if(n){Wa=G;Xa=I;Ya=0}else{ha=vi(b,O,L)|0;c[(c[B>>2]|0)+(L<<2)>>2]=F;if((G|0)>-1){Va=c[D>>2]|0;Za=0;while(1){_a=Va+(Za<<2)|0;$a=Za+1|0;if((c[_a>>2]|0)>-1)Za=$a;else{ab=_a;bb=$a;cb=Za;break}}c[ab>>2]=L;c[Va+(bb<<2)>>2]=G;c[Va+(cb+2<<2)>>2]=-1;db=-1;eb=I+1|0}else{db=G;eb=I}Za=c[K>>2]|0;if((Za|0)>-1){aa=c[C>>2]|0;ra=Za;Za=0;do{za=(ra|0)/2|0;if(!(ra&1))c[aa+(za*12|0)>>2]=L;else c[aa+(za*12|0)+4>>2]=L;Za=Za+1|0;ra=c[K+(Za<<2)>>2]|0}while((ra|0)>-1)}c[K>>2]=-1;Wa=db;Xa=eb;Ya=ha}c[K>>2]=-1;fb=Wa;gb=Q;hb=Xa;ib=J+1|0;jb=Ya;kb=H}else{fb=G;gb=H;hb=I;ib=J;jb=0;kb=L}ra=(c[O+16>>2]|0)>0;sa=F;ta=fb;ua=ra?gb+2|0:gb;va=hb;wa=ib;xa=jb;ya=ra?gb+1|0:kb}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Ua;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=P;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Ta;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Sa;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Ra;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Qa;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Pa;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Oa;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=Ia;ya=L}}else{sa=F;ta=G;ua=H;va=I;wa=J;xa=ga;ya=L}break}default:{sa=F;ta=G;ua=H;va=I;wa=J;xa=0;ya=L}}while(0);O=c[M>>2]|0;if((O|0)>-1){ba=0;while(1){ra=r+(ba<<2)|0;Za=ba+1|0;if((c[ra>>2]|0)>-1)ba=Za;else{lb=ra;mb=Za;break}}c[lb>>2]=O;c[r+(mb<<2)>>2]=-1;U=sa;V=ta;W=ua;X=va;Y=wa;Z=K;_=xa;$=ya}else{U=sa;V=ta;W=ua;X=va;Y=wa;Z=K;_=xa;$=ya}break}case 1:{ba=E+-2|0;c[l>>2]=ba;M=c[N+(ba<<2)>>2]|0;if(n){ba=c[(c[c[M+4>>2]>>2]|0)+20>>2]|0;Za=E+-3|0;c[l>>2]=Za;c[M+20>>2]=(c[N+(Za<<2)>>2]|0)+ba;nb=0;ob=-1}else{ba=E+-3|0;c[l>>2]=ba;Za=c[N+(ba<<2)>>2]|0;ba=E+-4|0;c[l>>2]=ba;nb=Za;ob=(Za|0)==0?G:c[N+(ba<<2)>>2]|0}U=n?F:(nb|0)==0&1;V=ob;W=H;X=I;Y=J;Z=K;_=0;$=L;break}case 4:{ba=E+-2|0;c[l>>2]=ba;Za=c[N+(ba<<2)>>2]|0;ba=E+-3|0;c[l>>2]=ba;U=F;V=G;W=c[N+(ba<<2)>>2]|0;X=I;Y=J;Z=K;_=0;$=(Za|0)>-1?Za:L;break}case 5:{Za=E+-2|0;c[l>>2]=Za;ba=c[N+(Za<<2)>>2]|0;if(n){Za=c[ba+4>>2]|0;c[ba+20>>2]=(c[(c[Za+4>>2]|0)+20>>2]|0)+(c[(c[Za>>2]|0)+20>>2]|0);U=F;V=G;W=H;X=I;Y=J;Z=K;_=0;$=L}else{U=F;V=G;W=H;X=I;Y=J;Z=K;_=0;$=L}break}case 2:{Za=K;while(1)if((c[Za>>2]|0)>-1)Za=Za+4|0;else{U=F;V=G;W=H;X=I;Y=J;Z=Za;_=0;$=L;break}break}case 3:{Za=c[N+(E+-2<<2)>>2]|0;O=c[N+(E+-3<<2)>>2]|0;ba=c[N+(E+-4<<2)>>2]|0;M=E+-5|0;c[l>>2]=M;if(n){ra=c[ba+4>>2]|0;aa=c[ba+16>>2]|0;c[ba+20>>2]=(c[(c[ra>>2]|0)+20>>2]|0)+(c[N+(M<<2)>>2]|0)+(c[(c[ra+4>>2]|0)+20>>2]|0)+((aa|0)>0?2:0);pb=aa}else pb=c[ba+16>>2]|0;ba=c[N+(E+-6<<2)>>2]|0;aa=E+-7|0;c[l>>2]=aa;ra=c[N+(aa<<2)>>2]|0;aa=E+-8|0;c[l>>2]=aa;M=c[N+(aa<<2)>>2]|0;if((pb|0)>0){if(n)qb=0;else{si(b,Za,ra)|0;c[(c[B>>2]|0)+(ra<<2)>>2]=1;ra=si(b,O,M)|0;c[(c[B>>2]|0)+(M<<2)>>2]=1;qb=ra}U=1;V=G;W=H;X=I;Y=J+2|0;Z=ba;_=qb;$=L}else{U=1;V=G;W=H;X=I;Y=J;Z=ba;_=0;$=L}break}default:{U=F;V=G;W=H;X=I;Y=J;Z=K;_=0;$=L}}E=c[l>>2]|0;if((_|0)!=0|(E|0)<=(m|0)){u=V;v=X;w=Y;x=Z;y=_;z=$;break a}else{F=U;G=V;H=W;I=X;J=Y;K=Z;L=$}}}while(0);if(!n){t=c[x>>2]|0;if((t|0)>-1){s=c[f+16>>2]|0;L=t;t=0;do{K=(L|0)/2|0;if(!(L&1))c[s+(K*12|0)>>2]=z;else c[s+(K*12|0)+4>>2]=z;t=t+1|0;L=c[x+(t<<2)>>2]|0}while((L|0)>-1)}c[x>>2]=-1;if((u|0)>-1){L=c[f+36>>2]|0;t=0;while(1){s=L+(t<<2)|0;K=t+1|0;if((c[s>>2]|0)>-1)t=K;else{rb=s;sb=K;tb=t;break}}c[rb>>2]=z;c[L+(sb<<2)>>2]=u;c[L+(tb+2<<2)>>2]=-1;ub=v+1|0}else ub=v}else ub=v;c[f+48>>2]=w;c[f+40>>2]=w;c[f+44>>2]=ub;de(p);de(r);q=y}while(0);i=g;return q|0}function Zd(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+304|0;if((i|0)>=(j|0))ca();f=e+40|0;g=e+8|0;h=e+4|0;k=e;l=0;do{m=b+(l<<2)|0;c[f+(l<<2)>>2]=(d[m+2>>0]|0)<<8|(d[m+3>>0]|0)|(d[m+1>>0]|0)<<16|(d[m>>0]|0)<<24;l=l+1|0}while((l|0)!=16);l=c[f>>2]|0;b=16;do{m=c[f+(b+-2<<2)>>2]|0;n=l;l=c[f+(b+-15<<2)>>2]|0;c[f+(b<<2)>>2]=n+(c[f+(b+-7<<2)>>2]|0)+((m>>>19|m<<13)^m>>>10^(m>>>17|m<<15))+((l>>>18|l<<14)^l>>>3^(l>>>7|l<<25));b=b+1|0}while((b|0)!=64);c[g>>2]=c[a>>2];c[g+4>>2]=c[a+4>>2];c[g+8>>2]=c[a+8>>2];c[g+12>>2]=c[a+12>>2];c[g+16>>2]=c[a+16>>2];c[g+20>>2]=c[a+20>>2];c[g+24>>2]=c[a+24>>2];c[g+28>>2]=c[a+28>>2];b=g+28|0;l=g+16|0;m=c[l>>2]|0;n=g+20|0;o=c[n>>2]|0;p=g+24|0;q=c[p>>2]|0;r=(c[b>>2]|0)+1116352408+(c[f>>2]|0)+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+((q^o)&m^q)|0;s=c[g>>2]|0;t=g+4|0;u=c[t>>2]|0;v=g+8|0;w=c[v>>2]|0;x=g+12|0;y=(c[x>>2]|0)+r|0;c[x>>2]=y;z=((w|u)&s|w&u)+((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+r|0;c[b>>2]=z;r=q+1899447441+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+4>>2]|0)+((o^m)&y^o)|0;m=w+r|0;c[v>>2]=m;w=((u|s)&z|u&s)+((z>>>2|z<<30)^(z>>>13|z<<19)^(z>>>22|z<<10))+r|0;c[p>>2]=w;r=c[l>>2]|0;s=o+-1245643825+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(c[f+8>>2]|0)+((r^y)&m^r)|0;y=c[g>>2]|0;o=u+s|0;c[t>>2]=o;u=((y|z)&w|y&z)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+s|0;c[n>>2]=u;s=c[x>>2]|0;z=r+-373957723+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+(c[f+12>>2]|0)+((s^m)&o^s)|0;m=c[b>>2]|0;r=y+z|0;c[g>>2]=r;y=((m|w)&u|m&w)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+z|0;c[l>>2]=y;z=c[v>>2]|0;w=s+961987163+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+16>>2]|0)+((z^o)&r^z)|0;o=c[p>>2]|0;s=m+w|0;c[b>>2]=s;m=((o|u)&y|o&u)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+w|0;c[x>>2]=m;w=c[t>>2]|0;u=z+1508970993+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+(c[f+20>>2]|0)+((w^r)&s^w)|0;r=c[n>>2]|0;z=o+u|0;c[p>>2]=z;o=((r|y)&m|r&y)+((m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10))+u|0;c[v>>2]=o;u=c[g>>2]|0;y=w+-1841331548+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+24>>2]|0)+((u^s)&z^u)|0;s=c[l>>2]|0;w=r+y|0;c[n>>2]=w;r=((s|m)&o|s&m)+((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+y|0;c[t>>2]=r;y=c[b>>2]|0;m=u+-1424204075+((w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(c[f+28>>2]|0)+((y^z)&w^y)|0;z=c[x>>2]|0;u=s+m|0;c[l>>2]=u;s=((z|o)&r|z&o)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+m|0;c[g>>2]=s;m=c[p>>2]|0;o=y+-670586216+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+32>>2]|0)+((m^w)&u^m)|0;w=c[v>>2]|0;y=z+o|0;c[x>>2]=y;z=((w|r)&s|w&r)+((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+o|0;c[b>>2]=z;o=c[n>>2]|0;r=m+310598401+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+36>>2]|0)+((o^u)&y^o)|0;u=c[t>>2]|0;m=w+r|0;c[v>>2]=m;w=((u|s)&z|u&s)+((z>>>2|z<<30)^(z>>>13|z<<19)^(z>>>22|z<<10))+r|0;c[p>>2]=w;r=c[l>>2]|0;s=o+607225278+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(c[f+40>>2]|0)+((r^y)&m^r)|0;y=c[g>>2]|0;o=u+s|0;c[t>>2]=o;u=((y|z)&w|y&z)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+s|0;c[n>>2]=u;s=c[x>>2]|0;z=r+1426881987+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+(c[f+44>>2]|0)+((s^m)&o^s)|0;m=c[b>>2]|0;r=y+z|0;c[g>>2]=r;y=((m|w)&u|m&w)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+z|0;c[l>>2]=y;z=c[v>>2]|0;w=s+1925078388+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+48>>2]|0)+((z^o)&r^z)|0;o=c[p>>2]|0;s=m+w|0;c[b>>2]=s;m=((o|u)&y|o&u)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+w|0;c[x>>2]=m;w=c[t>>2]|0;u=z+-2132889090+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+(c[f+52>>2]|0)+((w^r)&s^w)|0;r=c[n>>2]|0;z=o+u|0;c[p>>2]=z;o=((r|y)&m|r&y)+((m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10))+u|0;c[v>>2]=o;u=c[g>>2]|0;y=w+-1680079193+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+56>>2]|0)+((u^s)&z^u)|0;s=c[l>>2]|0;w=r+y|0;c[n>>2]=w;r=((s|m)&o|s&m)+((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+y|0;c[t>>2]=r;y=c[b>>2]|0;m=u+-1046744716+((w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(c[f+60>>2]|0)+((y^z)&w^y)|0;z=c[x>>2]|0;u=s+m|0;c[l>>2]=u;s=((z|o)&r|z&o)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+m|0;c[g>>2]=s;m=c[p>>2]|0;o=y+-459576895+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+64>>2]|0)+((m^w)&u^m)|0;w=c[v>>2]|0;y=z+o|0;c[x>>2]=y;z=((w|r)&s|w&r)+((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+o|0;c[b>>2]=z;o=c[n>>2]|0;r=m+-272742522+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+68>>2]|0)+((o^u)&y^o)|0;u=c[t>>2]|0;m=w+r|0;c[v>>2]=m;w=((u|s)&z|u&s)+((z>>>2|z<<30)^(z>>>13|z<<19)^(z>>>22|z<<10))+r|0;c[p>>2]=w;r=c[l>>2]|0;s=o+264347078+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(c[f+72>>2]|0)+((r^y)&m^r)|0;y=c[g>>2]|0;o=u+s|0;c[t>>2]=o;u=((y|z)&w|y&z)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+s|0;c[n>>2]=u;s=c[x>>2]|0;z=r+604807628+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+(c[f+76>>2]|0)+((s^m)&o^s)|0;m=c[b>>2]|0;r=y+z|0;c[g>>2]=r;y=((m|w)&u|m&w)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+z|0;c[l>>2]=y;z=c[v>>2]|0;w=s+770255983+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+80>>2]|0)+((z^o)&r^z)|0;o=c[p>>2]|0;s=m+w|0;c[b>>2]=s;m=((o|u)&y|o&u)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+w|0;c[x>>2]=m;w=c[t>>2]|0;u=z+1249150122+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+(c[f+84>>2]|0)+((w^r)&s^w)|0;r=c[n>>2]|0;z=o+u|0;c[p>>2]=z;o=((r|y)&m|r&y)+((m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10))+u|0;c[v>>2]=o;u=c[g>>2]|0;y=w+1555081692+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+88>>2]|0)+((u^s)&z^u)|0;s=c[l>>2]|0;w=r+y|0;c[n>>2]=w;r=((s|m)&o|s&m)+((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+y|0;c[t>>2]=r;y=c[b>>2]|0;m=u+1996064986+((w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(c[f+92>>2]|0)+((y^z)&w^y)|0;z=c[x>>2]|0;u=s+m|0;c[l>>2]=u;s=((z|o)&r|z&o)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+m|0;c[g>>2]=s;m=c[p>>2]|0;o=y+-1740746414+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+96>>2]|0)+((m^w)&u^m)|0;w=c[v>>2]|0;y=z+o|0;c[x>>2]=y;z=((w|r)&s|w&r)+((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+o|0;c[b>>2]=z;o=c[n>>2]|0;r=m+-1473132947+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+100>>2]|0)+((o^u)&y^o)|0;u=c[t>>2]|0;m=w+r|0;c[v>>2]=m;w=((u|s)&z|u&s)+((z>>>2|z<<30)^(z>>>13|z<<19)^(z>>>22|z<<10))+r|0;c[p>>2]=w;r=c[l>>2]|0;s=o+-1341970488+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(c[f+104>>2]|0)+((r^y)&m^r)|0;y=c[g>>2]|0;o=u+s|0;c[t>>2]=o;u=((y|z)&w|y&z)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+s|0;c[n>>2]=u;s=c[x>>2]|0;z=r+-1084653625+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+(c[f+108>>2]|0)+((s^m)&o^s)|0;m=c[b>>2]|0;r=y+z|0;c[g>>2]=r;y=((m|w)&u|m&w)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+z|0;c[l>>2]=y;z=c[v>>2]|0;w=s+-958395405+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+112>>2]|0)+((z^o)&r^z)|0;o=c[p>>2]|0;s=m+w|0;c[b>>2]=s;m=((o|u)&y|o&u)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+w|0;c[x>>2]=m;w=c[t>>2]|0;u=z+-710438585+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+(c[f+116>>2]|0)+((w^r)&s^w)|0;r=c[n>>2]|0;z=o+u|0;c[p>>2]=z;o=((r|y)&m|r&y)+((m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10))+u|0;c[v>>2]=o;u=c[g>>2]|0;y=w+113926993+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+120>>2]|0)+((u^s)&z^u)|0;s=c[l>>2]|0;w=r+y|0;c[n>>2]=w;r=((s|m)&o|s&m)+((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+y|0;c[t>>2]=r;y=c[b>>2]|0;m=u+338241895+((w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(c[f+124>>2]|0)+((y^z)&w^y)|0;z=c[x>>2]|0;u=s+m|0;c[l>>2]=u;s=((z|o)&r|z&o)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+m|0;c[g>>2]=s;m=c[p>>2]|0;o=y+666307205+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+128>>2]|0)+((m^w)&u^m)|0;w=c[v>>2]|0;y=z+o|0;c[x>>2]=y;z=((w|r)&s|w&r)+((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+o|0;c[b>>2]=z;o=c[n>>2]|0;r=m+773529912+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+132>>2]|0)+((o^u)&y^o)|0;u=c[t>>2]|0;m=w+r|0;c[v>>2]=m;w=((u|s)&z|u&s)+((z>>>2|z<<30)^(z>>>13|z<<19)^(z>>>22|z<<10))+r|0;c[p>>2]=w;r=c[l>>2]|0;s=o+1294757372+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(c[f+136>>2]|0)+((r^y)&m^r)|0;y=c[g>>2]|0;o=u+s|0;c[t>>2]=o;u=((y|z)&w|y&z)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+s|0;c[n>>2]=u;s=c[x>>2]|0;z=r+1396182291+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+(c[f+140>>2]|0)+((s^m)&o^s)|0;m=c[b>>2]|0;r=y+z|0;c[g>>2]=r;y=((m|w)&u|m&w)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+z|0;c[l>>2]=y;z=c[v>>2]|0;w=s+1695183700+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+144>>2]|0)+((z^o)&r^z)|0;o=c[p>>2]|0;s=m+w|0;c[b>>2]=s;m=((o|u)&y|o&u)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+w|0;c[x>>2]=m;w=c[t>>2]|0;u=z+1986661051+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+(c[f+148>>2]|0)+((w^r)&s^w)|0;r=c[n>>2]|0;z=o+u|0;c[p>>2]=z;o=((r|y)&m|r&y)+((m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10))+u|0;c[v>>2]=o;u=c[g>>2]|0;y=w+-2117940946+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+152>>2]|0)+((u^s)&z^u)|0;s=c[l>>2]|0;w=r+y|0;c[n>>2]=w;r=((s|m)&o|s&m)+((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+y|0;c[t>>2]=r;y=c[b>>2]|0;m=u+-1838011259+((w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(c[f+156>>2]|0)+((y^z)&w^y)|0;z=c[x>>2]|0;u=s+m|0;c[l>>2]=u;s=((z|o)&r|z&o)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+m|0;c[g>>2]=s;m=c[p>>2]|0;o=y+-1564481375+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+160>>2]|0)+((m^w)&u^m)|0;w=c[v>>2]|0;y=z+o|0;c[x>>2]=y;z=((w|r)&s|w&r)+((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+o|0;c[b>>2]=z;o=c[n>>2]|0;r=m+-1474664885+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+164>>2]|0)+((o^u)&y^o)|0;u=c[t>>2]|0;m=w+r|0;c[v>>2]=m;w=((u|s)&z|u&s)+((z>>>2|z<<30)^(z>>>13|z<<19)^(z>>>22|z<<10))+r|0;c[p>>2]=w;r=c[l>>2]|0;s=o+-1035236496+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(c[f+168>>2]|0)+((r^y)&m^r)|0;y=c[g>>2]|0;o=u+s|0;c[t>>2]=o;u=((y|z)&w|y&z)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+s|0;c[n>>2]=u;s=c[x>>2]|0;z=r+-949202525+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+(c[f+172>>2]|0)+((s^m)&o^s)|0;m=c[b>>2]|0;r=y+z|0;c[g>>2]=r;y=((m|w)&u|m&w)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+z|0;c[l>>2]=y;z=c[v>>2]|0;w=s+-778901479+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+176>>2]|0)+((z^o)&r^z)|0;o=c[p>>2]|0;s=m+w|0;c[b>>2]=s;m=((o|u)&y|o&u)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+w|0;c[x>>2]=m;w=c[t>>2]|0;u=z+-694614492+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+(c[f+180>>2]|0)+((w^r)&s^w)|0;r=c[n>>2]|0;z=o+u|0;c[p>>2]=z;o=((r|y)&m|r&y)+((m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10))+u|0;c[v>>2]=o;u=c[g>>2]|0;y=w+-200395387+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+184>>2]|0)+((u^s)&z^u)|0;s=c[l>>2]|0;w=r+y|0;c[n>>2]=w;r=((s|m)&o|s&m)+((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+y|0;c[t>>2]=r;y=c[b>>2]|0;m=u+275423344+((w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(c[f+188>>2]|0)+((y^z)&w^y)|0;z=c[x>>2]|0;u=s+m|0;c[l>>2]=u;s=((z|o)&r|z&o)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+m|0;c[g>>2]=s;m=c[p>>2]|0;o=y+430227734+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+192>>2]|0)+((m^w)&u^m)|0;w=c[v>>2]|0;y=z+o|0;c[x>>2]=y;z=((w|r)&s|w&r)+((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+o|0;c[b>>2]=z;o=c[n>>2]|0;r=m+506948616+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+196>>2]|0)+((o^u)&y^o)|0;u=c[t>>2]|0;m=w+r|0;c[v>>2]=m;w=((u|s)&z|u&s)+((z>>>2|z<<30)^(z>>>13|z<<19)^(z>>>22|z<<10))+r|0;c[p>>2]=w;r=c[l>>2]|0;s=o+659060556+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(c[f+200>>2]|0)+((r^y)&m^r)|0;y=c[g>>2]|0;o=u+s|0;c[t>>2]=o;u=((y|z)&w|y&z)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+s|0;c[n>>2]=u;s=c[x>>2]|0;z=r+883997877+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+(c[f+204>>2]|0)+((s^m)&o^s)|0;m=c[b>>2]|0;r=y+z|0;c[g>>2]=r;y=((m|w)&u|m&w)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+z|0;c[l>>2]=y;z=c[v>>2]|0;w=s+958139571+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+208>>2]|0)+((z^o)&r^z)|0;o=c[p>>2]|0;s=m+w|0;c[b>>2]=s;m=((o|u)&y|o&u)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+w|0;c[x>>2]=m;w=c[t>>2]|0;u=z+1322822218+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+(c[f+212>>2]|0)+((w^r)&s^w)|0;r=c[n>>2]|0;z=o+u|0;c[p>>2]=z;o=((r|y)&m|r&y)+((m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10))+u|0;c[v>>2]=o;u=c[g>>2]|0;y=w+1537002063+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+216>>2]|0)+((u^s)&z^u)|0;s=c[l>>2]|0;w=r+y|0;c[n>>2]=w;r=((s|m)&o|s&m)+((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+y|0;c[t>>2]=r;y=c[b>>2]|0;m=u+1747873779+((w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(c[f+220>>2]|0)+((y^z)&w^y)|0;z=c[x>>2]|0;u=s+m|0;c[l>>2]=u;s=((z|o)&r|z&o)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+m|0;c[g>>2]=s;m=c[p>>2]|0;o=y+1955562222+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+224>>2]|0)+((m^w)&u^m)|0;w=c[v>>2]|0;y=z+o|0;c[x>>2]=y;z=((w|r)&s|w&r)+((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+o|0;c[b>>2]=z;o=c[n>>2]|0;r=m+2024104815+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+228>>2]|0)+((o^u)&y^o)|0;u=c[t>>2]|0;m=w+r|0;c[v>>2]=m;w=((u|s)&z|u&s)+((z>>>2|z<<30)^(z>>>13|z<<19)^(z>>>22|z<<10))+r|0;c[p>>2]=w;r=c[l>>2]|0;s=o+-2067236844+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(c[f+232>>2]|0)+((r^y)&m^r)|0;y=c[g>>2]|0;o=u+s|0;c[t>>2]=o;u=((y|z)&w|y&z)+((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+s|0;c[n>>2]=u;s=c[x>>2]|0;z=r+-1933114872+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+(c[f+236>>2]|0)+((s^m)&o^s)|0;m=c[b>>2]|0;r=y+z|0;c[g>>2]=r;y=((m|w)&u|m&w)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+z|0;c[l>>2]=y;z=c[v>>2]|0;w=s+-1866530822+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+240>>2]|0)+((z^o)&r^z)|0;o=c[p>>2]|0;s=m+w|0;c[b>>2]=s;m=((o|u)&y|o&u)+((y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10))+w|0;c[x>>2]=m;w=c[t>>2]|0;u=z+-1538233109+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+(c[f+244>>2]|0)+((w^r)&s^w)|0;r=c[n>>2]|0;z=o+u|0;c[p>>2]=z;o=((r|y)&m|r&y)+((m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10))+u|0;c[v>>2]=o;v=c[g>>2]|0;u=w+-1090935817+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+248>>2]|0)+((v^s)&z^v)|0;s=c[l>>2]|0;w=r+u|0;c[n>>2]=w;n=((s|m)&o|s&m)+((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+u|0;c[t>>2]=n;t=c[b>>2]|0;b=v+-965641998+((w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(c[f+252>>2]|0)+((t^z)&w^t)|0;c[h>>2]=b;z=c[x>>2]|0;x=((z|o)&n|z&o)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))|0;c[k>>2]=x;v=s+b|0;c[l>>2]=v;l=x+b|0;c[g>>2]=l;c[a>>2]=(c[a>>2]|0)+l;l=a+4|0;c[l>>2]=(c[l>>2]|0)+n;n=a+8|0;c[n>>2]=(c[n>>2]|0)+o;o=a+12|0;c[o>>2]=(c[o>>2]|0)+z;z=a+16|0;c[z>>2]=(c[z>>2]|0)+v;v=a+20|0;c[v>>2]=(c[v>>2]|0)+w;w=a+24|0;c[w>>2]=(c[w>>2]|0)+(c[p>>2]|0);p=a+28|0;c[p>>2]=(c[p>>2]|0)+t;Ld[c[1788]&1](f,256);Ld[c[1788]&1](g,32);Ld[c[1788]&1](h,4);Ld[c[1788]&1](k,4);i=e;return}function _d(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0;h=i;i=i+176|0;if((i|0)>=(j|0))ca();k=h+24|0;l=h;m=h+128|0;n=h+120|0;o=h+144|0;p=h+32|0;if((c[e+76>>2]|0)>-1)q=Ey(e)|0;else q=0;r=e+74|0;s=a[r>>0]|0;a[r>>0]=s+1|s;s=c[f>>2]|0;a:do if(s){r=e+4|0;t=e+8|0;u=p+4|0;v=p+8|0;w=p+12|0;x=p+16|0;y=p+20|0;z=p+24|0;A=p+28|0;B=p+32|0;C=p+36|0;D=p+40|0;E=p+44|0;F=p+48|0;G=p+52|0;H=p+56|0;I=p+60|0;J=p+64|0;K=p+68|0;L=p+72|0;M=p+76|0;N=p+80|0;O=p+84|0;P=s;Q=0;R=0;S=f;T=0;U=0;V=0;b:while(1){c:do if(ts(P)|0){W=S;while(1){X=W+4|0;if(!(ts(c[X>>2]|0)|0)){Y=W;break}else W=X}W=T;while(1){X=c[r>>2]|0;if(X>>>0<(c[t>>2]|0)>>>0?(a[X>>0]|0)>-1:0){c[r>>2]=X+1;Z=d[X>>0]|0}else Z=Tx(e)|0;if(!(ts(Z)|0)){_=Z;$=W;break}else W=W+1|0}if(_>>>0<128&(c[t>>2]|0)!=0){c[r>>2]=(c[r>>2]|0)+-1;aa=Q;ba=R;da=Y;ea=$;fa=U;ga=V;break}else{$g(_,e)|0;aa=Q;ba=R;da=Y;ea=$;fa=U;ga=V;break}}else{W=(c[S>>2]|0)==37;d:do if(W){X=S+4|0;ha=c[X>>2]|0;e:do switch(ha|0){case 37:{break d;break}case 42:{ia=0;ja=S+8|0;break}default:{if(Jw(ha)|0?(c[S+8>>2]|0)==36:0){ka=(c[X>>2]|0)+-48|0;c[m>>2]=c[g>>2];la=ka;while(1){ka=(c[m>>2]|0)+(4-1)&~(4-1);ma=c[ka>>2]|0;c[m>>2]=ka+4;if(la>>>0>1)la=la+-1|0;else{na=ma;break}}ia=na;ja=S+12|0;break e}la=(c[g>>2]|0)+(4-1)&~(4-1);ma=c[la>>2]|0;c[g>>2]=la+4;ia=ma;ja=X}}while(0);if(!(Jw(c[ja>>2]|0)|0)){oa=ja;pa=0}else{X=ja;ha=0;while(1){ma=(ha*10|0)+-48+(c[X>>2]|0)|0;la=X+4|0;if(!(Jw(c[la>>2]|0)|0)){oa=la;pa=ma;break}else{X=la;ha=ma}}}ha=c[oa>>2]|0;if((ha|0)==109){X=oa+4|0;qa=c[X>>2]|0;ra=(ia|0)!=0&1;sa=X;ta=0;ua=0}else{qa=ha;ra=0;sa=oa;ta=U;ua=V}ha=sa+4|0;switch(qa|0){case 104:{X=(c[ha>>2]|0)==104;va=X?sa+8|0:ha;wa=X?-2:-1;break}case 108:{X=(c[ha>>2]|0)==108;va=X?sa+8|0:ha;wa=X?3:1;break}case 106:{va=ha;wa=3;break}case 116:case 122:{va=ha;wa=1;break}case 76:{va=ha;wa=2;break}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{va=sa;wa=0;break}default:{xa=ra;ya=R;za=ta;Aa=ua;Ba=121;break b}}ha=c[va>>2]|0;X=(ha&47|0)==3;ma=ha|32;la=X?ma:ha;ha=X?1:wa;switch(la|0){case 110:{Ca=T;break}case 91:{Ba=52;break}default:if((ma|0)==99)Ba=52;else{ma=T;while(1){X=c[r>>2]|0;if(X>>>0<(c[t>>2]|0)>>>0?(a[X>>0]|0)>-1:0){c[r>>2]=X+1;Da=d[X>>0]|0}else Da=Tx(e)|0;if(!(ts(Da)|0)){Ea=Da;Fa=ma;Ba=56;break}else ma=ma+1|0}}}do if((Ba|0)==52){Ba=0;ma=c[r>>2]|0;X=c[t>>2]|0;if(ma>>>0<X>>>0?(a[ma>>0]|0)>-1:0){c[r>>2]=ma+1;Ga=X;Ha=d[ma>>0]|0;Ia=T;Ba=58;break}Ea=Tx(e)|0;Fa=T;Ba=56}while(0);if((Ba|0)==56){Ba=0;if((Ea|0)<0){xa=ra;ya=R;za=ta;Aa=ua;Ba=121;break b}Ga=c[t>>2]|0;Ha=Ea;Ia=Fa;Ba=58}f:do if((Ba|0)==58){Ba=0;if(Ha>>>0<128&(Ga|0)!=0)c[r>>2]=(c[r>>2]|0)+-1;else $g(Ha,e)|0;switch(la|0){case 110:{Ca=Ia;break f;break}case 91:case 99:case 115:{ma=(la|0)==99;g:do if(ma){Ja=1;Ka=va;La=166900;Ma=(pa|0)<1?1:pa}else{if((la|0)==115){c[p>>2]=32;c[u>>2]=9;c[v>>2]=10;c[w>>2]=13;c[x>>2]=11;c[y>>2]=12;c[z>>2]=133;c[A>>2]=8192;c[B>>2]=8193;c[C>>2]=8194;c[D>>2]=8195;c[E>>2]=8196;c[F>>2]=8197;c[G>>2]=8198;c[H>>2]=8200;c[I>>2]=8201;c[J>>2]=8202;c[K>>2]=8232;c[L>>2]=8233;c[M>>2]=8287;c[N>>2]=12288;c[O>>2]=0;Ja=1;Ka=va;La=p;Ma=pa;break}X=va+4|0;ka=(c[X>>2]|0)==94;Na=ka?va+8|0:X;X=ka&1;ka=(c[Na>>2]|0)==93?Na+4|0:Na;while(1){switch(c[ka>>2]|0){case 0:{xa=ra;ya=R;za=ta;Aa=ua;Ba=121;break b;break}case 93:{Ja=X;Ka=ka;La=Na;Ma=pa;break g;break}default:{}}ka=ka+4|0}}while(0);ka=(ha|0)==0?ia:0;Na=(ha|0)==1;X=Na?ia:0;Oa=(Ma|0)<1?-1:Ma;Pa=(ra|0)!=0;do if(Pa){Qa=ma?Oa+1|0:31;if(Na){Ra=Wd(Qa<<2)|0;if(!Ra){xa=ra;ya=R;za=ka;Aa=Ra;Ba=121;break b}else{Sa=Qa;Ta=ka;Ua=Ra;break}}else{Ra=Wd(Qa)|0;if(!Ra){xa=ra;ya=R;za=0;Aa=0;Ba=121;break b}else{Sa=Qa;Ta=Ra;Ua=0;break}}}else{Sa=Q;Ta=ka;Ua=X}while(0);h:do if(Oa){X=La+4|0;ka=0;Ra=0;Qa=Sa;Va=Ia;Wa=Ta;Xa=Ua;Ya=Oa;while(1){Za=c[r>>2]|0;do if(Za>>>0<(c[t>>2]|0)>>>0){if((a[Za>>0]|0)<=-1){Ba=85;break}c[r>>2]=Za+1;_a=d[Za>>0]|0}else Ba=85;while(0);if((Ba|0)==85){Ba=0;Za=Tx(e)|0;if((Za|0)<0){$a=Za;ab=ka;bb=Ra;cb=Qa;db=Va;eb=Wa;fb=Xa;Ba=106;break}else _a=Za}switch(c[La>>2]|0){case 45:{if((_a|0)==45)gb=1;else{hb=X;Ba=89}break}case 93:{if((_a|0)==93)gb=1;else{hb=X;Ba=89}break}default:{hb=La;Ba=89}}i:do if((Ba|0)==89)while(1){Ba=0;j:do switch(c[hb>>2]|0){case 93:case 0:{gb=0;break i;break}case 45:{Za=hb+4|0;ib=c[Za>>2]|0;switch(ib|0){case 93:case 0:{jb=hb;break j;break}default:{}}kb=c[hb+-4>>2]|0;if((kb|0)<(ib|0))lb=kb;else{jb=Za;break j}while(1){if((lb|0)==(_a|0)){gb=1;break i}lb=lb+1|0;if((lb|0)>=(ib|0)){jb=Za;break}}break}default:jb=hb}while(0);if((c[jb>>2]|0)==(_a|0)){gb=1;break i}else{hb=jb+4|0;Ba=89}}while(0);if((gb|0)==(Ja|0)){mb=_a;nb=ka;ob=Ra;pb=Qa;qb=Va;rb=Wa;sb=Xa;Ba=104;break}do if(!Xa){if(Na){tb=Ra;ub=Qa;vb=Wa;wb=0;break}Za=is(Wa|0?Wa+Ra|0:o,_a)|0;if((Za|0)<0){xa=ra;ya=R;za=Wa;Aa=0;Ba=121;break b}ib=Za+Ra|0;if(!(Pa&ib>>>0>(Qa+-4|0)>>>0)){tb=ib;ub=Qa;vb=Wa;wb=0;break}Za=Qa<<1|1;kb=ek(Wa,Za)|0;if(!kb){xa=ra;ya=R;za=Wa;Aa=0;Ba=121;break b}else{tb=ib;ub=Za;vb=kb;wb=0}}else{kb=Ra+1|0;c[Xa+(Ra<<2)>>2]=_a;if(!(Pa&(kb|0)==(Qa|0))){tb=kb;ub=Qa;vb=Wa;wb=Xa;break}kb=Qa<<1|1;Za=ek(Xa,kb<<2)|0;if(!Za){xa=ra;ya=R;za=Wa;Aa=Xa;Ba=121;break b}else{tb=Qa;ub=kb;vb=Wa;wb=Za}}while(0);Za=Va+1|0;kb=(Ya|0)>0&1;if((Ya|0)==(kb|0)){xb=tb;yb=ub;zb=Za;Ab=vb;Bb=wb;break h}else{ka=1;Ra=tb;Qa=ub;Va=Za;Wa=vb;Xa=wb;Ya=Ya-kb|0}}if((Ba|0)==104){Ba=0;if(mb>>>0<128&(c[t>>2]|0)!=0){c[r>>2]=(c[r>>2]|0)+-1;Cb=nb;Db=ob;Eb=pb;Fb=qb;Gb=rb;Hb=sb}else{$a=mb;ab=nb;bb=ob;cb=pb;db=qb;eb=rb;fb=sb;Ba=106}}if((Ba|0)==106){Ba=0;$g($a,e)|0;Cb=ab;Db=bb;Eb=cb;Fb=db;Gb=eb;Hb=fb}if((la|0)!=99&(Cb|0)!=0){xb=Db;yb=Eb;zb=Fb;Ab=Gb;Bb=Hb}else{Ib=ra;Jb=R;Kb=Gb;Lb=Hb;break b}}else{xb=0;yb=Sa;zb=Ia;Ab=Ta;Bb=Ua}while(0);do if(Pa)if(Na){c[ia>>2]=Bb;break}else{c[ia>>2]=Ab;break}while(0);if(!ma){if(Bb|0)c[Bb+(xb<<2)>>2]=0;if(!Ab){Mb=yb;Nb=Ka;Ob=zb;Pb=0;Qb=Bb}else{a[Ab+xb>>0]=0;Mb=yb;Nb=Ka;Ob=zb;Pb=Ab;Qb=Bb}}else{Mb=yb;Nb=Ka;Ob=zb;Pb=Ab;Qb=Bb}break}case 112:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{Na=(ia|0)!=0;c[l>>2]=2-(Na&1);c[l+4>>2]=165647;c[l+8>>2]=(pa|0)>0?pa:0;c[l+12>>2]=165611+((ha+2|0)*3|0);c[l+16>>2]=la;rp(o,22,165629,l)|0;c[n>>2]=0;c[k>>2]=Na?ia:n;c[k+4>>2]=n;if((Up(e,o,k)|0)==-1){xa=ra;ya=R;za=ta;Aa=ua;Ba=121;break b}Na=c[n>>2]|0;if(!Na){Ib=ra;Jb=R;Kb=ta;Lb=ua;break b}else{Mb=Q;Nb=va;Ob=Na+Ia|0;Pb=ta;Qb=ua}break}default:{xa=ra;ya=R;za=ta;Aa=ua;Ba=121;break b}}aa=Mb;ba=((ia|0)!=0&1)+R|0;da=Nb;ea=Ob;fa=Pb;ga=Qb;break c}while(0);if(!ia){aa=Q;ba=R;da=va;ea=Ca;fa=ta;ga=ua;break c}switch(ha|0){case -2:{a[ia>>0]=Ca;aa=Q;ba=R;da=va;ea=Ca;fa=ta;ga=ua;break c;break}case -1:{b[ia>>1]=Ca;aa=Q;ba=R;da=va;ea=Ca;fa=ta;ga=ua;break c;break}case 0:{c[ia>>2]=Ca;aa=Q;ba=R;da=va;ea=Ca;fa=ta;ga=ua;break c;break}case 1:{c[ia>>2]=Ca;aa=Q;ba=R;da=va;ea=Ca;fa=ta;ga=ua;break c;break}case 3:{la=ia;c[la>>2]=Ca;c[la+4>>2]=((Ca|0)<0)<<31>>31;aa=Q;ba=R;da=va;ea=Ca;fa=ta;ga=ua;break c;break}default:{aa=Q;ba=R;da=va;ea=Ca;fa=ta;ga=ua;break c}}}while(0);la=S+((W&1)<<2)|0;Na=c[r>>2]|0;if(Na>>>0<(c[t>>2]|0)>>>0?(a[Na>>0]|0)>-1:0){c[r>>2]=Na+1;Rb=d[Na>>0]|0}else Rb=Tx(e)|0;if((Rb|0)!=(c[la>>2]|0)){Sb=Rb;Tb=R;Ub=U;Vb=V;Ba=23;break b}aa=Q;ba=R;da=la;ea=T+1|0;fa=U;ga=V}while(0);S=da+4|0;P=c[S>>2]|0;if(!P){Wb=ba;break a}else{Q=aa;R=ba;T=ea;U=fa;V=ga}}if((Ba|0)==23){if(Sb>>>0<128&(c[t>>2]|0)!=0)c[r>>2]=(c[r>>2]|0)+-1;else $g(Sb,e)|0;if((Tb|0)!=0|(Sb|0)>-1){Wb=Tb;break}else{Xb=0;Yb=Ub;Zb=Vb;Ba=122}}else if((Ba|0)==121)if(!ya){Xb=xa;Yb=za;Zb=Aa;Ba=122}else{Ib=xa;Jb=ya;Kb=za;Lb=Aa}if((Ba|0)==122){Ib=Xb;Jb=-1;Kb=Yb;Lb=Zb}if(!Ib)Wb=Jb;else{de(Kb);de(Lb);Wb=Jb}}else Wb=0;while(0);if(q|0)Dy(e);i=h;return Wb|0}function $d(e,f,k){e=e|0;f=f|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0.0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0;l=i;i=i+304|0;if((i|0)>=(j|0))ca();m=l+16|0;n=l+8|0;o=l+33|0;p=l;q=l+32|0;if((c[e+76>>2]|0)>-1)r=Ey(e)|0;else r=0;s=a[f>>0]|0;a:do if(s<<24>>24){t=e+4|0;u=e+100|0;v=e+108|0;w=e+8|0;x=o+10|0;y=o+33|0;z=n+4|0;A=o+46|0;B=o+94|0;C=s;E=0;F=f;G=0;H=0;I=0;b:while(1){c:do if(!(Ou(C&255)|0)){J=(a[F>>0]|0)==37;d:do if(J){K=F+1|0;L=a[K>>0]|0;e:do switch(L<<24>>24){case 37:{break d;break}case 42:{M=0;N=F+2|0;break}default:{O=(L&255)+-48|0;if(O>>>0<10?(a[F+2>>0]|0)==36:0){c[m>>2]=c[k>>2];P=O;while(1){O=(c[m>>2]|0)+(4-1)&~(4-1);Q=c[O>>2]|0;c[m>>2]=O+4;if(P>>>0>1)P=P+-1|0;else{R=Q;break}}M=R;N=F+3|0;break e}P=(c[k>>2]|0)+(4-1)&~(4-1);Q=c[P>>2]|0;c[k>>2]=P+4;M=Q;N=K}}while(0);K=a[N>>0]|0;L=K&255;if((L+-48|0)>>>0<10){Q=L;L=N;P=0;while(1){O=(P*10|0)+-48+Q|0;S=L+1|0;T=a[S>>0]|0;Q=T&255;if((Q+-48|0)>>>0>=10){U=T;V=S;W=O;break}else{L=S;P=O}}}else{U=K;V=N;W=0}if(U<<24>>24==109){P=V+1|0;X=a[P>>0]|0;Y=(M|0)!=0&1;Z=P;_=0;$=0}else{X=U;Y=0;Z=V;_=H;$=I}P=Z+1|0;switch(X&255|0){case 104:{L=(a[P>>0]|0)==104;aa=L?Z+2|0:P;ba=L?-2:-1;break}case 108:{L=(a[P>>0]|0)==108;aa=L?Z+2|0:P;ba=L?3:1;break}case 106:{aa=P;ba=3;break}case 116:case 122:{aa=P;ba=1;break}case 76:{aa=P;ba=2;break}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{aa=Z;ba=0;break}default:{da=Y;ea=E;fa=_;ga=$;ha=154;break b}}P=d[aa>>0]|0;L=(P&47|0)==3;Q=L?P|32:P;P=L?1:ba;switch(Q|0){case 99:{ia=G;ja=(W|0)<1?1:W;break}case 91:{ia=G;ja=W;break}case 110:{if(!M){ka=E;la=aa;ma=G;na=_;oa=$;break c}switch(P|0){case -2:{a[M>>0]=G;ka=E;la=aa;ma=G;na=_;oa=$;break c;break}case -1:{b[M>>1]=G;ka=E;la=aa;ma=G;na=_;oa=$;break c;break}case 0:{c[M>>2]=G;ka=E;la=aa;ma=G;na=_;oa=$;break c;break}case 1:{c[M>>2]=G;ka=E;la=aa;ma=G;na=_;oa=$;break c;break}case 3:{L=M;c[L>>2]=G;c[L+4>>2]=((G|0)<0)<<31>>31;ka=E;la=aa;ma=G;na=_;oa=$;break c;break}default:{ka=E;la=aa;ma=G;na=_;oa=$;break c}}break}default:{to(e,0);do{L=c[t>>2]|0;if(L>>>0<(c[u>>2]|0)>>>0){c[t>>2]=L+1;pa=d[L>>0]|0}else pa=vh(e)|0}while((Ou(pa)|0)!=0);if(!(c[u>>2]|0))qa=c[t>>2]|0;else{K=(c[t>>2]|0)+-1|0;c[t>>2]=K;qa=K}ia=(c[v>>2]|0)+G+qa-(c[w>>2]|0)|0;ja=W}}to(e,ja);K=c[t>>2]|0;L=c[u>>2]|0;if(K>>>0<L>>>0){c[t>>2]=K+1;ra=L}else{if((vh(e)|0)<0){da=Y;ea=E;fa=_;ga=$;ha=154;break b}ra=c[u>>2]|0}if(ra|0)c[t>>2]=(c[t>>2]|0)+-1;f:do switch(Q|0){case 91:case 99:case 115:{L=(Q|0)==99;g:do if((Q|16|0)==115){Gl(o|0,-1,257)|0;a[o>>0]=0;if((Q|0)==115){a[y>>0]=0;a[x>>0]=0;a[x+1>>0]=0;a[x+2>>0]=0;a[x+3>>0]=0;a[x+4>>0]=0;sa=aa}else sa=aa}else{K=aa+1|0;O=(a[K>>0]|0)==94;S=O&1;T=O?aa+2|0:K;Gl(o|0,O&1|0,257)|0;a[o>>0]=0;switch(a[T>>0]|0){case 45:{O=(S^1)&255;a[A>>0]=O;ta=O;ua=T+1|0;break}case 93:{O=(S^1)&255;a[B>>0]=O;ta=O;ua=T+1|0;break}default:{ta=(S^1)&255;ua=T}}T=ua;while(1){S=a[T>>0]|0;h:do switch(S<<24>>24){case 0:{da=Y;ea=E;fa=_;ga=$;ha=154;break b;break}case 93:{sa=T;break g;break}case 45:{O=T+1|0;K=a[O>>0]|0;switch(K<<24>>24){case 93:case 0:{va=45;wa=T;break h;break}default:{}}xa=a[T+-1>>0]|0;if((xa&255)<(K&255)){ya=xa&255;do{ya=ya+1|0;a[o+ya>>0]=ta;xa=a[O>>0]|0}while((ya|0)<(xa&255|0));va=xa;wa=O}else{va=K;wa=O}break}default:{va=S;wa=T}}while(0);a[o+((va&255)+1)>>0]=ta;T=wa+1|0}}while(0);T=L?ja+1|0:31;S=(P|0)==1;ya=(Y|0)!=0;i:do if(S){if(ya){xa=Wd(T<<2)|0;if(!xa){da=Y;ea=E;fa=0;ga=xa;ha=154;break b}else za=xa}else za=M;c[n>>2]=0;c[z>>2]=0;xa=0;Aa=T;Ba=za;j:while(1){Ca=(Ba|0)==0;Da=xa;while(1){k:while(1){Ea=c[t>>2]|0;if(Ea>>>0<(c[u>>2]|0)>>>0){c[t>>2]=Ea+1;Fa=d[Ea>>0]|0}else Fa=vh(e)|0;if(!(a[o+(Fa+1)>>0]|0)){Ga=Da;Ha=Ba;break j}a[q>>0]=Fa;switch(Jf(p,q,1,n)|0){case -1:{da=Y;ea=E;fa=0;ga=Ba;ha=154;break b;break}case -2:break;default:break k}}if(Ca)Ia=Da;else{c[Ba+(Da<<2)>>2]=c[p>>2];Ia=Da+1|0}if(ya&(Ia|0)==(Aa|0))break;else Da=Ia}Da=Aa<<1|1;Ca=ek(Ba,Da<<2)|0;if(!Ca){da=Y;ea=E;fa=0;ga=Ba;ha=154;break b}else{O=Aa;Aa=Da;Ba=Ca;xa=O}}if(!(Ds(n)|0)){da=Y;ea=E;fa=0;ga=Ha;ha=154;break b}else{Ja=Ga;Ka=0;La=Ha}}else{if(ya){xa=Wd(T)|0;if(!xa){da=Y;ea=E;fa=0;ga=0;ha=154;break b}else{Ma=0;Na=T;Oa=xa}while(1){xa=Ma;do{Ba=c[t>>2]|0;if(Ba>>>0<(c[u>>2]|0)>>>0){c[t>>2]=Ba+1;Pa=d[Ba>>0]|0}else Pa=vh(e)|0;if(!(a[o+(Pa+1)>>0]|0)){Ja=xa;Ka=Oa;La=0;break i}a[Oa+xa>>0]=Pa;xa=xa+1|0}while((xa|0)!=(Na|0));xa=Na<<1|1;Ba=ek(Oa,xa)|0;if(!Ba){da=Y;ea=E;fa=Oa;ga=0;ha=154;break b}else{Aa=Na;Na=xa;Oa=Ba;Ma=Aa}}}if(!M){Aa=ra;while(1){Ba=c[t>>2]|0;if(Ba>>>0<Aa>>>0){c[t>>2]=Ba+1;Qa=d[Ba>>0]|0}else Qa=vh(e)|0;if(!(a[o+(Qa+1)>>0]|0)){Ja=0;Ka=0;La=0;break i}Aa=c[u>>2]|0}}else{Aa=ra;Ba=0;while(1){xa=c[t>>2]|0;if(xa>>>0<Aa>>>0){c[t>>2]=xa+1;Ra=d[xa>>0]|0}else Ra=vh(e)|0;if(!(a[o+(Ra+1)>>0]|0)){Ja=Ba;Ka=M;La=0;break i}a[M+Ba>>0]=Ra;Aa=c[u>>2]|0;Ba=Ba+1|0}}}while(0);if(!(c[u>>2]|0))Sa=c[t>>2]|0;else{T=(c[t>>2]|0)+-1|0;c[t>>2]=T;Sa=T}T=Sa-(c[w>>2]|0)+(c[v>>2]|0)|0;if(!T){Ta=Y;Ua=E;Va=Ka;Wa=La;break b}if(!((T|0)==(ja|0)|L^1)){Ta=Y;Ua=E;Va=Ka;Wa=La;break b}do if(ya)if(S){c[M>>2]=La;break}else{c[M>>2]=Ka;break}while(0);if(L){Xa=sa;Ya=Ka;Za=La}else{if(La|0)c[La+(Ja<<2)>>2]=0;if(!Ka){Xa=sa;Ya=0;Za=La;break f}a[Ka+Ja>>0]=0;Xa=sa;Ya=Ka;Za=La}break}case 120:case 88:case 112:{_a=16;ha=136;break}case 111:{_a=8;ha=136;break}case 117:case 100:{_a=10;ha=136;break}case 105:{_a=0;ha=136;break}case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{$a=+Vd(e,P,0);if((c[v>>2]|0)==((c[w>>2]|0)-(c[t>>2]|0)|0)){Ta=Y;Ua=E;Va=_;Wa=$;break b}if(!M){Xa=aa;Ya=_;Za=$}else switch(P|0){case 0:{g[M>>2]=$a;Xa=aa;Ya=_;Za=$;break f;break}case 1:{h[M>>3]=$a;Xa=aa;Ya=_;Za=$;break f;break}case 2:{h[M>>3]=$a;Xa=aa;Ya=_;Za=$;break f;break}default:{Xa=aa;Ya=_;Za=$;break f}}break}default:{Xa=aa;Ya=_;Za=$}}while(0);l:do if((ha|0)==136){ha=0;S=fe(e,_a,0,-1,-1)|0;if((c[v>>2]|0)==((c[w>>2]|0)-(c[t>>2]|0)|0)){Ta=Y;Ua=E;Va=_;Wa=$;break b}if((M|0)!=0&(Q|0)==112){c[M>>2]=S;Xa=aa;Ya=_;Za=$;break}if(!M){Xa=aa;Ya=_;Za=$}else switch(P|0){case -2:{a[M>>0]=S;Xa=aa;Ya=_;Za=$;break l;break}case -1:{b[M>>1]=S;Xa=aa;Ya=_;Za=$;break l;break}case 0:{c[M>>2]=S;Xa=aa;Ya=_;Za=$;break l;break}case 1:{c[M>>2]=S;Xa=aa;Ya=_;Za=$;break l;break}case 3:{ya=M;c[ya>>2]=S;c[ya+4>>2]=D;Xa=aa;Ya=_;Za=$;break l;break}default:{Xa=aa;Ya=_;Za=$;break l}}}while(0);ka=((M|0)!=0&1)+E|0;la=Xa;ma=(c[v>>2]|0)+ia+(c[t>>2]|0)-(c[w>>2]|0)|0;na=Ya;oa=Za;break c}while(0);P=F+(J&1)|0;to(e,0);Q=c[t>>2]|0;if(Q>>>0<(c[u>>2]|0)>>>0){c[t>>2]=Q+1;ab=d[Q>>0]|0}else ab=vh(e)|0;if((ab|0)!=(d[P>>0]|0)){bb=ab;cb=E;db=H;eb=I;ha=22;break b}ka=E;la=P;ma=G+1|0;na=H;oa=I}else{P=F;while(1){Q=P+1|0;if(!(Ou(d[Q>>0]|0)|0)){fb=P;break}else P=Q}to(e,0);do{P=c[t>>2]|0;if(P>>>0<(c[u>>2]|0)>>>0){c[t>>2]=P+1;gb=d[P>>0]|0}else gb=vh(e)|0}while((Ou(gb)|0)!=0);if(!(c[u>>2]|0))hb=c[t>>2]|0;else{P=(c[t>>2]|0)+-1|0;c[t>>2]=P;hb=P}ka=E;la=fb;ma=(c[v>>2]|0)+G+hb-(c[w>>2]|0)|0;na=H;oa=I}while(0);F=la+1|0;C=a[F>>0]|0;if(!(C<<24>>24)){ib=ka;break a}else{E=ka;G=ma;H=na;I=oa}}if((ha|0)==22){if(c[u>>2]|0)c[t>>2]=(c[t>>2]|0)+-1;if((cb|0)!=0|(bb|0)>-1){ib=cb;break}else{jb=0;kb=db;lb=eb;ha=155}}else if((ha|0)==154)if(!ea){jb=da;kb=fa;lb=ga;ha=155}else{Ta=da;Ua=ea;Va=fa;Wa=ga}if((ha|0)==155){Ta=jb;Ua=-1;Va=kb;Wa=lb}if(!Ta)ib=Ua;else{de(Va);de(Wa);ib=Ua}}else ib=0;while(0);if(r|0)Dy(e);i=l;return ib|0}function ae(f,g,h,k,l){f=f|0;g=g|0;h=h|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0;m=i;i=i+32|0;if((i|0)>=(j|0))ca();n=m;o=m+16|0;p=m+12|0;q=m+8|0;r=m+20|0;s=f;f=s&65535;t=160043+(s>>>16)|0;s=t+1|0;u=160043+f|0;v=u+1|0;w=n;c[w>>2]=0;c[w+4>>2]=0;w=a[t>>0]|0;t=a[u>>0]|0;a:do if(((g|0)!=0?(u=c[g>>2]|0,(u|0)!=0):0)?(x=c[h>>2]|0,(x|0)!=0):0){y=w&255;z=y+128|0;A=y&3;B=A^1;C=A^2;D=A^3;E=y&1;F=E^1;G=(y&254|0)==196;H=w<<24>>24==-38;I=w<<24>>24==-40;J=t&255;K=J+-192|0;L=K>>>0>8;M=f;N=164068+K|0;K=J+128|0;O=128-J|0;P=(O|0)==0;Q=(w&-2)<<24>>24==-60;R=J&1;S=R^1;T=J&3;U=T^1;V=T^2;W=T^3;X=(y+-192|0)>>>0<7;Y=u;u=x;x=0;b:while(1){Z=a[Y>>0]|0;_=Z&255;c:do if(Z<<24>>24<0|X){do switch(y|0){case 199:{$=84;aa=112;break b;break}case 200:{ba=Jf(o,Y,u,n)|0;switch(ba|0){case -1:{$=84;aa=112;break b;break}case -2:{da=22;break b;break}case 0:{ea=1;break}default:ea=ba}fa=c[o>>2]|0;ga=ea;aa=86;break c;break}case 198:{if(u>>>0<4){da=22;break b}ha=c[Y>>2]|0;aa=14;break}case 195:case 192:{if(u>>>0<4){da=22;break b}ha=d[Y+B>>0]<<16|d[Y+A>>0]<<24|d[Y+C>>0]<<8|d[Y+D>>0];aa=14;break}case 193:case 194:case 197:case 196:{if(u>>>0<2){da=22;break b}ba=d[Y+E>>0]<<8;ia=ba|d[Y+F>>0];switch(ba&64512|0){case 56320:{$=84;aa=112;break b;break}case 55296:break;default:{fa=ia;ga=2;aa=86;break c}}if(G){$=84;aa=112;break b}if(u>>>0<4){da=22;break b}ba=Y+2|0;ja=(d[ba+E>>0]<<8|d[ba+F>>0])+-56320|0;if(ja>>>0>1023){$=84;aa=112;break b}fa=(ia<<10)+-56557568+ja|0;ga=4;aa=86;break c;break}case 209:{if((_+-161|0)>>>0<63){fa=_+65216|0;ga=1;aa=86;break c}if(u>>>0<2){da=22;break b}ja=a[Y+1>>0]|0;ia=ja&255;ba=_+-129|0;if(ba>>>0<31)ka=ba;else{if((_&240|0)!=224){$=84;aa=112;break b}ka=_+-193|0}ba=ka<<1;la=ia+-64|0;if(la>>>0<95){if(ja<<24>>24==127){$=84;aa=112;break b}ma=ba;na=la+(ja<<24>>24>>7<<24>>24)|0}else{ja=ia+-159|0;la=ja>>>0<94;ma=ba|la&1;na=la?ja:ia}ia=b[25370+(ma*188|0)+(na<<1)>>1]|0;if(!(ia<<16>>16)){$=84;aa=112;break b}else{fa=ia&65535;ga=2;aa=86;break c}break}case 208:{if(u>>>0<2){da=22;break b}ia=d[Y+1>>0]|0;if(Z<<24>>24!=-114){ja=_+-161|0;la=ia+-161|0;if(ja>>>0>83|la>>>0>93){$=84;aa=112;break b}ba=b[25370+(ja*188|0)+(la<<1)>>1]|0;if(!(ba<<16>>16)){$=84;aa=112;break b}else{fa=ba&65535;ga=2;aa=86;break c}}else{if((ia+-161|0)>>>0>62){$=84;aa=112;break b}fa=ia+65216|0;ga=2;aa=86;break c}break}case 218:{if((Z&255)<161){$=84;aa=112;break b}break}case 216:case 217:break;case 224:{if(u>>>0<2){da=22;break b}ia=d[Y+1>>0]|0;ba=ia+-64|0;if(ba>>>0>190|(ia+-127|0)>>>0<34){$=84;aa=112;break b}la=ba>>>0>62?ia+-98|0:ba;ba=_+-161|0;if(ba>>>0<=88){ia=e[99386+(ba*314|0)+(la<<1)>>1]|0;if((ba|0)==39?(ba=la+-58|0,ba>>>0<9):0)oa=261>>>(ba&511)&511;else oa=0;ba=oa<<17&131072|ia;if(!ba){$=84;aa=112;break b}else{fa=ba;ga=2;aa=86;break c}}ba=_+-135|0;if(ba>>>0>119){$=84;aa=112;break b}ia=la+(((Z&255)<161?ba:_+-224|0)*157|0)|0;ba=e[89042+(ia<<1)>>1]|0;la=(e[89042+((ia>>>4)+4867<<1)>>1]|0)>>>(ia&15)<<17&131072|ba;if((la&196352|0)!=56320)if(!la){$=84;aa=112;break b}else{fa=la;ga=2;aa=86;break c}if(L)pa=2;else pa=a[N>>0]|0;if(pa>>>0>(c[l>>2]|0)>>>0){$=7;aa=112;break b}c[p>>2]=164078+(ba&255);c[q>>2]=4;qa=2;ra=(ae(M,p,q,k,l)|0)+x|0;break c;break}case 232:{if(u>>>0<2){da=22;break b}ba=a[Y+1>>0]|0;la=ba&255;ia=_+-161|0;ja=la+-161|0;if(!(ia>>>0>92|ja>>>0>93)){sa=b[127332+(ia*188|0)+(ja<<1)>>1]|0;if(!(sa<<16>>16)){$=84;aa=112;break b}else{fa=sa&65535;ga=2;aa=86;break c}}sa=_+-129|0;if(sa>>>0>92){$=84;aa=112;break b}if(sa>>>0>68&(ba&255)>82){$=84;aa=112;break b}ba=la+-65|0;do if(ba>>>0<26)ta=ba;else{if((la+-97|0)>>>0<26){ta=la+-71|0;break}if((la+-129|0)>>>0>=126){$=84;aa=112;break b}ta=la+-77|0}while(0);la=(sa>>>0<32?sa*178|0:(ia*84|0)+5696|0)+44032+ta|0;if(la>>>0<44032){fa=la;ga=2;aa=86;break c}else{ua=la;va=44032}while(1){la=ua-va|0;ba=0;ja=0;while(1){wa=0;xa=ja;while(1){ya=(((e[127332+(ba*188|0)+(wa<<1)>>1]|0)-va|0)>>>0<=la>>>0&1)+xa|0;wa=wa+1|0;if((wa|0)==94){za=ya;break}else xa=ya}ba=ba+1|0;if((ba|0)==93){Aa=za;break}else ja=za}va=ua+1|0;ja=Aa+ua|0;if(ja>>>0<va>>>0){fa=ja;ga=2;aa=86;break c}else ua=ja}break}default:{if(_>>>0<z>>>0){fa=_;ga=1;aa=86;break c}ia=_-z|0;sa=(ia*5|0)>>>2;ja=ia<<1&6;ia=d[s+(sa+1)>>0]<<8-ja&1023|(d[s+sa>>0]|0)>>>ja;ja=(ia|0)==0?_:e[144816+(ia<<1)>>1]|0;if((ja|0)==1){$=84;aa=112;break b}else{fa=ja;ga=1;aa=86;break c}}}while(0);if((aa|0)==14){aa=0;if(ha>>>0>1114111|(ha&-2048|0)==55296){$=84;aa=112;break b}else{fa=ha;ga=4;aa=86;break}}ja=_+-129|0;if(ja>>>0>125){$=84;aa=112;break b}if(u>>>0<2){da=22;break b}ia=a[Y+1>>0]|0;sa=ia&255;if(H&(ia&255)<161){$=84;aa=112;break b}ba=sa+-64|0;if(!(ia<<24>>24==127|ba>>>0>190)){fa=e[41162+(ja*380|0)+((ba>>>0>63?sa+-65|0:ba)<<1)>>1]|0;ga=2;aa=86;break}if(!(I&(sa+-48|0)>>>0<10)){$=84;aa=112;break b}if(u>>>0<4){da=22;break b}ba=(d[Y+2>>0]|0)+-129|0;if(ba>>>0>126){$=84;aa=112;break b}ia=(d[Y+3>>0]|0)+-48|0;if(ia>>>0>9){$=84;aa=112;break b}la=((sa+(ja*10|0)|0)*1260|0)+-60352+(ba*10|0)+ia|0;ia=0;while(1){ba=la-ia|0;ja=0;sa=0;while(1){xa=0;wa=sa;while(1){ya=(((e[41162+(ja*380|0)+(xa<<1)>>1]|0)-ia|0)>>>0<=ba>>>0&1)+wa|0;xa=xa+1|0;if((xa|0)==190){Ba=ya;break}else wa=ya}ja=ja+1|0;if((ja|0)==126){Ca=Ba;break}else sa=Ba}ia=la+1|0;sa=Ca+la|0;if(sa>>>0<ia>>>0){fa=sa;ga=4;aa=86;break}else la=sa}}else{fa=_;ga=1;aa=86}while(0);d:do if((aa|0)==86){aa=0;switch(J|0){case 198:{if((c[l>>2]|0)>>>0<4){$=7;aa=112;break b}_=c[k>>2]|0;c[_>>2]=fa;c[k>>2]=_+4;c[l>>2]=(c[l>>2]|0)+-4;qa=ga;ra=x;break d;break}case 200:{if((c[l>>2]|0)>>>0<4){_=is(r,fa)|0;if((c[l>>2]|0)>>>0<_>>>0){aa=92;break b}Z=c[k>>2]|0;$j(Z|0,r|0,_|0)|0;Da=Z;Ea=_}else{_=c[k>>2]|0;Da=_;Ea=is(_,fa)|0}c[k>>2]=Da+Ea;c[l>>2]=(c[l>>2]|0)-Ea;qa=ga;ra=x;break d;break}case 199:{if(fa>>>0>127){Fa=x;aa=96}else{Ga=fa;Ha=x}break}case 193:case 194:case 197:case 196:{if(Q|fa>>>0<65536){_=fa>>>0>65535?65533:fa;if((c[l>>2]|0)>>>0<2){$=7;aa=112;break b}Z=c[k>>2]|0;a[Z+R>>0]=_>>>8;a[Z+S>>0]=_;c[k>>2]=Z+2;c[l>>2]=(c[l>>2]|0)+-2;qa=ga;ra=x;break d}else{if((c[l>>2]|0)>>>0<4){$=7;aa=112;break b}Z=fa+-65536|0;_=c[k>>2]|0;a[_+R>>0]=Z>>>18|216;a[_+S>>0]=Z>>>10;la=_+2|0;a[la+R>>0]=Z>>>8&3|220;a[la+S>>0]=Z;c[k>>2]=_+4;c[l>>2]=(c[l>>2]|0)+-4;qa=ga;ra=x;break d}break}case 195:case 192:{if((c[l>>2]|0)>>>0<4){$=7;aa=112;break b}_=c[k>>2]|0;a[_+T>>0]=fa>>>24;a[_+U>>0]=fa>>>16;a[_+V>>0]=fa>>>8;a[_+W>>0]=fa;c[k>>2]=_+4;c[l>>2]=(c[l>>2]|0)+-4;qa=ga;ra=x;break d;break}default:{Ga=fa;Ha=x}}e:while(1){if((aa|0)==96){aa=0;Ga=42;Ha=Fa+1|0}if(!(c[l>>2]|0)){$=7;aa=112;break b}if(Ga>>>0<K>>>0){Ia=Ga;break}if(P){Fa=Ha;aa=96;continue}else Ja=0;while(1){_=(Ja*5|0)>>>2;Z=Ja<<1&6;if((Ga|0)==(e[144816+((d[v+(_+1)>>0]<<8-Z&1023|(d[v+_>>0]|0)>>>Z)<<1)>>1]|0)){Ka=Ja;aa=102;break e}Z=Ja+1|0;if(Z>>>0<O>>>0)Ja=Z;else{Fa=Ha;aa=96;continue e}}}if((aa|0)==102){aa=0;Ia=Ka+128|0}Z=c[k>>2]|0;c[k>>2]=Z+1;a[Z>>0]=Ia;c[l>>2]=(c[l>>2]|0)+-1;qa=ga;ra=Ha}while(0);Y=(c[g>>2]|0)+qa|0;c[g>>2]=Y;Z=u;u=u-qa|0;c[h>>2]=u;if((Z|0)==(qa|0)){La=ra;break a}else x=ra}if((aa|0)==92)da=7;else if((aa|0)==112)da=$;c[($r()|0)>>2]=da;La=-1}else La=0;while(0);i=m;return La|0}function ce(d,e,f,g,k){d=d|0;e=e|0;f=f|0;g=g|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0.0,ua=0;l=i;i=i+128|0;if((i|0)>=(j|0))ca();m=l+88|0;n=l+72|0;o=l+40|0;p=l+32|0;q=l+24|0;r=l+16|0;s=l+8|0;t=l+108|0;u=l;v=l+112|0;w=l+104|0;c[t>>2]=e;e=(d|0)!=0;x=0;y=0;z=0;a:while(1){do if((x|0)>-1){if((y|0)<=(2147483647-x|0)){A=y+x|0;break}if(!(c[d>>2]&32)){c[($r()|0)>>2]=75;A=-1}else A=-1}else A=x;while(0);B=c[t>>2]|0;C=c[B>>2]|0;if(!C){D=A;E=z;F=88;break}else{G=C;H=B}b:while(1){switch(G|0){case 37:case 0:{I=H;break b;break}default:{}}C=H+4|0;c[t>>2]=C;G=c[C>>2]|0;H=C}C=(tm(I,22708)|0)>>>1;J=c[t>>2]|0;K=J+(C<<1<<2)|0;c[t>>2]=K;L=J+(C<<2)-B>>2;c:do if(e)if(!L)M=K;else{C=B;J=L;while(1){J=J+-1|0;if(c[d>>2]&32|0){F=14;break c}Do(c[C>>2]|0,d)|0;if(!J){F=14;break}else C=C+4|0}}else F=14;while(0);if((F|0)==14){F=0;if(L|0){x=A;y=L;continue}M=c[t>>2]|0}B=(Jw(c[M+4>>2]|0)|0)==0;K=c[t>>2]|0;if(!B?(c[K+8>>2]|0)==36:0){N=(c[K+4>>2]|0)+-48|0;O=1;P=K+12|0}else{N=-1;O=z;P=K+4|0}c[t>>2]=P;K=c[P>>2]|0;d:do if((K&-32|0)==32){B=K;C=P;J=0;while(1){Q=1<<B+-32;if(!(Q&75913)){R=B;S=C;T=J;break d}U=Q|J;Q=C+4|0;c[t>>2]=Q;V=c[Q>>2]|0;if((V&-32|0)==32){B=V;C=Q;J=U}else{R=V;S=Q;T=U;break}}}else{R=K;S=P;T=0}while(0);if((R|0)==42){if((Jw(c[S+4>>2]|0)|0)!=0?(K=c[t>>2]|0,(c[K+8>>2]|0)==36):0){J=K+4|0;c[k+((c[J>>2]|0)+-48<<2)>>2]=10;W=1;X=K+12|0;Y=c[g+((c[J>>2]|0)+-48<<3)>>2]|0}else{if(O|0){Z=-1;break}if(e){J=(c[f>>2]|0)+(4-1)&~(4-1);K=c[J>>2]|0;c[f>>2]=J+4;_=K}else _=0;W=0;X=(c[t>>2]|0)+4|0;Y=_}c[t>>2]=X;if((Y|0)<0){$=X;aa=T|8192;ba=W;da=0-Y|0}else{$=X;aa=T;ba=W;da=Y}}else{K=Qm(t)|0;if((K|0)<0){Z=-1;break}$=c[t>>2]|0;aa=T;ba=O;da=K}do if((c[$>>2]|0)==46){if((c[$+4>>2]|0)!=42){c[t>>2]=$+4;K=Qm(t)|0;ea=c[t>>2]|0;fa=K;break}K=$+8|0;J=(c[K>>2]|0)+-48|0;if(J>>>0<10?(c[$+12>>2]|0)==36:0){c[k+(J<<2)>>2]=10;J=c[g+((c[K>>2]|0)+-48<<3)>>2]|0;C=$+16|0;c[t>>2]=C;ea=C;fa=J;break}if(ba|0){Z=-1;break a}if(e){J=(c[f>>2]|0)+(4-1)&~(4-1);C=c[J>>2]|0;c[f>>2]=J+4;ga=C}else ga=0;c[t>>2]=K;ea=K;fa=ga}else{ea=$;fa=-1}while(0);K=ea;C=0;while(1){J=(c[K>>2]|0)+-65|0;if(J>>>0>57){Z=-1;break a}B=K+4|0;c[t>>2]=B;U=a[165068+(C*58|0)+J>>0]|0;J=U&255;if((J+-1|0)>>>0<8){K=B;C=J}else{ha=B;ia=U;ja=J;ka=C;break}}if(!(ia<<24>>24)){Z=-1;break}C=(N|0)>-1;do if(ia<<24>>24==19)if(C){Z=-1;break a}else F=55;else{if(C){c[k+(N<<2)>>2]=ja;K=g+(N<<3)|0;J=c[K+4>>2]|0;U=u;c[U>>2]=c[K>>2];c[U+4>>2]=J;F=55;break}if(!e){Z=0;break a}of(u,ja,f);la=c[t>>2]|0}while(0);if((F|0)==55){F=0;if(e)la=ha;else{x=A;y=L;z=ba;continue}}C=c[la+-4>>2]|0;J=(ka|0)!=0&(C&15|0)==3?C&-33:C;switch(J|0){case 110:{switch(ka|0){case 0:{c[c[u>>2]>>2]=A;x=A;y=L;z=ba;continue a;break}case 1:{c[c[u>>2]>>2]=A;x=A;y=L;z=ba;continue a;break}case 2:{C=c[u>>2]|0;c[C>>2]=A;c[C+4>>2]=((A|0)<0)<<31>>31;x=A;y=L;z=ba;continue a;break}case 3:{b[c[u>>2]>>1]=A;x=A;y=L;z=ba;continue a;break}case 4:{a[c[u>>2]>>0]=A;x=A;y=L;z=ba;continue a;break}case 6:{c[c[u>>2]>>2]=A;x=A;y=L;z=ba;continue a;break}case 7:{C=c[u>>2]|0;c[C>>2]=A;c[C+4>>2]=((A|0)<0)<<31>>31;x=A;y=L;z=ba;continue a;break}default:{x=A;y=L;z=ba;continue a}}break}case 99:{Do(Tw(c[u>>2]|0)|0,d)|0;x=A;y=1;z=ba;continue a;break}case 67:{Do(c[u>>2]|0,d)|0;x=A;y=1;z=ba;continue a;break}case 83:{C=c[u>>2]|0;U=an(C,0,fa)|0;K=(U|0)==0?fa:U-C>>2;U=(da|0)<(K|0)?K:da;if(!(aa&8192)){c[s>>2]=U-K;c[s+4>>2]=169844;Rp(d,165532,s)|0;if(!K){x=A;y=U;z=ba;continue a}else{ma=C;na=K}while(1){B=na+-1|0;if(c[d>>2]&32|0){x=A;y=U;z=ba;continue a}Do(c[ma>>2]|0,d)|0;if(!B){x=A;y=U;z=ba;continue a}else{ma=ma+4|0;na=B}}}e:do if(K|0){B=C;Q=K;while(1){Q=Q+-1|0;if(c[d>>2]&32|0)break e;Do(c[B>>2]|0,d)|0;if(!Q)break;else B=B+4|0}}while(0);c[r>>2]=U-K;c[r+4>>2]=169844;Rp(d,165532,r)|0;x=A;y=U;z=ba;continue a;break}case 115:{C=c[u>>2]|0;B=(fa|0)<0?2147483647:fa;f:do if((B|0)>0){Q=C;V=0;while(1){oa=Kg(w,Q,4)|0;if((oa|0)<=0){pa=oa;qa=V;break}ra=V+1|0;if((ra|0)<(B|0)){Q=Q+oa|0;V=ra}else{sa=ra;break f}}if((pa|0)<0){Z=-1;break a}else sa=qa}else sa=0;while(0);B=(da|0)<(sa|0)?sa:da;U=(aa&8192|0)!=0;if(!U){c[q>>2]=B-sa;c[q+4>>2]=169844;Rp(d,165532,q)|0}if(sa|0){K=C;V=sa;do{V=V+-1|0;K=K+(Kg(w,K,4)|0)|0;Do(c[w>>2]|0,d)|0}while((V|0)!=0)}if(!U){x=A;y=B;z=ba;continue a}c[p>>2]=B-sa;c[p+4>>2]=169844;Rp(d,165532,p)|0;x=A;y=B;z=ba;continue a;break}default:{V=J|32;K=a[165547+(V+-97)>>0]|0;c[o>>2]=165537+(aa>>>3&1^1);c[o+4>>2]=165539+(aa>>>11&1^1);c[o+8>>2]=165541+(aa>>>13&1^1);c[o+12>>2]=165543+(aa&1^1);c[o+16>>2]=165545+(aa>>>16&1^1);c[o+20>>2]=K;c[o+24>>2]=J;rp(v,16,165571,o)|0;switch(V|0){case 103:case 102:case 101:case 97:{ta=+h[u>>3];c[n>>2]=da;c[n+4>>2]=fa;h[n+8>>3]=ta;x=A;y=Rp(d,v,n)|0;z=ba;continue a;break}case 112:case 120:case 117:case 111:case 105:case 100:{V=u;K=c[V>>2]|0;C=c[V+4>>2]|0;c[m>>2]=da;c[m+4>>2]=fa;V=m+8|0;c[V>>2]=K;c[V+4>>2]=C;x=A;y=Rp(d,v,m)|0;z=ba;continue a;break}default:{x=A;y=L;z=ba;continue a}}}}}g:do if((F|0)==88)if(!d)if(E){ba=1;while(1){z=c[k+(ba<<2)>>2]|0;if(!z){ua=ba;break}of(g+(ba<<3)|0,z,f);ba=ba+1|0;if((ba|0)>=10){Z=1;break g}}if((ua|0)<10){ba=ua;while(1){if(c[k+(ba<<2)>>2]|0){Z=-1;break g}ba=ba+1|0;if((ba|0)>=10){Z=1;break}}}else Z=1}else Z=0;else Z=D;while(0);i=l;return Z|0}function be(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;i=i+448|0;if((i|0)>=(j|0))ca();h=g+208|0;k=g+200|0;l=g;m=g+376|0;n=g+312|0;o=g+248|0;p=g+224|0;q=g+220|0;r=p;s=r+20|0;do{a[r>>0]=0;r=r+1|0}while((r|0)<(s|0));r=0;while(1){if(!(a[b+r>>0]|0)){t=r;u=4;break}r=r+1|0;if(r>>>0>=257){v=0;break}}a:do if((u|0)==4)if(!(Vi(e,164489,3)|0)){r=e+3|0;do if(!(Vi(r,164820,7)|0)){s=e+10|0;if(((a[s>>0]|0)+-48|0)>>>0<10?(w=Ps(s,q,10)|0,s=c[q>>2]|0,(a[s>>0]|0)==36):0){x=w>>>0<1e3?1e3:w>>>0>9999999?9999999:w;c[k>>2]=x;Pp(p,164828,k)|0;y=x;z=s+1|0;break}v=0;break a}else{y=5e3;z=r}while(0);b:do switch(a[z>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=0;break}default:{switch(a[z+1>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=1;break b;break}default:{}}switch(a[z+2>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=2;break b;break}default:{}}switch(a[z+3>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=3;break b;break}default:{}}switch(a[z+4>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=4;break b;break}default:{}}switch(a[z+5>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=5;break b;break}default:{}}switch(a[z+6>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=6;break b;break}default:{}}switch(a[z+7>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=7;break b;break}default:{}}switch(a[z+8>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=8;break b;break}default:{}}switch(a[z+9>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=9;break b;break}default:{}}switch(a[z+10>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=10;break b;break}default:{}}switch(a[z+11>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=11;break b;break}default:{}}switch(a[z+12>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=12;break b;break}default:{}}switch(a[z+13>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=13;break b;break}default:{}}switch(a[z+14>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=14;break b;break}default:{}}switch(a[z+15>>0]|0){case 58:case 10:{v=0;break a;break}case 0:case 36:{A=15;break b;break}default:{}}A=16}}while(0);r=l;c[r>>2]=0;c[r+4>>2]=0;r=l+8|0;s=r;c[s>>2]=-205731576;c[s+4>>2]=1779033703;s=l+16|0;x=s;c[x>>2]=-2067093701;c[x+4>>2]=-1150833019;x=l+24|0;w=x;c[w>>2]=-23791573;c[w+4>>2]=1013904242;w=l+32|0;B=w;c[B>>2]=1595750129;c[B+4>>2]=-1521486534;B=l+40|0;C=B;c[C>>2]=-1377402159;c[C+4>>2]=1359893119;C=l+48|0;D=C;c[D>>2]=725511199;c[D+4>>2]=-1694144372;D=l+56|0;E=D;c[E>>2]=-79577749;c[E+4>>2]=528734635;E=l+64|0;F=E;c[F>>2]=327033209;c[F+4>>2]=1541459225;Fh(l,b,t);Fh(l,z,A);Fh(l,b,t);Rf(l,m);F=l;c[F>>2]=0;c[F+4>>2]=0;F=r;c[F>>2]=-205731576;c[F+4>>2]=1779033703;F=s;c[F>>2]=-2067093701;c[F+4>>2]=-1150833019;F=x;c[F>>2]=-23791573;c[F+4>>2]=1013904242;F=w;c[F>>2]=1595750129;c[F+4>>2]=-1521486534;F=B;c[F>>2]=-1377402159;c[F+4>>2]=1359893119;F=C;c[F>>2]=725511199;c[F+4>>2]=-1694144372;F=D;c[F>>2]=-79577749;c[F+4>>2]=528734635;F=E;c[F>>2]=327033209;c[F+4>>2]=1541459225;Fh(l,b,t);Fh(l,z,A);ro(l,t,m);F=(t|0)==0;if(!F){G=t;do{if(!(G&1))Fh(l,b,t);else Fh(l,m,64);G=G>>>1}while((G|0)!=0);Rf(l,m);G=l;c[G>>2]=0;c[G+4>>2]=0;G=r;c[G>>2]=-205731576;c[G+4>>2]=1779033703;G=s;c[G>>2]=-2067093701;c[G+4>>2]=-1150833019;G=x;c[G>>2]=-23791573;c[G+4>>2]=1013904242;G=w;c[G>>2]=1595750129;c[G+4>>2]=-1521486534;G=B;c[G>>2]=-1377402159;c[G+4>>2]=1359893119;G=C;c[G>>2]=725511199;c[G+4>>2]=-1694144372;G=D;c[G>>2]=-79577749;c[G+4>>2]=528734635;G=E;c[G>>2]=327033209;c[G+4>>2]=1541459225;if(!F){G=0;do{Fh(l,b,t);G=G+1|0}while((G|0)!=(t|0))}}else{Rf(l,m);G=l;c[G>>2]=0;c[G+4>>2]=0;G=r;c[G>>2]=-205731576;c[G+4>>2]=1779033703;G=s;c[G>>2]=-2067093701;c[G+4>>2]=-1150833019;G=x;c[G>>2]=-23791573;c[G+4>>2]=1013904242;G=w;c[G>>2]=1595750129;c[G+4>>2]=-1521486534;G=B;c[G>>2]=-1377402159;c[G+4>>2]=1359893119;G=C;c[G>>2]=725511199;c[G+4>>2]=-1694144372;G=D;c[G>>2]=-79577749;c[G+4>>2]=528734635;G=E;c[G>>2]=327033209;c[G+4>>2]=1541459225}Rf(l,n);G=l;c[G>>2]=0;c[G+4>>2]=0;G=r;c[G>>2]=-205731576;c[G+4>>2]=1779033703;G=s;c[G>>2]=-2067093701;c[G+4>>2]=-1150833019;G=x;c[G>>2]=-23791573;c[G+4>>2]=1013904242;G=w;c[G>>2]=1595750129;c[G+4>>2]=-1521486534;G=B;c[G>>2]=-1377402159;c[G+4>>2]=1359893119;G=C;c[G>>2]=725511199;c[G+4>>2]=-1694144372;G=D;c[G>>2]=-79577749;c[G+4>>2]=528734635;G=E;c[G>>2]=327033209;c[G+4>>2]=1541459225;G=(d[m>>0]|0)+15|0;F=0;while(1){Fh(l,z,A);if((F|0)==(G|0))break;else F=F+1|0}Rf(l,o);if(y|0){F=0;do{G=l;c[G>>2]=0;c[G+4>>2]=0;G=r;c[G>>2]=-205731576;c[G+4>>2]=1779033703;G=s;c[G>>2]=-2067093701;c[G+4>>2]=-1150833019;G=x;c[G>>2]=-23791573;c[G+4>>2]=1013904242;G=w;c[G>>2]=1595750129;c[G+4>>2]=-1521486534;G=B;c[G>>2]=-1377402159;c[G+4>>2]=1359893119;G=C;c[G>>2]=725511199;c[G+4>>2]=-1694144372;G=D;c[G>>2]=-79577749;c[G+4>>2]=528734635;G=E;c[G>>2]=327033209;c[G+4>>2]=1541459225;G=(F&1|0)!=0;if(G)ro(l,t,n);else Fh(l,m,64);if((F>>>0)%3|0|0)Fh(l,o,A);if((F>>>0)%7|0|0)ro(l,t,n);if(G)Fh(l,m,64);else ro(l,t,n);Rf(l,m);F=F+1|0}while((F|0)!=(y|0))}c[h>>2]=p;c[h+4>>2]=A;c[h+8>>2]=z;F=Pp(f,164493,h)|0;E=F+84|0;D=0;C=f+F|0;while(1){F=d[m+(d[164504+(D*3|0)>>0]|0)>>0]|0;B=d[m+(d[164504+(D*3|0)+1>>0]|0)>>0]<<8;w=d[m+(d[164504+(D*3|0)+2>>0]|0)>>0]|0;a[C>>0]=a[164880+(w&63)>>0]|0;a[C+1>>0]=a[164880+((B|w)>>>6&63)>>0]|0;a[C+2>>0]=a[164880+((B|F<<16)>>>12&63)>>0]|0;a[C+3>>0]=a[164880+(F>>>2)>>0]|0;D=D+1|0;if((D|0)==21)break;else C=C+4|0}C=f+E|0;D=d[m+63>>0]|0;a[C>>0]=a[164880+(D&63)>>0]|0;a[C+1>>0]=a[164880+(D>>>6)>>0]|0;a[C+2>>0]=0;v=f}else v=0;while(0);i=g;return v|0}function ee(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;f=i;i=i+1056|0;if((i|0)>=(j|0))ca();g=f+1024|0;h=f;k=a[e>>0]|0;do if(k<<24>>24){l=as(b,k<<24>>24)|0;if(l){m=a[e+1>>0]|0;if(m<<24>>24){n=l+1|0;o=a[n>>0]|0;if(o<<24>>24){p=a[e+2>>0]|0;if(!(p<<24>>24)){q=m&255|(k&255)<<8;r=n;n=o;s=d[l>>0]<<8|o&255;while(1){t=s&65535;if((t|0)==(q|0)){u=r;v=n;break}w=r+1|0;x=a[w>>0]|0;if(!(x<<24>>24)){u=w;v=0;break}else{r=w;n=x;s=x&255|t<<8}}y=v<<24>>24?u+-1|0:0;break}s=l+2|0;n=a[s>>0]|0;if(n<<24>>24){r=a[e+3>>0]|0;if(!(r<<24>>24)){q=(m&255)<<16|(k&255)<<24|(p&255)<<8;t=(n&255)<<8|(o&255)<<16|d[l>>0]<<24;if((t|0)==(q|0)){z=s;A=n}else{x=s;s=t;while(1){t=x+1|0;w=a[t>>0]|0;s=(w&255|s)<<8;if(w<<24>>24==0|(s|0)==(q|0)){z=t;A=w;break}else x=t}}y=A<<24>>24?z+-2|0:0;break}x=l+3|0;q=a[x>>0]|0;if(q<<24>>24){if(!(a[e+4>>0]|0)){s=(m&255)<<16|(k&255)<<24|(p&255)<<8|r&255;t=(n&255)<<8|(o&255)<<16|q&255|d[l>>0]<<24;if((t|0)==(s|0)){B=x;C=q}else{q=x;x=t;while(1){t=q+1|0;w=a[t>>0]|0;x=w&255|x<<8;if(w<<24>>24==0|(x|0)==(s|0)){B=t;C=w;break}else q=t}}y=C<<24>>24?B+-3|0:0;break};c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[g+24>>2]=0;c[g+28>>2]=0;q=k;s=0;while(1){if(!(a[l+s>>0]|0)){D=0;break}x=g+(((q&255)>>>5&255)<<2)|0;c[x>>2]=c[x>>2]|1<<(q&31);x=s+1|0;c[h+((q&255)<<2)>>2]=x;q=a[e+x>>0]|0;if(!(q<<24>>24)){E=x;F=s;G=23;break}else s=x}a:do if((G|0)==23){b:do if(E>>>0>1){s=1;q=-1;x=0;c:while(1){o=s;n=x;r=1;while(1){p=o;m=n;d:while(1){t=p;w=1;while(1){H=a[e+(w+q)>>0]|0;I=a[e+t>>0]|0;if(H<<24>>24!=I<<24>>24){J=t;K=H;L=I;M=m;break d}if((w|0)==(r|0))break;w=w+1|0;t=w+m|0;if(t>>>0>=E>>>0){N=q;O=r;break c}}m=m+r|0;p=m+1|0;if(p>>>0>=E>>>0){N=q;O=r;break c}}p=J-q|0;if((K&255)<=(L&255)){P=M;break}m=J+1|0;if(m>>>0<E>>>0){o=m;n=J;r=p}else{N=q;O=p;break c}}s=P+2|0;if(s>>>0>=E>>>0){N=P;O=1;break}else{q=P;x=P+1|0}}x=1;q=-1;s=0;while(1){r=x;n=s;o=1;while(1){p=r;m=n;e:while(1){t=p;w=1;while(1){I=a[e+(w+q)>>0]|0;H=a[e+t>>0]|0;if(I<<24>>24!=H<<24>>24){Q=t;R=I;S=H;T=m;break e}if((w|0)==(o|0))break;w=w+1|0;t=w+m|0;if(t>>>0>=E>>>0){U=N;V=q;W=O;X=o;break b}}m=m+o|0;p=m+1|0;if(p>>>0>=E>>>0){U=N;V=q;W=O;X=o;break b}}p=Q-q|0;if((R&255)>=(S&255)){Y=T;break}m=Q+1|0;if(m>>>0<E>>>0){r=m;n=Q;o=p}else{U=N;V=q;W=O;X=p;break b}}x=Y+2|0;if(x>>>0>=E>>>0){U=N;V=Y;W=O;X=1;break}else{q=Y;s=Y+1|0}}}else{U=-1;V=-1;W=1;X=1}while(0);s=(V+1|0)>>>0>(U+1|0)>>>0;q=s?X:W;x=s?V:U;s=x+1|0;if(!(Vk(e,e+q|0,s)|0)){Z=E-q|0;_=q}else{q=E-x+-1|0;Z=0;_=(x>>>0>q>>>0?x:q)+1|0}q=E|63;o=(Z|0)!=0;n=E-_|0;r=l;p=0;m=l;f:while(1){t=r;do if((m-t|0)>>>0<E>>>0){w=If(m,0,q)|0;if(w)if((w-t|0)>>>0<E>>>0){D=0;break a}else{$=w;break}else{$=m+q|0;break}}else $=m;while(0);t=a[r+F>>0]|0;if(!(1<<(t&31)&c[g+(((t&255)>>>5&255)<<2)>>2])){r=r+E|0;p=0;m=$;continue}w=c[h+((t&255)<<2)>>2]|0;t=E-w|0;if((E|0)!=(w|0)){r=r+(o&(p|0)!=0&t>>>0<_>>>0?n:t)|0;p=0;m=$;continue}t=s>>>0>p>>>0?s:p;w=a[e+t>>0]|0;g:do if(!(w<<24>>24))aa=s;else{H=w;I=t;while(1){if(H<<24>>24!=(a[r+I>>0]|0)){ba=I;break}I=I+1|0;H=a[e+I>>0]|0;if(!(H<<24>>24)){aa=s;break g}}r=r+(ba-x)|0;p=0;m=$;continue f}while(0);do{if(aa>>>0<=p>>>0){D=r;break a}aa=aa+-1|0}while((a[e+aa>>0]|0)==(a[r+aa>>0]|0));r=r+_|0;p=Z;m=$}}while(0);y=D}else y=0}else y=0}else y=0}else y=l}else y=0}else y=b;while(0);i=f;return y|0}function de(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;if(!a)return;b=a+-8|0;d=c[41744]|0;if(b>>>0<d>>>0)Sa();e=c[a+-4>>2]|0;a=e&3;if((a|0)==1)Sa();f=e&-8;g=b+f|0;do if(!(e&1)){h=c[b>>2]|0;if(!a)return;i=b+(0-h)|0;j=h+f|0;if(i>>>0<d>>>0)Sa();if((i|0)==(c[41745]|0)){k=g+4|0;l=c[k>>2]|0;if((l&3|0)!=3){m=i;n=j;break}c[41742]=j;c[k>>2]=l&-2;c[i+4>>2]=j|1;c[i+j>>2]=j;return}l=h>>>3;if(h>>>0<256){h=c[i+8>>2]|0;k=c[i+12>>2]|0;o=167e3+(l<<1<<2)|0;if((h|0)!=(o|0)){if(h>>>0<d>>>0)Sa();if((c[h+12>>2]|0)!=(i|0))Sa()}if((k|0)==(h|0)){c[41740]=c[41740]&~(1<<l);m=i;n=j;break}if((k|0)!=(o|0)){if(k>>>0<d>>>0)Sa();o=k+8|0;if((c[o>>2]|0)==(i|0))p=o;else Sa()}else p=k+8|0;c[h+12>>2]=k;c[p>>2]=h;m=i;n=j;break}h=c[i+24>>2]|0;k=c[i+12>>2]|0;do if((k|0)==(i|0)){o=i+16|0;l=o+4|0;q=c[l>>2]|0;if(!q){r=c[o>>2]|0;if(!r){s=0;break}else{t=r;u=o}}else{t=q;u=l}while(1){l=t+20|0;q=c[l>>2]|0;if(q|0){t=q;u=l;continue}l=t+16|0;q=c[l>>2]|0;if(!q){v=t;w=u;break}else{t=q;u=l}}if(w>>>0<d>>>0)Sa();else{c[w>>2]=0;s=v;break}}else{l=c[i+8>>2]|0;if(l>>>0<d>>>0)Sa();q=l+12|0;if((c[q>>2]|0)!=(i|0))Sa();o=k+8|0;if((c[o>>2]|0)==(i|0)){c[q>>2]=k;c[o>>2]=l;s=k;break}else Sa()}while(0);if(h){k=c[i+28>>2]|0;l=167264+(k<<2)|0;if((i|0)==(c[l>>2]|0)){c[l>>2]=s;if(!s){c[41741]=c[41741]&~(1<<k);m=i;n=j;break}}else{if(h>>>0<(c[41744]|0)>>>0)Sa();k=h+16|0;if((c[k>>2]|0)==(i|0))c[k>>2]=s;else c[h+20>>2]=s;if(!s){m=i;n=j;break}}k=c[41744]|0;if(s>>>0<k>>>0)Sa();c[s+24>>2]=h;l=i+16|0;o=c[l>>2]|0;do if(o|0)if(o>>>0<k>>>0)Sa();else{c[s+16>>2]=o;c[o+24>>2]=s;break}while(0);o=c[l+4>>2]|0;if(o)if(o>>>0<(c[41744]|0)>>>0)Sa();else{c[s+20>>2]=o;c[o+24>>2]=s;m=i;n=j;break}else{m=i;n=j}}else{m=i;n=j}}else{m=b;n=f}while(0);if(m>>>0>=g>>>0)Sa();f=g+4|0;b=c[f>>2]|0;if(!(b&1))Sa();if(!(b&2)){if((g|0)==(c[41746]|0)){s=(c[41743]|0)+n|0;c[41743]=s;c[41746]=m;c[m+4>>2]=s|1;if((m|0)!=(c[41745]|0))return;c[41745]=0;c[41742]=0;return}if((g|0)==(c[41745]|0)){s=(c[41742]|0)+n|0;c[41742]=s;c[41745]=m;c[m+4>>2]=s|1;c[m+s>>2]=s;return}s=(b&-8)+n|0;d=b>>>3;do if(b>>>0>=256){v=c[g+24>>2]|0;w=c[g+12>>2]|0;do if((w|0)==(g|0)){u=g+16|0;t=u+4|0;p=c[t>>2]|0;if(!p){a=c[u>>2]|0;if(!a){x=0;break}else{y=a;z=u}}else{y=p;z=t}while(1){t=y+20|0;p=c[t>>2]|0;if(p|0){y=p;z=t;continue}t=y+16|0;p=c[t>>2]|0;if(!p){A=y;B=z;break}else{y=p;z=t}}if(B>>>0<(c[41744]|0)>>>0)Sa();else{c[B>>2]=0;x=A;break}}else{t=c[g+8>>2]|0;if(t>>>0<(c[41744]|0)>>>0)Sa();p=t+12|0;if((c[p>>2]|0)!=(g|0))Sa();u=w+8|0;if((c[u>>2]|0)==(g|0)){c[p>>2]=w;c[u>>2]=t;x=w;break}else Sa()}while(0);if(v|0){w=c[g+28>>2]|0;j=167264+(w<<2)|0;if((g|0)==(c[j>>2]|0)){c[j>>2]=x;if(!x){c[41741]=c[41741]&~(1<<w);break}}else{if(v>>>0<(c[41744]|0)>>>0)Sa();w=v+16|0;if((c[w>>2]|0)==(g|0))c[w>>2]=x;else c[v+20>>2]=x;if(!x)break}w=c[41744]|0;if(x>>>0<w>>>0)Sa();c[x+24>>2]=v;j=g+16|0;i=c[j>>2]|0;do if(i|0)if(i>>>0<w>>>0)Sa();else{c[x+16>>2]=i;c[i+24>>2]=x;break}while(0);i=c[j+4>>2]|0;if(i|0)if(i>>>0<(c[41744]|0)>>>0)Sa();else{c[x+20>>2]=i;c[i+24>>2]=x;break}}}else{i=c[g+8>>2]|0;w=c[g+12>>2]|0;v=167e3+(d<<1<<2)|0;if((i|0)!=(v|0)){if(i>>>0<(c[41744]|0)>>>0)Sa();if((c[i+12>>2]|0)!=(g|0))Sa()}if((w|0)==(i|0)){c[41740]=c[41740]&~(1<<d);break}if((w|0)!=(v|0)){if(w>>>0<(c[41744]|0)>>>0)Sa();v=w+8|0;if((c[v>>2]|0)==(g|0))C=v;else Sa()}else C=w+8|0;c[i+12>>2]=w;c[C>>2]=i}while(0);c[m+4>>2]=s|1;c[m+s>>2]=s;if((m|0)==(c[41745]|0)){c[41742]=s;return}else D=s}else{c[f>>2]=b&-2;c[m+4>>2]=n|1;c[m+n>>2]=n;D=n}n=D>>>3;if(D>>>0<256){b=167e3+(n<<1<<2)|0;f=c[41740]|0;s=1<<n;if(f&s){n=b+8|0;C=c[n>>2]|0;if(C>>>0<(c[41744]|0)>>>0)Sa();else{E=n;F=C}}else{c[41740]=f|s;E=b+8|0;F=b}c[E>>2]=m;c[F+12>>2]=m;c[m+8>>2]=F;c[m+12>>2]=b;return}b=D>>>8;if(b)if(D>>>0>16777215)G=31;else{F=(b+1048320|0)>>>16&8;E=b<<F;b=(E+520192|0)>>>16&4;s=E<<b;E=(s+245760|0)>>>16&2;f=14-(b|F|E)+(s<<E>>>15)|0;G=D>>>(f+7|0)&1|f<<1}else G=0;f=167264+(G<<2)|0;c[m+28>>2]=G;c[m+20>>2]=0;c[m+16>>2]=0;E=c[41741]|0;s=1<<G;do if(E&s){F=D<<((G|0)==31?0:25-(G>>>1)|0);b=c[f>>2]|0;while(1){if((c[b+4>>2]&-8|0)==(D|0)){H=b;I=130;break}C=b+16+(F>>>31<<2)|0;n=c[C>>2]|0;if(!n){J=C;K=b;I=127;break}else{F=F<<1;b=n}}if((I|0)==127)if(J>>>0<(c[41744]|0)>>>0)Sa();else{c[J>>2]=m;c[m+24>>2]=K;c[m+12>>2]=m;c[m+8>>2]=m;break}else if((I|0)==130){b=H+8|0;F=c[b>>2]|0;j=c[41744]|0;if(F>>>0>=j>>>0&H>>>0>=j>>>0){c[F+12>>2]=m;c[b>>2]=m;c[m+8>>2]=F;c[m+12>>2]=H;c[m+24>>2]=0;break}else Sa()}}else{c[41741]=E|s;c[f>>2]=m;c[m+24>>2]=f;c[m+12>>2]=m;c[m+8>>2]=m}while(0);m=(c[41748]|0)+-1|0;c[41748]=m;if(!m)L=167416;else return;while(1){m=c[L>>2]|0;if(!m)break;else L=m+8|0}c[41748]=-1;return}function fe(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0;a:do if(e>>>0>36){c[($r()|0)>>2]=22;i=0;j=0}else{k=b+4|0;l=b+100|0;do{m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;n=d[m>>0]|0}else n=vh(b)|0}while((Ou(n)|0)!=0);o=n;b:do switch(o|0){case 43:case 45:{m=((o|0)==45)<<31>>31;p=c[k>>2]|0;if(p>>>0<(c[l>>2]|0)>>>0){c[k>>2]=p+1;q=d[p>>0]|0;r=m;break b}else{q=vh(b)|0;r=m;break b}break}default:{q=o;r=0}}while(0);m=(e|0)==0;do if((e|16|0)==16&(q|0)==48){p=c[k>>2]|0;if(p>>>0<(c[l>>2]|0)>>>0){c[k>>2]=p+1;s=d[p>>0]|0}else s=vh(b)|0;if((s|32|0)!=120)if(m){t=8;u=s;v=46;break}else{w=e;x=s;v=32;break}p=c[k>>2]|0;if(p>>>0<(c[l>>2]|0)>>>0){c[k>>2]=p+1;y=d[p>>0]|0}else y=vh(b)|0;if((d[152022+y>>0]|0)>15){p=(c[l>>2]|0)==0;if(!p)c[k>>2]=(c[k>>2]|0)+-1;if(!f){to(b,0);i=0;j=0;break a}if(p){i=0;j=0;break a}c[k>>2]=(c[k>>2]|0)+-1;i=0;j=0;break a}else{t=16;u=y;v=46}}else{p=m?10:e;if((d[152022+q>>0]|0)>>>0<p>>>0){w=p;x=q;v=32}else{if(c[l>>2]|0)c[k>>2]=(c[k>>2]|0)+-1;to(b,0);c[($r()|0)>>2]=22;i=0;j=0;break a}}while(0);if((v|0)==32)if((w|0)==10){m=x+-48|0;if(m>>>0<10){p=m;m=0;while(1){z=(m*10|0)+p|0;A=c[k>>2]|0;if(A>>>0<(c[l>>2]|0)>>>0){c[k>>2]=A+1;B=d[A>>0]|0}else B=vh(b)|0;p=B+-48|0;if(!(p>>>0<10&z>>>0<429496729)){C=z;E=B;break}else m=z}F=C;G=0;H=E}else{F=0;G=0;H=x}m=H+-48|0;if(m>>>0<10){p=F;z=G;A=m;m=H;while(1){I=Zp(p|0,z|0,10,0)|0;J=D;K=((A|0)<0)<<31>>31;L=~K;if(J>>>0>L>>>0|(J|0)==(L|0)&I>>>0>~A>>>0){M=A;N=p;O=z;P=m;break}L=Gr(I|0,J|0,A|0,K|0)|0;K=D;J=c[k>>2]|0;if(J>>>0<(c[l>>2]|0)>>>0){c[k>>2]=J+1;Q=d[J>>0]|0}else Q=vh(b)|0;J=Q+-48|0;if(J>>>0<10&(K>>>0<429496729|(K|0)==429496729&L>>>0<2576980378)){p=L;z=K;A=J;m=Q}else{M=J;N=L;O=K;P=Q;break}}if(M>>>0>9){R=O;S=N;T=r}else{U=10;V=N;W=O;X=P;v=72}}else{R=G;S=F;T=r}}else{t=w;u=x;v=46}c:do if((v|0)==46){if(!(t+-1&t)){m=a[152278+((t*23|0)>>>5&7)>>0]|0;A=a[152022+u>>0]|0;z=A&255;if(z>>>0<t>>>0){p=z;z=0;while(1){K=p|z<<m;L=c[k>>2]|0;if(L>>>0<(c[l>>2]|0)>>>0){c[k>>2]=L+1;Y=d[L>>0]|0}else Y=vh(b)|0;L=a[152022+Y>>0]|0;p=L&255;if(!(K>>>0<134217728&p>>>0<t>>>0)){Z=K;_=L;aa=Y;break}else z=K}ba=_;ca=0;da=Z;ea=aa}else{ba=A;ca=0;da=0;ea=u}z=kr(-1,-1,m|0)|0;p=D;if((ba&255)>>>0>=t>>>0|(ca>>>0>p>>>0|(ca|0)==(p|0)&da>>>0>z>>>0)){U=t;V=da;W=ca;X=ea;v=72;break}else{fa=da;ga=ca;ha=ba}while(1){K=fr(fa|0,ga|0,m|0)|0;L=D;J=ha&255|K;K=c[k>>2]|0;if(K>>>0<(c[l>>2]|0)>>>0){c[k>>2]=K+1;ia=d[K>>0]|0}else ia=vh(b)|0;ha=a[152022+ia>>0]|0;if((ha&255)>>>0>=t>>>0|(L>>>0>p>>>0|(L|0)==(p|0)&J>>>0>z>>>0)){U=t;V=J;W=L;X=ia;v=72;break c}else{fa=J;ga=L}}}z=a[152022+u>>0]|0;p=z&255;if(p>>>0<t>>>0){m=p;p=0;while(1){A=m+($(p,t)|0)|0;L=c[k>>2]|0;if(L>>>0<(c[l>>2]|0)>>>0){c[k>>2]=L+1;ja=d[L>>0]|0}else ja=vh(b)|0;L=a[152022+ja>>0]|0;m=L&255;if(!(A>>>0<119304647&m>>>0<t>>>0)){ka=A;la=L;ma=ja;break}else p=A}na=la;oa=ka;pa=0;qa=ma}else{na=z;oa=0;pa=0;qa=u}if((na&255)>>>0<t>>>0){p=Ws(-1,-1,t|0,0)|0;m=D;A=pa;L=oa;J=na;K=qa;while(1){if(A>>>0>m>>>0|(A|0)==(m|0)&L>>>0>p>>>0){U=t;V=L;W=A;X=K;v=72;break c}I=Zp(L|0,A|0,t|0,0)|0;ra=D;sa=J&255;if(ra>>>0>4294967295|(ra|0)==-1&I>>>0>~sa>>>0){U=t;V=L;W=A;X=K;v=72;break c}ta=Gr(sa|0,0,I|0,ra|0)|0;ra=D;I=c[k>>2]|0;if(I>>>0<(c[l>>2]|0)>>>0){c[k>>2]=I+1;ua=d[I>>0]|0}else ua=vh(b)|0;J=a[152022+ua>>0]|0;if((J&255)>>>0>=t>>>0){U=t;V=ta;W=ra;X=ua;v=72;break}else{A=ra;L=ta;K=ua}}}else{U=t;V=oa;W=pa;X=qa;v=72}}while(0);if((v|0)==72)if((d[152022+X>>0]|0)>>>0<U>>>0){do{K=c[k>>2]|0;if(K>>>0<(c[l>>2]|0)>>>0){c[k>>2]=K+1;va=d[K>>0]|0}else va=vh(b)|0}while((d[152022+va>>0]|0)>>>0<U>>>0);c[($r()|0)>>2]=34;R=h;S=g;T=(g&1|0)==0&0==0?r:0}else{R=W;S=V;T=r}if(c[l>>2]|0)c[k>>2]=(c[k>>2]|0)+-1;if(!(R>>>0<h>>>0|(R|0)==(h|0)&S>>>0<g>>>0)){if(!((g&1|0)!=0|0!=0|(T|0)!=0)){c[($r()|0)>>2]=34;K=Gr(g|0,h|0,-1,-1)|0;i=D;j=K;break}if(R>>>0>h>>>0|(R|0)==(h|0)&S>>>0>g>>>0){c[($r()|0)>>2]=34;i=h;j=g;break}}K=((T|0)<0)<<31>>31;L=jr(S^T|0,R^K|0,T|0,K|0)|0;i=D;j=L}while(0);D=i;return j|0}function he(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;g=i;i=i+256|0;if((i|0)>=(j|0))ca();h=g+112|0;k=g+104|0;l=g;m=g+216|0;n=g+184|0;o=g+152|0;p=g+128|0;q=g+124|0;r=p;s=r+20|0;do{a[r>>0]=0;r=r+1|0}while((r|0)<(s|0));r=Ns(b,257)|0;a:do if(r>>>0<=256?(Vi(e,164816,3)|0)==0:0){s=e+3|0;do if(!(Vi(s,164820,7)|0)){t=e+10|0;if(((a[t>>0]|0)+-48|0)>>>0<10?(u=Ps(t,q,10)|0,t=c[q>>2]|0,(a[t>>0]|0)==36):0){v=u>>>0<1e3?1e3:u>>>0>9999999?9999999:u;c[k>>2]=v;Pp(p,164828,k)|0;w=v;x=t+1|0;break}y=0;break a}else{w=5e3;x=s}while(0);b:do switch(a[x>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=0;break}default:{switch(a[x+1>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=1;break b;break}default:{}}switch(a[x+2>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=2;break b;break}default:{}}switch(a[x+3>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=3;break b;break}default:{}}switch(a[x+4>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=4;break b;break}default:{}}switch(a[x+5>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=5;break b;break}default:{}}switch(a[x+6>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=6;break b;break}default:{}}switch(a[x+7>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=7;break b;break}default:{}}switch(a[x+8>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=8;break b;break}default:{}}switch(a[x+9>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=9;break b;break}default:{}}switch(a[x+10>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=10;break b;break}default:{}}switch(a[x+11>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=11;break b;break}default:{}}switch(a[x+12>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=12;break b;break}default:{}}switch(a[x+13>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=13;break b;break}default:{}}switch(a[x+14>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=14;break b;break}default:{}}switch(a[x+15>>0]|0){case 58:case 10:{y=0;break a;break}case 0:case 36:{z=15;break b;break}default:{}}z=16}}while(0);s=l;c[s>>2]=0;c[s+4>>2]=0;s=l+8|0;c[s>>2]=1779033703;t=l+12|0;c[t>>2]=-1150833019;v=l+16|0;c[v>>2]=1013904242;u=l+20|0;c[u>>2]=-1521486534;A=l+24|0;c[A>>2]=1359893119;B=l+28|0;c[B>>2]=-1694144372;C=l+32|0;c[C>>2]=528734635;D=l+36|0;c[D>>2]=1541459225;Gh(l,b,r);Gh(l,x,z);Gh(l,b,r);Ng(l,m);E=l;c[E>>2]=0;c[E+4>>2]=0;c[s>>2]=1779033703;c[t>>2]=-1150833019;c[v>>2]=1013904242;c[u>>2]=-1521486534;c[A>>2]=1359893119;c[B>>2]=-1694144372;c[C>>2]=528734635;c[D>>2]=1541459225;Gh(l,b,r);Gh(l,x,z);lo(l,r,m);E=(r|0)==0;if(!E){F=r;do{if(!(F&1))Gh(l,b,r);else Gh(l,m,32);F=F>>>1}while((F|0)!=0);Ng(l,m);F=l;c[F>>2]=0;c[F+4>>2]=0;c[s>>2]=1779033703;c[t>>2]=-1150833019;c[v>>2]=1013904242;c[u>>2]=-1521486534;c[A>>2]=1359893119;c[B>>2]=-1694144372;c[C>>2]=528734635;c[D>>2]=1541459225;if(!E){F=0;do{Gh(l,b,r);F=F+1|0}while((F|0)!=(r|0))}}else{Ng(l,m);F=l;c[F>>2]=0;c[F+4>>2]=0;c[s>>2]=1779033703;c[t>>2]=-1150833019;c[v>>2]=1013904242;c[u>>2]=-1521486534;c[A>>2]=1359893119;c[B>>2]=-1694144372;c[C>>2]=528734635;c[D>>2]=1541459225}Ng(l,n);F=l;c[F>>2]=0;c[F+4>>2]=0;c[s>>2]=1779033703;c[t>>2]=-1150833019;c[v>>2]=1013904242;c[u>>2]=-1521486534;c[A>>2]=1359893119;c[B>>2]=-1694144372;c[C>>2]=528734635;c[D>>2]=1541459225;F=(d[m>>0]|0)+15|0;E=0;while(1){Gh(l,x,z);if((E|0)==(F|0))break;else E=E+1|0}Ng(l,o);if(w|0){E=0;do{F=l;c[F>>2]=0;c[F+4>>2]=0;c[s>>2]=1779033703;c[t>>2]=-1150833019;c[v>>2]=1013904242;c[u>>2]=-1521486534;c[A>>2]=1359893119;c[B>>2]=-1694144372;c[C>>2]=528734635;c[D>>2]=1541459225;F=(E&1|0)!=0;if(F)lo(l,r,n);else Gh(l,m,32);if((E>>>0)%3|0|0)Gh(l,o,z);if((E>>>0)%7|0|0)lo(l,r,n);if(F)Gh(l,m,32);else lo(l,r,n);Ng(l,m);E=E+1|0}while((E|0)!=(w|0))}c[h>>2]=p;c[h+4>>2]=z;c[h+8>>2]=x;E=Pp(f,164839,h)|0;D=E+40|0;C=0;B=f+E|0;while(1){E=d[m+(d[164850+(C*3|0)>>0]|0)>>0]|0;A=d[m+(d[164850+(C*3|0)+1>>0]|0)>>0]<<8;u=d[m+(d[164850+(C*3|0)+2>>0]|0)>>0]|0;a[B>>0]=a[164880+(u&63)>>0]|0;a[B+1>>0]=a[164880+((A|u)>>>6&63)>>0]|0;a[B+2>>0]=a[164880+((A|E<<16)>>>12&63)>>0]|0;a[B+3>>0]=a[164880+(E>>>2)>>0]|0;C=C+1|0;if((C|0)==10)break;else B=B+4|0}B=f+D|0;C=d[m+31>>0]|0;E=d[m+30>>0]|0;A=B+1|0;a[B>>0]=a[164880+(E&63)>>0]|0;a[A>>0]=a[164880+((C<<8|E)>>>6&63)>>0]|0;a[A+1>>0]=a[164880+(C>>>4)>>0]|0;a[B+3>>0]=0;y=f}else y=0;while(0);i=g;return y|0}function ge(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=a+b|0;e=c[a+4>>2]|0;do if(!(e&1)){f=c[a>>2]|0;if(!(e&3))return;g=a+(0-f)|0;h=f+b|0;i=c[41744]|0;if(g>>>0<i>>>0)Sa();if((g|0)==(c[41745]|0)){j=d+4|0;k=c[j>>2]|0;if((k&3|0)!=3){l=g;m=h;break}c[41742]=h;c[j>>2]=k&-2;c[g+4>>2]=h|1;c[g+h>>2]=h;return}k=f>>>3;if(f>>>0<256){f=c[g+8>>2]|0;j=c[g+12>>2]|0;n=167e3+(k<<1<<2)|0;if((f|0)!=(n|0)){if(f>>>0<i>>>0)Sa();if((c[f+12>>2]|0)!=(g|0))Sa()}if((j|0)==(f|0)){c[41740]=c[41740]&~(1<<k);l=g;m=h;break}if((j|0)!=(n|0)){if(j>>>0<i>>>0)Sa();n=j+8|0;if((c[n>>2]|0)==(g|0))o=n;else Sa()}else o=j+8|0;c[f+12>>2]=j;c[o>>2]=f;l=g;m=h;break}f=c[g+24>>2]|0;j=c[g+12>>2]|0;do if((j|0)==(g|0)){n=g+16|0;k=n+4|0;p=c[k>>2]|0;if(!p){q=c[n>>2]|0;if(!q){r=0;break}else{s=q;t=n}}else{s=p;t=k}while(1){k=s+20|0;p=c[k>>2]|0;if(p|0){s=p;t=k;continue}k=s+16|0;p=c[k>>2]|0;if(!p){u=s;v=t;break}else{s=p;t=k}}if(v>>>0<i>>>0)Sa();else{c[v>>2]=0;r=u;break}}else{k=c[g+8>>2]|0;if(k>>>0<i>>>0)Sa();p=k+12|0;if((c[p>>2]|0)!=(g|0))Sa();n=j+8|0;if((c[n>>2]|0)==(g|0)){c[p>>2]=j;c[n>>2]=k;r=j;break}else Sa()}while(0);if(f){j=c[g+28>>2]|0;i=167264+(j<<2)|0;if((g|0)==(c[i>>2]|0)){c[i>>2]=r;if(!r){c[41741]=c[41741]&~(1<<j);l=g;m=h;break}}else{if(f>>>0<(c[41744]|0)>>>0)Sa();j=f+16|0;if((c[j>>2]|0)==(g|0))c[j>>2]=r;else c[f+20>>2]=r;if(!r){l=g;m=h;break}}j=c[41744]|0;if(r>>>0<j>>>0)Sa();c[r+24>>2]=f;i=g+16|0;k=c[i>>2]|0;do if(k|0)if(k>>>0<j>>>0)Sa();else{c[r+16>>2]=k;c[k+24>>2]=r;break}while(0);k=c[i+4>>2]|0;if(k)if(k>>>0<(c[41744]|0)>>>0)Sa();else{c[r+20>>2]=k;c[k+24>>2]=r;l=g;m=h;break}else{l=g;m=h}}else{l=g;m=h}}else{l=a;m=b}while(0);b=c[41744]|0;if(d>>>0<b>>>0)Sa();a=d+4|0;r=c[a>>2]|0;if(!(r&2)){if((d|0)==(c[41746]|0)){u=(c[41743]|0)+m|0;c[41743]=u;c[41746]=l;c[l+4>>2]=u|1;if((l|0)!=(c[41745]|0))return;c[41745]=0;c[41742]=0;return}if((d|0)==(c[41745]|0)){u=(c[41742]|0)+m|0;c[41742]=u;c[41745]=l;c[l+4>>2]=u|1;c[l+u>>2]=u;return}u=(r&-8)+m|0;v=r>>>3;do if(r>>>0>=256){t=c[d+24>>2]|0;s=c[d+12>>2]|0;do if((s|0)==(d|0)){o=d+16|0;e=o+4|0;k=c[e>>2]|0;if(!k){j=c[o>>2]|0;if(!j){w=0;break}else{x=j;y=o}}else{x=k;y=e}while(1){e=x+20|0;k=c[e>>2]|0;if(k|0){x=k;y=e;continue}e=x+16|0;k=c[e>>2]|0;if(!k){z=x;A=y;break}else{x=k;y=e}}if(A>>>0<b>>>0)Sa();else{c[A>>2]=0;w=z;break}}else{e=c[d+8>>2]|0;if(e>>>0<b>>>0)Sa();k=e+12|0;if((c[k>>2]|0)!=(d|0))Sa();o=s+8|0;if((c[o>>2]|0)==(d|0)){c[k>>2]=s;c[o>>2]=e;w=s;break}else Sa()}while(0);if(t|0){s=c[d+28>>2]|0;h=167264+(s<<2)|0;if((d|0)==(c[h>>2]|0)){c[h>>2]=w;if(!w){c[41741]=c[41741]&~(1<<s);break}}else{if(t>>>0<(c[41744]|0)>>>0)Sa();s=t+16|0;if((c[s>>2]|0)==(d|0))c[s>>2]=w;else c[t+20>>2]=w;if(!w)break}s=c[41744]|0;if(w>>>0<s>>>0)Sa();c[w+24>>2]=t;h=d+16|0;g=c[h>>2]|0;do if(g|0)if(g>>>0<s>>>0)Sa();else{c[w+16>>2]=g;c[g+24>>2]=w;break}while(0);g=c[h+4>>2]|0;if(g|0)if(g>>>0<(c[41744]|0)>>>0)Sa();else{c[w+20>>2]=g;c[g+24>>2]=w;break}}}else{g=c[d+8>>2]|0;s=c[d+12>>2]|0;t=167e3+(v<<1<<2)|0;if((g|0)!=(t|0)){if(g>>>0<b>>>0)Sa();if((c[g+12>>2]|0)!=(d|0))Sa()}if((s|0)==(g|0)){c[41740]=c[41740]&~(1<<v);break}if((s|0)!=(t|0)){if(s>>>0<b>>>0)Sa();t=s+8|0;if((c[t>>2]|0)==(d|0))B=t;else Sa()}else B=s+8|0;c[g+12>>2]=s;c[B>>2]=g}while(0);c[l+4>>2]=u|1;c[l+u>>2]=u;if((l|0)==(c[41745]|0)){c[41742]=u;return}else C=u}else{c[a>>2]=r&-2;c[l+4>>2]=m|1;c[l+m>>2]=m;C=m}m=C>>>3;if(C>>>0<256){r=167e3+(m<<1<<2)|0;a=c[41740]|0;u=1<<m;if(a&u){m=r+8|0;B=c[m>>2]|0;if(B>>>0<(c[41744]|0)>>>0)Sa();else{D=m;E=B}}else{c[41740]=a|u;D=r+8|0;E=r}c[D>>2]=l;c[E+12>>2]=l;c[l+8>>2]=E;c[l+12>>2]=r;return}r=C>>>8;if(r)if(C>>>0>16777215)F=31;else{E=(r+1048320|0)>>>16&8;D=r<<E;r=(D+520192|0)>>>16&4;u=D<<r;D=(u+245760|0)>>>16&2;a=14-(r|E|D)+(u<<D>>>15)|0;F=C>>>(a+7|0)&1|a<<1}else F=0;a=167264+(F<<2)|0;c[l+28>>2]=F;c[l+20>>2]=0;c[l+16>>2]=0;D=c[41741]|0;u=1<<F;if(!(D&u)){c[41741]=D|u;c[a>>2]=l;c[l+24>>2]=a;c[l+12>>2]=l;c[l+8>>2]=l;return}u=C<<((F|0)==31?0:25-(F>>>1)|0);F=c[a>>2]|0;while(1){if((c[F+4>>2]&-8|0)==(C|0)){G=F;H=127;break}a=F+16+(u>>>31<<2)|0;D=c[a>>2]|0;if(!D){I=a;J=F;H=124;break}else{u=u<<1;F=D}}if((H|0)==124){if(I>>>0<(c[41744]|0)>>>0)Sa();c[I>>2]=l;c[l+24>>2]=J;c[l+12>>2]=l;c[l+8>>2]=l;return}else if((H|0)==127){H=G+8|0;J=c[H>>2]|0;I=c[41744]|0;if(!(J>>>0>=I>>>0&G>>>0>=I>>>0))Sa();c[J+12>>2]=l;c[H>>2]=l;c[l+8>>2]=J;c[l+12>>2]=G;c[l+24>>2]=0;return}}function ke(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0.0,z=0.0,A=0,B=0,C=0,D=0.0,E=0.0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0.0,da=0,ea=0,fa=0,ga=0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0;g=i;i=i+560|0;if((i|0)>=(j|0))ca();k=g+480|0;l=g+320|0;m=g+160|0;n=g;o=c[23236+(f<<2)>>2]|0;p=e+-1|0;q=(d+-3|0)/24|0;r=(q|0)<0?0:q;q=(r*24|0)+24|0;s=d-q|0;if((o+p|0)>=0){t=o+e|0;u=0;v=r-p|0;while(1){if((v|0)<0)w=0.0;else w=+(c[23252+(v<<2)>>2]|0);h[l+(u<<3)>>3]=w;u=u+1|0;if((u|0)==(t|0))break;else v=v+1|0}}v=(e|0)>0;t=0;while(1){if(v){u=t+p|0;w=0.0;x=0;while(1){y=w+ +h[a+(x<<3)>>3]*+h[l+(u-x<<3)>>3];x=x+1|0;if((x|0)==(e|0)){z=y;break}else w=y}}else z=0.0;h[n+(t<<3)>>3]=z;if((t|0)<(o|0))t=t+1|0;else break}t=(s|0)>0;p=24-s|0;v=23-s|0;x=(e|0)>0;u=(q|0)==(d|0);d=o;a:while(1){z=+h[n+(d<<3)>>3];q=(d|0)>0;if(q){A=0;B=d;w=z;while(1){y=+(~~(w*5.9604644775390625e-08)|0);c[k+(A<<2)>>2]=~~(w-y*16777216.0);C=B;B=B+-1|0;D=y+ +h[n+(B<<3)>>3];if((C|0)<=1){E=D;break}else{A=A+1|0;w=D}}}else E=z;w=+Ti(E,s);D=w-+N(+(w*.125))*8.0;A=~~D;w=D-+(A|0);do if(!t)if(!u)if(!(w>=.5)){F=0;G=A;H=w;break}else{I=2;J=A;K=20;break}else{L=c[k+(d+-1<<2)>>2]>>23;M=A;K=19;break}else{B=k+(d+-1<<2)|0;C=c[B>>2]|0;O=C>>p;P=C-(O<<p)|0;c[B>>2]=P;L=P>>v;M=O+A|0;K=19}while(0);if((K|0)==19){K=0;if((L|0)>0){I=L;J=M;K=20}else{F=L;G=M;H=w}}if((K|0)==20){K=0;A=J+1|0;if(q){O=0;P=0;while(1){B=k+(P<<2)|0;C=c[B>>2]|0;if(!O)if(!C)Q=0;else{c[B>>2]=16777216-C;Q=1}else{c[B>>2]=16777215-C;Q=O}P=P+1|0;if((P|0)==(d|0)){R=Q;break}else O=Q}}else R=0;b:do if(t)switch(s|0){case 1:{O=k+(d+-1<<2)|0;c[O>>2]=c[O>>2]&8388607;break b;break}case 2:{O=k+(d+-1<<2)|0;c[O>>2]=c[O>>2]&4194303;break b;break}default:break b}while(0);if((I|0)==2){z=1.0-w;if(!R){F=2;G=A;H=z}else{F=2;G=A;H=z-+Ti(1.0,s)}}else{F=I;G=A;H=w}}if(!(H==0.0)){S=F;T=d;U=G;V=H;K=44;break}if((d|0)>(o|0)){O=d;P=0;while(1){O=O+-1|0;q=c[k+(O<<2)>>2]|P;if((O|0)<=(o|0)){W=q;break}else P=q}if(W){X=F;Y=d;Z=G;K=37;break}else _=1}else _=1;while(1)if(!(c[k+(o-_<<2)>>2]|0))_=_+1|0;else{$=_;break}P=$+d|0;if(($|0)>0)aa=d;else{d=P;continue}while(1){O=aa+1|0;A=aa+e|0;h[l+(A<<3)>>3]=+(c[23252+(O+r<<2)>>2]|0);if(x){w=0.0;q=0;while(1){z=w+ +h[a+(q<<3)>>3]*+h[l+(A-q<<3)>>3];q=q+1|0;if((q|0)==(e|0)){ba=z;break}else w=z}}else ba=0.0;h[n+(O<<3)>>3]=ba;if((O|0)<(P|0))aa=O;else{d=P;continue a}}}do if((K|0)==37){d=Y;aa=s;while(1){e=aa+-24|0;l=d+-1|0;if(!(c[k+(l<<2)>>2]|0)){d=l;aa=e}else{da=X;ea=l;fa=Z;ga=e;break}}}else if((K|0)==44){ba=+Ti(V,0-s|0);if(!(ba>=16777216.0)){c[k+(T<<2)>>2]=~~ba;da=S;ea=T;fa=U;ga=s;break}else{aa=~~(ba*5.9604644775390625e-08);c[k+(T<<2)>>2]=~~(ba-+(aa|0)*16777216.0);d=T+1|0;c[k+(d<<2)>>2]=aa;da=S;ea=d;fa=U;ga=s+24|0;break}}while(0);s=(ea|0)>-1;if(s){V=+Ti(1.0,ga);ga=ea;while(1){h[n+(ga<<3)>>3]=V*+(c[k+(ga<<2)>>2]|0);if((ga|0)>0){V=V*5.9604644775390625e-08;ga=ga+-1|0}else break}if(s){ga=ea;while(1){k=ea-ga|0;V=0.0;U=0;while(1){ba=V+ +h[752+(U<<3)>>3]*+h[n+(U+ga<<3)>>3];if((U|0)>=(o|0)|(U|0)>=(k|0)){ha=ba;break}else{V=ba;U=U+1|0}}h[m+(k<<3)>>3]=ha;if((ga|0)>0)ga=ga+-1|0;else break}}}c:do switch(f|0){case 0:{if(s){ha=0.0;ga=ea;while(1){V=ha+ +h[m+(ga<<3)>>3];if((ga|0)>0){ha=V;ga=ga+-1|0}else{ia=V;break}}}else ia=0.0;h[b>>3]=(da|0)==0?ia:-ia;break}case 2:case 1:{if(s){ha=0.0;ga=ea;while(1){V=ha+ +h[m+(ga<<3)>>3];if((ga|0)>0){ha=V;ga=ga+-1|0}else{ja=V;break}}}else ja=0.0;ga=(da|0)==0;h[b>>3]=ga?ja:-ja;ha=+h[m>>3]-ja;if((ea|0)<1)ka=ha;else{V=ha;k=1;while(1){ha=V+ +h[m+(k<<3)>>3];if((k|0)==(ea|0)){ka=ha;break}else{V=ha;k=k+1|0}}}h[b+8>>3]=ga?ka:-ka;break}case 3:{if((ea|0)>0){V=+h[m+(ea<<3)>>3];k=ea;do{o=k;k=k+-1|0;n=m+(k<<3)|0;ha=+h[n>>3];ba=V;V=ha+V;h[m+(o<<3)>>3]=ba+(ha-V);h[n>>3]=V}while((o|0)>1);k=(ea|0)>1;if(k){V=+h[m+(ea<<3)>>3];ga=ea;do{o=ga;ga=ga+-1|0;n=m+(ga<<3)|0;ha=+h[n>>3];ba=V;V=ha+V;h[m+(o<<3)>>3]=ba+(ha-V);h[n>>3]=V}while((ga|0)>1);if(k){V=0.0;ga=ea;while(1){ha=V+ +h[m+(ga<<3)>>3];ga=ga+-1|0;if((ga|0)<=1){la=ha;break}else V=ha}}else la=0.0}else la=0.0}else la=0.0;V=+h[m>>3];ha=+h[m+8>>3];if(!da){h[b>>3]=V;h[b+8>>3]=ha;h[b+16>>3]=la;break c}else{h[b>>3]=-V;h[b+8>>3]=-ha;h[b+16>>3]=-la;break c}break}default:{}}while(0);i=g;return fa&7|0}function ie(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;k=i;i=i+864|0;if((i|0)>=(j|0))ca();l=k+144|0;m=k+600|0;n=k+536|0;o=k+116|0;p=k+32|0;q=k+256|0;r=k+24|0;s=k+16|0;t=k+8|0;u=k+4|0;v=k;w=ac(0)|0;c[o>>2]=c[41532];c[o+4>>2]=c[41533];c[o+8>>2]=c[41534];c[o+12>>2]=c[41535];c[o+16>>2]=c[41536];c[o+20>>2]=c[41537];c[o+24>>2]=c[41538];x=p;y=x+84|0;do{c[x>>2]=0;x=x+4|0}while((x|0)<(y|0));Gl(q|0,0,280)|0;Ta(1,t|0)|0;a:do if(((zi(f)|0)+-1|0)>>>0>253)z=-2;else{a[q+5>>0]=1;a[q+2>>0]=1;A=q+13|0;Wu(A,f)|0;if(!(a[A>>0]|0))B=13;else{A=13;while(1){C=A;b:while(1){switch(a[q+C>>0]|0){case 46:case 0:{D=C;break b;break}default:{}}C=C+1|0}C=D-A|0;if((C+-1|0)>>>0>62){z=-2;break a}a[q+(A+-1)>>0]=C;C=D+1|0;if(!(a[q+C>>0]|0)){B=C;break}else A=C}}a[q+(B+3)>>0]=1;A=B+4|0;Ic(0,r|0)|0;C=c[r+4>>2]|0;E=(C>>>16)+C|0;C=E&65535;F=fj(151993,l,m,256)|0;do if(F){G=n+10|0;H=n+11|0;I=2;J=0;K=16;c:while(1){L=p+(J*28|0)|0;if(!(Qf(n,64,F)|0)){M=I;N=J;O=K;P=21;break}while(1){if((Vi(n,152010,10)|0)==0?Ou(a[G>>0]|0)|0:0){Q=H;while(1)if(!(Ou(a[Q>>0]|0)|0)){R=Q;break}else Q=Q+1|0;Q=a[R>>0]|0;d:do if(!(Q<<24>>24))S=R;else{T=Q;U=R;while(1){if(Ou(T<<24>>24)|0){S=U;break d}V=U+1|0;T=a[V>>0]|0;if(!(T<<24>>24)){S=V;break}else U=V}}while(0);a[S>>0]=0;if((sf(L,0,R)|0)>=0)break}if(!(Qf(n,64,F)|0)){M=I;N=J;O=K;P=21;break c}}b[p+(J*28|0)+2>>1]=Wt(53)|0;L=J+1|0;Q=(b[p+(J*28|0)>>1]|0)==10;U=Q?28:K;T=Q?10:I;if((L|0)<3){I=T;J=L;K=U}else{W=T;X=L;Y=U;P=20;break}}if((P|0)==20){ru(F)|0;Z=W;_=X;$=Y;break}else if((P|0)==21){ru(F)|0;if(!N){P=22;break}else{Z=M;_=N;$=O;break}}}else P=22;while(0);if((P|0)==22){b[p>>1]=2;b[p+2>>1]=Wt(53)|0;c[p+4>>2]=hx(2130706433)|0;Z=2;_=1;$=16}b[o>>1]=Z;F=Cg(Z,526338,0)|0;if((F|0)<0){if(!((Z|0)==10&(c[($r()|0)>>2]|0)==97)){z=-11;break}K=Cg(2,526338,0)|0;if((K|0)<0){z=-11;break}else aa=K}else if((Z|0)==10?(c[u>>2]=0,tl(F,41,26,u,4)|0,(_|0)>0):0){K=0;do{J=p+(K*28|0)|0;if((b[J>>1]|0)==2){I=p+(K*28|0)+4|0;c[p+(K*28|0)+20>>2]=c[I>>2];x=p+(K*28|0)+8|0;H=152925;y=x+12|0;do{a[x>>0]=a[H>>0]|0;x=x+1|0;H=H+1|0}while((x|0)<(y|0));b[J>>1]=10;c[I>>2]=0;c[p+(K*28|0)+24>>2]=0}K=K+1|0}while((K|0)!=(_|0));aa=F}else aa=F;_a(5,aa|0);Ta(c[t>>2]|0,0)|0;e:do if((Xl(aa,o,$)|0)<0){ba=-11;da=0}else{c[s>>2]=aa;b[s+4>>1]=1;K=(h|0)>0;H=q+1|0;G=q+(B+1)|0;U=(_|0)>0;L=(_|0)<1;T=(_|0)==1;Q=-3;V=0;ea=0;fa=e;while(1){do{if(((ac(0)|0)-w|0)>=5){ba=Q;da=ea;break e}if(K){ga=0;do{ha=g+(ga<<2)|0;ia=c[ha>>2]|0;if(!((ia|0)==0|L)?(ja=ga+C|0,ka=ja>>>8&255,la=ja&255,a[q>>0]=ka,a[H>>0]=la,a[G>>0]=ia,ml(aa,q,A,16384,p,$)|0,!T):0){ia=1;do{ja=c[ha>>2]|0;a[q>>0]=ka;a[H>>0]=la;a[G>>0]=ja;ml(aa,q,A,16384,p+(ia*28|0)|0,$)|0;ia=ia+1|0}while((ia|0)!=(_|0))}ga=ga+1|0}while((ga|0)!=(h|0))}}while((ho(s,1,1e3)|0)<1);ga=V+ea|0;f:do if((ga|0)<(h|0)){ia=ga;la=Q;ka=V;ha=ea;ja=fa;while(1){ma=ja+1|0;c[v>>2]=$;if((jl(aa,ja,512,0,o,v)|0)<=1){na=ia;oa=la;pa=ka;qa=ha;ra=ja;break f}while(1){g:do if(U){sa=0;while(1){if(!(Vk(p+(sa*28|0)|0,o,$)|0)){ta=sa;break g}ua=sa+1|0;if((ua|0)<(_|0))sa=ua;else{ta=ua;break}}}else ta=0;while(0);if(((ta|0)!=(_|0)?(sa=(d[ja>>0]<<8|d[ma>>0])-E&65535,sa>>>0<h>>>0):0)?(ua=g+(sa<<2)|0,c[ua>>2]|0):0){va=ua;break}c[v>>2]=$;if((jl(aa,ja,512,0,o,v)|0)<=1){na=ia;oa=la;pa=ka;qa=ha;ra=ja;break f}}switch(d[ja+3>>0]&15|0){case 0:{wa=la;xa=ka;ya=ha+1|0;break}case 3:{za=-2;P=53;break}default:{za=-4;P=53}}if((P|0)==53){P=0;wa=za;xa=ka+1|0;ya=ha}c[va>>2]=0;ma=ja+512|0;ua=xa+ya|0;if((ua|0)<(h|0)){ia=ua;la=wa;ka=xa;ha=ya;ja=ma}else{na=ua;oa=wa;pa=xa;qa=ya;ra=ma;break f}}}else{na=ga;oa=Q;pa=V;qa=ea;ra=fa}while(0);if((na|0)==(h|0)){ba=oa;da=qa;break}else{Q=oa;V=pa;ea=qa;fa=ra}}}while(0);kc(1);z=(da|0)==0?ba:da}while(0);i=k;return z|0}function je(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;h=i;i=i+1056|0;if((i|0)>=(j|0))ca();k=h+1024|0;l=h;a:do if(g)if(e>>>0>=g>>>0){m=a[f>>0]|0;n=m&255;o=If(b,n,e)|0;if((g|0)==1|(o|0)==0)p=o;else{q=b-o+e|0;switch(g|0){case 2:{r=d[f+1>>0]|n<<8;s=o+1|0;t=q+-1|0;if(!t){p=0;break a}u=s;v=t;t=d[o>>0]<<8|d[s>>0];while(1){s=t&65535;if((s|0)==(r|0)){w=u;break}x=u+1|0;v=v+-1|0;if(!v){p=0;break a}else{u=x;t=d[x>>0]|s<<8}}p=w+-1|0;break a;break}case 3:{t=d[f+1>>0]<<16|n<<24|d[f+2>>0]<<8;u=o+2|0;v=q+-2|0;if(!v){p=0;break a}r=u;s=v;v=d[o>>0]<<24|d[o+1>>0]<<16|d[u>>0]<<8;while(1){if((v|0)==(t|0)){y=r;break}s=s+-1|0;u=r+1|0;if(!s){p=0;break a}else{r=u;v=(d[u>>0]|v)<<8}}p=y+-2|0;break a;break}case 4:{v=d[f+1>>0]<<16|n<<24|d[f+2>>0]<<8|d[f+3>>0];r=o+3|0;s=q+-3|0;if(!s){p=0;break a}t=r;u=s;s=d[o>>0]<<24|d[o+1>>0]<<16|d[o+2>>0]<<8|d[r>>0];while(1){if((s|0)==(v|0)){z=t;break}u=u+-1|0;r=t+1|0;if(!u){p=0;break a}else{t=r;s=d[r>>0]|s<<8}}p=z+-3|0;break a;break}default:{c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[k+24>>2]=0;c[k+28>>2]=0;s=k+(((m&255)>>>5&255)<<2)|0;c[s>>2]=1<<(m&31)|c[s>>2];c[l+((m&255)<<2)>>2]=1;if((g|0)!=1){s=1;do{t=a[f+s>>0]|0;u=k+(((t&255)>>>5&255)<<2)|0;c[u>>2]=1<<(t&31)|c[u>>2];s=s+1|0;c[l+((t&255)<<2)>>2]=s}while((s|0)!=(g|0))}s=o+q|0;b:do if(g>>>0>1){m=1;t=-1;u=0;c:while(1){v=m;n=u;r=1;while(1){x=v;A=n;d:while(1){B=x;C=1;while(1){D=a[f+(C+t)>>0]|0;E=a[f+B>>0]|0;if(D<<24>>24!=E<<24>>24){F=B;G=D;H=E;I=A;break d}if((C|0)==(r|0))break;C=C+1|0;B=C+A|0;if(B>>>0>=g>>>0){J=t;K=r;break c}}A=A+r|0;x=A+1|0;if(x>>>0>=g>>>0){J=t;K=r;break c}}x=F-t|0;if((G&255)<=(H&255)){L=I;break}A=F+1|0;if(A>>>0<g>>>0){v=A;n=F;r=x}else{J=t;K=x;break c}}m=L+2|0;if(m>>>0>=g>>>0){J=L;K=1;break}else{t=L;u=L+1|0}}u=1;t=-1;m=0;while(1){r=u;n=m;v=1;while(1){x=r;A=n;e:while(1){B=x;C=1;while(1){E=a[f+(C+t)>>0]|0;D=a[f+B>>0]|0;if(E<<24>>24!=D<<24>>24){M=B;N=E;O=D;P=A;break e}if((C|0)==(v|0))break;C=C+1|0;B=C+A|0;if(B>>>0>=g>>>0){Q=J;R=t;S=K;T=v;break b}}A=A+v|0;x=A+1|0;if(x>>>0>=g>>>0){Q=J;R=t;S=K;T=v;break b}}x=M-t|0;if((N&255)>=(O&255)){U=P;break}A=M+1|0;if(A>>>0<g>>>0){r=A;n=M;v=x}else{Q=J;R=t;S=K;T=x;break b}}u=U+2|0;if(u>>>0>=g>>>0){Q=J;R=U;S=K;T=1;break}else{t=U;m=U+1|0}}}else{Q=-1;R=-1;S=1;T=1}while(0);m=(R+1|0)>>>0>(Q+1|0)>>>0;t=m?T:S;u=m?R:Q;m=u+1|0;if(!(Vk(f,f+t|0,m)|0)){V=g-t|0;W=t}else{t=g-u+-1|0;V=0;W=(u>>>0>t>>>0?u:t)+1|0}t=s;f:do if(q>>>0<g>>>0)X=0;else{v=g+-1|0;n=(V|0)!=0;r=g-W|0;x=o;A=0;while(1){B=a[x+v>>0]|0;g:do if(!(1<<(B&31)&c[k+(((B&255)>>>5&255)<<2)>>2])){Y=x+g|0;Z=0}else{C=c[l+((B&255)<<2)>>2]|0;D=g-C|0;if((C|0)!=(g|0)){Y=x+(n&(A|0)!=0&D>>>0<W>>>0?r:D)|0;Z=0;break}D=m>>>0>A>>>0?m:A;h:do if(D>>>0<g>>>0){C=D;while(1){if((a[f+C>>0]|0)!=(a[x+C>>0]|0)){_=C;break}C=C+1|0;if(C>>>0>=g>>>0){$=m;break h}}Y=x+(_-u)|0;Z=0;break g}else $=m;while(0);do{if($>>>0<=A>>>0){X=x;break f}$=$+-1|0}while((a[f+$>>0]|0)==(a[x+$>>0]|0));Y=x+W|0;Z=V}while(0);if((t-Y|0)>>>0<g>>>0){X=0;break}else{x=Y;A=Z}}}while(0);p=X;break a}}}}else p=0;else p=b;while(0);i=h;return p|0}function le(e){e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;f=i;i=i+1728|0;if((i|0)>=(j|0))ca();g=f+80|0;h=f+72|0;k=f+64|0;l=f+56|0;m=f+48|0;n=f+40|0;o=f;p=f+1208|0;q=f+1184|0;r=f+1180|0;s=f+1176|0;t=f+1172|0;u=f+1188|0;v=f+1144|0;w=f+1140|0;x=f+1136|0;y=f+112|0;z=f+104|0;c[w>>2]=0;c[x>>2]=0;A=_f()|0;if(!A)B=-1;else{C=0;while(1){D=c[A+(C<<3)+4>>2]|0;if((D|0)==0?(c[A+(C<<3)>>2]|0)==0:0){E=5;break}if(!(Dn(w,x,D)|0)){E=4;break}else C=C+1|0}a:do if((E|0)==4){yx(A);E=50}else if((E|0)==5){yx(A);C=Cg(2,524290,0)|0;if((C|0)==-1)E=50;else{c[z>>2]=1024;c[z+4>>2]=y;c[o>>2]=z;do if((Rl(C,35090,o)|0)!=-1){D=(c[z>>2]|0)>>>5;F=c[w>>2]|0;c[x>>2]=F;if(F){G=(D|0)==0;H=o+16|0;I=F;do{F=I;J=I;b:do if(G){K=J;L=F}else{M=F+112|0;N=0;while(1){if(!(Ol(y+(N<<5)|0,M)|0)){O=N;break}N=N+1|0;if(N>>>0>=D>>>0){K=J;L=F;break b}}N=F+28|0;M=y+(O<<5)+16|0;c[N>>2]=c[M>>2];c[N+4>>2]=c[M+4>>2];c[N+8>>2]=c[M+8>>2];c[N+12>>2]=c[M+12>>2];c[F+12>>2]=N;N=c[x>>2]|0;K=N;L=N}while(0);c[n>>2]=L+112;rp(o,16,159547,n)|0;c[m>>2]=o;if((Rl(C,35091,m)|0)==-1){E=24;break}F=b[H>>1]|0;J=L+8|0;c[J>>2]=F;if(!(c[L+12>>2]|0))P=K;else{c[J>>2]=F|65536;c[l>>2]=o;if((Rl(C,35099,l)|0)==-1){E=24;break}F=L+56|0;c[F>>2]=c[H>>2];c[F+4>>2]=c[H+4>>2];c[F+8>>2]=c[H+8>>2];c[F+12>>2]=c[H+12>>2];c[L+16>>2]=F;F=c[x>>2]|0;if(!(c[F+8>>2]&16)){c[h>>2]=o;if((Rl(C,35097,h)|0)==-1){E=24;break}J=F+84|0;c[J>>2]=c[H>>2];c[J+4>>2]=c[H+4>>2];c[J+8>>2]=c[H+8>>2];c[J+12>>2]=c[H+12>>2];Q=J}else{c[k>>2]=o;if((Rl(C,35095,k)|0)==-1){E=24;break}J=F+84|0;c[J>>2]=c[H>>2];c[J+4>>2]=c[H+4>>2];c[J+8>>2]=c[H+8>>2];c[J+12>>2]=c[H+12>>2];Q=J}c[F+20>>2]=Q;P=F}I=c[P>>2]|0;c[x>>2]=I}while((I|0)!=0);if((E|0)==24)break;I=c[w>>2]|0;wp(C)|0;c[x>>2]=I;if(!I){R=0;S=0}else{H=I;while(1){D=c[H>>2]|0;c[x>>2]=D;if(!D){T=H;break}else H=D}R=I;S=T}}else{wp(C)|0;c[x>>2]=0;R=0;S=0}c[x>>2]=S;H=sj(152874,152893)|0;if(!H)U=R;else{D=Qf(p,512,H)|0;c:do if(D|0){G=v+8|0;F=v+8|0;J=0;N=D;M=o;d:while(1){V=d[N>>0]|d[N+1>>0]<<8|d[N+2>>0]<<16|d[N+3>>0]<<24;a[M>>0]=V;a[M+1>>0]=V>>8;a[M+2>>0]=V>>16;a[M+3>>0]=V>>24;V=M+4|0;a[V>>0]=58;W=J+1|0;if(W>>>0<8){J=W;N=N+4|0;M=M+5|0;continue}a[V>>0]=0;c[g>>2]=q;c[g+4>>2]=r;c[g+8>>2]=s;c[g+12>>2]=t;c[g+16>>2]=u;if((Tp(N+5|0,152897,g)|0)==5){c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[v+12>>2]=0;c[v+16>>2]=0;c[v+20>>2]=0;c[v+24>>2]=0;e:do if((Fe(10,o,G)|0)==1){b[v>>1]=10;V=Dn(w,x,u)|0;if(!V)break d;W=V+28|0;c[W>>2]=c[v>>2];c[W+4>>2]=c[v+4>>2];c[W+8>>2]=c[v+8>>2];c[W+12>>2]=c[v+12>>2];c[W+16>>2]=c[v+16>>2];c[W+20>>2]=c[v+20>>2];c[W+24>>2]=c[v+24>>2];c[V+12>>2]=W;W=c[r>>2]|0;X=W>>>3;Y=W&7;Gl(F|0,-1,X|0)|0;W=F+X|0;Gl(W|0,0,16-X|0)|0;if(Y|0)a[W>>0]=255<<8-Y;Y=V+56|0;c[Y>>2]=c[v>>2];c[Y+4>>2]=c[v+4>>2];c[Y+8>>2]=c[v+8>>2];c[Y+12>>2]=c[v+12>>2];c[Y+16>>2]=c[v+16>>2];c[Y+20>>2]=c[v+20>>2];c[Y+24>>2]=c[v+24>>2];c[V+16>>2]=Y;Y=c[w>>2]|0;f:do if(Y|0){W=Y;while(1){if(!(Ol(u,W+112|0)|0)){Z=W;break}W=c[W>>2]|0;if(!W)break f}c[V+8>>2]=c[Z+8>>2];break e}while(0);c[V+8>>2]=0}else c[($r()|0)>>2]=0;while(0)}Y=Qf(p,512,H)|0;if(!Y)break c;else{J=0;N=Y;M=o}}}while(0);Uj(H)|0;U=c[w>>2]|0}c[e>>2]=U;_=0;break a}while(0);wp(C)|0;E=50}}while(0);if((E|0)==50){E=c[w>>2]|0;if(!E)_=-1;else{w=E;do{E=w;w=c[w>>2]|0;de(E)}while((w|0)!=0);_=-1}}B=_}i=f;return B|0}function me(b,d,e,f,g,h,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0;m=i;i=i+16|0;if((i|0)>=(j|0))ca();n=m+4|0;o=m;p=d+12|0;q=c[p>>2]|0;c[o>>2]=e;c[n>>2]=c[o>>2];Ii(d,n)|0;c[o>>2]=0;c[n>>2]=c[o>>2];e=Ii(d,n)|0;a:do if(!e){r=d+16|0;s=(f&1|0)==0;t=(f&2|0)!=0;u=1;v=0;w=k;while(1){x=c[p>>2]|0;if((x|0)>(q|0)){y=x;z=w}else{A=v;B=0;break a}b:while(1){x=c[r>>2]|0;C=y;c:while(1){D=C+-1|0;c[p>>2]=D;switch(c[x+(D<<2)>>2]|0){case 1:{E=C;F=x;G=7;break c;break}case 0:{D=C+-2|0;c[p>>2]=D;H=c[x+(D<<2)>>2]|0;switch(c[H>>2]|0){case 0:{I=H;J=z;G=9;break b;break}case 3:{K=H;L=z;G=20;break b;break}case 1:{M=H;N=z;G=28;break b;break}case 2:{O=H;G=36;break c;break}default:{}}break}default:{}}C=c[p>>2]|0;if((C|0)<=(q|0)){A=v;B=0;break a}}if((G|0)==7){G=0;C=E+-2|0;c[p>>2]=C;P=c[F+(C<<2)>>2]|0}else if((G|0)==36){G=0;C=c[O+4>>2]|0;c[o>>2]=c[C>>2];c[n>>2]=c[o>>2];x=Ii(d,n)|0;if(x|0){A=v;B=x;break a}c[o>>2]=0;c[n>>2]=c[o>>2];x=Ii(d,n)|0;if(x|0){A=v;B=x;break a}x=um(b,c[C>>2]|0,c[C+4>>2]|0,c[C+8>>2]|0,a[C+12>>0]&1)|0;c[z>>2]=x;if(!x){A=v;B=12;break a}P=c[x+4>>2]|0}y=c[p>>2]|0;if((y|0)<=(q|0)){A=v;B=0;break a}else z=P}if((G|0)==9){G=0;x=c[I+4>>2]|0;C=c[x+8>>2]|0;H=c[x>>2]|0;D=c[x+4>>2]|0;if(!((H|0)>-1|(H|0)==-4))if(s|(H|0)!=-3)if((H|0)==-3)if(t&(u|0)!=0){c[h+(D<<2)>>2]=1;Q=0;R=D;S=-3;T=v;U=C}else{Q=u;R=D;S=-3;T=v;U=C}else{Q=u;R=D;S=H;T=v;U=C}else{Q=u;R=-1;S=-1;T=v;U=-1}else{Q=u;R=D;S=H;T=v+1|0;U=(c[g>>2]|0)+C|0}C=qn(b,0,20)|0;if(!C){c[J>>2]=0;V=12}else{H=C+4|0;D=c[H>>2]|0;c[D>>2]=S;c[D+4>>2]=R;c[D+8>>2]=U;c[J>>2]=C;C=c[H>>2]|0;c[C+12>>2]=c[x+12>>2];c[C+16>>2]=c[x+16>>2];V=0}if((U|0)>(c[l>>2]|0)){c[l>>2]=U;W=Q;X=T;Y=J;Z=V}else{W=Q;X=T;Y=J;Z=V}}else if((G|0)==20){G=0;x=c[K+4>>2]|0;C=c[x>>2]|0;H=x+4|0;D=c[H>>2]|0;_=qn(b,3,8)|0;if(!_){$=v;aa=L;G=21;break}ba=_+4|0;da=c[ba>>2]|0;c[da>>2]=C;c[da+4>>2]=D;c[_+16>>2]=(c[D+16>>2]|0)+(c[C+16>>2]|0);c[L>>2]=_;_=c[ba>>2]|0;c[o>>2]=c[H>>2];c[n>>2]=c[o>>2];H=Ii(d,n)|0;if(H|0){A=v;B=H;break a}c[o>>2]=0;c[n>>2]=c[o>>2];H=Ii(d,n)|0;if(H|0){A=v;B=H;break a}c[o>>2]=_+4;c[n>>2]=c[o>>2];H=Ii(d,n)|0;if(H|0){A=v;B=H;break a}c[o>>2]=1;c[n>>2]=c[o>>2];H=Ii(d,n)|0;if(H|0){A=v;B=H;break a}c[o>>2]=c[x>>2];c[n>>2]=c[o>>2];x=Ii(d,n)|0;if(x|0){A=v;B=x;break a}c[o>>2]=0;c[n>>2]=c[o>>2];W=u;X=v;Y=_;Z=Ii(d,n)|0}else if((G|0)==28){G=0;_=c[M+4>>2]|0;x=c[_>>2]|0;H=_+4|0;ba=c[H>>2]|0;C=qn(b,1,8)|0;if(!C){ea=v;fa=N;G=29;break}D=C+4|0;da=c[D>>2]|0;c[da>>2]=x;c[da+4>>2]=ba;c[C+16>>2]=(c[ba+16>>2]|0)+(c[x+16>>2]|0);c[N>>2]=C;C=c[D>>2]|0;c[C>>2]=0;D=C+4|0;c[D>>2]=0;c[o>>2]=c[H>>2];c[n>>2]=c[o>>2];H=Ii(d,n)|0;if(H|0){A=v;B=H;break a}c[o>>2]=0;c[n>>2]=c[o>>2];H=Ii(d,n)|0;if(H|0){A=v;B=H;break a}c[o>>2]=D;c[n>>2]=c[o>>2];D=Ii(d,n)|0;if(D|0){A=v;B=D;break a}c[o>>2]=1;c[n>>2]=c[o>>2];D=Ii(d,n)|0;if(D|0){A=v;B=D;break a}c[o>>2]=c[_>>2];c[n>>2]=c[o>>2];_=Ii(d,n)|0;if(_|0){A=v;B=_;break a}c[o>>2]=0;c[n>>2]=c[o>>2];W=u;X=v;Y=C;Z=Ii(d,n)|0}if(!Z){u=W;v=X;w=Y}else{A=X;B=Z;break a}}if((G|0)==21){c[aa>>2]=0;A=$;B=12;break}else if((G|0)==29){c[fa>>2]=0;A=ea;B=12;break}}else{A=0;B=e}while(0);c[g>>2]=(c[g>>2]|0)+A;i=m;return B|0}function ne(b,d,e,f,g,h,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;m=i;i=i+528|0;if((i|0)>=(j|0))ca();n=m+488|0;o=m+208|0;p=m;q=m+416|0;r=m+456|0;s=m+424|0;if(l>>>0>=4294967265)Ga(146234,146269,403,146307);Pe(o,b,d);do if(f|0){t=o+32|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=kr(v|0,w|0,3)|0;x=u&63;u=fr(f|0,0,3)|0;y=Gr(v|0,w|0,u|0,D|0)|0;u=t;c[u>>2]=y;c[u+4>>2]=D;u=64-x|0;y=o+40+x|0;if(u>>>0>f>>>0){$j(y|0,e|0,f|0)|0;break}$j(y|0,e|0,u|0)|0;y=o+40|0;Zd(o,y);x=e+u|0;t=f-u|0;if(t>>>0>63){u=t;w=x;while(1){Zd(o,w);v=w+64|0;z=u+-64|0;if(z>>>0>63){u=z;w=v}else{A=z;B=v;break}}}else{A=t;B=x}$j(y|0,B|0,A|0)|0}while(0);if(!l){C=c[1788]|0;Ld[C&1](o,208);i=m;return}A=q+3|0;B=q+2|0;f=q+1|0;e=p+32|0;w=p+104|0;u=p+136|0;v=h>>>0<0|(h|0)==0&g>>>0<2;z=p+144|0;E=p+40|0;F=0;G=0;do{G=G+1|0;a[A>>0]=G;a[B>>0]=G>>>8;a[f>>0]=G>>>16;a[q>>0]=G>>>24;$j(p|0,o|0,208)|0;H=e;I=c[H>>2]|0;J=c[H+4>>2]|0;H=kr(I|0,J|0,3)|0;K=H&63;H=Gr(I|0,J|0,32,0)|0;J=e;c[J>>2]=H;c[J+4>>2]=D;J=64-K|0;H=p+40+K|0;if(J>>>0>4){K=c[q>>2]|0;a[H>>0]=K;a[H+1>>0]=K>>8;a[H+2>>0]=K>>16;a[H+3>>0]=K>>24}else{$j(H|0,q|0,J|0)|0;Zd(p,E);H=q+J|0;K=4-J|0;if(K>>>0>63){J=K;I=H;while(1){Zd(p,I);L=I+64|0;M=J+-64|0;if(M>>>0>63){J=M;I=L}else{N=M;O=L;break}}}else{N=K;O=H}$j(E|0,O|0,N|0)|0}Qe(n,p);I=u;J=c[I>>2]|0;y=c[I+4>>2]|0;I=kr(J|0,y|0,3)|0;x=I&63;I=Gr(J|0,y|0,256,0)|0;y=u;c[y>>2]=I;c[y+4>>2]=D;y=64-x|0;I=p+144+x|0;if(y>>>0>32){P=I;Q=n;R=P+32|0;do{a[P>>0]=a[Q>>0]|0;P=P+1|0;Q=Q+1|0}while((P|0)<(R|0))}else{$j(I|0,n|0,y|0)|0;Zd(w,z);H=n+y|0;K=32-y|0;if(K>>>0>63){x=K;J=H;while(1){Zd(w,J);t=J+64|0;L=x+-64|0;if(L>>>0>63){x=L;J=t}else{S=L;T=t;break}}}else{S=K;T=H}$j(z|0,T|0,S|0)|0}Qe(r,w);Ld[c[1788]&1](n,32);P=s;Q=r;R=P+32|0;do{a[P>>0]=a[Q>>0]|0;P=P+1|0;Q=Q+1|0}while((P|0)<(R|0));if(!v){H=2;K=0;do{Pe(p,b,d);J=e;x=c[J>>2]|0;y=c[J+4>>2]|0;J=kr(x|0,y|0,3)|0;I=J&63;J=Gr(x|0,y|0,256,0)|0;y=e;c[y>>2]=J;c[y+4>>2]=D;y=64-I|0;J=p+40+I|0;if(y>>>0>32){P=J;Q=r;R=P+32|0;do{a[P>>0]=a[Q>>0]|0;P=P+1|0;Q=Q+1|0}while((P|0)<(R|0))}else{$j(J|0,r|0,y|0)|0;Zd(p,E);I=r+y|0;x=32-y|0;if(x>>>0>63){t=x;L=I;while(1){Zd(p,L);M=L+64|0;U=t+-64|0;if(U>>>0>63){t=U;L=M}else{V=U;W=M;break}}}else{V=x;W=I}$j(E|0,W|0,V|0)|0}Qe(n,p);L=u;t=c[L>>2]|0;y=c[L+4>>2]|0;L=kr(t|0,y|0,3)|0;J=L&63;L=Gr(t|0,y|0,256,0)|0;y=u;c[y>>2]=L;c[y+4>>2]=D;y=64-J|0;L=p+144+J|0;if(y>>>0>32){P=L;Q=n;R=P+32|0;do{a[P>>0]=a[Q>>0]|0;P=P+1|0;Q=Q+1|0}while((P|0)<(R|0))}else{$j(L|0,n|0,y|0)|0;Zd(w,z);I=n+y|0;x=32-y|0;if(x>>>0>63){J=x;t=I;while(1){Zd(w,t);M=t+64|0;U=J+-64|0;if(U>>>0>63){J=U;t=M}else{X=U;Y=M;break}}}else{X=x;Y=I}$j(z|0,Y|0,X|0)|0}Qe(r,w);Ld[c[1788]&1](n,32);t=0;do{J=s+t|0;a[J>>0]=a[J>>0]^a[r+t>>0];t=t+1|0}while((t|0)!=32);H=Gr(H|0,K|0,1,0)|0;K=D}while(!(K>>>0>h>>>0|(K|0)==(h|0)&H>>>0>g>>>0))}H=l-F|0;$j(k+F|0,s|0,(H>>>0>32?32:H)|0)|0;F=G<<5}while(F>>>0<l>>>0);C=c[1788]|0;Ld[C&1](o,208);i=m;return}function pe(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;h=i;i=i+16|0;if((i|0)>=(j|0))ca();k=h+4|0;l=h;if(((g&4|0)!=0?(a[e>>0]|0)==46:0)?(a[b>>0]|0)!=46:0)m=1;else{n=b;o=f;p=e;q=d;r=4}a:do if((r|0)==4){b:while(1){r=0;d=Se(n,q,k,g)|0;switch(d|0){case -2:{m=1;break a;break}case -5:{s=n;t=o;u=p;v=q;break b;break}default:{}}e=Lk(p,o,l)|0;if((e|0)<1){w=d;r=8;break}f=c[l>>2]|0;b=p+f|0;x=o-f|0;switch(d|0){case -3:{if(!(_e(n,e)|0)){m=1;break a}break}case -4:break;default:if((e|0)!=(d|0)){m=1;break a}}d=c[k>>2]|0;n=n+d|0;o=x;p=b;q=q-d|0;r=4}if((r|0)==8){m=(w|0)!=0&1;break}d=s+1|0;b=Ns(d,v+-1|0)|0;x=d+b|0;c:do if((b|0)>0){e=x;f=d;y=d;z=0;while(1){switch(Se(f,e-f|0,k,g)|0){case -2:{m=1;break a;break}case -5:{A=f+1|0;B=0;break}default:{A=y;B=z+1|0}}f=f+(c[k>>2]|0)|0;if(f>>>0>=x>>>0){C=A;D=B;break c}else{y=A;z=B}}}else{C=d;D=0}while(0);b=Ns(u,t)|0;z=u+b|0;if(b>>>0>=D>>>0){y=(D|0)!=0;if((b|0)>0&y){b=z;f=D;while(1){e=b+-1|0;E=a[e>>0]|0;if(E<<24>>24<=-1){F=b+-1|0;if(F>>>0>u>>>0&(E&-64)<<24>>24==-128){E=F;G=b;while(1){H=E+-1|0;if(H>>>0>u>>>0?(a[G+-2>>0]&-64)<<24>>24==-128:0){I=E;E=H;G=I}else{J=H;break}}}else J=F}else J=e;f=f+-1|0;G=(f|0)!=0;if(!(J>>>0>u>>>0&G)){K=G;L=J;break}else b=J}}else{K=y;L=z}if(!K){b=x;f=C;G=Se(C,b-f|0,k,g)|0;E=c[k>>2]|0;H=z;I=L;M=Lk(L,H-I|0,l)|0;d:do if((M|0)<1)N=G;else{O=G;P=E;Q=C+E|0;R=M;S=L;while(1){S=S+(c[l>>2]|0)|0;switch(O|0){case -3:{if(!(_e(Q+(0-P)|0,R)|0)){m=1;break a}break}case -4:break;default:if((R|0)!=(O|0)){m=1;break a}}T=Se(Q,b-Q|0,k,g)|0;U=c[k>>2]|0;R=Lk(S,H-S|0,l)|0;if((R|0)<1){N=T;break d}else{O=T;P=U;Q=Q+U|0}}}while(0);if(!N)if(d>>>0<C>>>0){H=d;b=u;while(1){M=f-H|0;E=Se(H,M,k,g)|0;G=c[k>>2]|0;z=H+G|0;e:do if((E|0)==-5){V=z;W=b}else{x=b;y=z;Q=G;P=E;while(1){O=Q;R=y;S=P;e=x;f:while(1){F=Lk(e,I-e|0,l)|0;if(!F){m=1;break a}switch(S|0){case -3:{if(!(_e(R+(0-O)|0,F)|0))break f;break}case -4:break;default:if((F|0)!=(S|0))break f}F=e+(c[l>>2]|0)|0;S=Se(R,f-R|0,k,g)|0;O=c[k>>2]|0;U=R+O|0;if((S|0)==-5){V=U;W=F;break e}else{R=U;e=F}}if((Lk(x,I-x|0,l)|0)>0)X=x+(c[l>>2]|0)|0;else{e=x;while(1){R=e+1|0;if((Lk(R,I-R|0,l)|0)<0)e=R;else{X=R;break}}}P=Se(H,M,k,g)|0;Q=c[k>>2]|0;e=H+Q|0;if((P|0)==-5){V=e;W=X;break}else{x=X;y=e}}}while(0);if(V>>>0<C>>>0){H=V;b=W}else{m=0;break}}}else m=0;else m=1}else m=1}else m=1}while(0);i=h;return m|0}function ue(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;h=c[e>>2]|0;if((g|0)!=0?(i=c[g>>2]|0,(i|0)!=0):0)if(!b){j=f;k=i;l=h;m=16}else{c[g>>2]=0;n=b;o=f;p=i;q=h;m=37}else if(!b){r=f;s=h;m=7}else{t=b;u=f;v=h;m=6}a:while(1)if((m|0)==6){m=0;if(!u){w=v;m=26;break}else{x=t;y=u;z=v}while(1){h=a[z>>0]|0;do if(((h&255)+-1|0)>>>0<127?y>>>0>4&(z&3|0)==0:0){i=x;g=y;A=z;while(1){B=c[A>>2]|0;if((B+-16843009|B)&-2139062144|0){C=i;D=g;E=B;F=A;m=32;break}c[i>>2]=B&255;c[i+4>>2]=d[A+1>>0];c[i+8>>2]=d[A+2>>0];B=A+4|0;G=i+16|0;c[i+12>>2]=d[A+3>>0];H=g+-4|0;if(H>>>0>4){i=G;g=H;A=B}else{I=B;J=G;K=H;m=31;break}}if((m|0)==31){m=0;L=J;M=K;N=a[I>>0]|0;O=I;break}else if((m|0)==32){m=0;L=C;M=D;N=E&255;O=F;break}}else{L=x;M=y;N=h;O=z}while(0);h=N&255;if((h+-1|0)>>>0>=127){P=L;Q=M;R=h;S=O;break}A=O+1|0;c[L>>2]=h;y=M+-1|0;if(!y){w=A;m=26;break a}else{x=L+4|0;z=A}}A=R+-194|0;if(A>>>0>50){T=P;U=Q;V=S;m=48;break}n=P;o=Q;p=c[7572+(A<<2)>>2]|0;q=S+1|0;m=37;continue}else if((m|0)==7){m=0;A=a[s>>0]|0;if(((A&255)+-1|0)>>>0<127?(s&3|0)==0:0){h=c[s>>2]|0;g=h&255;if(!((h+-16843009|h)&-2139062144)){h=r;i=s;while(1){H=i+4|0;G=h+-4|0;B=c[H>>2]|0;if(!((B+-16843009|B)&-2139062144)){h=G;i=H}else{W=H;X=G;Y=B;break}}Z=X;_=Y&255;$=W}else{Z=r;_=g;$=s}}else{Z=r;_=A;$=s}i=_&255;if((i+-1|0)>>>0<127){r=Z+-1|0;s=$+1|0;m=7;continue}else{aa=Z;ba=i;ca=$}i=ba+-194|0;if(i>>>0>50){T=b;U=aa;V=ca;m=48;break}j=aa;k=c[7572+(i<<2)>>2]|0;l=ca+1|0;m=16;continue}else if((m|0)==16){m=0;i=(d[l>>0]|0)>>>3;if((i+-16|i+(k>>26))>>>0>7){m=17;break}i=l+1|0;if(k&33554432){if((a[i>>0]&-64)<<24>>24!=-128){m=20;break}h=l+2|0;if(!(k&524288))da=h;else{if((a[h>>0]&-64)<<24>>24!=-128){m=23;break}da=l+3|0}}else da=i;r=j+-1|0;s=da;m=7;continue}else if((m|0)==37){m=0;i=d[q>>0]|0;h=i>>>3;if((h+-16|h+(p>>26))>>>0>7){m=38;break}h=q+1|0;B=i+-128|p<<6;if((B|0)<0){i=d[h>>0]|0;if((i&192|0)!=128){m=41;break}G=q+2|0;H=i+-128|B<<6;if((H|0)<0){i=d[G>>0]|0;if((i&192|0)!=128){m=44;break}ea=i+-128|H<<6;fa=q+3|0}else{ea=H;fa=G}}else{ea=B;fa=h}c[n>>2]=ea;t=n+4|0;u=o+-1|0;v=fa;m=6;continue}if((m|0)==17){ga=b;ha=j;ia=k;ja=l+-1|0;m=47}else if((m|0)==20){ga=b;ha=j;ia=k;ja=l+-1|0;m=47}else if((m|0)==23){ga=b;ha=j;ia=k;ja=l+-1|0;m=47}else if((m|0)==26){c[e>>2]=w;ka=f}else if((m|0)==38){ga=n;ha=o;ia=p;ja=q+-1|0;m=47}else if((m|0)==41){la=n;ma=q+-1|0;m=52}else if((m|0)==44){la=n;ma=q+-1|0;m=52}if((m|0)==47)if(!ia){T=ga;U=ha;V=ja;m=48}else{la=ga;ma=ja;m=52}if((m|0)==48)if(!(a[V>>0]|0)){if(T|0){c[T>>2]=0;c[e>>2]=0}ka=f-U|0}else{la=T;ma=V;m=52}if((m|0)==52){c[($r()|0)>>2]=84;if(!la)ka=-1;else{c[e>>2]=ma;ka=-1}}return ka|0}function te(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0.0,i=0,j=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;c[b>>2]=1;f=e&2147483647;do if(f>>>0>2146435071)g=a*a;else{i=(e|0)<0;if(f>>>0<999292928){if(i){c[b>>2]=-1;j=-a}else j=a;g=-+Z(+j);break}if(i){l=-a;m=a*-.5;n=(m-+N(+m))*2.0;o=(~~(n*4.0)+1|0)/2|0;m=(n-+(o|0)*.5)*3.141592653589793;switch(o|0){case 3:{p=-+Bn(m,0.0);break}case 1:{p=+Bn(m,0.0);break}case 2:{p=+vm(-m,0.0,0);break}default:p=+vm(m,0.0,0)}if(p==0.0){g=1.0/(a-a);break}if(p>0.0){c[b>>2]=-1;q=p}else q=-p;r=l;s=+Z(+(3.141592653589793/(q*l)))}else{r=a;s=0.0}a:do if((e|0)<1072693248)if((e|0)<-1073741824)switch(e|0){case -1074790400:{t=20;break a;break}default:{t=21;break a}}else switch(e|0){case -1073741824:{t=20;break a;break}default:{t=21;break a}}else if((e|0)<1073741824)switch(e|0){case 1072693248:{t=20;break a;break}default:{t=21;break a}}else switch(e|0){case 1073741824:{t=20;break a;break}default:{t=21;break a}}while(0);if((t|0)==20)if(!d)u=0.0;else t=21;b:do if((t|0)==21)if(f>>>0<1073741824){do if(f>>>0<1072483533){l=-+Z(+r);if(f>>>0<=1072130371)if(f>>>0>1070442080){v=l;w=r+-.46163214496836225;t=30}else{x=l;y=r;t=31}else{z=1.0;A=l;t=29}}else if(f>>>0<=1073460418)if(f>>>0>1072936131){v=0.0;w=r+-1.4616321449683622;t=30;break}else{x=0.0;y=r+-1.0;t=31;break}else{z=2.0;A=0.0;t=29}while(0);if((t|0)==29){l=z-r;m=l*l;u=A+(l*(m*(m*(m*(m*(m*2.5214456545125733e-05+2.2086279071390839e-04)+1.1927076318336207e-03)+.007385550860814029)+.06735230105312927)+.07721566490153287)+m*(m*(m*(m*(m*(m*4.4864094961891516e-05+1.0801156724758394e-04)+5.100697921535113e-04)+2.8905138367341563e-03)+.020580808432516733)+.3224670334241136)-l*.5);break}else if((t|0)==30){l=w*w;m=w*l;u=v+(l*(m*(m*(m*(m*3.1563207090362595e-04+-1.4034646998923284e-03)+.006100538702462913)+-.032788541075985965)+.48383612272381005)-(-3.638676997039505e-18-m*(m*(m*(m*(.000881081882437654-m*3.1275416837512086e-04)+-3.6845201678113826e-03)+.01797067508118204)+-.1475877229945939+w*(m*(m*(m*(m*3.355291926355191e-04+-5.385953053567405e-04)+2.2596478090061247e-03)+-.010314224129834144)+.06462494023913339)))+-.12148629053584961);break}else if((t|0)==31){u=x+(y*(y*(y*(y*(y*(y*.013381091853678766+.22896372806469245)+.9777175279633727)+1.4549225013723477)+.6328270640250934)+-.07721566490153287)/(y*(y*(y*(y*(y*.003217092422824239+.10422264559336913)+.7692851504566728)+2.128489763798934)+2.4559779371304113)+1.0)-y*.5);break}}else{if(f>>>0>=1075838976){m=+Z(+r);if(f>>>0<1133510656){l=1.0/r;n=l*l;u=l*(n*(n*(n*(n*(8.363399189962821e-04-n*1.6309293409657527e-03)+-.00059518755745034)+7.936505586430196e-04)+-2.7777777772877554e-03)+.08333333333333297)+.4189385332046727+(r+-.5)*(m+-1.0);break}else{u=r*(m+-1.0);break}}o=~~r;m=r-+(o|0);n=m*.5+m*(m*(m*(m*(m*(m*(m*3.194753265841009e-05+1.8402845140733772e-03)+.02664227030336386)+.14635047265246445)+.325778796408931)+.21498241596060885)+-.07721566490153287)/(m*(m*(m*(m*(m*(m*7.326684307446256e-06+7.779424963818936e-04)+.01864591917156529)+.17193386563280308)+.7219355475671381)+1.3920053346762105)+1.0);switch(o|0){case 7:{B=m+6.0;t=35;break}case 6:{B=1.0;t=35;break}case 5:{C=1.0;t=36;break}case 4:{D=1.0;t=37;break}case 3:{E=1.0;break}default:{u=n;break b}}if((t|0)==35){C=(m+5.0)*B;t=36}if((t|0)==36){D=(m+4.0)*C;t=37}if((t|0)==37)E=(m+3.0)*D;u=n+ +Z(+((m+2.0)*E));break}while(0);g=i?s-u:u}while(0);return +g}function re(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;h=i;i=i+4272|0;if((i|0)>=(j|0))ca();k=h+8|0;l=h;a:do if(((((((((a[e>>0]|0)==36?(a[e+1>>0]|0)==50:0)?(m=e+2|0,n=(a[m>>0]|0)+-97|0,n>>>0<=25):0)?(25165825>>>n&1|0)!=0:0)?(a[e+3>>0]|0)==36:0)?(n=(a[e+4>>0]|0)+-48|0,n>>>0<=1):0)?(o=(a[e+5>>0]|0)+-48|0,o>>>0<=9):0)?(a[e+6>>0]|0)==36:0)?(p=1<<o+(n*10|0),p>>>0>=g>>>0):0){n=k+4240|0;o=k+4256|0;q=n;r=e+7|0;while(1){s=(d[r>>0]|0)+-32|0;if(s>>>0>95){t=0;break a}u=a[164182+s>>0]|0;if((u&255)>63){t=0;break a}s=(d[r+1>>0]|0)+-32|0;if(s>>>0>95){t=0;break a}v=a[164182+s>>0]|0;s=v&255;if((v&255)>63){t=0;break a}v=q+1|0;a[q>>0]=s>>>4&3|(u&255)<<2;if(v>>>0>=o>>>0)break;u=(d[r+2>>0]|0)+-32|0;if(u>>>0>95){t=0;break a}w=a[164182+u>>0]|0;u=w&255;if((w&255)>63){t=0;break a}w=q+2|0;a[v>>0]=u>>>2&15|s<<4;if(w>>>0>=o>>>0)break;s=(d[r+3>>0]|0)+-32|0;if(s>>>0>95){t=0;break a}v=a[164182+s>>0]|0;if((v&255)>63){t=0;break a}q=q+3|0;a[w>>0]=v&255|u<<6;if(q>>>0>=o>>>0)break;else r=r+4|0}r=k+4244|0;c[n>>2]=_s(c[n>>2]|0)|0;o=k+4248|0;c[r>>2]=_s(c[r>>2]|0)|0;q=k+4252|0;c[o>>2]=_s(c[o>>2]|0)|0;c[q>>2]=_s(c[q>>2]|0)|0;u=k+4168|0;yg(b,u,k,a[164278+((a[m>>0]|0)+-97)>>0]|0);$j(k+72|0,18076,4096)|0;v=k+4244|0;w=k+4248|0;s=k+4252|0;x=uh(k,c[n>>2]|0,c[v>>2]|0,k,k)|0;y=k+8|0;z=k;do{A=uh(k,c[w>>2]^x,c[s>>2]^c[z+4>>2],y,y)|0;B=z;z=z+16|0;x=uh(k,c[n>>2]^A,c[v>>2]^c[B+12>>2],z,z)|0;y=B+24|0}while(y>>>0<u>>>0);y=k+64|0;z=k+68|0;x=p;do{m=0;do{B=k+(m<<2)|0;c[B>>2]=c[B>>2]^c[k+4168+(m<<2)>>2];B=m|1;A=k+(B<<2)|0;c[A>>2]=c[A>>2]^c[k+4168+(B<<2)>>2];m=m+2|0}while((m|0)<18);uh(k,0,0,k,u)|0;m=c[n>>2]|0;B=c[v>>2]|0;A=c[w>>2]|0;C=c[s>>2]|0;D=0;do{E=k+(D<<2)|0;c[E>>2]=c[E>>2]^m;E=k+((D|1)<<2)|0;c[E>>2]=c[E>>2]^B;E=k+((D|2)<<2)|0;c[E>>2]=c[E>>2]^A;E=k+((D|3)<<2)|0;c[E>>2]=c[E>>2]^C;D=D+4|0}while((D|0)<16);c[y>>2]=c[y>>2]^m;c[z>>2]=c[z>>2]^B;uh(k,0,0,k,u)|0;x=x+-1|0}while((x|0)!=0);x=l+4|0;u=0;do{z=c[22172+(u<<2)>>2]|0;y=u|1;s=c[22172+(y<<2)>>2]|0;c[x>>2]=s;w=uh(k,z,s,l,l)|0;s=63;while(1){z=uh(k,w,c[x>>2]|0,l,l)|0;s=s+-1|0;if(!s){F=z;break}else w=z}c[k+4240+(u<<2)>>2]=F;c[k+4240+(y<<2)>>2]=c[x>>2];u=u+2|0}while((u|0)<6);u=f;x=e;w=u+28|0;do{a[u>>0]=a[x>>0]|0;u=u+1|0;x=x+1|0}while((u|0)<(w|0));a[f+28>>0]=a[164304+(d[164182+((a[e+28>>0]|0)+-32)>>0]&48)>>0]|0;c[n>>2]=_s(c[n>>2]|0)|0;c[r>>2]=_s(c[r>>2]|0)|0;c[o>>2]=_s(c[o>>2]|0)|0;x=k+4256|0;c[q>>2]=_s(c[q>>2]|0)|0;u=k+4260|0;c[x>>2]=_s(c[x>>2]|0)|0;c[u>>2]=_s(c[u>>2]|0)|0;u=n+23|0;x=f+29|0;w=n;while(1){s=w+1|0;B=d[w>>0]|0;m=x+1|0;a[x>>0]=a[164304+(B>>>2)>>0]|0;z=B<<4&48;if(s>>>0>=u>>>0){G=m;H=z;I=36;break}B=w+2|0;v=d[s>>0]|0;s=x+2|0;a[m>>0]=a[164304+(v>>>4|z)>>0]|0;z=v<<2&60;if(B>>>0>=u>>>0){J=s;K=z;I=38;break}w=w+3|0;v=d[B>>0]|0;a[s>>0]=a[164304+(v>>>6|z)>>0]|0;a[x+3>>0]=a[164304+(v&63)>>0]|0;if(w>>>0>=u>>>0)break;else x=x+4|0}if((I|0)==36)a[G>>0]=a[164304+H>>0]|0;else if((I|0)==38)a[J>>0]=a[164304+K>>0]|0;a[f+60>>0]=0;t=f}else t=0;while(0);i=h;return t|0}function qe(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0;e=i;i=i+640|0;if((i|0)>=(j|0))ca();f=e;g=0;do{h=g<<3;k=fr(d[b+h>>0]|0|0,0,56)|0;l=D;m=fr(d[b+(h|1)>>0]|0|0,0,48)|0;n=D|l;l=fr(d[b+(h|2)>>0]|0|0,0,40)|0;o=d[b+(h|3)>>0]|0|(D|n);n=fr(d[b+(h|4)>>0]|0|0,0,24)|0;p=D|o;o=fr(d[b+(h|5)>>0]|0|0,0,16)|0;q=D|p;p=fr(d[b+(h|6)>>0]|0|0,0,8)|0;r=f+(g<<3)|0;c[r>>2]=p|(o|(n|(l|(m|k))))|(d[b+(h|7)>>0]|0);c[r+4>>2]=D|q;g=g+1|0}while((g|0)!=16);g=f;b=c[g>>2]|0;q=c[g+4>>2]|0;g=16;do{r=f+(g+-2<<3)|0;h=c[r>>2]|0;k=c[r+4>>2]|0;r=kr(h|0,k|0,19)|0;m=D;l=fr(h|0,k|0,45)|0;n=D|m;m=kr(h|0,k|0,61)|0;o=D;p=fr(h|0,k|0,3)|0;s=D|o;o=kr(h|0,k|0,6)|0;k=s^D^n;n=f+(g+-7<<3)|0;s=c[n>>2]|0;h=c[n+4>>2]|0;n=f+(g+-15<<3)|0;t=b;b=c[n>>2]|0;u=q;q=c[n+4>>2]|0;n=kr(b|0,q|0,1)|0;v=D;w=fr(b|0,q|0,63)|0;x=D|v;v=kr(b|0,q|0,8)|0;y=D;z=fr(b|0,q|0,56)|0;A=D|y;y=kr(b|0,q|0,7)|0;B=A^D^x;x=Gr(t|0,u|0,s|0,h|0)|0;h=Gr(x|0,D|0,(p|m)^o^(l|r)|0,k|0)|0;k=Gr(h|0,D|0,(z|v)^y^(w|n)|0,B|0)|0;B=f+(g<<3)|0;c[B>>2]=k;c[B+4>>2]=D;g=g+1|0}while((g|0)!=80);g=a+8|0;q=g;b=c[q>>2]|0;B=c[q+4>>2]|0;q=a+16|0;k=q;n=c[k>>2]|0;w=c[k+4>>2]|0;k=a+24|0;y=k;v=c[y>>2]|0;z=c[y+4>>2]|0;y=a+32|0;h=y;r=c[h>>2]|0;l=c[h+4>>2]|0;h=a+40|0;o=h;m=c[o>>2]|0;p=c[o+4>>2]|0;o=a+48|0;x=o;s=c[x>>2]|0;u=c[x+4>>2]|0;x=a+56|0;t=x;A=c[t>>2]|0;C=c[t+4>>2]|0;t=a+64|0;a=t;E=c[a>>2]|0;F=c[a+4>>2]|0;a=m;G=p;H=E;I=F;J=s;K=A;L=u;M=C;N=b;O=B;P=n;Q=w;R=v;S=z;T=r;U=l;V=0;while(1){W=kr(a|0,G|0,14)|0;X=D;Y=fr(a|0,G|0,50)|0;Z=D|X;X=kr(a|0,G|0,18)|0;_=D;$=fr(a|0,G|0,46)|0;aa=Z^(D|_);_=kr(a|0,G|0,41)|0;Z=D;ba=fr(a|0,G|0,23)|0;da=Gr((Y|W)^($|X)^(ba|_)|0,aa^(D|Z)|0,H|0,I|0)|0;Z=Gr(da|0,D|0,(K^J)&a^K|0,(M^L)&G^M|0)|0;da=112+(V<<3)|0;aa=Gr(Z|0,D|0,c[da>>2]|0,c[da+4>>2]|0)|0;da=f+(V<<3)|0;Z=Gr(aa|0,D|0,c[da>>2]|0,c[da+4>>2]|0)|0;da=D;aa=kr(N|0,O|0,28)|0;_=D;ba=fr(N|0,O|0,36)|0;X=D|_;_=kr(N|0,O|0,34)|0;$=D;W=fr(N|0,O|0,30)|0;Y=X^(D|$);$=kr(N|0,O|0,39)|0;X=D;ea=fr(N|0,O|0,25)|0;fa=Gr((ba|aa)^(W|_)^(ea|$)|0,Y^(D|X)|0,R&(P|N)|P&N|0,S&(Q|O)|Q&O|0)|0;X=D;Y=Gr(Z|0,da|0,T|0,U|0)|0;$=D;ea=Gr(fa|0,X|0,Z|0,da|0)|0;da=D;V=V+1|0;if((V|0)==80){ga=ea;ha=da;ia=N;ja=O;ka=P;la=Q;ma=R;na=S;oa=Y;pa=$;qa=a;ra=G;sa=J;ta=L;ua=K;va=M;break}else{Z=O;X=N;fa=G;_=a;W=M;aa=K;a=Y;G=$;N=ea;O=da;U=S;T=R;S=Q;R=P;Q=Z;P=X;M=L;L=fa;K=J;J=_;I=W;H=aa}}H=Gr(b|0,B|0,ga|0,ha|0)|0;ha=g;c[ha>>2]=H;c[ha+4>>2]=D;ha=Gr(n|0,w|0,ia|0,ja|0)|0;ja=q;c[ja>>2]=ha;c[ja+4>>2]=D;ja=Gr(v|0,z|0,ka|0,la|0)|0;la=k;c[la>>2]=ja;c[la+4>>2]=D;la=Gr(r|0,l|0,ma|0,na|0)|0;na=y;c[na>>2]=la;c[na+4>>2]=D;na=Gr(m|0,p|0,oa|0,pa|0)|0;pa=h;c[pa>>2]=na;c[pa+4>>2]=D;pa=Gr(s|0,u|0,qa|0,ra|0)|0;ra=o;c[ra>>2]=pa;c[ra+4>>2]=D;ra=Gr(A|0,C|0,sa|0,ta|0)|0;ta=x;c[ta>>2]=ra;c[ta+4>>2]=D;ta=Gr(E|0,F|0,ua|0,va|0)|0;va=t;c[va>>2]=ta;c[va+4>>2]=D;i=e;return}function oe(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;g=c[a>>2]|0;h=(g|0)>-1;a:do if(!d)if(h){i=b+32|0;j=g;k=a;do{if((c[b>>2]|0)>-1?(l=e+(j<<2)|0,c[l>>2]=(c[l>>2]|0)+1,(c[i>>2]|0)>-1):0){l=i;do{m=e+(c[k>>2]<<2)|0;c[m>>2]=(c[m>>2]|0)+1;l=l+32|0}while((c[l>>2]|0)>-1)}k=k+32|0;j=c[k>>2]|0}while((j|0)>-1);n=0}else n=0;else if(h){j=a;while(1){k=c[b>>2]|0;b:do if((k|0)>-1){i=j+4|0;l=j+8|0;m=j+16|0;o=j+20|0;p=j+24|0;q=j+28|0;r=j+12|0;s=b;t=k;u=-1;while(1){v=s;w=t;while(1){if((w|0)!=(u|0)){x=v;y=w;break}v=v+32|0;w=c[v>>2]|0;if((w|0)<=-1)break b}w=d+(c[f+(c[j>>2]<<2)>>2]<<5)|0;while(1){v=w+8|0;if(!(c[v>>2]|0)){z=v;A=w;break}else w=w+32|0}c[A+40>>2]=0;c[A>>2]=c[i>>2];c[A+4>>2]=c[l>>2];c[z>>2]=d+(c[f+(y<<2)>>2]<<5);c[A+12>>2]=y;w=c[o>>2]|0;v=c[x+16>>2]|c[m>>2]|(w|0?4:0)|(c[p>>2]|0?8:0);B=A+20|0;c[B>>2]=v;C=c[q>>2]|0;if((C|0)>-1){c[B>>2]=v|256;D=C}else D=w;c[A+24>>2]=D;w=c[p>>2]|0;if(!w)c[A+28>>2]=0;else{C=0;while(1){v=C+1|0;if(!(c[w+(C<<2)>>2]|0)){E=v;break}else C=v}C=Wd(E<<2)|0;c[A+28>>2]=C;if(!C){n=12;break a}w=c[p>>2]|0;v=c[w>>2]|0;if(!v)F=C;else{B=v;v=C;G=0;while(1){c[v>>2]=B;G=G+1|0;B=c[w+(G<<2)>>2]|0;H=C+(G<<2)|0;if(!B){F=H;break}else v=H}}c[F>>2]=0}v=c[r>>2]|0;if(!v)I=0;else{B=0;while(1)if((c[v+(B<<2)>>2]|0)>-1)B=B+1|0;else{I=B;break}}B=x+12|0;v=c[B>>2]|0;if(!v)J=0;else{G=0;while(1)if((c[v+(G<<2)>>2]|0)>-1)G=G+1|0;else{J=G;break}}G=A+16|0;v=c[G>>2]|0;if(v|0)de(v);c[G>>2]=0;v=J+I|0;if((v|0)>0){C=Wd((v<<2)+4|0)|0;c[G>>2]=C;if(!C){n=12;break a}v=c[r>>2]|0;if((v|0)!=0?(w=c[v>>2]|0,(w|0)>-1):0){H=w;w=0;while(1){c[C+(w<<2)>>2]=H;K=w+1|0;H=c[v+(K<<2)>>2]|0;if((H|0)<=-1){L=K;break}else w=K}}else L=0;w=c[B>>2]|0;if((w|0)!=0?(c[w>>2]|0)>-1:0){H=(L|0)>0;v=w;K=C;M=0;N=L;while(1){c:do if(H){O=c[G>>2]|0;P=c[B>>2]|0;Q=c[P+(M<<2)>>2]|0;R=0;while(1){if((c[O+(R<<2)>>2]|0)==(Q|0)){S=P;T=O;U=N;break c}R=R+1|0;if((R|0)>=(L|0)){V=O;W=Q;X=P;Y=41;break}}}else{V=K;W=c[v+(M<<2)>>2]|0;X=v;Y=41}while(0);if((Y|0)==41){Y=0;c[V+(N<<2)>>2]=W;S=X;T=V;U=N+1|0}M=M+1|0;if((c[w+(M<<2)>>2]|0)<=-1){Z=T;_=U;break}else{v=S;K=T;N=U}}}else{Z=C;_=L}c[Z+(_<<2)>>2]=-1}N=x+32|0;K=c[N>>2]|0;if((K|0)>-1){s=N;t=K;u=y}else break}}while(0);j=j+32|0;if((c[j>>2]|0)<=-1){n=0;break}}}else n=0;while(0);return n|0}function se(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;f=i;i=i+192|0;if((i|0)>=(j|0))ca();g=f+8|0;h=f;k=f+180|0;l=f+176|0;m=f+168|0;n=f+40|0;o=f+32|0;Ta(1,o|0)|0;p=e&16|0?169844:165790;if(e&8|0)Kk(d);a:do if((e&4|0)!=0?(q=a[b>>0]|0,q<<24>>24!=0):0){r=q;q=0;s=0;t=0;u=0;while(1){switch(r<<24>>24|0){case 92:{v=q;w=((u|0)==0&1)+s|0;x=t;y=u;break}case 39:{v=q;w=s;x=t;y=(q|0)==0^u;break}case 34:{v=(u|0)==0^q;w=s;x=t;y=u;break}case 40:{if(!t)z=13;else{v=q;w=s;x=t+1|0;y=u}break}case 41:{if(!t)z=13;else{v=q;w=s;x=t+-1|0;y=u}break}case 125:case 123:case 62:case 60:case 59:case 38:case 124:case 10:{z=13;break}case 36:{if(!u)if((a[b+(s+1)>>0]|0)==40){A=s+2|0;if((a[b+A>>0]|0)!=40){B=4;break a}v=q;w=A;x=t+2|0;y=0}else{v=q;w=s;x=t;y=0}else{v=q;w=s;x=t;y=u}break}case 96:{if(!u){B=4;break a}else{v=q;w=s;x=t;y=u}break}default:{v=q;w=s;x=t;y=u}}if((z|0)==13){z=0;if(!(q|u|t)){B=2;break a}else{v=q;w=s;x=t;y=u}}s=w+1|0;r=a[b+s>>0]|0;if(!(r<<24>>24)){z=20;break a}else{q=v;t=x;u=y}}}else z=20;while(0);b:do if((z|0)==20){y=(e&2|0)!=0;if(y){C=c[d>>2]|0;D=c[d+4>>2]|0}else{C=0;D=0}x=(e&1|0)!=0;v=d+8|0;if(x){w=c[v>>2]|0;if(w>>>0<=268435455){E=w+C|0;z=26}}else{c[v>>2]=0;E=C;z=26}do if((z|0)==26?(fh(m,524288)|0)>=0:0){ob(n|0);w=id()|0;xd(n|0);if((w|0)<0){wp(c[m>>2]|0)|0;wp(c[m+4>>2]|0)|0;break}u=c[m+4>>2]|0;if(!w){if((u|0)==1){c[h>>2]=0;ef(1,2,h)|0}else pn(u,1)|0;c[g>>2]=165813;c[g+4>>2]=165816;c[g+8>>2]=165810;c[g+12>>2]=b;c[g+16>>2]=p;c[g+20>>2]=0;Qa(165802,165810,g|0)|0;By(1)}wp(u)|0;u=Rd[5&7](c[m>>2]|0,165846)|0;if(!u){wp(c[m>>2]|0)|0;Mb(w|0,9)|0;Pm(w);break}c[k>>2]=0;c[l>>2]=0;t=(pf(k,l,0,u)|0)<0;de(t?0:c[k>>2]|0);if(ap(u)|0){Uj(u)|0;Pm(w);B=5;break b}c[k>>2]=0;c[l>>2]=0;t=(pf(k,l,0,u)|0)<0;q=c[k>>2]|0;c:do if(t|(q|0)==0){F=E;G=D}else{r=q;s=E;A=D|0?E+1|0:0;H=D;while(1){I=s+1|0;if(I>>>0<A>>>0){J=A;K=H}else{L=A+10+(A>>>1)|0;M=ek(H,L<<2)|0;if(!M){F=s;G=H;break c}J=L;K=M}c[K+(s<<2)>>2]=r;c[K+(I<<2)>>2]=0;c[k>>2]=0;c[l>>2]=0;M=(pf(k,l,0,u)|0)<0;r=c[k>>2]|0;if(M|(r|0)==0){F=I;G=K;break}else{s=I;A=J;H=K}}}while(0);q=(ap(u)|0)==0&1;Uj(u)|0;Pm(w);if(!G)N=Mm(F+1|0,4)|0;else N=G;t=d+4|0;c[t>>2]=N;c[d>>2]=F;if(!x){B=q;break b}H=c[v>>2]|0;if(N)if(H){A=H+-1|0;c[N+(A<<2)>>2]=0;if(!A)O=H;else{Gl(c[t>>2]|0,0,(H<<2)+-4|0)|0;O=H}}else O=0;else O=H;c[d>>2]=F-O;B=q;break b}while(0);if(y)B=1;else{c[d>>2]=0;c[d+4>>2]=0;B=1}}while(0);Ta(c[o>>2]|0,0)|0;i=f;return B|0}function ye(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0.0,h=0,i=0.0,j=0.0,l=0.0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0;c[b>>2]=1;d=+O(+a);e=(g[k>>2]=d,c[k>>2]|0);do if(e>>>0>2139095039)f=a*a;else{h=((g[k>>2]=a,c[k>>2]|0)|0)<0;if(e>>>0<889192448){if(h){c[b>>2]=-1;i=-a}else i=a;f=-+Z(+i);break}if(h){d=-a;j=a*-.5;l=(j-+N(+j))*2.0;m=(~~(l*4.0)+1|0)/2|0;j=(l-+(m|0)*.5)*3.141592653589793;switch(m|0){case 3:{n=-+tr(j);break}case 1:{n=+tr(j);break}case 2:{n=+Zq(-j);break}default:n=+Zq(j)}if(n==0.0){f=1.0/(a-a);break}if(n>0.0){c[b>>2]=-1;o=n}else o=-n;p=d;q=+Z(+(3.1415927410125732/(o*d)))}else{p=a;q=0.0}if((e|0)<1073741824)switch(e|0){case 1065353216:{r=0.0;break}default:s=20}else switch(e|0){case 1073741824:{r=0.0;break}default:s=20}a:do if((s|0)==20)if(e>>>0<1073741824){do if(e>>>0<1063675495){d=-+Z(+p);if(e>>>0<=1060850207)if(e>>>0>1047343879){t=d;u=p+-.4616321325302124;s=29}else{v=d;w=p;s=30}else{x=1.0;y=d;s=28}}else if(e>>>0<=1071490583)if(e>>>0>1067296287){t=0.0;u=p+-1.4616321325302124;s=29;break}else{v=0.0;w=p+-1.0;s=30;break}else{x=2.0;y=0.0;s=28}while(0);if((s|0)==28){d=x-p;j=d*d;r=y+(d*(j*(j*(j*(j*(j*2.5214456400135532e-05+2.2086278477218002e-04)+1.1927076848223805e-03)+.007385550998151302)+.0673523023724556)+.07721566408872604)+j*(j*(j*(j*(j*(j*4.486409670789726e-05+1.0801156895468011e-04)+5.100697744637728e-04)+2.8905137442052364e-03)+.020580807700753212)+.32246702909469604)-d*.5);break}else if((s|0)==29){d=u*u;j=u*d;r=t+(d*(j*(j*(j*(j*.000315632059937343+-1.4034647028893232e-03)+.006100538652390242)+-.03278854116797447)+.4838361144065857)-(6.697100651820165e-09-j*(j*(j*(j*(8.810818544588983e-04-j*3.1275415676645935e-04)+-3.6845202557742596e-03)+.017970675602555275)+-.14758771657943726+u*(j*(j*(j*(j*3.3552918466739357e-04+-5.385953118093312e-04)+2.2596477065235376e-03)+-.010314224287867546)+.06462494283914566)))+-.12148628383874893);break}else if((s|0)==30){r=v+(w*(w*(w*(w*(w*(w*.013381091877818108+.2289637327194214)+.9777175188064575)+1.4549225568771362)+.6328270435333252)+-.07721566408872604)/(w*(w*(w*(w*(w*3.2170924823731184e-03+.10422264784574509)+.7692851424217224)+2.1284897327423096)+2.4559779167175293)+1.0)-w*.5);break}}else{if(e>>>0>=1090519040){j=+Z(+p);if(e>>>0<1551892480){d=1.0/p;l=d*d;r=d*(l*(l*(l*(l*(8.363398956134915e-04-l*1.6309292986989021e-03)+-5.951875355094671e-04)+7.936505717225373e-04)+-2.7777778450399637e-03)+.0833333358168602)+.418938547372818+(p+-.5)*(j+-1.0);break}else{r=p*(j+-1.0);break}}m=~~p;j=p-+(m|0);l=j*.5+j*(j*(j*(j*(j*(j*(j*3.194753298885189e-05+1.8402845598757267e-03)+.026642270386219025)+.14635047316551208)+.3257787823677063)+.21498242020606995)+-.07721566408872604)/(j*(j*(j*(j*(j*(j*7.32668422642746e-06+7.779424777254462e-04)+.018645919859409332)+.1719338595867157)+.7219355702400208)+1.3920053243637085)+1.0);switch(m|0){case 7:{z=j+6.0;s=34;break}case 6:{z=1.0;s=34;break}case 5:{A=1.0;s=35;break}case 4:{B=1.0;s=36;break}case 3:{C=1.0;break}default:{r=l;break a}}if((s|0)==34){A=(j+5.0)*z;s=35}if((s|0)==35){B=(j+4.0)*A;s=36}if((s|0)==36)C=(j+3.0)*B;r=l+ +Z(+((j+2.0)*C));break}while(0);f=h?q-r:r}while(0);return +f}function we(a,b,d){a=+a;b=+b;d=d|0;var e=0,f=0,g=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0.0,ia=0.0,ja=0.0,ka=0;h[k>>3]=a;e=c[k>>2]|0;f=c[k+4>>2]|0;h[k>>3]=b;g=c[k>>2]|0;i=c[k+4>>2]|0;j=kr(e|0,f|0,52)|0;l=j&2047;j=kr(g|0,i|0,52)|0;m=j&2047;j=kr(e|0,f|0,63)|0;n=D;o=kr(g|0,i|0,63)|0;p=D;c[d>>2]=0;q=+O(+b);h[k>>3]=q;r=c[k>>2]|0;s=c[k+4>>2]|0;do if(!((r|0)==0&(s|0)==0)?!(s>>>0>2146435072|(s|0)==2146435072&r>>>0>0|(l|0)==2047):0){q=+O(+a);h[k>>3]=q;if((c[k>>2]|0)==0&(c[k+4>>2]|0)==0)t=a;else{if(!l){u=fr(e|0,f|0,12)|0;v=D;if((v|0)>-1|(v|0)==-1&u>>>0>4294967295){w=u;u=v;v=0;while(1){x=v+-1|0;w=fr(w|0,u|0,1)|0;u=D;if(!((u|0)>-1|(u|0)==-1&w>>>0>4294967295)){y=x;break}else v=x}}else y=0;v=fr(e|0,f|0,1-y|0)|0;z=v;A=D;B=y}else{z=e;A=f&1048575|1048576;B=l}if(!m){v=fr(g|0,i|0,12)|0;w=D;if((w|0)>-1|(w|0)==-1&v>>>0>4294967295){u=v;v=w;w=0;while(1){x=w+-1|0;u=fr(u|0,v|0,1)|0;v=D;if(!((v|0)>-1|(v|0)==-1&u>>>0>4294967295)){C=x;break}else w=x}}else C=0;w=fr(g|0,i|0,1-C|0)|0;E=w;F=D;G=C}else{E=g;F=i&1048575|1048576;G=m}if((B|0)<(G|0))if((B+1|0)==(G|0)){H=z;I=A;J=B;K=0;L=22}else{t=a;break}else{w=jr(z|0,A|0,E|0,F|0)|0;u=D;v=(u|0)>-1|(u|0)==-1&w>>>0>4294967295;x=kr(w|0,u|0,63)|0;M=x^1;x=v?w:z;w=v?u:A;if((B|0)>(G|0)){u=M;v=x;N=w;P=B;while(1){Q=fr(v|0,N|0,1)|0;R=D;P=P+-1|0;S=jr(Q|0,R|0,E|0,F|0)|0;T=D;U=(T|0)>-1|(T|0)==-1&S>>>0>4294967295;V=kr(S|0,T|0,63)|0;W=(V|u<<1)^1;V=U?S:Q;Q=U?T:R;if((P|0)<=(G|0)){X=W;Y=V;Z=Q;_=G;break}else{u=W;v=V;N=Q}}}else{X=M;Y=x;Z=w;_=B}if(!((Y|0)==0&(Z|0)==0))if(Z>>>0<1048576|(Z|0)==1048576&Y>>>0<0){N=Y;v=Z;u=_;while(1){P=fr(N|0,v|0,1)|0;Q=D;V=u+-1|0;if(Q>>>0<1048576|(Q|0)==1048576&P>>>0<0){N=P;v=Q;u=V}else{H=P;I=Q;J=V;K=X;L=22;break}}}else{H=Y;I=Z;J=_;K=X;L=22}else{$=0;aa=0;ba=-60;ca=X;L=24}}if((L|0)==22)if((J|0)>0){u=Gr(H|0,I|0,0,-1048576)|0;v=D;N=fr(J|0,0,52)|0;da=v|D;ea=u|N;fa=J;ga=K}else{$=H;aa=I;ba=J;ca=K;L=24}if((L|0)==24){N=kr($|0,aa|0,1-ba|0)|0;da=D;ea=N;fa=ba;ga=ca}c[k>>2]=ea;c[k+4>>2]=da;q=+h[k>>3];ha=(o|0)==0&(p|0)==0?b:-b;if((fa|0)!=(G|0))if((fa+1|0)==(G|0)){ia=q*2.0;if(!(ia>ha)?(ga&1|0)==0|ia!=ha:0){ja=q;ka=ga}else L=29}else{ja=q;ka=ga}else L=29;if((L|0)==29){ja=q-ha;ka=ga+1|0}N=ka&2147483647;c[d>>2]=(j|0)!=(o|0)|(n|0)!=(p|0)?0-N|0:N;t=(j|0)!=0|(n|0)!=0?-ja:ja}}else L=3;while(0);if((L|0)==3){ja=a*b;t=ja/ja}return +t}function ze(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;g=i;i=i+160|0;if((i|0)>=(j|0))ca();h=g+140|0;k=g+136|0;l=g+8|0;m=g+144|0;n=g+4|0;o=g;p=m+7|0;q=b;b=m;while(1){a[b>>0]=d[q>>0]<<1;b=b+1|0;r=(a[q>>0]|0)==0?q:q+1|0;if(b>>>0>p>>>0){s=r;break}else q=r}ig(m,l);q=a[e>>0]|0;a:do switch(q<<24>>24){case 95:{b=0;r=1;while(1){t=a[e+r>>0]|0;u=t&255;v=t<<24>>24>-1?u:u|-256;if((v|0)>64)w=((v|0)>96?-59:-53)+v|0;else w=v+-46|0;v=w&63;if((a[164880+v>>0]|0)!=t<<24>>24){x=0;break a}t=v<<(r*6|0)+-6|b;r=r+1|0;if(r>>>0>=5){y=t;break}else b=t}if(!y)x=0;else{b=5;r=0;while(1){t=a[e+b>>0]|0;v=t&255;u=t<<24>>24>-1?v:v|-256;if((u|0)>64)z=((u|0)>96?-59:-53)+u|0;else z=u+-46|0;u=z&63;if((a[164880+u>>0]|0)!=t<<24>>24){x=0;break a}t=u<<(b*6|0)+-30|r;b=b+1|0;if(b>>>0>=9){A=t;break}else r=t}if(a[s>>0]|0){r=m+3|0;b=m+2|0;t=m+1|0;u=m+6|0;v=m+5|0;B=m+4|0;C=s;while(1){wf(d[b>>0]<<8|d[r>>0]|d[t>>0]<<16|d[m>>0]<<24,d[u>>0]<<8|d[p>>0]|d[v>>0]<<16|d[B>>0]<<24,h,k,1,0,l);D=c[h>>2]|0;a[m>>0]=D>>>24;a[t>>0]=D>>>16;a[b>>0]=D>>>8;a[r>>0]=D;D=c[k>>2]|0;a[B>>0]=D>>>24;a[v>>0]=D>>>16;a[u>>0]=D>>>8;a[p>>0]=D;D=C;E=m;while(1){F=a[D>>0]|0;if(!(F<<24>>24)){G=D;break}H=D+1|0;a[E>>0]=d[E>>0]^(F&255)<<1;E=E+1|0;if(E>>>0>p>>>0){G=H;break}else D=H}ig(m,l);if(!(a[G>>0]|0))break;else C=G}}C=f;u=e;v=C+9|0;do{a[C>>0]=a[u>>0]|0;C=C+1|0;u=u+1|0}while((C|0)<(v|0));u=f+9|0;a[u>>0]=0;I=y;J=u;K=A;L=26}break}case 58:case 10:case 0:{x=0;break}default:{u=e+1|0;C=a[u>>0]|0;switch(C<<24>>24){case 58:case 10:case 0:{x=0;break a;break}default:{}}v=C&255;B=C<<24>>24>-1?v:v|-256;if((B|0)>64)M=((B|0)>96?-59:-53)+B|0;else M=B+-46|0;B=q&255;v=q<<24>>24>-1?B:B|-256;if((v|0)>64)N=((v|0)>96?-59:-53)+v|0;else N=v+-46|0;a[f>>0]=q;a[f+1>>0]=a[u>>0]|0;I=25;J=f+2|0;K=N&63|M<<6&4032;L=26}}while(0);if((L|0)==26){L=0;M=8388608;N=1;q=0;while(1){e=((N&K|0)==0?0:M)|q;L=L+1|0;if((L|0)==24){O=e;break}else{M=M>>>1;N=N<<1;q=e}}wf(0,0,n,o,I,O,l);l=c[n>>2]|0;a[J>>0]=a[164880+(l>>>26)>>0]|0;a[J+1>>0]=a[164880+(l>>>20&63)>>0]|0;a[J+2>>0]=a[164880+(l>>>14&63)>>0]|0;a[J+3>>0]=a[164880+(l>>>8&63)>>0]|0;n=c[o>>2]|0;o=n>>>16;a[J+4>>0]=a[164880+(l>>>2&63)>>0]|0;a[J+5>>0]=a[164880+((o|l<<16)>>>12&63)>>0]|0;a[J+6>>0]=a[164880+(n>>>22&63)>>0]|0;a[J+7>>0]=a[164880+(o&63)>>0]|0;a[J+8>>0]=a[164880+(n>>>10&63)>>0]|0;a[J+9>>0]=a[164880+(n>>>4&63)>>0]|0;a[J+10>>0]=a[164880+(n<<2&60)>>0]|0;a[J+11>>0]=0;x=f}i=g;return x|0}function ve(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;d=c[b>>2]|0;a:do if(d)if((c[a>>2]|0)!=0?(e=En(a,d)|0,(e|0)!=0):0)if(c[b+4>>2]|0)if(!(c[e+4>>2]|0))f=0;else{g=0;while(1){if(!(c[e+(g<<2)>>2]|0)){f=0;break a}h=g+1|0;if(!(c[b+(h<<2)>>2]|0)){i=h;break}else g=h}b:do if(i>>>0>1){g=1;h=-1;j=0;c:while(1){k=g;l=j;m=1;while(1){n=k;o=l;d:while(1){p=n;q=1;while(1){r=c[b+(q+h<<2)>>2]|0;s=c[b+(p<<2)>>2]|0;if((r|0)!=(s|0)){t=p;u=r;v=s;w=o;break d}if((q|0)==(m|0))break;q=q+1|0;p=q+o|0;if(p>>>0>=i>>>0){x=h;y=m;break c}}o=o+m|0;n=o+1|0;if(n>>>0>=i>>>0){x=h;y=m;break c}}n=t-h|0;if((u|0)<=(v|0)){z=w;break}o=t+1|0;if(o>>>0<i>>>0){k=o;l=t;m=n}else{x=h;y=n;break c}}g=z+2|0;if(g>>>0>=i>>>0){x=z;y=1;break}else{h=z;j=z+1|0}}j=1;h=-1;g=0;while(1){m=j;l=g;k=1;while(1){n=m;o=l;e:while(1){p=n;q=1;while(1){s=c[b+(q+h<<2)>>2]|0;r=c[b+(p<<2)>>2]|0;if((s|0)!=(r|0)){A=p;B=s;C=r;D=o;break e}if((q|0)==(k|0))break;q=q+1|0;p=q+o|0;if(p>>>0>=i>>>0){E=x;F=h;G=y;H=k;break b}}o=o+k|0;n=o+1|0;if(n>>>0>=i>>>0){E=x;F=h;G=y;H=k;break b}}n=A-h|0;if((B|0)>=(C|0)){I=D;break}o=A+1|0;if(o>>>0<i>>>0){m=o;l=A;k=n}else{E=x;F=h;G=y;H=n;break b}}j=I+2|0;if(j>>>0>=i>>>0){E=x;F=I;G=y;H=1;break}else{h=I;g=I+1|0}}}else{E=-1;F=-1;G=1;H=1}while(0);g=(F+1|0)>>>0>(E+1|0)>>>0;h=g?H:G;j=g?F:E;g=j+1|0;if(!(dl(b,b+(h<<2)|0,g)|0)){J=i-h|0;K=h}else{h=i-j+-1|0;J=0;K=(j>>>0>h>>>0?j:h)+1|0}h=i|63;k=e;l=0;m=e;while(1){n=k;do if(m-n>>2>>>0<i>>>0){o=an(m,0,h)|0;if(o)if(o-n>>2>>>0<i>>>0){f=0;break a}else{L=o;break}else{L=m+(h<<2)|0;break}}else L=m;while(0);n=g>>>0>l>>>0?g:l;o=c[b+(n<<2)>>2]|0;f:do if(!o){M=g;N=43}else{p=o;q=n;while(1){if((p|0)!=(c[k+(q<<2)>>2]|0)){O=q;break}q=q+1|0;p=c[b+(q<<2)>>2]|0;if(!p){M=g;N=43;break f}}P=O-j|0;Q=0}while(0);if((N|0)==43)while(1){N=0;if(M>>>0<=l>>>0){f=k;break a}M=M+-1|0;if((c[b+(M<<2)>>2]|0)!=(c[k+(M<<2)>>2]|0)){P=K;Q=J;break}else N=43}k=k+(P<<2)|0;l=Q;m=L}}else f=e;else f=0;else f=a;while(0);return f|0}function xe(b,d,f,g,h){b=b|0;d=d|0;f=f|0;g=g|0;h=h|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;k=i;i=i+352|0;if((i|0)>=(j|0))ca();l=k+80|0;m=k+76|0;n=k;o=(zi(d)|0)+1|0;p=i;i=i+((1*o|0)+15&-16)|0;if((i|0)>=(j|0))ca();o=zi(b)|0;q=f&64;r=(f>>>5&4|q>>>5)^4;s=as(d,47)|0;if(!s){t=d;u=0}else{Wu(p,d)|0;a[p+(s-d)>>0]=0;d=s;while(1)if((a[d>>0]|0)==47)d=d+1|0;else{t=p;u=d;break}}d=a[t>>0]|0;a:do if(!(d<<24>>24))v=1;else{p=(q|0)==0;s=t;w=d;x=0;while(1){switch(w<<24>>24|0){case 42:case 63:{v=0;break a;break}case 92:{if(p){v=0;break a}else y=x;break}case 91:{y=1;break}case 93:{if(!x)y=0;else{v=0;break a}break}default:y=x}s=s+1|0;w=a[s>>0]|0;if(!(w<<24>>24)){v=1;break a}else x=y}}while(0);y=a[b>>0]|0;if(y<<24>>24==47)z=(a[b+1>>0]|0)==0?0:o;else z=o;o=Ul(y<<24>>24?b:165788)|0;y=c[($r()|0)>>2]|0;b:do if(!o){switch(y|0){case 20:{A=0;break b;break}case 13:{if(((a[t>>0]|0)==0?(bp(b,n)|0)==0:0)?(c[n+12>>2]&61440|0)==16384:0){A=(Sm(h,b,z,z)|0)!=0&1;break b}break}default:{}}d=(Rd[g&7](b,y)|0|f&1|0)==0;A=d?0:2}else{if(!(a[t>>0]|0)){d=(Sm(h,b,z,z)|0)!=0&1;wt(o)|0;A=d;break}d=ll(o,l,m)|0;q=(d|0)!=0;x=c[m>>2]|0;c:do if((x|0)!=0&(q^1)){w=z+2|0;s=(v|0)==0;p=(u|0)!=0;B=(f&2|0)==0;C=z+1|0;D=n+12|0;E=x;d:while(1){F=w+(e[E+8>>1]|0)|0;G=Va()|0;H=i;i=i+((1*F|0)+15&-16)|0;if((i|0)>=(j|0))ca();F=(c[m>>2]|0)+11|0;if(s){if(!(kg(t,F,r)|0))I=28}else if(!(Ol(t,F)|0))I=28;e:do if((I|0)==28){I=0;f:do if(p?(F=a[(c[m>>2]|0)+10>>0]|0,F<<24>>24):0){J=(F&255)<<12&61440;if((J|0)<40960)switch(J|0){case 16384:{break f;break}default:break e}else switch(J|0){case 40960:{break f;break}default:break e}}while(0);if(!(a[b>>0]|0))K=(c[m>>2]|0)+11|0;else{$j(H|0,b|0,z|0)|0;J=H+z|0;a[J>>0]=47;Wu(J+1|0,(c[m>>2]|0)+11|0)|0;K=H}if(p){J=xe(K,u,f,g,h)|0;if(!J)break;else{L=G;M=J;I=36;break d}}do if(B)N=0;else{J=a[(c[m>>2]|0)+10>>0]|0;if(J<<24>>24?(F=(J&255)<<12&61440,(F|0)!=40960):0){N=(F|0)==16384;break}bp(K,n)|0;N=(c[D>>2]&61440|0)==16384}while(0);if(Sm(h,K,C+(e[(c[m>>2]|0)+8>>1]|0)|0,N&1)|0){O=G;I=43;break d}}while(0);xb(G|0);H=ll(o,l,m)|0;F=(H|0)!=0;E=c[m>>2]|0;if(!((E|0)!=0&(F^1))){P=H;Q=F;break c}}if((I|0)==36){wt(o)|0;R=M;S=L}else if((I|0)==43){wt(o)|0;R=1;S=O}xb(S|0);A=R;break b}else{P=d;Q=q}while(0);wt(o)|0;if(Q?Rd[g&7](b,P)|0|f&1|0:0){A=2;break}A=0}while(0);i=k;return A|0}function Ae(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a+f|0;h=c[41744]|0;i=e&3;if(!((i|0)!=1&a>>>0>=h>>>0&a>>>0<g>>>0))Sa();j=c[g+4>>2]|0;if(!(j&1))Sa();if(!i){if(b>>>0<256){k=0;return k|0}if(f>>>0>=(b+4|0)>>>0?(f-b|0)>>>0<=c[41860]<<1>>>0:0){k=a;return k|0}k=0;return k|0}if(f>>>0>=b>>>0){i=f-b|0;if(i>>>0<=15){k=a;return k|0}l=a+b|0;c[d>>2]=e&1|b|2;c[l+4>>2]=i|3;m=l+i+4|0;c[m>>2]=c[m>>2]|1;ge(l,i);k=a;return k|0}if((g|0)==(c[41746]|0)){i=(c[41743]|0)+f|0;if(i>>>0<=b>>>0){k=0;return k|0}l=i-b|0;i=a+b|0;c[d>>2]=e&1|b|2;c[i+4>>2]=l|1;c[41746]=i;c[41743]=l;k=a;return k|0}if((g|0)==(c[41745]|0)){l=(c[41742]|0)+f|0;if(l>>>0<b>>>0){k=0;return k|0}i=l-b|0;if(i>>>0>15){m=a+b|0;n=m+i|0;c[d>>2]=e&1|b|2;c[m+4>>2]=i|1;c[n>>2]=i;o=n+4|0;c[o>>2]=c[o>>2]&-2;p=m;q=i}else{c[d>>2]=e&1|l|2;i=a+l+4|0;c[i>>2]=c[i>>2]|1;p=0;q=0}c[41742]=q;c[41745]=p;k=a;return k|0}if(j&2|0){k=0;return k|0}p=(j&-8)+f|0;if(p>>>0<b>>>0){k=0;return k|0}f=p-b|0;q=j>>>3;do if(j>>>0>=256){i=c[g+24>>2]|0;l=c[g+12>>2]|0;do if((l|0)==(g|0)){m=g+16|0;o=m+4|0;n=c[o>>2]|0;if(!n){r=c[m>>2]|0;if(!r){s=0;break}else{t=r;u=m}}else{t=n;u=o}while(1){o=t+20|0;n=c[o>>2]|0;if(n|0){t=n;u=o;continue}o=t+16|0;n=c[o>>2]|0;if(!n){v=t;w=u;break}else{t=n;u=o}}if(w>>>0<h>>>0)Sa();else{c[w>>2]=0;s=v;break}}else{o=c[g+8>>2]|0;if(o>>>0<h>>>0)Sa();n=o+12|0;if((c[n>>2]|0)!=(g|0))Sa();m=l+8|0;if((c[m>>2]|0)==(g|0)){c[n>>2]=l;c[m>>2]=o;s=l;break}else Sa()}while(0);if(i|0){l=c[g+28>>2]|0;o=167264+(l<<2)|0;if((g|0)==(c[o>>2]|0)){c[o>>2]=s;if(!s){c[41741]=c[41741]&~(1<<l);break}}else{if(i>>>0<(c[41744]|0)>>>0)Sa();l=i+16|0;if((c[l>>2]|0)==(g|0))c[l>>2]=s;else c[i+20>>2]=s;if(!s)break}l=c[41744]|0;if(s>>>0<l>>>0)Sa();c[s+24>>2]=i;o=g+16|0;m=c[o>>2]|0;do if(m|0)if(m>>>0<l>>>0)Sa();else{c[s+16>>2]=m;c[m+24>>2]=s;break}while(0);m=c[o+4>>2]|0;if(m|0)if(m>>>0<(c[41744]|0)>>>0)Sa();else{c[s+20>>2]=m;c[m+24>>2]=s;break}}}else{m=c[g+8>>2]|0;l=c[g+12>>2]|0;i=167e3+(q<<1<<2)|0;if((m|0)!=(i|0)){if(m>>>0<h>>>0)Sa();if((c[m+12>>2]|0)!=(g|0))Sa()}if((l|0)==(m|0)){c[41740]=c[41740]&~(1<<q);break}if((l|0)!=(i|0)){if(l>>>0<h>>>0)Sa();i=l+8|0;if((c[i>>2]|0)==(g|0))x=i;else Sa()}else x=l+8|0;c[m+12>>2]=l;c[x>>2]=m}while(0);if(f>>>0<16){c[d>>2]=p|e&1|2;x=a+p+4|0;c[x>>2]=c[x>>2]|1;k=a;return k|0}else{x=a+b|0;c[d>>2]=e&1|b|2;c[x+4>>2]=f|3;b=x+f+4|0;c[b>>2]=c[b>>2]|1;ge(x,f);k=a;return k|0}return 0}function Be(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;f=a+((e<<5)+-16<<2)|0;g=c[f>>2]|0;c[d>>2]=g;h=c[f+4>>2]|0;i=d+4|0;c[i>>2]=h;j=c[f+8>>2]|0;k=d+8|0;c[k>>2]=j;l=c[f+12>>2]|0;m=d+12|0;c[m>>2]=l;n=c[f+16>>2]|0;o=d+16|0;c[o>>2]=n;p=c[f+20>>2]|0;q=d+20|0;c[q>>2]=p;r=c[f+24>>2]|0;s=d+24|0;c[s>>2]=r;t=c[f+28>>2]|0;u=d+28|0;c[u>>2]=t;v=c[f+32>>2]|0;w=d+32|0;c[w>>2]=v;x=c[f+36>>2]|0;y=d+36|0;c[y>>2]=x;z=c[f+40>>2]|0;A=d+40|0;c[A>>2]=z;B=c[f+44>>2]|0;C=d+44|0;c[C>>2]=B;D=c[f+48>>2]|0;E=d+48|0;c[E>>2]=D;F=c[f+52>>2]|0;G=d+52|0;c[G>>2]=F;H=c[f+56>>2]|0;I=d+56|0;c[I>>2]=H;J=c[f+60>>2]|0;f=d+60|0;c[f>>2]=J;K=e<<1;if(!K)return;L=e<<4;e=B;B=D;D=F;F=H;H=J;J=g;g=h;h=j;j=l;l=n;n=p;p=r;r=t;t=v;v=x;x=z;z=0;while(1){M=z<<4;N=a+(M<<2)|0;c[d>>2]=J^c[N>>2];c[i>>2]=g^c[N+4>>2];c[k>>2]=h^c[N+8>>2];c[m>>2]=j^c[N+12>>2];c[o>>2]=l^c[N+16>>2];c[q>>2]=n^c[N+20>>2];c[s>>2]=p^c[N+24>>2];c[u>>2]=r^c[N+28>>2];c[w>>2]=t^c[N+32>>2];c[y>>2]=v^c[N+36>>2];c[A>>2]=x^c[N+40>>2];c[C>>2]=e^c[N+44>>2];c[E>>2]=B^c[N+48>>2];c[G>>2]=D^c[N+52>>2];c[I>>2]=F^c[N+56>>2];c[f>>2]=H^c[N+60>>2];Je(d);N=z<<3;O=b+(N<<2)|0;c[O>>2]=c[d>>2];c[O+4>>2]=c[i>>2];c[O+8>>2]=c[k>>2];c[O+12>>2]=c[m>>2];c[O+16>>2]=c[o>>2];c[O+20>>2]=c[q>>2];c[O+24>>2]=c[s>>2];c[O+28>>2]=c[u>>2];c[O+32>>2]=c[w>>2];c[O+36>>2]=c[y>>2];c[O+40>>2]=c[A>>2];c[O+44>>2]=c[C>>2];c[O+48>>2]=c[E>>2];c[O+52>>2]=c[G>>2];c[O+56>>2]=c[I>>2];c[O+60>>2]=c[f>>2];O=a+((M|16)<<2)|0;c[d>>2]=c[d>>2]^c[O>>2];c[i>>2]=c[i>>2]^c[O+4>>2];c[k>>2]=c[k>>2]^c[O+8>>2];c[m>>2]=c[m>>2]^c[O+12>>2];c[o>>2]=c[o>>2]^c[O+16>>2];c[q>>2]=c[q>>2]^c[O+20>>2];c[s>>2]=c[s>>2]^c[O+24>>2];c[u>>2]=c[u>>2]^c[O+28>>2];c[w>>2]=c[w>>2]^c[O+32>>2];c[y>>2]=c[y>>2]^c[O+36>>2];c[A>>2]=c[A>>2]^c[O+40>>2];c[C>>2]=c[C>>2]^c[O+44>>2];c[E>>2]=c[E>>2]^c[O+48>>2];c[G>>2]=c[G>>2]^c[O+52>>2];c[I>>2]=c[I>>2]^c[O+56>>2];c[f>>2]=c[f>>2]^c[O+60>>2];Je(d);O=b+(N+L<<2)|0;c[O>>2]=c[d>>2];c[O+4>>2]=c[i>>2];c[O+8>>2]=c[k>>2];c[O+12>>2]=c[m>>2];c[O+16>>2]=c[o>>2];c[O+20>>2]=c[q>>2];c[O+24>>2]=c[s>>2];c[O+28>>2]=c[u>>2];c[O+32>>2]=c[w>>2];c[O+36>>2]=c[y>>2];c[O+40>>2]=c[A>>2];c[O+44>>2]=c[C>>2];c[O+48>>2]=c[E>>2];c[O+52>>2]=c[G>>2];c[O+56>>2]=c[I>>2];c[O+60>>2]=c[f>>2];O=z+2|0;if(O>>>0>=K>>>0)break;e=c[C>>2]|0;B=c[E>>2]|0;D=c[G>>2]|0;F=c[I>>2]|0;H=c[f>>2]|0;J=c[d>>2]|0;g=c[i>>2]|0;h=c[k>>2]|0;j=c[m>>2]|0;l=c[o>>2]|0;n=c[q>>2]|0;p=c[s>>2]|0;r=c[u>>2]|0;t=c[w>>2]|0;v=c[y>>2]|0;x=c[A>>2]|0;z=O}return}function Fe(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;h=i;i=i+16|0;if((i|0)>=(j|0))ca();k=h;a:do switch(d|0){case 2:{l=f;m=0;while(1){n=a[l>>0]|0;o=(n<<24>>24)+-48|0;if(o>>>0>=10){p=0;break a}q=a[l+1>>0]|0;if((q+-48|0)>>>0<10){r=(o*10|0)+-48+q|0;q=a[l+2>>0]|0;if((q+-48|0)>>>0<10){s=3;t=(r*10|0)+-48+q|0}else{s=2;t=r}if((t|0)>255|n<<24>>24==48){p=0;break a}else{u=s;v=t}}else{u=1;v=o}a[g+m>>0]=v;o=a[l+u>>0]|0;if((m|0)==3&o<<24>>24==0){p=1;break a}if(o<<24>>24!=46){p=0;break a}m=m+1|0;if((m|0)>=4){p=0;break}else l=l+(u+1)|0}break}case 10:{l=a[f>>0]|0;if(l<<24>>24==58){m=f+1|0;if((a[m>>0]|0)==58){w=m;x=58;y=-1;z=0}else{p=0;break a}}else{w=f;x=l;y=-1;z=0}b:while(1){l=(y|0)<0;if(l&x<<24>>24==58){b[k+((z&7)<<1)>>1]=0;m=w+1|0;o=a[m>>0]|0;if(!(o<<24>>24)){A=m;B=z;C=z;D=0;break}if((z|0)==7){p=0;break a}else{E=m;F=o;G=z}}else{o=x;m=0;n=0;while(1){r=o<<24>>24;q=r+-48|0;if(q>>>0>=10){H=r|32;r=H+-87|0;if((H+-97|0)>>>0<6&(r|0)>-1)I=r;else{J=m;K=n;L=18;break}}else I=q;q=I+(n<<4)|0;r=m+1|0;if((r|0)>=4){M=r;N=q;break}o=a[w+r>>0]|0;m=r;n=q}if((L|0)==18){L=0;if(!J){p=0;break a}else{M=J;N=K}}b[k+((z&7)<<1)>>1]=N;n=a[w+M>>0]|0;if(n<<24>>24==0?(z|0)==7|(y|0)>-1:0){A=w;B=y;C=z;D=0;break}if((z|0)==7){p=0;break a}switch(n<<24>>24){case 46:{O=w;P=l;Q=y;R=z;L=23;break b;break}case 58:break;default:{p=0;break a}}n=w+(M+1)|0;E=n;F=a[n>>0]|0;G=y}w=E;x=F;y=G;z=z+1|0}if((L|0)==23){if((R|0)<6&P){p=0;break a}A=O;B=Q;C=R+1|0;D=1}if((B|0)>-1?(n=k+(B<<1)|0,Fn(n+14+(0-C<<1)|0,n|0,C+1-B<<1|0)|0,(7-C|0)>0):0){Gl(n|0,0,14-(C<<1)|0)|0;S=g;T=0}else{S=g;T=0}while(1){n=k+(T<<1)|0;a[S>>0]=(e[n>>1]|0)>>>8;a[S+1>>0]=b[n>>1];T=T+1|0;if((T|0)==8)break;else S=S+2|0}if(D|0?(Fe(2,A,g+12|0)|0)<1:0){p=0;break a}p=1;break}default:{c[($r()|0)>>2]=97;p=-1}}while(0);i=h;return p|0}function Ge(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=i;i=i+64|0;if((i|0)>=(j|0))ca();f=e;g=0;do{h=g<<2;c[f+(g<<2)>>2]=(d[b+(h|3)>>0]|0)<<24|((d[b+(h|2)>>0]|0)<<16|((d[b+(h|1)>>0]|0)<<8|(d[b+h>>0]|0)));g=g+1|0}while((g|0)!=16);g=a+8|0;b=c[g>>2]|0;h=a+12|0;k=c[h>>2]|0;l=a+16|0;m=c[l>>2]|0;n=a+20|0;a=c[n>>2]|0;o=b;p=k;q=m;r=a;s=0;while(1){t=((r^q)&p^r)+o+(c[f+(s<<2)>>2]|0)+(c[22196+(s<<2)>>2]|0)|0;u=(t>>>25|t<<7)+p|0;t=s|1;v=(c[f+(t<<2)>>2]|0)+r+(c[22196+(t<<2)>>2]|0)+(u&(q^p)^q)|0;t=(v>>>20|v<<12)+u|0;v=s|2;w=(c[f+(v<<2)>>2]|0)+q+(c[22196+(v<<2)>>2]|0)+(t&(u^p)^p)|0;v=(w>>>15|w<<17)+t|0;w=s|3;x=(c[f+(w<<2)>>2]|0)+p+(c[22196+(w<<2)>>2]|0)+(v&(t^u)^u)|0;w=(x>>>10|x<<22)+v|0;s=s+4|0;if(s>>>0>=16){y=u;z=w;A=v;B=t;C=16;break}else{o=u;p=w;q=v;r=t}}while(1){r=(B&(A^z)^A)+y+(c[f+((C*5&12|1)<<2)>>2]|0)+(c[22196+(C<<2)>>2]|0)|0;q=(r>>>27|r<<5)+z|0;r=C|1;p=(c[f+(((r*5|0)+1&15)<<2)>>2]|0)+B+(c[22196+(r<<2)>>2]|0)+((q^z)&A^z)|0;r=(p>>>23|p<<9)+q|0;p=C|2;o=(c[f+((p*5&14|1)<<2)>>2]|0)+A+(c[22196+(p<<2)>>2]|0)+((r^q)&z^q)|0;p=(o>>>18|o<<14)+r|0;o=C|3;s=(c[f+(((o*5|0)+1&15)<<2)>>2]|0)+z+(c[22196+(o<<2)>>2]|0)+((p^r)&q^r)|0;o=(s>>>12|s<<20)+p|0;C=C+4|0;if(C>>>0>=32){D=q;E=o;F=p;G=r;H=32;break}else{y=q;z=o;A=p;B=r}}while(1){B=F^E;A=(B^G)+D+(c[f+(((H*3|0)+5&13)<<2)>>2]|0)+(c[22196+(H<<2)>>2]|0)|0;z=(A>>>28|A<<4)+E|0;A=H|1;y=(c[f+(((A*3|0)+5&15)<<2)>>2]|0)+G+(c[22196+(A<<2)>>2]|0)+(B^z)|0;B=(y>>>21|y<<11)+z|0;y=H|2;A=(c[f+(((y*3|0)+5&15)<<2)>>2]|0)+F+(c[22196+(y<<2)>>2]|0)+(z^E^B)|0;y=(A>>>16|A<<16)+B|0;A=H|3;C=(c[f+(((A*3|0)+5&15)<<2)>>2]|0)+E+(c[22196+(A<<2)>>2]|0)+(B^z^y)|0;A=(C>>>9|C<<23)+y|0;H=H+4|0;if(H>>>0>=48){I=z;J=A;K=y;L=B;M=48;break}else{D=z;E=A;F=y;G=B}}while(1){G=((J|~L)^K)+I+(c[f+((M*7&12)<<2)>>2]|0)+(c[22196+(M<<2)>>2]|0)|0;F=(G>>>26|G<<6)+J|0;G=M|1;E=(c[f+((G*7&15)<<2)>>2]|0)+L+(c[22196+(G<<2)>>2]|0)+((F|~K)^J)|0;G=(E>>>22|E<<10)+F|0;E=M|2;D=(c[f+((E*7&14)<<2)>>2]|0)+K+(c[22196+(E<<2)>>2]|0)+((G|~J)^F)|0;E=(D>>>17|D<<15)+G|0;D=M|3;H=(c[f+((D*7&15)<<2)>>2]|0)+J+(c[22196+(D<<2)>>2]|0)+((E|~F)^G)|0;D=(H>>>11|H<<21)+E|0;M=M+4|0;if(M>>>0>=64){N=F;O=G;P=E;Q=D;break}else{I=F;J=D;K=E;L=G}}c[g>>2]=b+N;c[h>>2]=k+Q;c[l>>2]=m+P;c[n>>2]=a+O;i=e;return}function Ee(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;d=i;i=i+48|0;if((i|0)>=(j|0))ca();e=d+16|0;f=d;h[k>>3]=a;g=c[k>>2]|0;l=c[k+4>>2]|0;m=kr(g|0,l|0,63)|0;n=l&2147483647;do if(n>>>0<1074752123)if((l&1048575|0)!=598523){o=(m|0)!=0;if(n>>>0<1073928573)if(o){p=a+1.5707963267341256;q=p+6.077100506506192e-11;h[b>>3]=q;h[b+8>>3]=p-q+6.077100506506192e-11;r=-1;break}else{q=a+-1.5707963267341256;p=q+-6.077100506506192e-11;h[b>>3]=p;h[b+8>>3]=q-p+-6.077100506506192e-11;r=1;break}else if(o){p=a+3.1415926534682512;q=p+1.2154201013012384e-10;h[b>>3]=q;h[b+8>>3]=p-q+1.2154201013012384e-10;r=-2;break}else{q=a+-3.1415926534682512;p=q+-1.2154201013012384e-10;h[b>>3]=p;h[b+8>>3]=q-p+-1.2154201013012384e-10;r=2;break}}else s=21;else{if(n>>>0>=1075594812){if(n>>>0<1094263291){s=21;break}if(n>>>0>2146435071){p=a-a;h[b+8>>3]=p;h[b>>3]=p;r=0;break}c[k>>2]=g;c[k+4>>2]=l&1048575|1096810496;p=+h[k>>3];q=+(~~p|0);h[e>>3]=q;t=(p-q)*16777216.0;q=+(~~t|0);h[e+8>>3]=q;p=(t-q)*16777216.0;h[e+16>>3]=p;if(p==0.0){o=1;while(1)if(+h[e+(o<<3)>>3]==0.0)o=o+-1|0;else{u=o;break}}else u=2;o=ke(e,f,(n>>>20)+-1046|0,u+1|0,1)|0;p=+h[f>>3];q=+h[f+8>>3];if(!m){h[b>>3]=p;h[b+8>>3]=q;r=o;break}else{h[b>>3]=-p;h[b+8>>3]=-q;r=0-o|0;break}}if(n>>>0<1075183037){if((n|0)==1074977148){s=21;break}if(!m){q=a+-4.712388980202377;p=q+-1.8231301519518578e-10;h[b>>3]=p;h[b+8>>3]=q-p+-1.8231301519518578e-10;r=3;break}else{p=a+4.712388980202377;q=p+1.8231301519518578e-10;h[b>>3]=q;h[b+8>>3]=p-q+1.8231301519518578e-10;r=-3;break}}else{if((n|0)==1075388923){s=21;break}if(!m){q=a+-6.2831853069365025;p=q+-2.430840202602477e-10;h[b>>3]=p;h[b+8>>3]=q-p+-2.430840202602477e-10;r=4;break}else{p=a+6.2831853069365025;q=p+2.430840202602477e-10;h[b>>3]=q;h[b+8>>3]=p-q+2.430840202602477e-10;r=-4;break}}}while(0);if((s|0)==21){q=a*.6366197723675814+6755399441055744.0+-6755399441055744.0;s=~~q;p=a-q*1.5707963267341256;a=q*6.077100506506192e-11;t=p-a;h[b>>3]=t;h[k>>3]=t;m=kr(c[k>>2]|0,c[k+4>>2]|0,52)|0;f=n>>>20;if((f-(m&2047)|0)>16){v=q*6.077100506303966e-11;w=p-v;x=q*2.0222662487959506e-21-(p-w-v);v=w-x;h[b>>3]=v;h[k>>3]=v;m=kr(c[k>>2]|0,c[k+4>>2]|0,52)|0;if((f-(m&2047)|0)>49){y=q*2.0222662487111665e-21;z=w-y;A=q*8.4784276603689e-32-(w-z-y);y=z-A;h[b>>3]=y;B=y;C=z;D=A}else{B=v;C=w;D=x}}else{B=t;C=p;D=a}h[b+8>>3]=C-B-D;r=s}i=d;return r|0}function De(a,b){a=a|0;b=+b;var d=0,e=0,f=0,g=0,i=0.0,j=0.0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0,H=0.0,I=0,J=0.0,K=0,L=0.0,M=0.0,N=0.0,Q=0.0,T=0.0,U=0.0,V=0.0;h[k>>3]=b;d=c[k>>2]|0;e=c[k+4>>2]|0;f=kr(d|0,e|0,63)|0;g=e&2147483647;do if((g|(d|0-d)>>>31)>>>0>2146435072)i=b;else{if(!a){i=+Yi(b);break}if((a|0)<0){j=-b;l=~a;m=f^1}else{j=b;l=a+-1|0;m=f}if(!l){i=+Xi(j);break}e=m&a;n=+O(+j);a:do if(!((g|0)==2146435072|(g|d|0)==0)){o=+(l|0);if(o<n){if(g>>>0<=1389363199){p=+Yi(n);q=+Xi(n);if((l|0)>0){r=p;s=q;t=0}else{u=q;break}while(1){t=t+1|0;q=s*(+(t|0)*2.0/n)-r;if((t|0)==(l|0)){u=q;break a}else{p=s;s=q;r=p}}}switch(l&3|0){case 0:{v=+S(+n)-+R(+n);break}case 1:{v=-+R(+n)-+S(+n);break}case 2:{v=+R(+n)-+S(+n);break}case 3:{v=+R(+n)+ +S(+n);break}default:{}}u=v*.5641895835477563/+P(+n);break}if(g>>>0<1041235968){if((l|0)>32){u=0.0;break}p=n*.5;if((l+1|0)<2){w=1.0;x=p}else{q=1.0;y=p;z=2;while(1){A=q*+(z|0);B=p*y;if((z|0)>(l|0)){w=A;x=B;break}else{q=A;y=B;z=z+1|0}}}u=x/w;break}y=o+1.0;q=y*2.0/n;p=2.0/n;B=q+p;A=q*B+-1.0;if(A<1.0e9){z=1;C=q;D=A;A=B;while(1){E=z+1|0;A=p+A;B=D*A-C;if(!(B<1.0e9)){F=E;G=z;break}else{H=D;z=E;D=B;C=H}}if((G|0)>-2){I=F;J=0.0;K=29}else L=0.0}else{I=1;J=0.0;K=29}if((K|0)==29)while(1){K=0;C=1.0/((y+ +(I|0))*2.0/n-J);if((I|0)>0){I=I+-1|0;J=C;K=29}else{L=C;break}}z=(l|0)>0;if(y*+Z(+(+O(+q)))<709.782712893384)if(z){C=L;D=1.0;E=l;while(1){A=D*(+(E|0)*2.0)/n-C;if((E|0)>1){p=D;D=A;E=E+-1|0;C=p}else{M=D;N=A;Q=L;break}}}else{M=L;N=1.0;Q=L}else if(z){D=L;C=1.0;E=l;q=L;while(1){y=C*(+(E|0)*2.0)/n-D;if(y>3273390607896141870013189.0e126){T=C/y;U=1.0;V=q/y}else{T=C;U=y;V=q}if((E|0)>1){D=T;C=U;E=E+-1|0;q=V}else{M=T;N=U;Q=V;break}}}else{M=L;N=1.0;Q=L}q=+Yi(n);C=+Xi(n);if(!(+O(+q)>=+O(+C))){u=Q*C/M;break}else{u=Q*q/N;break}}else u=0.0;while(0);i=e|0?-u:u}while(0);return +i}function Ne(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0,R=0,S=0,T=0;g=i;i=i+16|0;if((i|0)>=(j|0))ca();k=g;a:do if(!d){l=b;m=21}else{n=b;o=d;p=e;b:while(1){q=a[p>>0]|0;switch(q<<24>>24){case 0:{l=n;m=21;break a;break}case 37:{r=p+1|0;s=a[r>>0]|0;if(s<<24>>24==37){t=r;u=37;m=3}else{v=r;r=s;s=0;c:while(1){w=r<<24>>24;switch(w|0){case 61:{x=v+1|0;y=s;break}case 33:case 43:case 40:case 94:{x=v;y=s;break}case 45:{x=v;y=1;break}default:{z=v;A=r;B=w;C=s;break c}}w=x+1|0;v=w;r=a[w>>0]|0;s=y}s=B+-48|0;if(s>>>0<10){r=z;v=0;w=s;while(1){s=w+(v*10|0)|0;D=r+1|0;E=a[D>>0]|0;w=(E<<24>>24)+-48|0;if(w>>>0>=10){F=D;G=E;H=s;break}else{r=D;v=s}}}else{F=z;G=A;H=0}if(G<<24>>24==35){v=F+1|0;r=a[v>>0]|0;w=(r<<24>>24)+-48|0;if(w>>>0<10){s=v;D=w;w=0;while(1){E=D+(w*10|0)|0;I=s+1|0;J=a[I>>0]|0;D=(J<<24>>24)+-48|0;if(D>>>0>=10){K=I;L=J;M=E;break}else{s=I;w=E}}}else{K=v;L=r;M=0}}else{K=F;L=G;M=0}if(L<<24>>24==46){w=K+1|0;s=(a[w>>0]|0)+-48|0;if(s>>>0<10){D=w;E=s;s=0;while(1){I=E+(s*10|0)|0;J=D+1|0;E=(a[J>>0]|0)+-48|0;if(E>>>0>=10){N=J;O=I;break}else{D=J;s=I}}}else{N=w;O=0}}else{N=K;O=2}s=M+1+O|0;D=(c[f>>2]|0)+(8-1)&~(8-1);P=+h[D>>3];c[f>>2]=D+8;c[k>>2]=(C|0)==0&(H|0)>(s|0)?H:s;c[k+4>>2]=O;h[k+8>>3]=P;s=rp(n,o,159685,k)|0;if(o>>>0<=s>>>0)break b;Q=n+s|0;R=o-s|0;S=N}break}default:{t=p;u=q;m=3}}if((m|0)==3){m=0;a[n>>0]=u;Q=n+1|0;R=o+-1|0;S=t}if(!R){l=Q;m=21;break a}else{n=Q;o=R;p=S+1|0}}c[($r()|0)>>2]=7;T=-1}while(0);if((m|0)==21)T=l-b|0;i=g;return T|0}function Ie(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;f=i;i=i+208|0;if((i|0)>=(j|0))ca();g=f+8|0;h=f;k=$(d,b)|0;b=h;c[b>>2]=1;c[b+4>>2]=0;if(k|0){b=0-d|0;c[g+4>>2]=d;c[g>>2]=d;l=d;m=d;n=2;while(1){o=m+d+l|0;c[g+(n<<2)>>2]=o;if(o>>>0<k>>>0){p=l;l=o;n=n+1|0;m=p}else break}m=a+k+b|0;k=h+4|0;if(m>>>0>a>>>0){n=m;l=1;p=a;o=1;while(1){do if((l&3|0)==3){oh(p,d,e,o,g);q=c[k>>2]|0;r=q<<30|(c[h>>2]|0)>>>2;c[h>>2]=r;c[k>>2]=q>>>2;s=r;t=o+2|0}else{r=o+-1|0;if((c[g+(r<<2)>>2]|0)>>>0<(n-p|0)>>>0)oh(p,d,e,o,g);else Ze(p,d,e,h,o,0,g);if((o|0)==1){q=c[h>>2]|0;c[k>>2]=q>>>31|c[k>>2]<<1;u=q<<1;c[h>>2]=u;s=u;t=0;break}if(r>>>0>31){u=c[h>>2]|0;c[k>>2]=u;c[h>>2]=0;v=o+-33|0;w=u;x=0}else{v=r;w=c[k>>2]|0;x=c[h>>2]|0}c[k>>2]=x>>>(32-v|0)|w<<v;r=x<<v;c[h>>2]=r;s=r;t=1}while(0);l=s|1;c[h>>2]=l;r=p+d|0;if(r>>>0>=m>>>0){y=r;z=t;break}else{p=r;o=t}}}else{y=a;z=1}Ze(y,d,e,h,z,0,g);a=h+4|0;t=c[h>>2]|0;o=c[a>>2]|0;p=(o|0)==0;if(!((z|0)==1&(t|0)==1&p)){m=p;p=t;t=o;o=y;y=z;while(1){if((y|0)<2){z=p+-1|0;do if(z){if(!(z&1)){l=z;s=0;while(1){v=s+1|0;l=l>>>1;if(l&1|0){A=v;break}else s=v}}else{if(m)B=32;else{if(!(t&1)){C=t;D=0}else{E=0;F=p;G=t;H=0;break}while(1){s=D+1|0;C=C>>>1;if(C&1|0){B=s;break}else D=s}}A=B+32|0}if(A>>>0>31){I=A;J=28}else{E=A;F=p;G=t;H=A}}else{I=32;J=28}while(0);if((J|0)==28){J=0;c[h>>2]=t;c[k>>2]=0;E=I+-32|0;F=t;G=0;H=I}c[h>>2]=G<<32-E|F>>>E;c[k>>2]=G>>>E;K=o+b|0;L=H+y|0}else{z=p>>>30;s=y+-2|0;c[h>>2]=(p<<1&2147483646|z<<31)^3;c[k>>2]=(z|t<<2)>>>1;Ze(o+(0-(c[g+(s<<2)>>2]|0))+b|0,d,e,h,y+-1|0,1,g);z=c[h>>2]|0;c[k>>2]=z>>>31|c[k>>2]<<1;c[h>>2]=z<<1|1;z=o+b|0;Ze(z,d,e,h,s,1,g);K=z;L=s}p=c[h>>2]|0;t=c[a>>2]|0;m=(t|0)==0;if((L|0)==1&(p|0)==1&m)break;else{o=K;y=L}}}}i=f;return}function Ce(a,b){a=+a;b=+b;var d=0,e=0,f=0,g=0,i=0,j=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0.0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;h[k>>3]=b;f=c[k>>2]|0;g=c[k+4>>2]|0;i=kr(d|0,e|0,52)|0;j=i&2047;i=kr(f|0,g|0,52)|0;l=i&2047;i=e&-2147483648;m=fr(f|0,g|0,1)|0;n=D;a:do if(!((m|0)==0&(n|0)==0)?(o=+O(+b),h[k>>3]=o,p=c[k+4>>2]|0,!(p>>>0>2146435072|(p|0)==2146435072&(c[k>>2]|0)>>>0>0|(j|0)==2047)):0){p=fr(d|0,e|0,1)|0;q=D;if(!(q>>>0>n>>>0|(q|0)==(n|0)&p>>>0>m>>>0))return +((p|0)==(m|0)&(q|0)==(n|0)?a*0.0:a);if(!j){q=fr(d|0,e|0,12)|0;p=D;if((p|0)>-1|(p|0)==-1&q>>>0>4294967295){r=q;q=p;p=0;while(1){s=p+-1|0;r=fr(r|0,q|0,1)|0;q=D;if(!((q|0)>-1|(q|0)==-1&r>>>0>4294967295)){t=s;break}else p=s}}else t=0;p=fr(d|0,e|0,1-t|0)|0;u=p;v=D;w=t}else{u=d;v=e&1048575|1048576;w=j}if(!l){p=fr(f|0,g|0,12)|0;r=D;if((r|0)>-1|(r|0)==-1&p>>>0>4294967295){q=p;p=r;r=0;while(1){s=r+-1|0;q=fr(q|0,p|0,1)|0;p=D;if(!((p|0)>-1|(p|0)==-1&q>>>0>4294967295)){x=s;break}else r=s}}else x=0;r=fr(f|0,g|0,1-x|0)|0;y=r;z=D;A=x}else{y=f;z=g&1048575|1048576;A=l}r=jr(u|0,v|0,y|0,z|0)|0;q=D;p=(q|0)>-1|(q|0)==-1&r>>>0>4294967295;b:do if((w|0)>(A|0)){s=p;B=r;C=q;E=u;F=v;G=w;while(1){if(s)if((E|0)==(y|0)&(F|0)==(z|0))break;else{H=B;I=C}else{H=E;I=F}J=fr(H|0,I|0,1)|0;K=D;L=G+-1|0;M=jr(J|0,K|0,y|0,z|0)|0;N=D;P=(N|0)>-1|(N|0)==-1&M>>>0>4294967295;if((L|0)>(A|0)){s=P;B=M;C=N;E=J;F=K;G=L}else{Q=P;R=J;S=K;T=M;U=N;V=L;break b}}W=a*0.0;break a}else{Q=p;R=u;S=v;T=r;U=q;V=w}while(0);if(Q)if((R|0)==(y|0)&(S|0)==(z|0)){W=a*0.0;break}else{X=U;Y=T}else{X=S;Y=R}if(X>>>0<1048576|(X|0)==1048576&Y>>>0<0){q=Y;r=X;p=V;while(1){G=fr(q|0,r|0,1)|0;F=D;E=p+-1|0;if(F>>>0<1048576|(F|0)==1048576&G>>>0<0){q=G;r=F;p=E}else{Z=G;_=F;$=E;break}}}else{Z=Y;_=X;$=V}if(($|0)>0){p=Gr(Z|0,_|0,0,-1048576)|0;r=D;q=fr($|0,0,52)|0;aa=r|D;ba=p|q}else{q=kr(Z|0,_|0,1-$|0)|0;aa=D;ba=q}c[k>>2]=ba;c[k+4>>2]=aa|i;W=+h[k>>3]}else ca=3;while(0);if((ca|0)==3){o=a*b;W=o/o}return +W}function Je(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;b=i;i=i+64|0;if((i|0)>=(j|0))ca();d=b;e=d;f=a;g=e+64|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));f=c[d+40>>2]|0;e=c[d+24>>2]|0;g=c[d+56>>2]|0;h=c[d+8>>2]|0;k=c[d+60>>2]|0;l=c[d+44>>2]|0;m=c[d+12>>2]|0;n=c[d+28>>2]|0;o=c[d>>2]|0;p=c[d+48>>2]|0;q=c[d+16>>2]|0;r=c[d+32>>2]|0;s=c[d+20>>2]|0;t=c[d+4>>2]|0;u=c[d+36>>2]|0;v=c[d+52>>2]|0;d=0;while(1){w=p+o|0;x=(w<<7|w>>>25)^q;w=x+o|0;y=(w<<9|w>>>23)^r;w=y+x|0;z=(w<<13|w>>>19)^p;w=z+y|0;A=(w<<18|w>>>14)^o;w=t+s|0;B=(w<<7|w>>>25)^u;w=B+s|0;C=(w<<9|w>>>23)^v;w=C+B|0;D=(w<<13|w>>>19)^t;w=D+C|0;E=(w<<18|w>>>14)^s;w=e+f|0;F=(w<<7|w>>>25)^g;w=F+f|0;G=(w<<9|w>>>23)^h;w=G+F|0;H=(w<<13|w>>>19)^e;w=H+G|0;I=(w<<18|w>>>14)^f;w=l+k|0;J=(w<<7|w>>>25)^m;w=J+k|0;K=(w<<9|w>>>23)^n;w=K+J|0;L=(w<<13|w>>>19)^l;w=L+K|0;M=(w<<18|w>>>14)^k;w=J+A|0;N=(w<<7|w>>>25)^D;D=N+A|0;w=(D<<9|D>>>23)^G;G=w+N|0;D=(G<<13|G>>>19)^J;J=D+w|0;G=(J<<18|J>>>14)^A;A=x+E|0;J=(A<<7|A>>>25)^H;H=J+E|0;A=(H<<9|H>>>23)^K;K=A+J|0;H=(K<<13|K>>>19)^x;x=H+A|0;K=(x<<18|x>>>14)^E;E=B+I|0;x=(E<<7|E>>>25)^L;L=x+I|0;E=(L<<9|L>>>23)^y;y=E+x|0;L=(y<<13|y>>>19)^B;B=L+E|0;y=(B<<18|B>>>14)^I;I=F+M|0;B=(I<<7|I>>>25)^z;z=B+M|0;I=(z<<9|z>>>23)^C;C=I+B|0;z=(C<<13|C>>>19)^F;F=z+I|0;C=(F<<18|F>>>14)^M;d=d+2|0;if(d>>>0>=8){O=N;P=K;Q=x;R=E;S=L;T=y;U=B;V=I;W=z;X=C;Y=w;Z=D;_=G;$=J;aa=A;ba=H;break}else{f=y;e=J;g=z;h=w;k=C;l=x;m=D;n=A;o=G;p=B;q=H;r=E;s=K;t=N;u=L;v=I}}c[a>>2]=(c[a>>2]|0)+_;_=a+4|0;c[_>>2]=(c[_>>2]|0)+O;O=a+8|0;c[O>>2]=(c[O>>2]|0)+Y;Y=a+12|0;c[Y>>2]=(c[Y>>2]|0)+Z;Z=a+16|0;c[Z>>2]=(c[Z>>2]|0)+ba;ba=a+20|0;c[ba>>2]=(c[ba>>2]|0)+P;P=a+24|0;c[P>>2]=(c[P>>2]|0)+$;$=a+28|0;c[$>>2]=(c[$>>2]|0)+aa;aa=a+32|0;c[aa>>2]=(c[aa>>2]|0)+R;R=a+36|0;c[R>>2]=(c[R>>2]|0)+S;S=a+40|0;c[S>>2]=(c[S>>2]|0)+T;T=a+44|0;c[T>>2]=(c[T>>2]|0)+Q;Q=a+48|0;c[Q>>2]=(c[Q>>2]|0)+U;U=a+52|0;c[U>>2]=(c[U>>2]|0)+V;V=a+56|0;c[V>>2]=(c[V>>2]|0)+W;W=a+60|0;c[W>>2]=(c[W>>2]|0)+X;i=b;return}function Oe(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0;g=a;h=b;i=h;j=d;k=e;l=k;if(!i){m=(f|0)!=0;if(!l){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return (D=n,o)|0}else{if(!m){n=0;o=0;return (D=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return (D=n,o)|0}}m=(l|0)==0;do if(j){if(!m){p=(ba(l|0)|0)-(ba(i|0)|0)|0;if(p>>>0<=31){q=p+1|0;r=31-p|0;s=p-31>>31;t=q;u=g>>>(q>>>0)&s|i<<r;v=i>>>(q>>>0)&s;w=0;x=g<<r;break}if(!f){n=0;o=0;return (D=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (D=n,o)|0}r=j-1|0;if(r&j|0){s=(ba(j|0)|0)+33-(ba(i|0)|0)|0;q=64-s|0;p=32-s|0;y=p>>31;z=s-32|0;A=z>>31;t=s;u=p-1>>31&i>>>(z>>>0)|(i<<p|g>>>(s>>>0))&A;v=A&i>>>(s>>>0);w=g<<q&y;x=(i<<q|g>>>(z>>>0))&y|g<<p&s-33>>31;break}if(f|0){c[f>>2]=r&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return (D=n,o)|0}else{r=Xn(j|0)|0;n=i>>>(r>>>0)|0;o=i<<32-r|g>>>(r>>>0)|0;return (D=n,o)|0}}else{if(m){if(f|0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return (D=n,o)|0}if(!g){if(f|0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return (D=n,o)|0}r=l-1|0;if(!(r&l)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=r&i|b&0}n=0;o=i>>>((Xn(l|0)|0)>>>0);return (D=n,o)|0}r=(ba(l|0)|0)-(ba(i|0)|0)|0;if(r>>>0<=30){s=r+1|0;p=31-r|0;t=s;u=i<<p|g>>>(s>>>0);v=i>>>(s>>>0);w=0;x=g<<p;break}if(!f){n=0;o=0;return (D=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (D=n,o)|0}while(0);if(!t){B=x;C=w;E=v;F=u;G=0;H=0}else{b=d|0|0;d=k|e&0;e=Gr(b|0,d|0,-1,-1)|0;k=D;h=x;x=w;w=v;v=u;u=t;t=0;do{a=h;h=x>>>31|h<<1;x=t|x<<1;g=v<<1|a>>>31|0;a=v>>>31|w<<1|0;jr(e|0,k|0,g|0,a|0)|0;i=D;l=i>>31|((i|0)<0?-1:0)<<1;t=l&1;v=jr(g|0,a|0,l&b|0,(((i|0)<0?-1:0)>>31|((i|0)<0?-1:0)<<1)&d|0)|0;w=D;u=u-1|0}while((u|0)!=0);B=h;C=x;E=w;F=v;G=0;H=t}t=C;C=0;if(f|0){c[f>>2]=F;c[f+4>>2]=E}n=(t|0)>>>31|(B|C)<<1|(C<<1|t>>>31)&0|G;o=(t<<1|0>>>31)&-2|H;return (D=n,o)|0}function Re(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+112|0;if((i|0)>=(j|0))ca();h=g;k=g+88|0;l=Ns(b,30001)|0;if(l>>>0<=3e4?(Vi(e,164731,3)|0)==0:0){m=e+3|0;a:do switch(a[m>>0]|0){case 36:case 0:{n=0;break}default:{switch(a[e+4>>0]|0){case 36:case 0:{n=1;break a;break}default:{}}switch(a[e+5>>0]|0){case 36:case 0:{n=2;break a;break}default:{}}switch(a[e+6>>0]|0){case 36:case 0:{n=3;break a;break}default:{}}switch(a[e+7>>0]|0){case 36:case 0:{n=4;break a;break}default:{}}switch(a[e+8>>0]|0){case 36:case 0:{n=5;break a;break}default:{}}switch(a[e+9>>0]|0){case 36:case 0:{n=6;break a;break}default:{}}switch(a[e+10>>0]|0){case 36:case 0:{n=7;break a;break}default:{}}n=8}}while(0);o=h;c[o>>2]=0;c[o+4>>2]=0;o=h+8|0;c[o>>2]=1732584193;p=h+12|0;c[p>>2]=-271733879;q=h+16|0;c[q>>2]=-1732584194;r=h+20|0;c[r>>2]=271733878;Hh(h,b,l);Hh(h,m,n);Hh(h,b,l);Og(h,k);s=h;c[s>>2]=0;c[s+4>>2]=0;c[o>>2]=1732584193;c[p>>2]=-271733879;c[q>>2]=-1732584194;c[r>>2]=271733878;Hh(h,b,l);s=n+3|0;Hh(h,e,s);if(l>>>0>16){t=l+-17&-16;u=l;do{Hh(h,k,16);u=u+-16|0}while(u>>>0>16);v=l+-16-t|0}else v=l;Hh(h,k,v);a[k>>0]=0;if(l|0){v=l;do{if(!(v&1))Hh(h,b,1);else Hh(h,k,1);v=v>>>1}while((v|0)!=0)}Og(h,k);v=0;do{t=h;c[t>>2]=0;c[t+4>>2]=0;c[o>>2]=1732584193;c[p>>2]=-271733879;c[q>>2]=-1732584194;c[r>>2]=271733878;t=(v&1|0)!=0;if(t)Hh(h,b,l);else Hh(h,k,16);if((v>>>0)%3|0|0)Hh(h,m,n);if((v>>>0)%7|0|0)Hh(h,b,l);if(t)Hh(h,k,16);else Hh(h,b,l);Og(h,k);v=v+1|0}while((v|0)!=1e3);$j(f|0,e|0,s|0)|0;s=f+3+n|0;a[s>>0]=36;e=n+24|0;n=0;v=s+1|0;while(1){s=d[k+(d[164735+(n*3|0)>>0]|0)>>0]|0;h=d[k+(d[164735+(n*3|0)+1>>0]|0)>>0]<<8;l=d[k+(d[164735+(n*3|0)+2>>0]|0)>>0]|0;a[v>>0]=a[164880+(l&63)>>0]|0;a[v+1>>0]=a[164880+((h|l)>>>6&63)>>0]|0;a[v+2>>0]=a[164880+((h|s<<16)>>>12&63)>>0]|0;a[v+3>>0]=a[164880+(s>>>2)>>0]|0;n=n+1|0;if((n|0)==5)break;else v=v+4|0}v=f+e|0;e=d[k+11>>0]|0;a[v>>0]=a[164880+(e&63)>>0]|0;a[v+1>>0]=a[164880+(e>>>6)>>0]|0;a[v+2>>0]=0;w=f}else w=0;i=g;return w|0}function Le(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=(e|0)==0;if(g)h=0;else{i=0;while(1)if((c[e+(i<<2)>>2]|0)>-1)i=i+1|0;else{h=i;break}}i=0;while(1)if((c[b+(i<<5)>>2]|0)>-1)i=i+1|0;else{j=i;break}i=0;while(1)if((c[d+(i<<5)>>2]|0)>-1)i=i+1|0;else{k=i;break}i=eg(a,0,0,1,(k+j<<5)+32|0)|0;a:do if(!i)l=0;else{j=c[b>>2]|0;if((j|0)>-1){k=(h|0)>0;m=j;j=0;while(1){c[i+(j<<5)>>2]=m;c[i+(j<<5)+4>>2]=c[b+(j<<5)+4>>2];c[i+(j<<5)+8>>2]=c[b+(j<<5)+8>>2];c[i+(j<<5)+16>>2]=c[b+(j<<5)+16>>2]|f;c[i+(j<<5)+20>>2]=c[b+(j<<5)+20>>2];c[i+(j<<5)+24>>2]=c[b+(j<<5)+24>>2];c[i+(j<<5)+28>>2]=c[b+(j<<5)+28>>2];n=b+(j<<5)+12|0;o=c[n>>2]|0;p=(o|0)==0;if(g&p)c[i+(j<<5)+12>>2]=0;else{if(p)q=0;else{p=0;while(1)if((c[o+(p<<2)>>2]|0)>-1)p=p+1|0;else{q=p;break}}p=eg(a,0,0,0,(q+h<<2)+4|0)|0;if(!p){l=0;break a}if((q|0)>0){o=c[n>>2]|0;r=0;do{c[p+(r<<2)>>2]=c[o+(r<<2)>>2];r=r+1|0}while((r|0)!=(q|0));s=q}else s=0;if(k){r=0;do{c[p+(r+s<<2)>>2]=c[e+(r<<2)>>2];r=r+1|0}while((r|0)!=(h|0));t=h}else t=0;c[p+(t+s<<2)>>2]=-1;c[i+(j<<5)+12>>2]=p}r=j+1|0;m=c[b+(r<<5)>>2]|0;if((m|0)<=-1){u=r;break}else j=r}}else u=0;j=c[d>>2]|0;m=i+(u<<5)|0;if((j|0)>-1){k=j;j=m;r=u;o=0;while(1){c[j>>2]=k;c[i+(r<<5)+4>>2]=c[d+(o<<5)+4>>2];c[i+(r<<5)+8>>2]=c[d+(o<<5)+8>>2];c[i+(r<<5)+16>>2]=c[d+(o<<5)+16>>2];c[i+(r<<5)+20>>2]=c[d+(o<<5)+20>>2];c[i+(r<<5)+24>>2]=c[d+(o<<5)+24>>2];c[i+(r<<5)+28>>2]=c[d+(o<<5)+28>>2];n=d+(o<<5)+12|0;v=c[n>>2]|0;if(!v)c[i+(r<<5)+12>>2]=0;else{w=0;while(1)if((c[v+(w<<2)>>2]|0)>-1)w=w+1|0;else{x=w;break}w=eg(a,0,0,0,(x<<2)+4|0)|0;if(!w){l=0;break a}if((x|0)>0){v=c[n>>2]|0;p=0;do{c[w+(p<<2)>>2]=c[v+(p<<2)>>2];p=p+1|0}while((p|0)!=(x|0));y=x}else y=0;c[w+(y<<2)>>2]=-1;c[i+(r<<5)+12>>2]=w}o=o+1|0;k=c[d+(o<<5)>>2]|0;r=o+u|0;p=i+(r<<5)|0;if((k|0)<=-1){z=p;break}else j=p}}else z=m;c[z>>2]=-1;l=i}while(0);return l|0}function He(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;h=i;i=i+112|0;if((i|0)>=(j|0))ca();k=h+28|0;l=h+8|0;m=h;n=zi(b)|0;if((n|0)!=0?(o=n+-1|0,(a[b+o>>0]|0)==47):0)p=o;else p=n;o=f&1;if(!o)if((bp(b,k)|0)<0){q=$r()|0;if((c[q>>2]|0)==2?($o(b,k)|0)==0:0){r=7;s=15}else{t=q;s=10}}else s=11;else if(!($o(b,k)|0))s=11;else{t=$r()|0;s=10}a:do if((s|0)==10)if((c[t>>2]|0)==13){r=4;s=15}else u=-1;else if((s|0)==11){q=c[k+12>>2]&61440;if((q|0)>=40960){switch(q|0){case 40960:break;default:{r=1;s=15;break a}}r=o<<1^7;s=15;break}switch(q|0){case 16384:break;default:{r=1;s=15;break a}}if((dp(b,4)|0)<0){r=3;s=15}else{r=f>>>1&4|2;s=15}}while(0);b:do if((s|0)==15){o=(g|0)!=0;t=c[k>>2]|0;if((f&2|0)!=0&o?(t|0)!=(c[g+4>>2]|0):0){u=0;break}c[l>>2]=g;c[l+4>>2]=t;t=k+72|0;c[l+8>>2]=c[t>>2];if(!o){c[l+12>>2]=0;c[l+16>>2]=n+1;c[m+4>>2]=0;o=It(b,47)|0;if(!o)v=0;else v=o-b|0}else{o=(c[g+12>>2]|0)+1|0;c[l+12>>2]=o;c[l+16>>2]=n+1;c[m+4>>2]=o;v=c[g+16>>2]|0}c[m>>2]=v;o=(f&8|0)!=0;if(!o?(q=Pd[d&0](b,k,r,m)|0,q|0):0){u=q;break}if(g|0){q=c[k>>2]|0;w=c[t>>2]|0;t=g;do{if((c[t+4>>2]|0)==(q|0)?(c[t+8>>2]|0)==(w|0):0){u=0;break b}t=c[t>>2]|0}while((t|0)!=0)}do if((e|0)!=0&(r|4|0)==6){t=Ul(b)|0;if(!t)if((c[($r()|0)>>2]|0)==13)break;else{u=-1;break b}w=ri(t)|0;c:do if(w|0){q=4096-n|0;x=b+p|0;y=x+1|0;z=e+-1|0;A=w;while(1){B=A+11|0;d:do if((a[B>>0]|0)==46){switch(a[A+12>>0]|0){case 0:{break d;break}case 46:break;default:{s=35;break d}}if(a[A+13>>0]|0)s=35}else s=35;while(0);if((s|0)==35){s=0;if((zi(B)|0)>>>0>=q>>>0){s=36;break}a[x>>0]=47;Wu(y,B)|0;C=He(b,d,z,f,l)|0;if(C|0){D=C;s=39;break}}A=ri(t)|0;if(!A)break c}if((s|0)==36){c[($r()|0)>>2]=36;wt(t)|0;u=-1;break b}else if((s|0)==39){wt(t)|0;u=D;break b}}while(0);wt(t)|0}while(0);a[b+n>>0]=0;if(o?(w=Pd[d&0](b,k,r,m)|0,w|0):0){u=w;break}u=0}while(0);i=h;return u|0}function Me(a,b){a=a|0;b=+b;var d=0,e=0.0,f=0,h=0.0,i=0.0,j=0,l=0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0.0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0;d=(g[k>>2]=b,c[k>>2]|0)>>>31;e=+O(+b);f=(g[k>>2]=e,c[k>>2]|0);do if(f>>>0>2139095040)h=b;else{if(!a){h=+Zi(b);break}if((a|0)<0){i=-b;j=~a;l=d^1}else{i=b;j=a+-1|0;l=d}if(!j){h=+Wi(i);break}m=l&a;e=+O(+i);if((f|0)<2139095040)switch(f|0){case 0:{n=0.0;break}default:o=10}else switch(f|0){case 2139095040:{n=0.0;break}default:o=10}a:do if((o|0)==10){p=+(j|0);if(p<e){q=+Zi(e);r=+Wi(e);if((j|0)>0){s=q;t=r;u=0}else{n=r;break}while(1){u=u+1|0;r=t*(+(u|0)*2.0/e)-s;if((u|0)==(j|0)){n=r;break a}else{q=t;t=r;s=q}}}if(f>>>0<897581056){v=(j|0)>8?8:j;q=e*.5;if((v+1|0)<2){w=1.0;x=q}else{r=1.0;y=q;z=2;while(1){A=r*+(z|0);B=q*y;if((z|0)>(v|0)){w=A;x=B;break}else{r=A;y=B;z=z+1|0}}}n=x/w;break}y=p+1.0;r=y*2.0/e;q=2.0/e;B=r+q;A=r*B+-1.0;if(A<1.0e4){z=1;C=r;D=A;A=B;while(1){v=z+1|0;A=q+A;B=D*A-C;if(!(B<1.0e4)){E=v;F=z;break}else{G=D;z=v;D=B;C=G}}if((F|0)>-2){H=E;I=0.0;o=20}else J=0.0}else{H=1;I=0.0;o=20}if((o|0)==20)while(1){o=0;C=1.0/((y+ +(H|0))*2.0/e-I);if((H|0)>0){H=H+-1|0;I=C;o=20}else{J=C;break}}z=(j|0)>0;if(y*+Z(+(+O(+r)))<88.7216796875)if(z){C=J;D=1.0;v=j;while(1){A=+(v|0)*2.0*D/e-C;if((v|0)>1){q=D;D=A;v=v+-1|0;C=q}else{K=D;L=A;M=J;break}}}else{K=J;L=1.0;M=J}else if(z){D=J;C=1.0;v=j;r=J;while(1){y=+(v|0)*2.0*C/e-D;if(y>1152921504606846976.0){N=C/y;P=1.0;Q=r/y}else{N=C;P=y;Q=r}if((v|0)>1){D=N;C=P;v=v+-1|0;r=Q}else{K=N;L=P;M=Q;break}}}else{K=J;L=1.0;M=J}r=+Zi(e);C=+Wi(e);if(!(+O(+r)>=+O(+C))){n=M*C/K;break}else{n=M*r/L;break}}while(0);h=m|0?-n:n}while(0);return +h}function Pe(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0;f=i;i=i+96|0;if((i|0)>=(j|0))ca();g=f+32|0;h=f;if(e>>>0<=64){k=b+32|0;l=k;c[l>>2]=0;c[l+4>>2]=0;c[b>>2]=c[1789];c[b+4>>2]=c[1790];c[b+8>>2]=c[1791];c[b+12>>2]=c[1792];c[b+16>>2]=c[1793];c[b+20>>2]=c[1794];c[b+24>>2]=c[1795];c[b+28>>2]=c[1796];m=g;n=m+64|0;do{a[m>>0]=54;m=m+1|0}while((m|0)<(n|0));if(!e){o=0;p=k;q=1;r=d}else{s=e;t=k;u=d;v=8}}else{k=b+32|0;l=k;c[l>>2]=0;c[l+4>>2]=0;c[b>>2]=c[1789];c[b+4>>2]=c[1790];c[b+8>>2]=c[1791];c[b+12>>2]=c[1792];c[b+16>>2]=c[1793];c[b+20>>2]=c[1794];c[b+24>>2]=c[1795];c[b+28>>2]=c[1796];l=fr(e|0,0,3)|0;w=k;c[w>>2]=l;c[w+4>>2]=D;w=b+40|0;m=w;x=d;n=m+64|0;do{a[m>>0]=a[x>>0]|0;m=m+1|0;x=x+1|0}while((m|0)<(n|0));Zd(b,w);l=d+64|0;y=e+-64|0;if(y>>>0>63){z=e+-128|0;e=z&-64;A=e+128|0;B=y;C=l;while(1){Zd(b,C);B=B+-64|0;if(B>>>0<=63)break;else C=C+64|0}E=z-e|0;F=d+A|0}else{E=y;F=l}$j(w|0,F|0,E|0)|0;Qe(h,b);E=k;c[E>>2]=0;c[E+4>>2]=0;c[b>>2]=c[1789];c[b+4>>2]=c[1790];c[b+8>>2]=c[1791];c[b+12>>2]=c[1792];c[b+16>>2]=c[1793];c[b+20>>2]=c[1794];c[b+24>>2]=c[1795];c[b+28>>2]=c[1796];m=g;n=m+64|0;do{a[m>>0]=54;m=m+1|0}while((m|0)<(n|0));s=32;t=k;u=h;v=8}if((v|0)==8){a[g>>0]=a[u>>0]^54;if((s|0)==1){o=s;p=t;q=0;r=u}else{v=1;do{a[g+v>>0]=a[g+v>>0]^a[u+v>>0];v=v+1|0}while((v|0)!=(s|0));o=s;p=t;q=0;r=u}}u=p;c[u>>2]=512;c[u+4>>2]=0;u=b+40|0;m=u;x=g;n=m+64|0;do{a[m>>0]=a[x>>0]|0;m=m+1|0;x=x+1|0}while((m|0)<(n|0));Zd(b,u);u=b+104|0;p=b+136|0;t=p;c[t>>2]=0;c[t+4>>2]=0;c[u>>2]=c[1789];c[u+4>>2]=c[1790];c[u+8>>2]=c[1791];c[u+12>>2]=c[1792];c[u+16>>2]=c[1793];c[u+20>>2]=c[1794];c[u+24>>2]=c[1795];c[u+28>>2]=c[1796];m=g;n=m+64|0;do{a[m>>0]=92;m=m+1|0}while((m|0)<(n|0));if(!q?(a[g>>0]=a[r>>0]^92,(o|0)!=1):0){q=1;do{a[g+q>>0]=a[g+q>>0]^a[r+q>>0];q=q+1|0}while((q|0)!=(o|0))}o=p;c[o>>2]=512;c[o+4>>2]=0;o=b+144|0;m=o;x=g;n=m+64|0;do{a[m>>0]=a[x>>0]|0;m=m+1|0;x=x+1|0}while((m|0)<(n|0));Zd(u,o);Ld[c[1788]&1](h,32);Ld[c[1788]&1](g,64);i=f;return}\n\n// EMSCRIPTEN_END_FUNCS\n\n var Jd = [ Mu, Jg, xl, am, Ff, Jo, yt, ni, ji, zt, bh, hk, Tg, Cj, hi, cj, Xg, gk, wi, Ju, Iu, Hu, Gu, Fu, Eu, Du, Cu, Au, zu, yu, xu, wu ];\n var Kd = [ Hy, Kt, Jt, _y, $i, Ix, ur, Gy ];\n var Ld = [ vx, Pq ];\n var Md = [ qs, li ];\n var Nd = [ Rx, Dp, $q, ki, Ly, Fy, Vy, Qx ];\n var Od = [ kz, $w, lz, xp ];\n var Pd = [ xt ];\n var Qd = [ Os, Xe ];\n var Rd = [ Aw, Mn, tx, Ct, xq, Kf, zw, yw ];\n return {\n  _crypto_scrypt: ph,\n  _i64Subtract: jr,\n  _fflush: Ih,\n  _round: Nu,\n  _i64Add: Gr,\n  _memmove: Fn,\n  _memset: Gl,\n  _malloc: Wd,\n  _memcpy: $j,\n  _llvm_bswap_i32: _s,\n  _bitshift64Lshr: kr,\n  _free: de,\n  _roundf: Ku,\n  ___errno_location: $r,\n  _bitshift64Shl: fr,\n  runPostSets: _j,\n  stackAlloc: Jr,\n  stackSave: $y,\n  stackRestore: Zx,\n  establishStackSpace: vu,\n  setThrew: it,\n  setTempRet0: iy,\n  getTempRet0: Zy,\n  dynCall_iiii: hs,\n  dynCall_vi: Yu,\n  dynCall_vii: pt,\n  dynCall_iiiiiii: Wq,\n  dynCall_ii: ju,\n  dynCall_v: xx,\n  dynCall_iiiii: Nr,\n  dynCall_viiiiii: ar,\n  dynCall_iii: at\n };\n})\n\n\n// EMSCRIPTEN_END_ASM\n(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var real__crypto_scrypt=asm[\"_crypto_scrypt\"];asm[\"_crypto_scrypt\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__crypto_scrypt.apply(null,arguments)});var real__i64Subtract=asm[\"_i64Subtract\"];asm[\"_i64Subtract\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__i64Subtract.apply(null,arguments)});var real__fflush=asm[\"_fflush\"];asm[\"_fflush\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__fflush.apply(null,arguments)});var real__round=asm[\"_round\"];asm[\"_round\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__round.apply(null,arguments)});var real__i64Add=asm[\"_i64Add\"];asm[\"_i64Add\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__i64Add.apply(null,arguments)});var real__memmove=asm[\"_memmove\"];asm[\"_memmove\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__memmove.apply(null,arguments)});var real__malloc=asm[\"_malloc\"];asm[\"_malloc\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__malloc.apply(null,arguments)});var real____errno_location=asm[\"___errno_location\"];asm[\"___errno_location\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real____errno_location.apply(null,arguments)});var real__bitshift64Lshr=asm[\"_bitshift64Lshr\"];asm[\"_bitshift64Lshr\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__bitshift64Lshr.apply(null,arguments)});var real__free=asm[\"_free\"];asm[\"_free\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__free.apply(null,arguments)});var real__roundf=asm[\"_roundf\"];asm[\"_roundf\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__roundf.apply(null,arguments)});var real__llvm_bswap_i32=asm[\"_llvm_bswap_i32\"];asm[\"_llvm_bswap_i32\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__llvm_bswap_i32.apply(null,arguments)});var real__bitshift64Shl=asm[\"_bitshift64Shl\"];asm[\"_bitshift64Shl\"]=(function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__bitshift64Shl.apply(null,arguments)});var _crypto_scrypt=Module[\"_crypto_scrypt\"]=asm[\"_crypto_scrypt\"];var _i64Subtract=Module[\"_i64Subtract\"]=asm[\"_i64Subtract\"];var _fflush=Module[\"_fflush\"]=asm[\"_fflush\"];var runPostSets=Module[\"runPostSets\"]=asm[\"runPostSets\"];var _round=Module[\"_round\"]=asm[\"_round\"];var _i64Add=Module[\"_i64Add\"]=asm[\"_i64Add\"];var _memmove=Module[\"_memmove\"]=asm[\"_memmove\"];var _memset=Module[\"_memset\"]=asm[\"_memset\"];var _malloc=Module[\"_malloc\"]=asm[\"_malloc\"];var _memcpy=Module[\"_memcpy\"]=asm[\"_memcpy\"];var ___errno_location=Module[\"___errno_location\"]=asm[\"___errno_location\"];var _bitshift64Lshr=Module[\"_bitshift64Lshr\"]=asm[\"_bitshift64Lshr\"];var _free=Module[\"_free\"]=asm[\"_free\"];var _roundf=Module[\"_roundf\"]=asm[\"_roundf\"];var _llvm_bswap_i32=Module[\"_llvm_bswap_i32\"]=asm[\"_llvm_bswap_i32\"];var _bitshift64Shl=Module[\"_bitshift64Shl\"]=asm[\"_bitshift64Shl\"];var dynCall_iiii=Module[\"dynCall_iiii\"]=asm[\"dynCall_iiii\"];var dynCall_vi=Module[\"dynCall_vi\"]=asm[\"dynCall_vi\"];var dynCall_vii=Module[\"dynCall_vii\"]=asm[\"dynCall_vii\"];var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=asm[\"dynCall_iiiiiii\"];var dynCall_ii=Module[\"dynCall_ii\"]=asm[\"dynCall_ii\"];var dynCall_v=Module[\"dynCall_v\"]=asm[\"dynCall_v\"];var dynCall_iiiii=Module[\"dynCall_iiiii\"]=asm[\"dynCall_iiiii\"];var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=asm[\"dynCall_viiiiii\"];var dynCall_iii=Module[\"dynCall_iii\"]=asm[\"dynCall_iii\"];Runtime.stackAlloc=asm[\"stackAlloc\"];Runtime.stackSave=asm[\"stackSave\"];Runtime.stackRestore=asm[\"stackRestore\"];Runtime.establishStackSpace=asm[\"establishStackSpace\"];Runtime.setTempRet0=asm[\"setTempRet0\"];Runtime.getTempRet0=asm[\"getTempRet0\"];function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};Module[\"callMain\"]=Module.callMain=function callMain(args){assert(runDependencies==0,\"cannot call main when async dependencies remain! (listen on __ATMAIN__)\");assert(__ATPRERUN__.length==0,\"cannot call main when preRun functions remain to be called\");args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module[\"thisProgram\"]),\"i8\",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),\"i8\",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,\"i32\",ALLOC_NORMAL);try{var ret=Module[\"_main\"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e==\"SimulateInfiniteLoop\"){Module[\"noExitRuntime\"]=true;return}else{if(e&&typeof e===\"object\"&&e.stack)Module.printErr(\"exception thrown: \"+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module[\"arguments\"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){Module.printErr(\"run() called, but dependencies remain, so not running\");return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(ENVIRONMENT_IS_WEB&&preloadStartTime!==null){Module.printErr(\"pre-main prep time: \"+(Date.now()-preloadStartTime)+\" ms\")}if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(Module[\"_main\"]&&shouldRunNow)Module[\"callMain\"](args);postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=Module.run=run;function exit(status,implicit){if(implicit&&Module[\"noExitRuntime\"]){Module.printErr(\"exit(\"+status+\") implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)\");return}if(Module[\"noExitRuntime\"]){Module.printErr(\"exit(\"+status+\") called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)\")}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status)}if(ENVIRONMENT_IS_NODE){process[\"exit\"](status)}else if(ENVIRONMENT_IS_SHELL&&typeof quit===\"function\"){quit(status)}throw new ExitStatus(status)}Module[\"exit\"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;var extra=\"\";var output=\"abort(\"+what+\") at \"+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module[\"abort\"]=Module.abort=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"]){shouldRunNow=false}run()\n\n\n\n\nvar scrypt = (function () {\n    var exports = {};\n\n    //---------------------------------------------------------------------------\n    // Horrifying UTF-8 and hex codecs\n\n    function encode_utf8(s) {\n\treturn encode_latin1(unescape(encodeURIComponent(s)));\n    }\n\n    function encode_latin1(s) {\n\tvar result = new Uint8Array(s.length);\n\tfor (var i = 0; i < s.length; i++) {\n\t    var c = s.charCodeAt(i);\n\t    if ((c & 0xff) !== c) throw {message: \"Cannot encode string in Latin1\", str: s};\n\t    result[i] = (c & 0xff);\n\t}\n\treturn result;\n    }\n\n    function decode_utf8(bs) {\n\treturn decodeURIComponent(escape(decode_latin1(bs)));\n    }\n\n    function decode_latin1(bs) {\n\tvar encoded = [];\n\tfor (var i = 0; i < bs.length; i++) {\n\t    encoded.push(String.fromCharCode(bs[i]));\n\t}\n\treturn encoded.join('');\n    }\n\n    function to_hex(bs) {\n\tvar encoded = [];\n\tfor (var i = 0; i < bs.length; i++) {\n\t    encoded.push(\"0123456789abcdef\"[(bs[i] >> 4) & 15]);\n\t    encoded.push(\"0123456789abcdef\"[bs[i] & 15]);\n\t}\n\treturn encoded.join('');\n    }\n\n    //---------------------------------------------------------------------------\n\n    function injectBytes(bs, leftPadding) {\n\tvar p = leftPadding || 0;\n\tvar address = scrypt_raw._malloc(bs.length + p);\n\tscrypt_raw.HEAPU8.set(bs, address + p);\n\tfor (var i = address; i < address + p; i++) {\n\t    scrypt_raw.HEAPU8[i] = 0;\n\t}\n\treturn address;\n    }\n\n    function check_injectBytes(function_name, what, thing, expected_length, leftPadding) {\n\tcheck_length(function_name, what, thing, expected_length);\n\treturn injectBytes(thing, leftPadding);\n    }\n\n    function extractBytes(address, length) {\n\tvar result = new Uint8Array(length);\n\tresult.set(scrypt_raw.HEAPU8.subarray(address, address + length));\n\treturn result;\n    }\n\n    //---------------------------------------------------------------------------\n\n    function check(function_name, result) {\n\tif (result !== 0) {\n\t    throw {message: \"scrypt_raw.\" + function_name + \" signalled an error\"};\n\t}\n    }\n\n    function check_length(function_name, what, thing, expected_length) {\n\tif (thing.length !== expected_length) {\n\t    throw {message: \"scrypt.\" + function_name + \" expected \" +\n\t           expected_length + \"-byte \" + what + \" but got length \" + thing.length};\n\t}\n    }\n\n    function Target(length) {\n\tthis.length = length;\n\tthis.address = scrypt_raw._malloc(length);\n    }\n\n    Target.prototype.extractBytes = function (offset) {\n\tvar result = extractBytes(this.address + (offset || 0), this.length - (offset || 0));\n\tscrypt_raw._free(this.address);\n\tthis.address = null;\n\treturn result;\n    };\n\n    function free_all(addresses) {\n\tfor (var i = 0; i < addresses.length; i++) {\n\t    scrypt_raw._free(addresses[i]);\n\t}\n    }\n\n    //---------------------------------------------------------------------------\n\n    function random_bytes(count) {\n\tvar bs = new Uint8Array(count);\n\tif(typeof(window.crypto) !== \"undefined\") {\n\t    if(typeof(window.crypto.getRandomValues) !== \"undefined\") {\n\t    \twindow.crypto.getRandomValues(bs);\n\t    \treturn bs;\n\t    }\n\t}\n\tif(typeof(window.msCrypto) !== \"undefined\") {\n\t    if(typeof(window.msCrypto.getRandomValues) !== \"undefined\") {\n\t    \twindow.msCrypto.getRandomValues(bs);\n\t    \treturn bs;\n\t    }\n\t}\n\tthrow { message: \"No suitable random number generator found!\"};\n    }\n\n    function crypto_scrypt(passwd, salt, n, r, p, buflen) {\n\tvar buf = new Target(buflen);\n\tvar pa = injectBytes(passwd);\n\tvar sa = injectBytes(salt);\n\tcheck(\"_crypto_scrypt\",\n\t      scrypt_raw._crypto_scrypt(pa, passwd.length,\n\t\t\t\t\tsa, salt.length,\n\t\t\t\t\tn, 0, // 64 bits; zero upper half\n\t\t\t\t\tr,\n\t\t\t\t\tp,\n\t\t\t\t\tbuf.address, buf.length));\n\tfree_all([pa, sa]);\n\treturn buf.extractBytes();\n    }\n\n    //---------------------------------------------------------------------------\n\n    exports.encode_utf8 = encode_utf8;\n    exports.encode_latin1 = encode_latin1;\n    exports.decode_utf8 = decode_utf8;\n    exports.decode_latin1 = decode_latin1;\n    exports.to_hex = to_hex;\n\n    exports.random_bytes = random_bytes;\n    exports.crypto_scrypt = crypto_scrypt;\n\n    return exports;\n})();\n    return scrypt\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\"), \"/\", __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/bottos-crypto-js/lib/scrypt.js?");

/***/ }),

/***/ "../node_modules/brorand/index.js":
/*!****************************************!*\
  !*** ../node_modules/brorand/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = __webpack_require__(/*! crypto */ 3);\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n\n\n//# sourceURL=webpack:///../node_modules/brorand/index.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/aes.js":
/*!*********************************************!*\
  !*** ../node_modules/browserify-aes/aes.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/aes.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/authCipher.js":
/*!****************************************************!*\
  !*** ../node_modules/browserify-aes/authCipher.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var aes = __webpack_require__(/*! ./aes */ \"../node_modules/browserify-aes/aes.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar GHASH = __webpack_require__(/*! ./ghash */ \"../node_modules/browserify-aes/ghash.js\")\nvar xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\nvar incr32 = __webpack_require__(/*! ./incr32 */ \"../node_modules/browserify-aes/incr32.js\")\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/authCipher.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/browser.js":
/*!*************************************************!*\
  !*** ../node_modules/browserify-aes/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var ciphers = __webpack_require__(/*! ./encrypter */ \"../node_modules/browserify-aes/encrypter.js\")\nvar deciphers = __webpack_require__(/*! ./decrypter */ \"../node_modules/browserify-aes/decrypter.js\")\nvar modes = __webpack_require__(/*! ./modes/list.json */ \"../node_modules/browserify-aes/modes/list.json\")\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/browser.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/decrypter.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/decrypter.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var AuthCipher = __webpack_require__(/*! ./authCipher */ \"../node_modules/browserify-aes/authCipher.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar MODES = __webpack_require__(/*! ./modes */ \"../node_modules/browserify-aes/modes/index.js\")\nvar StreamCipher = __webpack_require__(/*! ./streamCipher */ \"../node_modules/browserify-aes/streamCipher.js\")\nvar Transform = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar aes = __webpack_require__(/*! ./aes */ \"../node_modules/browserify-aes/aes.js\")\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"../node_modules/evp_bytestokey/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/decrypter.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/encrypter.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/encrypter.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var MODES = __webpack_require__(/*! ./modes */ \"../node_modules/browserify-aes/modes/index.js\")\nvar AuthCipher = __webpack_require__(/*! ./authCipher */ \"../node_modules/browserify-aes/authCipher.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar StreamCipher = __webpack_require__(/*! ./streamCipher */ \"../node_modules/browserify-aes/streamCipher.js\")\nvar Transform = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar aes = __webpack_require__(/*! ./aes */ \"../node_modules/browserify-aes/aes.js\")\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"../node_modules/evp_bytestokey/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/encrypter.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/ghash.js":
/*!***********************************************!*\
  !*** ../node_modules/browserify-aes/ghash.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/ghash.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/incr32.js":
/*!************************************************!*\
  !*** ../node_modules/browserify-aes/incr32.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/incr32.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/cbc.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cbc.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/cbc.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/cfb.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/cfb.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/cfb1.js":
/*!****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb1.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/cfb1.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/cfb8.js":
/*!****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb8.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/cfb8.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/ctr.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ctr.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar incr32 = __webpack_require__(/*! ../incr32 */ \"../node_modules/browserify-aes/incr32.js\")\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/ctr.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/ecb.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ecb.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/ecb.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var modeModules = {\n  ECB: __webpack_require__(/*! ./ecb */ \"../node_modules/browserify-aes/modes/ecb.js\"),\n  CBC: __webpack_require__(/*! ./cbc */ \"../node_modules/browserify-aes/modes/cbc.js\"),\n  CFB: __webpack_require__(/*! ./cfb */ \"../node_modules/browserify-aes/modes/cfb.js\"),\n  CFB8: __webpack_require__(/*! ./cfb8 */ \"../node_modules/browserify-aes/modes/cfb8.js\"),\n  CFB1: __webpack_require__(/*! ./cfb1 */ \"../node_modules/browserify-aes/modes/cfb1.js\"),\n  OFB: __webpack_require__(/*! ./ofb */ \"../node_modules/browserify-aes/modes/ofb.js\"),\n  CTR: __webpack_require__(/*! ./ctr */ \"../node_modules/browserify-aes/modes/ctr.js\"),\n  GCM: __webpack_require__(/*! ./ctr */ \"../node_modules/browserify-aes/modes/ctr.js\")\n}\n\nvar modes = __webpack_require__(/*! ./list.json */ \"../node_modules/browserify-aes/modes/list.json\")\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/index.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/list.json":
/*!******************************************************!*\
  !*** ../node_modules/browserify-aes/modes/list.json ***!
  \******************************************************/
/*! exports provided: aes-128-ecb, aes-192-ecb, aes-256-ecb, aes-128-cbc, aes-192-cbc, aes-256-cbc, aes128, aes192, aes256, aes-128-cfb, aes-192-cfb, aes-256-cfb, aes-128-cfb8, aes-192-cfb8, aes-256-cfb8, aes-128-cfb1, aes-192-cfb1, aes-256-cfb1, aes-128-ofb, aes-192-ofb, aes-256-ofb, aes-128-ctr, aes-192-ctr, aes-256-ctr, aes-128-gcm, aes-192-gcm, aes-256-gcm, default */
/***/ (function(module) {

eval("module.exports = {\"aes-128-ecb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-192-ecb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-256-ecb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-128-cbc\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-192-cbc\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-256-cbc\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes128\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes192\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes256\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-128-cfb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-192-cfb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-256-cfb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-128-cfb8\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-192-cfb8\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-256-cfb8\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-128-cfb1\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-192-cfb1\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-256-cfb1\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-128-ofb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-192-ofb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-256-ofb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-128-ctr\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-192-ctr\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-256-ctr\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-128-gcm\":{\"cipher\":\"AES\",\"key\":128,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-192-gcm\":{\"cipher\":\"AES\",\"key\":192,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-256-gcm\":{\"cipher\":\"AES\",\"key\":256,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"}};\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/list.json?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/ofb.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ofb.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/modes/ofb.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/streamCipher.js":
/*!******************************************************!*\
  !*** ../node_modules/browserify-aes/streamCipher.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var aes = __webpack_require__(/*! ./aes */ \"../node_modules/browserify-aes/aes.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n\n\n//# sourceURL=webpack:///../node_modules/browserify-aes/streamCipher.js?");

/***/ }),

/***/ "../node_modules/browserify-cipher/browser.js":
/*!****************************************************!*\
  !*** ../node_modules/browserify-cipher/browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var DES = __webpack_require__(/*! browserify-des */ \"../node_modules/browserify-des/index.js\")\nvar aes = __webpack_require__(/*! browserify-aes/browser */ \"../node_modules/browserify-aes/browser.js\")\nvar aesModes = __webpack_require__(/*! browserify-aes/modes */ \"../node_modules/browserify-aes/modes/index.js\")\nvar desModes = __webpack_require__(/*! browserify-des/modes */ \"../node_modules/browserify-des/modes.js\")\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"../node_modules/evp_bytestokey/index.js\")\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n\n\n//# sourceURL=webpack:///../node_modules/browserify-cipher/browser.js?");

/***/ }),

/***/ "../node_modules/browserify-des/index.js":
/*!***********************************************!*\
  !*** ../node_modules/browserify-des/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var CipherBase = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar des = __webpack_require__(/*! des.js */ \"../node_modules/des.js/lib/des.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return new Buffer(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return new Buffer(this._des.final())\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/browserify-des/index.js?");

/***/ }),

/***/ "../node_modules/browserify-des/modes.js":
/*!***********************************************!*\
  !*** ../node_modules/browserify-des/modes.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n\n\n//# sourceURL=webpack:///../node_modules/browserify-des/modes.js?");

/***/ }),

/***/ "../node_modules/browserify-rsa/index.js":
/*!***********************************************!*\
  !*** ../node_modules/browserify-rsa/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar randomBytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\");\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/browserify-rsa/index.js?");

/***/ }),

/***/ "../node_modules/browserify-sign/algos.js":
/*!************************************************!*\
  !*** ../node_modules/browserify-sign/algos.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./browser/algorithms.json */ \"../node_modules/browserify-sign/browser/algorithms.json\")\n\n\n//# sourceURL=webpack:///../node_modules/browserify-sign/algos.js?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/algorithms.json":
/*!***************************************************************!*\
  !*** ../node_modules/browserify-sign/browser/algorithms.json ***!
  \***************************************************************/
/*! exports provided: sha224WithRSAEncryption, RSA-SHA224, sha256WithRSAEncryption, RSA-SHA256, sha384WithRSAEncryption, RSA-SHA384, sha512WithRSAEncryption, RSA-SHA512, RSA-SHA1, ecdsa-with-SHA1, sha256, sha224, sha384, sha512, DSA-SHA, DSA-SHA1, DSA, DSA-WITH-SHA224, DSA-SHA224, DSA-WITH-SHA256, DSA-SHA256, DSA-WITH-SHA384, DSA-SHA384, DSA-WITH-SHA512, DSA-SHA512, DSA-RIPEMD160, ripemd160WithRSA, RSA-RIPEMD160, md5WithRSAEncryption, RSA-MD5, default */
/***/ (function(module) {

eval("module.exports = {\"sha224WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"sha256WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"sha384WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"sha512WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{\"sign\":\"rsa\",\"hash\":\"sha1\",\"id\":\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{\"sign\":\"ecdsa\",\"hash\":\"sha1\",\"id\":\"\"},\"sha256\":{\"sign\":\"ecdsa\",\"hash\":\"sha256\",\"id\":\"\"},\"sha224\":{\"sign\":\"ecdsa\",\"hash\":\"sha224\",\"id\":\"\"},\"sha384\":{\"sign\":\"ecdsa\",\"hash\":\"sha384\",\"id\":\"\"},\"sha512\":{\"sign\":\"ecdsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-SHA1\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-WITH-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-WITH-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-WITH-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-WITH-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-RIPEMD160\":{\"sign\":\"dsa\",\"hash\":\"rmd160\",\"id\":\"\"},\"ripemd160WithRSA\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"md5WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"}};\n\n//# sourceURL=webpack:///../node_modules/browserify-sign/browser/algorithms.json?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/curves.json":
/*!***********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/curves.json ***!
  \***********************************************************/
/*! exports provided: 1.3.132.0.10, 1.3.132.0.33, 1.2.840.10045.3.1.1, 1.2.840.10045.3.1.7, 1.3.132.0.34, 1.3.132.0.35, default */
/***/ (function(module) {

eval("module.exports = {\"1.3.132.0.10\":\"secp256k1\",\"1.3.132.0.33\":\"p224\",\"1.2.840.10045.3.1.1\":\"p192\",\"1.2.840.10045.3.1.7\":\"p256\",\"1.3.132.0.34\":\"p384\",\"1.3.132.0.35\":\"p521\"};\n\n//# sourceURL=webpack:///../node_modules/browserify-sign/browser/curves.json?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/index.js":
/*!********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\")\nvar stream = __webpack_require__(/*! stream */ \"../node_modules/stream-browserify/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar sign = __webpack_require__(/*! ./sign */ \"../node_modules/browserify-sign/browser/sign.js\")\nvar verify = __webpack_require__(/*! ./verify */ \"../node_modules/browserify-sign/browser/verify.js\")\n\nvar algorithms = __webpack_require__(/*! ./algorithms.json */ \"../node_modules/browserify-sign/browser/algorithms.json\")\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = new Buffer(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/browserify-sign/browser/index.js?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/sign.js":
/*!*******************************************************!*\
  !*** ../node_modules/browserify-sign/browser/sign.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = __webpack_require__(/*! create-hmac */ \"../node_modules/create-hmac/browser.js\")\nvar crt = __webpack_require__(/*! browserify-rsa */ \"../node_modules/browserify-rsa/index.js\")\nvar EC = __webpack_require__(/*! elliptic */ \"../node_modules/elliptic/lib/elliptic.js\").ec\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\nvar parseKeys = __webpack_require__(/*! parse-asn1 */ \"../node_modules/parse-asn1/index.js\")\nvar curves = __webpack_require__(/*! ./curves.json */ \"../node_modules/browserify-sign/browser/curves.json\")\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [ 0, 1 ]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return new Buffer(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [ 0 ].concat(r)\n  if (s[0] & 0x80) s = [ 0 ].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [ 0x30, total, 0x02, r.length ]\n  res = res.concat(r, [ 0x02, s.length ], s)\n  return new Buffer(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = new Buffer(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length)\n    zeros.fill(0)\n    x = Buffer.concat([ zeros, x ])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = new Buffer(hlen)\n  v.fill(1)\n  var k = new Buffer(hlen)\n  k.fill(0)\n  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = new Buffer(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length)\n    zeros.fill(0)\n    out = Buffer.concat([ zeros, out ])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = new Buffer(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([ t, kv.v ])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/browserify-sign/browser/sign.js?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/verify.js":
/*!*********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/verify.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\nvar EC = __webpack_require__(/*! elliptic */ \"../node_modules/elliptic/lib/elliptic.js\").ec\nvar parseKeys = __webpack_require__(/*! parse-asn1 */ \"../node_modules/parse-asn1/index.js\")\nvar curves = __webpack_require__(/*! ./curves.json */ \"../node_modules/browserify-sign/browser/curves.json\")\n\nfunction verify (sig, hash, key, signType, tag) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type')\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = pub.modulus.byteLength()\n  var pad = [ 1 ]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = new Buffer(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n  sig = new Buffer(sig.fromRed().toArray())\n  var out = padNum < 8 ? 1 : 0\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) out = 1\n\n  i = -1\n  while (++i < len) out |= sig[i] ^ pad[i]\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q)\n  return v.cmp(r) === 0\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig')\n  if (b.cmp(q) >= q) throw new Error('invalid sig')\n}\n\nmodule.exports = verify\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/browserify-sign/browser/verify.js?");

/***/ }),

/***/ "../node_modules/buffer-xor/index.js":
/*!*******************************************!*\
  !*** ../node_modules/buffer-xor/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/buffer-xor/index.js?");

/***/ }),

/***/ "../node_modules/buffer/index.js":
/*!***************************************!*\
  !*** ../node_modules/buffer/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"../node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"../node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"../node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///../node_modules/buffer/index.js?");

/***/ }),

/***/ "../node_modules/cipher-base/index.js":
/*!********************************************!*\
  !*** ../node_modules/cipher-base/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"../node_modules/stream-browserify/index.js\").Transform\nvar StringDecoder = __webpack_require__(/*! string_decoder */ \"../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js\").StringDecoder\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n\n\n//# sourceURL=webpack:///../node_modules/cipher-base/index.js?");

/***/ }),

/***/ "../node_modules/core-util-is/lib/util.js":
/*!************************************************!*\
  !*** ../node_modules/core-util-is/lib/util.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/core-util-is/lib/util.js?");

/***/ }),

/***/ "../node_modules/create-ecdh/browser.js":
/*!**********************************************!*\
  !*** ../node_modules/create-ecdh/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var elliptic = __webpack_require__(/*! elliptic */ \"../node_modules/elliptic/lib/elliptic.js\")\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/create-ecdh/browser.js?");

/***/ }),

/***/ "../node_modules/create-hash/browser.js":
/*!**********************************************!*\
  !*** ../node_modules/create-hash/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar MD5 = __webpack_require__(/*! md5.js */ \"../node_modules/md5.js/index.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"../node_modules/ripemd160/index.js\")\nvar sha = __webpack_require__(/*! sha.js */ \"../node_modules/sha.js/index.js\")\nvar Base = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n\n\n//# sourceURL=webpack:///../node_modules/create-hash/browser.js?");

/***/ }),

/***/ "../node_modules/create-hash/md5.js":
/*!******************************************!*\
  !*** ../node_modules/create-hash/md5.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var MD5 = __webpack_require__(/*! md5.js */ \"../node_modules/md5.js/index.js\")\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n\n\n//# sourceURL=webpack:///../node_modules/create-hash/md5.js?");

/***/ }),

/***/ "../node_modules/create-hmac/browser.js":
/*!**********************************************!*\
  !*** ../node_modules/create-hmac/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Legacy = __webpack_require__(/*! ./legacy */ \"../node_modules/create-hmac/legacy.js\")\nvar Base = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar md5 = __webpack_require__(/*! create-hash/md5 */ \"../node_modules/create-hash/md5.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"../node_modules/ripemd160/index.js\")\n\nvar sha = __webpack_require__(/*! sha.js */ \"../node_modules/sha.js/index.js\")\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n\n\n//# sourceURL=webpack:///../node_modules/create-hmac/browser.js?");

/***/ }),

/***/ "../node_modules/create-hmac/legacy.js":
/*!*********************************************!*\
  !*** ../node_modules/create-hmac/legacy.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar Base = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n\n\n//# sourceURL=webpack:///../node_modules/create-hmac/legacy.js?");

/***/ }),

/***/ "../node_modules/crypto-browserify/index.js":
/*!**************************************************!*\
  !*** ../node_modules/crypto-browserify/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\")\nexports.createHash = exports.Hash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\")\nexports.createHmac = exports.Hmac = __webpack_require__(/*! create-hmac */ \"../node_modules/create-hmac/browser.js\")\n\nvar algos = __webpack_require__(/*! browserify-sign/algos */ \"../node_modules/browserify-sign/algos.js\")\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = __webpack_require__(/*! pbkdf2 */ \"../node_modules/pbkdf2/browser.js\")\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = __webpack_require__(/*! browserify-cipher */ \"../node_modules/browserify-cipher/browser.js\")\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = __webpack_require__(/*! diffie-hellman */ \"../node_modules/diffie-hellman/browser.js\")\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = __webpack_require__(/*! browserify-sign */ \"../node_modules/browserify-sign/browser/index.js\")\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = __webpack_require__(/*! create-ecdh */ \"../node_modules/create-ecdh/browser.js\")\n\nvar publicEncrypt = __webpack_require__(/*! public-encrypt */ \"../node_modules/public-encrypt/browser.js\")\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = __webpack_require__(/*! randomfill */ \"../node_modules/randomfill/browser.js\")\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n\n\n//# sourceURL=webpack:///../node_modules/crypto-browserify/index.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des.js":
/*!*****************************************!*\
  !*** ../node_modules/des.js/lib/des.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.utils = __webpack_require__(/*! ./des/utils */ \"../node_modules/des.js/lib/des/utils.js\");\nexports.Cipher = __webpack_require__(/*! ./des/cipher */ \"../node_modules/des.js/lib/des/cipher.js\");\nexports.DES = __webpack_require__(/*! ./des/des */ \"../node_modules/des.js/lib/des/des.js\");\nexports.CBC = __webpack_require__(/*! ./des/cbc */ \"../node_modules/des.js/lib/des/cbc.js\");\nexports.EDE = __webpack_require__(/*! ./des/ede */ \"../node_modules/des.js/lib/des/ede.js\");\n\n\n//# sourceURL=webpack:///../node_modules/des.js/lib/des.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/cbc.js":
/*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/cbc.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n\n\n//# sourceURL=webpack:///../node_modules/des.js/lib/des/cbc.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/cipher.js":
/*!************************************************!*\
  !*** ../node_modules/des.js/lib/des/cipher.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n\n\n//# sourceURL=webpack:///../node_modules/des.js/lib/des/cipher.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/des.js":
/*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/des.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar des = __webpack_require__(/*! ../des */ \"../node_modules/des.js/lib/des.js\");\nvar utils = des.utils;\nvar Cipher = des.Cipher;\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n\n\n//# sourceURL=webpack:///../node_modules/des.js/lib/des/des.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/ede.js":
/*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/ede.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar des = __webpack_require__(/*! ../des */ \"../node_modules/des.js/lib/des.js\");\nvar Cipher = des.Cipher;\nvar DES = des.DES;\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n\n\n//# sourceURL=webpack:///../node_modules/des.js/lib/des/ede.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/utils.js":
/*!***********************************************!*\
  !*** ../node_modules/des.js/lib/des/utils.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n\n\n//# sourceURL=webpack:///../node_modules/des.js/lib/des/utils.js?");

/***/ }),

/***/ "../node_modules/diffie-hellman/browser.js":
/*!*************************************************!*\
  !*** ../node_modules/diffie-hellman/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var generatePrime = __webpack_require__(/*! ./lib/generatePrime */ \"../node_modules/diffie-hellman/lib/generatePrime.js\")\nvar primes = __webpack_require__(/*! ./lib/primes.json */ \"../node_modules/diffie-hellman/lib/primes.json\")\n\nvar DH = __webpack_require__(/*! ./lib/dh */ \"../node_modules/diffie-hellman/lib/dh.js\")\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/diffie-hellman/browser.js?");

/***/ }),

/***/ "../node_modules/diffie-hellman/lib/dh.js":
/*!************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/dh.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar MillerRabin = __webpack_require__(/*! miller-rabin */ \"../node_modules/miller-rabin/lib/mr.js\");\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = __webpack_require__(/*! ./generatePrime */ \"../node_modules/diffie-hellman/lib/generatePrime.js\");\nvar randomBytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\");\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/diffie-hellman/lib/dh.js?");

/***/ }),

/***/ "../node_modules/diffie-hellman/lib/generatePrime.js":
/*!***********************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/generatePrime.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var randomBytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\");\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = __webpack_require__(/*! miller-rabin */ \"../node_modules/miller-rabin/lib/mr.js\");\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n\n\n//# sourceURL=webpack:///../node_modules/diffie-hellman/lib/generatePrime.js?");

/***/ }),

/***/ "../node_modules/diffie-hellman/lib/primes.json":
/*!******************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/primes.json ***!
  \******************************************************/
/*! exports provided: modp1, modp2, modp5, modp14, modp15, modp16, modp17, modp18, default */
/***/ (function(module) {

eval("module.exports = {\"modp1\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"},\"modp2\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"},\"modp5\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"},\"modp14\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"},\"modp15\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"},\"modp16\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"},\"modp17\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"},\"modp18\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"}};\n\n//# sourceURL=webpack:///../node_modules/diffie-hellman/lib/primes.json?");

/***/ }),

/***/ "../node_modules/eccrypto/browser.js":
/*!*******************************************!*\
  !*** ../node_modules/eccrypto/browser.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, Buffer) {/**\n * Browser eccrypto implementation.\n */\n\n\n\nvar EC = __webpack_require__(/*! elliptic */ \"../node_modules/elliptic/lib/elliptic.js\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar cryptoObj = global.crypto || global.msCrypto || {};\nvar subtle = cryptoObj.subtle || cryptoObj.webkitSubtle;\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  global.crypto.getRandomValues(arr);\n  return new Buffer(arr);\n}\n\nfunction sha512(msg) {\n  return subtle.digest({name: \"SHA-512\"}, msg).then(function(hash) {\n    return new Buffer(new Uint8Array(hash));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    var importAlgorithm = {name: \"AES-CBC\"};\n    var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n    return keyp.then(function(cryptoKey) {\n      var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n      return subtle[op](encAlgorithm, cryptoKey, data);\n    }).then(function(result) {\n      return new Buffer(new Uint8Array(result));\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  var algorithm = {name: \"HMAC\", hash: {name: \"SHA-256\"}};\n  var keyp = subtle.importKey(\"raw\", key, algorithm, false, [\"sign\"]);\n  return keyp.then(function(cryptoKey) {\n    return subtle.sign(algorithm, cryptoKey, msg);\n  }).then(function(sig) {\n    return new Buffer(new Uint8Array(sig));\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  var algorithm = {name: \"HMAC\", hash: {name: \"SHA-256\"}};\n  var keyp = subtle.importKey(\"raw\", key, algorithm, false, [\"verify\"]);\n  return keyp.then(function(cryptoKey) {\n    return subtle.verify(algorithm, cryptoKey, sig, msg);\n  });\n}\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(new Buffer(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65, \"Bad public key\");\n    assert(publicKey[0] === 4, \"Bad public key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad input\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad input\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(publicKeyB.length === 65, \"Bad public key\");\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(new Buffer(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  assert(subtle, \"WebCryptoAPI is not available\");\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  assert(subtle, \"WebCryptoAPI is not available\");\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return new Buffer(new Uint8Array(msg));\n  });\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/eccrypto/browser.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic.js":
/*!************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elliptic = exports;\n\nelliptic.version = __webpack_require__(/*! ../package.json */ \"../node_modules/elliptic/package.json\").version;\nelliptic.utils = __webpack_require__(/*! ./elliptic/utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nelliptic.rand = __webpack_require__(/*! brorand */ \"../node_modules/brorand/index.js\");\nelliptic.curve = __webpack_require__(/*! ./elliptic/curve */ \"../node_modules/elliptic/lib/elliptic/curve/index.js\");\nelliptic.curves = __webpack_require__(/*! ./elliptic/curves */ \"../node_modules/elliptic/lib/elliptic/curves.js\");\n\n// Protocols\nelliptic.ec = __webpack_require__(/*! ./elliptic/ec */ \"../node_modules/elliptic/lib/elliptic/ec/index.js\");\nelliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ \"../node_modules/elliptic/lib/elliptic/eddsa/index.js\");\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/base.js":
/*!***********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/curve/base.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/edwards.js":
/*!**************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = __webpack_require__(/*! ../curve */ \"../node_modules/elliptic/lib/elliptic/curve/index.js\");\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - 1) / (d y^2 + 1)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.one);\n  var rhs = y2.redMul(this.d).redAdd(this.one);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n         this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n  return false;\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/curve/edwards.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/index.js":
/*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = exports;\n\ncurve.base = __webpack_require__(/*! ./base */ \"../node_modules/elliptic/lib/elliptic/curve/base.js\");\ncurve.short = __webpack_require__(/*! ./short */ \"../node_modules/elliptic/lib/elliptic/curve/short.js\");\ncurve.mont = __webpack_require__(/*! ./mont */ \"../node_modules/elliptic/lib/elliptic/curve/mont.js\");\ncurve.edwards = __webpack_require__(/*! ./edwards */ \"../node_modules/elliptic/lib/elliptic/curve/edwards.js\");\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/curve/index.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/mont.js":
/*!***********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = __webpack_require__(/*! ../curve */ \"../node_modules/elliptic/lib/elliptic/curve/index.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Base = curve.base;\n\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/curve/mont.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/short.js":
/*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = __webpack_require__(/*! ../curve */ \"../node_modules/elliptic/lib/elliptic/curve/index.js\");\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n  return false;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/curve/short.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curves.js":
/*!*******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curves.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curves = exports;\n\nvar hash = __webpack_require__(/*! hash.js */ \"../node_modules/hash.js/lib/hash.js\");\nvar elliptic = __webpack_require__(/*! ../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ \"../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js\");\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/curves.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/ec/index.js":
/*!*********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar HmacDRBG = __webpack_require__(/*! hmac-drbg */ \"../node_modules/hmac-drbg/lib/hmac-drbg.js\");\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = __webpack_require__(/*! ./key */ \"../node_modules/elliptic/lib/elliptic/ec/key.js\");\nvar Signature = __webpack_require__(/*! ./signature */ \"../node_modules/elliptic/lib/elliptic/ec/signature.js\");\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/ec/index.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/ec/key.js":
/*!*******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/ec/key.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/ec/signature.js":
/*!*************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\n\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/ec/signature.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/eddsa/index.js":
/*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar hash = __webpack_require__(/*! hash.js */ \"../node_modules/hash.js/lib/hash.js\");\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = __webpack_require__(/*! ./key */ \"../node_modules/elliptic/lib/elliptic/eddsa/key.js\");\nvar Signature = __webpack_require__(/*! ./signature */ \"../node_modules/elliptic/lib/elliptic/eddsa/signature.js\");\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/eddsa/index.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/eddsa/key.js":
/*!**********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/eddsa/key.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/eddsa/signature.js":
/*!****************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar elliptic = __webpack_require__(/*! ../../elliptic */ \"../node_modules/elliptic/lib/elliptic.js\");\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/eddsa/signature.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!**********************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/utils.js":
/*!******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/utils.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = exports;\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar minAssert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ \"../node_modules/minimalistic-crypto-utils/lib/utils.js\");\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n\n\n//# sourceURL=webpack:///../node_modules/elliptic/lib/elliptic/utils.js?");

/***/ }),

/***/ "../node_modules/elliptic/package.json":
/*!*********************************************!*\
  !*** ../node_modules/elliptic/package.json ***!
  \*********************************************/
/*! exports provided: name, version, description, main, files, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, dependencies, default */
/***/ (function(module) {

eval("module.exports = {\"name\":\"elliptic\",\"version\":\"6.4.0\",\"description\":\"EC cryptography\",\"main\":\"lib/elliptic.js\",\"files\":[\"lib\"],\"scripts\":{\"jscs\":\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\"jshint\":\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\"lint\":\"npm run jscs && npm run jshint\",\"unit\":\"istanbul test _mocha --reporter=spec test/index.js\",\"test\":\"npm run lint && npm run unit\",\"version\":\"grunt dist && git add dist/\"},\"repository\":{\"type\":\"git\",\"url\":\"git@github.com:indutny/elliptic\"},\"keywords\":[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],\"author\":\"Fedor Indutny <fedor@indutny.com>\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/indutny/elliptic/issues\"},\"homepage\":\"https://github.com/indutny/elliptic\",\"devDependencies\":{\"brfs\":\"^1.4.3\",\"coveralls\":\"^2.11.3\",\"grunt\":\"^0.4.5\",\"grunt-browserify\":\"^5.0.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-connect\":\"^1.0.0\",\"grunt-contrib-copy\":\"^1.0.0\",\"grunt-contrib-uglify\":\"^1.0.1\",\"grunt-mocha-istanbul\":\"^3.0.1\",\"grunt-saucelabs\":\"^8.6.2\",\"istanbul\":\"^0.4.2\",\"jscs\":\"^2.9.0\",\"jshint\":\"^2.6.0\",\"mocha\":\"^2.1.0\"},\"dependencies\":{\"bn.js\":\"^4.4.0\",\"brorand\":\"^1.0.1\",\"hash.js\":\"^1.0.0\",\"hmac-drbg\":\"^1.0.0\",\"inherits\":\"^2.0.1\",\"minimalistic-assert\":\"^1.0.0\",\"minimalistic-crypto-utils\":\"^1.0.0\"}};\n\n//# sourceURL=webpack:///../node_modules/elliptic/package.json?");

/***/ }),

/***/ "../node_modules/events/events.js":
/*!****************************************!*\
  !*** ../node_modules/events/events.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n//# sourceURL=webpack:///../node_modules/events/events.js?");

/***/ }),

/***/ "../node_modules/evp_bytestokey/index.js":
/*!***********************************************!*\
  !*** ../node_modules/evp_bytestokey/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar MD5 = __webpack_require__(/*! md5.js */ \"../node_modules/md5.js/index.js\")\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n\n\n//# sourceURL=webpack:///../node_modules/evp_bytestokey/index.js?");

/***/ }),

/***/ "../node_modules/fbjs/lib/emptyFunction.js":
/*!*************************************************!*\
  !*** ../node_modules/fbjs/lib/emptyFunction.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n//# sourceURL=webpack:///../node_modules/fbjs/lib/emptyFunction.js?");

/***/ }),

/***/ "../node_modules/fbjs/lib/emptyObject.js":
/*!***********************************************!*\
  !*** ../node_modules/fbjs/lib/emptyObject.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (true) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n//# sourceURL=webpack:///../node_modules/fbjs/lib/emptyObject.js?");

/***/ }),

/***/ "../node_modules/fbjs/lib/invariant.js":
/*!*********************************************!*\
  !*** ../node_modules/fbjs/lib/invariant.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (true) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n//# sourceURL=webpack:///../node_modules/fbjs/lib/invariant.js?");

/***/ }),

/***/ "../node_modules/fbjs/lib/warning.js":
/*!*******************************************!*\
  !*** ../node_modules/fbjs/lib/warning.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyFunction = __webpack_require__(/*! ./emptyFunction */ \"../node_modules/fbjs/lib/emptyFunction.js\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (true) {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n\n//# sourceURL=webpack:///../node_modules/fbjs/lib/warning.js?");

/***/ }),

/***/ "../node_modules/hash-base/index.js":
/*!******************************************!*\
  !*** ../node_modules/hash-base/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"../node_modules/stream-browserify/index.js\").Transform\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n\n\n//# sourceURL=webpack:///../node_modules/hash-base/index.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash.js":
/*!*******************************************!*\
  !*** ../node_modules/hash.js/lib/hash.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var hash = exports;\n\nhash.utils = __webpack_require__(/*! ./hash/utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nhash.common = __webpack_require__(/*! ./hash/common */ \"../node_modules/hash.js/lib/hash/common.js\");\nhash.sha = __webpack_require__(/*! ./hash/sha */ \"../node_modules/hash.js/lib/hash/sha.js\");\nhash.ripemd = __webpack_require__(/*! ./hash/ripemd */ \"../node_modules/hash.js/lib/hash/ripemd.js\");\nhash.hmac = __webpack_require__(/*! ./hash/hmac */ \"../node_modules/hash.js/lib/hash/hmac.js\");\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/common.js":
/*!**************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/common.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/common.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/hmac.js":
/*!************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/hmac.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/hmac.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/ripemd.js":
/*!**************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/ripemd.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ./common */ \"../node_modules/hash.js/lib/hash/common.js\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/ripemd.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha.js":
/*!***********************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.sha1 = __webpack_require__(/*! ./sha/1 */ \"../node_modules/hash.js/lib/hash/sha/1.js\");\nexports.sha224 = __webpack_require__(/*! ./sha/224 */ \"../node_modules/hash.js/lib/hash/sha/224.js\");\nexports.sha256 = __webpack_require__(/*! ./sha/256 */ \"../node_modules/hash.js/lib/hash/sha/256.js\");\nexports.sha384 = __webpack_require__(/*! ./sha/384 */ \"../node_modules/hash.js/lib/hash/sha/384.js\");\nexports.sha512 = __webpack_require__(/*! ./sha/512 */ \"../node_modules/hash.js/lib/hash/sha/512.js\");\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/sha.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/1.js":
/*!*************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/1.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"../node_modules/hash.js/lib/hash/common.js\");\nvar shaCommon = __webpack_require__(/*! ./common */ \"../node_modules/hash.js/lib/hash/sha/common.js\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/sha/1.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/224.js":
/*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/224.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar SHA256 = __webpack_require__(/*! ./256 */ \"../node_modules/hash.js/lib/hash/sha/256.js\");\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/sha/224.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/256.js":
/*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/256.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"../node_modules/hash.js/lib/hash/common.js\");\nvar shaCommon = __webpack_require__(/*! ./common */ \"../node_modules/hash.js/lib/hash/sha/common.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/sha/256.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/384.js":
/*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/384.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\n\nvar SHA512 = __webpack_require__(/*! ./512 */ \"../node_modules/hash.js/lib/hash/sha/512.js\");\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/sha/384.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/512.js":
/*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/512.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"../node_modules/hash.js/lib/hash/common.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/sha/512.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/common.js":
/*!******************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/common.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/sha/common.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/utils.js":
/*!*************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/utils.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n\n\n//# sourceURL=webpack:///../node_modules/hash.js/lib/hash/utils.js?");

/***/ }),

/***/ "../node_modules/hmac-drbg/lib/hmac-drbg.js":
/*!**************************************************!*\
  !*** ../node_modules/hmac-drbg/lib/hmac-drbg.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar hash = __webpack_require__(/*! hash.js */ \"../node_modules/hash.js/lib/hash.js\");\nvar utils = __webpack_require__(/*! minimalistic-crypto-utils */ \"../node_modules/minimalistic-crypto-utils/lib/utils.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n\n\n//# sourceURL=webpack:///../node_modules/hmac-drbg/lib/hmac-drbg.js?");

/***/ }),

/***/ "../node_modules/ieee754/index.js":
/*!****************************************!*\
  !*** ../node_modules/ieee754/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///../node_modules/ieee754/index.js?");

/***/ }),

/***/ "../node_modules/indexof/index.js":
/*!****************************************!*\
  !*** ../node_modules/indexof/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n//# sourceURL=webpack:///../node_modules/indexof/index.js?");

/***/ }),

/***/ "../node_modules/inherits/inherits_browser.js":
/*!****************************************************!*\
  !*** ../node_modules/inherits/inherits_browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack:///../node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "../node_modules/isarray/index.js":
/*!****************************************!*\
  !*** ../node_modules/isarray/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///../node_modules/isarray/index.js?");

/***/ }),

/***/ "../node_modules/keccak/js.js":
/*!************************************!*\
  !*** ../node_modules/keccak/js.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./lib/api */ \"../node_modules/keccak/lib/api/index.js\")(__webpack_require__(/*! ./lib/keccak */ \"../node_modules/keccak/lib/keccak.js\"))\n\n\n//# sourceURL=webpack:///../node_modules/keccak/js.js?");

/***/ }),

/***/ "../node_modules/keccak/lib/api/index.js":
/*!***********************************************!*\
  !*** ../node_modules/keccak/lib/api/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar createKeccak = __webpack_require__(/*! ./keccak */ \"../node_modules/keccak/lib/api/keccak.js\")\nvar createShake = __webpack_require__(/*! ./shake */ \"../node_modules/keccak/lib/api/shake.js\")\n\nmodule.exports = function (KeccakState) {\n  var Keccak = createKeccak(KeccakState)\n  var Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    var hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///../node_modules/keccak/lib/api/index.js?");

/***/ }),

/***/ "../node_modules/keccak/lib/api/keccak.js":
/*!************************************************!*\
  !*** ../node_modules/keccak/lib/api/keccak.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"../node_modules/stream-browserify/index.js\").Transform\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nmodule.exports = function (KeccakState) {\n  function Keccak (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Keccak, Transform)\n\n  Keccak.prototype._transform = function (chunk, encoding, callback) {\n    var error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype._flush = function (callback) {\n    var error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Keccak.prototype.digest = function (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    var digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  Keccak.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  Keccak.prototype._clone = function () {\n    var clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Keccak\n}\n\n\n//# sourceURL=webpack:///../node_modules/keccak/lib/api/keccak.js?");

/***/ }),

/***/ "../node_modules/keccak/lib/api/shake.js":
/*!***********************************************!*\
  !*** ../node_modules/keccak/lib/api/shake.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"../node_modules/stream-browserify/index.js\").Transform\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nmodule.exports = function (KeccakState) {\n  function Shake (rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Shake, Transform)\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    var error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Shake.prototype._flush = function () {}\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size))\n  }\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    var data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  Shake.prototype._clone = function () {\n    var clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Shake\n}\n\n\n//# sourceURL=webpack:///../node_modules/keccak/lib/api/shake.js?");

/***/ }),

/***/ "../node_modules/keccak/lib/keccak-state-unroll.js":
/*!*********************************************************!*\
  !*** ../node_modules/keccak/lib/keccak-state-unroll.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (var round = 0; round < 24; ++round) {\n    // theta\n    var lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    var hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    var lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    var hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    var lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    var hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    var lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    var hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    var lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    var hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    var lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    var hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    var t1slo0 = s[0] ^ lo\n    var t1shi0 = s[1] ^ hi\n    var t1slo5 = s[10] ^ lo\n    var t1shi5 = s[11] ^ hi\n    var t1slo10 = s[20] ^ lo\n    var t1shi10 = s[21] ^ hi\n    var t1slo15 = s[30] ^ lo\n    var t1shi15 = s[31] ^ hi\n    var t1slo20 = s[40] ^ lo\n    var t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    var t1slo1 = s[2] ^ lo\n    var t1shi1 = s[3] ^ hi\n    var t1slo6 = s[12] ^ lo\n    var t1shi6 = s[13] ^ hi\n    var t1slo11 = s[22] ^ lo\n    var t1shi11 = s[23] ^ hi\n    var t1slo16 = s[32] ^ lo\n    var t1shi16 = s[33] ^ hi\n    var t1slo21 = s[42] ^ lo\n    var t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    var t1slo2 = s[4] ^ lo\n    var t1shi2 = s[5] ^ hi\n    var t1slo7 = s[14] ^ lo\n    var t1shi7 = s[15] ^ hi\n    var t1slo12 = s[24] ^ lo\n    var t1shi12 = s[25] ^ hi\n    var t1slo17 = s[34] ^ lo\n    var t1shi17 = s[35] ^ hi\n    var t1slo22 = s[44] ^ lo\n    var t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    var t1slo3 = s[6] ^ lo\n    var t1shi3 = s[7] ^ hi\n    var t1slo8 = s[16] ^ lo\n    var t1shi8 = s[17] ^ hi\n    var t1slo13 = s[26] ^ lo\n    var t1shi13 = s[27] ^ hi\n    var t1slo18 = s[36] ^ lo\n    var t1shi18 = s[37] ^ hi\n    var t1slo23 = s[46] ^ lo\n    var t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    var t1slo4 = s[8] ^ lo\n    var t1shi4 = s[9] ^ hi\n    var t1slo9 = s[18] ^ lo\n    var t1shi9 = s[19] ^ hi\n    var t1slo14 = s[28] ^ lo\n    var t1shi14 = s[29] ^ hi\n    var t1slo19 = s[38] ^ lo\n    var t1shi19 = s[39] ^ hi\n    var t1slo24 = s[48] ^ lo\n    var t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    var t2slo0 = t1slo0\n    var t2shi0 = t1shi0\n    var t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    var t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    var t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    var t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    var t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    var t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    var t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    var t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    var t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    var t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    var t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    var t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    var t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    var t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    var t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    var t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    var t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    var t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    var t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    var t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    var t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    var t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    var t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    var t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    var t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    var t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    var t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    var t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    var t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    var t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    var t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    var t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    var t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    var t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    var t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    var t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    var t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    var t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    var t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    var t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    var t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    var t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    var t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    var t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    var t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    var t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    var t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    var t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n\n\n//# sourceURL=webpack:///../node_modules/keccak/lib/keccak-state-unroll.js?");

/***/ }),

/***/ "../node_modules/keccak/lib/keccak.js":
/*!********************************************!*\
  !*** ../node_modules/keccak/lib/keccak.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar keccakState = __webpack_require__(/*! ./keccak-state-unroll */ \"../node_modules/keccak/lib/keccak-state-unroll.js\")\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (var i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (var i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  var output = Buffer.alloc(length)\n  for (var i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (var i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n\n\n//# sourceURL=webpack:///../node_modules/keccak/lib/keccak.js?");

/***/ }),

/***/ "../node_modules/md5.js/index.js":
/*!***************************************!*\
  !*** ../node_modules/md5.js/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"../node_modules/hash-base/index.js\")\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = new Buffer(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/md5.js/index.js?");

/***/ }),

/***/ "../node_modules/miller-rabin/lib/mr.js":
/*!**********************************************!*\
  !*** ../node_modules/miller-rabin/lib/mr.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var bn = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar brorand = __webpack_require__(/*! brorand */ \"../node_modules/brorand/index.js\");\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n\n\n//# sourceURL=webpack:///../node_modules/miller-rabin/lib/mr.js?");

/***/ }),

/***/ "../node_modules/minimalistic-assert/index.js":
/*!****************************************************!*\
  !*** ../node_modules/minimalistic-assert/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\n\n//# sourceURL=webpack:///../node_modules/minimalistic-assert/index.js?");

/***/ }),

/***/ "../node_modules/minimalistic-crypto-utils/lib/utils.js":
/*!**************************************************************!*\
  !*** ../node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n\n//# sourceURL=webpack:///../node_modules/minimalistic-crypto-utils/lib/utils.js?");

/***/ }),

/***/ "../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n//# sourceURL=webpack:///../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js?");

/***/ }),

/***/ "../node_modules/object-assign/index.js":
/*!**********************************************!*\
  !*** ../node_modules/object-assign/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack:///../node_modules/object-assign/index.js?");

/***/ }),

/***/ "../node_modules/parse-asn1/aesid.json":
/*!*********************************************!*\
  !*** ../node_modules/parse-asn1/aesid.json ***!
  \*********************************************/
/*! exports provided: 2.16.840.1.101.3.4.1.1, 2.16.840.1.101.3.4.1.2, 2.16.840.1.101.3.4.1.3, 2.16.840.1.101.3.4.1.4, 2.16.840.1.101.3.4.1.21, 2.16.840.1.101.3.4.1.22, 2.16.840.1.101.3.4.1.23, 2.16.840.1.101.3.4.1.24, 2.16.840.1.101.3.4.1.41, 2.16.840.1.101.3.4.1.42, 2.16.840.1.101.3.4.1.43, 2.16.840.1.101.3.4.1.44, default */
/***/ (function(module) {

eval("module.exports = {\"2.16.840.1.101.3.4.1.1\":\"aes-128-ecb\",\"2.16.840.1.101.3.4.1.2\":\"aes-128-cbc\",\"2.16.840.1.101.3.4.1.3\":\"aes-128-ofb\",\"2.16.840.1.101.3.4.1.4\":\"aes-128-cfb\",\"2.16.840.1.101.3.4.1.21\":\"aes-192-ecb\",\"2.16.840.1.101.3.4.1.22\":\"aes-192-cbc\",\"2.16.840.1.101.3.4.1.23\":\"aes-192-ofb\",\"2.16.840.1.101.3.4.1.24\":\"aes-192-cfb\",\"2.16.840.1.101.3.4.1.41\":\"aes-256-ecb\",\"2.16.840.1.101.3.4.1.42\":\"aes-256-cbc\",\"2.16.840.1.101.3.4.1.43\":\"aes-256-ofb\",\"2.16.840.1.101.3.4.1.44\":\"aes-256-cfb\"};\n\n//# sourceURL=webpack:///../node_modules/parse-asn1/aesid.json?");

/***/ }),

/***/ "../node_modules/parse-asn1/asn1.js":
/*!******************************************!*\
  !*** ../node_modules/parse-asn1/asn1.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\n\nvar asn1 = __webpack_require__(/*! asn1.js */ \"../node_modules/asn1.js/lib/asn1.js\")\n\nexports.certificate = __webpack_require__(/*! ./certificate */ \"../node_modules/parse-asn1/certificate.js\")\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n\n\n//# sourceURL=webpack:///../node_modules/parse-asn1/asn1.js?");

/***/ }),

/***/ "../node_modules/parse-asn1/certificate.js":
/*!*************************************************!*\
  !*** ../node_modules/parse-asn1/certificate.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n\n\nvar asn = __webpack_require__(/*! asn1.js */ \"../node_modules/asn1.js/lib/asn1.js\")\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n\n\n//# sourceURL=webpack:///../node_modules/parse-asn1/certificate.js?");

/***/ }),

/***/ "../node_modules/parse-asn1/fixProc.js":
/*!*********************************************!*\
  !*** ../node_modules/parse-asn1/fixProc.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r\\+\\/\\=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\\n\\r\\+\\/\\=]+)-----END \\1-----$/m\nvar evp = __webpack_require__(/*! evp_bytestokey */ \"../node_modules/evp_bytestokey/index.js\")\nvar ciphers = __webpack_require__(/*! browserify-aes */ \"../node_modules/browserify-aes/browser.js\")\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = new Buffer(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = new Buffer(match[2], 'hex')\n    var cipherText = new Buffer(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/parse-asn1/fixProc.js?");

/***/ }),

/***/ "../node_modules/parse-asn1/index.js":
/*!*******************************************!*\
  !*** ../node_modules/parse-asn1/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var asn1 = __webpack_require__(/*! ./asn1 */ \"../node_modules/parse-asn1/asn1.js\")\nvar aesid = __webpack_require__(/*! ./aesid.json */ \"../node_modules/parse-asn1/aesid.json\")\nvar fixProc = __webpack_require__(/*! ./fixProc */ \"../node_modules/parse-asn1/fixProc.js\")\nvar ciphers = __webpack_require__(/*! browserify-aes */ \"../node_modules/browserify-aes/browser.js\")\nvar compat = __webpack_require__(/*! pbkdf2 */ \"../node_modules/pbkdf2/browser.js\")\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = new Buffer(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen)\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/parse-asn1/index.js?");

/***/ }),

/***/ "../node_modules/path-browserify/index.js":
/*!************************************************!*\
  !*** ../node_modules/path-browserify/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///../node_modules/path-browserify/index.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/browser.js":
/*!*****************************************!*\
  !*** ../node_modules/pbkdf2/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ \"../node_modules/pbkdf2/lib/async.js\")\nexports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ \"../node_modules/pbkdf2/lib/sync-browser.js\")\n\n\n//# sourceURL=webpack:///../node_modules/pbkdf2/browser.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/lib/async.js":
/*!*******************************************!*\
  !*** ../node_modules/pbkdf2/lib/async.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {var checkParameters = __webpack_require__(/*! ./precondition */ \"../node_modules/pbkdf2/lib/precondition.js\")\nvar defaultEncoding = __webpack_require__(/*! ./default-encoding */ \"../node_modules/pbkdf2/lib/default-encoding.js\")\nvar sync = __webpack_require__(/*! ./sync */ \"../node_modules/pbkdf2/lib/sync-browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(password, salt, iterations, keylen)\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///../node_modules/pbkdf2/lib/async.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/lib/default-encoding.js":
/*!******************************************************!*\
  !*** ../node_modules/pbkdf2/lib/default-encoding.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n}\nmodule.exports = defaultEncoding\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///../node_modules/pbkdf2/lib/default-encoding.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/lib/precondition.js":
/*!**************************************************!*\
  !*** ../node_modules/pbkdf2/lib/precondition.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/pbkdf2/lib/precondition.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/lib/sync-browser.js":
/*!**************************************************!*\
  !*** ../node_modules/pbkdf2/lib/sync-browser.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var md5 = __webpack_require__(/*! create-hash/md5 */ \"../node_modules/create-hash/md5.js\")\nvar rmd160 = __webpack_require__(/*! ripemd160 */ \"../node_modules/ripemd160/index.js\")\nvar sha = __webpack_require__(/*! sha.js */ \"../node_modules/sha.js/index.js\")\n\nvar checkParameters = __webpack_require__(/*! ./precondition */ \"../node_modules/pbkdf2/lib/precondition.js\")\nvar defaultEncoding = __webpack_require__(/*! ./default-encoding */ \"../node_modules/pbkdf2/lib/default-encoding.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n\n\n//# sourceURL=webpack:///../node_modules/pbkdf2/lib/sync-browser.js?");

/***/ }),

/***/ "../node_modules/process-nextick-args/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/process-nextick-args/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///../node_modules/process-nextick-args/index.js?");

/***/ }),

/***/ "../node_modules/process/browser.js":
/*!******************************************!*\
  !*** ../node_modules/process/browser.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///../node_modules/process/browser.js?");

/***/ }),

/***/ "../node_modules/prop-types/checkPropTypes.js":
/*!****************************************************!*\
  !*** ../node_modules/prop-types/checkPropTypes.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"../node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          )\n\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n//# sourceURL=webpack:///../node_modules/prop-types/checkPropTypes.js?");

/***/ }),

/***/ "../node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!**************************************************************!*\
  !*** ../node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n//# sourceURL=webpack:///../node_modules/prop-types/lib/ReactPropTypesSecret.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/browser.js":
/*!*************************************************!*\
  !*** ../node_modules/public-encrypt/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.publicEncrypt = __webpack_require__(/*! ./publicEncrypt */ \"../node_modules/public-encrypt/publicEncrypt.js\");\nexports.privateDecrypt = __webpack_require__(/*! ./privateDecrypt */ \"../node_modules/public-encrypt/privateDecrypt.js\");\n\nexports.privateEncrypt = function privateEncrypt(key, buf) {\n  return exports.publicEncrypt(key, buf, true);\n};\n\nexports.publicDecrypt = function publicDecrypt(key, buf) {\n  return exports.privateDecrypt(key, buf, true);\n};\n\n//# sourceURL=webpack:///../node_modules/public-encrypt/browser.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/mgf.js":
/*!*********************************************!*\
  !*** ../node_modules/public-encrypt/mgf.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\");\nmodule.exports = function (seed, len) {\n  var t = new Buffer('');\n  var  i = 0, c;\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = new Buffer(4);\n  out.writeUInt32BE(c,0);\n  return out;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/public-encrypt/mgf.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/privateDecrypt.js":
/*!********************************************************!*\
  !*** ../node_modules/public-encrypt/privateDecrypt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var parseKeys = __webpack_require__(/*! parse-asn1 */ \"../node_modules/parse-asn1/index.js\");\nvar mgf = __webpack_require__(/*! ./mgf */ \"../node_modules/public-encrypt/mgf.js\");\nvar xor = __webpack_require__(/*! ./xor */ \"../node_modules/public-encrypt/xor.js\");\nvar bn = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar crt = __webpack_require__(/*! browserify-rsa */ \"../node_modules/browserify-rsa/index.js\");\nvar createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\");\nvar withPublic = __webpack_require__(/*! ./withPublic */ \"../node_modules/public-encrypt/withPublic.js\");\nmodule.exports = function privateDecrypt(private_key, enc, reverse) {\n  var padding;\n  if (private_key.padding) {\n    padding = private_key.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n  \n  var key = parseKeys(private_key);\n  var k = key.modulus.byteLength();\n  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error');\n  }\n  var msg;\n  if (reverse) {\n    msg = withPublic(new bn(enc), key);\n  } else {\n    msg = crt(enc, key);\n  }\n  var zBuffer = new Buffer(k - msg.length);\n  zBuffer.fill(0);\n  msg = Buffer.concat([zBuffer, msg], k);\n  if (padding === 4) {\n    return oaep(key, msg);\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    return msg;\n  } else {\n    throw new Error('unknown padding');\n  }\n};\n\nfunction oaep(key, msg){\n  var n = key.modulus;\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(new Buffer('')).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n  if (msg[0] !== 0) {\n    throw new Error('decryption error');\n  }\n  var maskedSeed = msg.slice(1, hLen + 1);\n  var maskedDb =  msg.slice(hLen + 1);\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen));\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1));\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error');\n  }\n  var i = hLen;\n  while (db[i] === 0) {\n    i++;\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error');\n  }\n  return db.slice(i);\n}\n\nfunction pkcs1(key, msg, reverse){\n  var p1 = msg.slice(0, 2);\n  var i = 2;\n  var status = 0;\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++;\n      break;\n    }\n  }\n  var ps = msg.slice(2, i - 1);\n  var p2 = msg.slice(i - 1, i);\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){\n    status++;\n  }\n  if (ps.length < 8) {\n    status++;\n  }\n  if (status) {\n    throw new Error('decryption error');\n  }\n  return  msg.slice(i);\n}\nfunction compare(a, b){\n  a = new Buffer(a);\n  b = new Buffer(b);\n  var dif = 0;\n  var len = a.length;\n  if (a.length !== b.length) {\n    dif++;\n    len = Math.min(a.length, b.length);\n  }\n  var i = -1;\n  while (++i < len) {\n    dif += (a[i] ^ b[i]);\n  }\n  return dif;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/public-encrypt/privateDecrypt.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/publicEncrypt.js":
/*!*******************************************************!*\
  !*** ../node_modules/public-encrypt/publicEncrypt.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var parseKeys = __webpack_require__(/*! parse-asn1 */ \"../node_modules/parse-asn1/index.js\");\nvar randomBytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\");\nvar createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\");\nvar mgf = __webpack_require__(/*! ./mgf */ \"../node_modules/public-encrypt/mgf.js\");\nvar xor = __webpack_require__(/*! ./xor */ \"../node_modules/public-encrypt/xor.js\");\nvar bn = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar withPublic = __webpack_require__(/*! ./withPublic */ \"../node_modules/public-encrypt/withPublic.js\");\nvar crt = __webpack_require__(/*! browserify-rsa */ \"../node_modules/browserify-rsa/index.js\");\n\nvar constants = {\n  RSA_PKCS1_OAEP_PADDING: 4,\n  RSA_PKCS1_PADDIN: 1,\n  RSA_NO_PADDING: 3\n};\n\nmodule.exports = function publicEncrypt(public_key, msg, reverse) {\n  var padding;\n  if (public_key.padding) {\n    padding = public_key.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n  var key = parseKeys(public_key);\n  var paddedMsg;\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg);\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    paddedMsg = new bn(msg);\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus');\n    }\n  } else {\n    throw new Error('unknown padding');\n  }\n  if (reverse) {\n    return crt(paddedMsg, key);\n  } else {\n    return withPublic(paddedMsg, key);\n  }\n};\n\nfunction oaep(key, msg){\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(new Buffer('')).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long');\n  }\n  var ps = new Buffer(k - mLen - hLen2 - 2);\n  ps.fill(0);\n  var dblen = k - hLen - 1;\n  var seed = randomBytes(hLen);\n  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen));\n  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));\n}\nfunction pkcs1(key, msg, reverse){\n  var mLen = msg.length;\n  var k = key.modulus.byteLength();\n  if (mLen > k - 11) {\n    throw new Error('message too long');\n  }\n  var ps;\n  if (reverse) {\n    ps = new Buffer(k - mLen - 3);\n    ps.fill(0xff);\n  } else {\n    ps = nonZero(k - mLen - 3);\n  }\n  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));\n}\nfunction nonZero(len, crypto) {\n  var out = new Buffer(len);\n  var i = 0;\n  var cache = randomBytes(len*2);\n  var cur = 0;\n  var num;\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len*2);\n      cur = 0;\n    }\n    num = cache[cur++];\n    if (num) {\n      out[i++] = num;\n    }\n  }\n  return out;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/public-encrypt/publicEncrypt.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/withPublic.js":
/*!****************************************************!*\
  !*** ../node_modules/public-encrypt/withPublic.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nfunction withPublic(paddedMsg, key) {\n  return new Buffer(paddedMsg\n    .toRed(bn.mont(key.modulus))\n    .redPow(new bn(key.publicExponent))\n    .fromRed()\n    .toArray());\n}\n\nmodule.exports = withPublic;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/public-encrypt/withPublic.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/xor.js":
/*!*********************************************!*\
  !*** ../node_modules/public-encrypt/xor.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n  return a\n};\n\n//# sourceURL=webpack:///../node_modules/public-encrypt/xor.js?");

/***/ }),

/***/ "../node_modules/randombytes/browser.js":
/*!**********************************************!*\
  !*** ../node_modules/randombytes/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes')\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size)\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    crypto.getRandomValues(rawBytes)\n  }\n\n  // XXX: phantomjs doesn't like a buffer being passed here\n  var bytes = Buffer.from(rawBytes.buffer)\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///../node_modules/randombytes/browser.js?");

/***/ }),

/***/ "../node_modules/randomfill/browser.js":
/*!*********************************************!*\
  !*** ../node_modules/randomfill/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\")\nvar randombytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\")\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///../node_modules/randomfill/browser.js?");

/***/ }),

/***/ "../node_modules/react-hot-loader/dist/react-hot-loader.production.min.js":
/*!********************************************************************************!*\
  !*** ../node_modules/react-hot-loader/dist/react-hot-loader.production.min.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("function _interopDefault(t){return t&&\"object\"==typeof t&&\"default\"in t?t.default:t}Object.defineProperty(exports,\"__esModule\",{value:!0});var React=_interopDefault(__webpack_require__(/*! react */ \"../node_modules/react/index.js\")),classCallCheck=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},inherits=function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)},possibleConstructorReturn=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e},AppContainer=function(t){function e(){return classCallCheck(this,e),possibleConstructorReturn(this,t.apply(this,arguments))}return inherits(e,t),e.prototype.render=function(){return React.Children.only(this.props.children)},e}(React.Component),hot_prod=function(){return function(t){return t}},areComponentsEqual=function(t,e){return t===e},setConfig=function(){},cold=function(t){return t};exports.AppContainer=AppContainer,exports.hot=hot_prod,exports.areComponentsEqual=areComponentsEqual,exports.setConfig=setConfig,exports.cold=cold;\n\n\n//# sourceURL=webpack:///../node_modules/react-hot-loader/dist/react-hot-loader.production.min.js?");

/***/ }),

/***/ "../node_modules/react-hot-loader/index.js":
/*!*************************************************!*\
  !*** ../node_modules/react-hot-loader/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (true) {\n  module.exports = __webpack_require__(/*! ./dist/react-hot-loader.production.min.js */ \"../node_modules/react-hot-loader/dist/react-hot-loader.production.min.js\");\n} else {}\n\n\n//# sourceURL=webpack:///../node_modules/react-hot-loader/index.js?");

/***/ }),

/***/ "../node_modules/react/cjs/react.development.js":
/*!******************************************************!*\
  !*** ../node_modules/react/cjs/react.development.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.4.1\n * react.development.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"../node_modules/object-assign/index.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"../node_modules/fbjs/lib/invariant.js\");\nvar emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ \"../node_modules/fbjs/lib/emptyObject.js\");\nvar warning = __webpack_require__(/*! fbjs/lib/warning */ \"../node_modules/fbjs/lib/warning.js\");\nvar emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ \"../node_modules/fbjs/lib/emptyFunction.js\");\nvar checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ \"../node_modules/prop-types/checkPropTypes.js\");\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.4.1';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable === 'undefined') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\n// Relying on the `invariant()` implementation lets us\n// have preserve the format and params in the www builds.\n\n// Exports ReactDOM.createRoot\n\n\n// Experimental error-boundary API that can recover from errors within a single\n// render phase\n\n// Suspense\nvar enableSuspense = false;\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\n\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n\n// Warn about legacy context API\n\n\n// Gather advanced timing metrics for Profiler subtrees.\n\n\n// Only used in www builds.\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warning(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n        return undefined;\n      }\n    });\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n  {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown = void 0;\nvar specialPropRefWarningShown = void 0;\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nfunction createElement(type, config, children) {\n  var propName = void 0;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\n\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nfunction cloneElement(element, config, children) {\n  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;\n\n  var propName = void 0;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps = void 0;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar ReactDebugCurrentFrame = {};\n\n{\n  // Component that is being worked on\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      return impl();\n    }\n    return null;\n  };\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child = void 0;\n  var nextName = void 0;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum()) : void 0;\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step = void 0;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n      var childrenString = '' + children;\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children) {\n  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warning(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    _defaultValue: defaultValue,\n    _currentValue: defaultValue,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue2: defaultValue,\n    _changedBits: 0,\n    _changedBits2: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  context.Consumer = context;\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction forwardRef(render) {\n  {\n    !(typeof render === 'function') ? warning(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render) : void 0;\n\n    if (render != null) {\n      !(render.defaultProps == null && render.propTypes == null) ? warning(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n};\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_TIMEOUT_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\nfunction getComponentName(fiber) {\n  var type = fiber.type;\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_ASYNC_MODE_TYPE:\n      return 'AsyncMode';\n    case REACT_CONTEXT_TYPE:\n      return 'Context.Consumer';\n    case REACT_FRAGMENT_TYPE:\n      return 'ReactFragment';\n    case REACT_PORTAL_TYPE:\n      return 'ReactPortal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler(' + fiber.pendingProps.id + ')';\n    case REACT_PROVIDER_TYPE:\n      return 'Context.Provider';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_TIMEOUT_TYPE:\n      return 'Timeout';\n  }\n  if (typeof type === 'object' && type !== null) {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        var functionName = type.render.displayName || type.render.name || '';\n        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';\n    }\n  }\n  return null;\n}\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nvar currentlyValidatingElement = void 0;\nvar propTypesMisspellWarningShown = void 0;\n\nvar getDisplayName = function () {};\nvar getStackAddendum = function () {};\n\n{\n  currentlyValidatingElement = null;\n\n  propTypesMisspellWarningShown = false;\n\n  getDisplayName = function (element) {\n    if (element == null) {\n      return '#empty';\n    } else if (typeof element === 'string' || typeof element === 'number') {\n      return '#text';\n    } else if (typeof element.type === 'string') {\n      return element.type;\n    }\n\n    var type = element.type;\n    if (type === REACT_FRAGMENT_TYPE) {\n      return 'React.Fragment';\n    } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {\n      var functionName = type.render.displayName || type.render.name || '';\n      return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';\n    } else {\n      return type.displayName || type.name || 'Unknown';\n    }\n  };\n\n  getStackAddendum = function () {\n    var stack = '';\n    if (currentlyValidatingElement) {\n      var name = getDisplayName(currentlyValidatingElement);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));\n    }\n    stack += ReactDebugCurrentFrame.getStackAddendum() || '';\n    return stack;\n  };\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';\n  }\n\n  currentlyValidatingElement = element;\n  {\n    warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());\n  }\n  currentlyValidatingElement = null;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step = void 0;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var type = element.type;\n  var name = void 0,\n      propTypes = void 0;\n  if (typeof type === 'function') {\n    // Class or functional component\n    name = type.displayName || type.name;\n    propTypes = type.propTypes;\n  } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {\n    // ForwardRef\n    var functionName = type.render.displayName || type.render.name || '';\n    name = functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';\n    propTypes = type.propTypes;\n  } else {\n    return;\n  }\n  if (propTypes) {\n    currentlyValidatingElement = element;\n    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);\n    currentlyValidatingElement = null;\n  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n  }\n  if (typeof type.getDefaultProps === 'function') {\n    !type.getDefaultProps.isReactClassApproved ? warning(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  currentlyValidatingElement = fragment;\n\n  var keys = Object.keys(fragment.props);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key !== 'children' && key !== 'key') {\n      warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());\n      break;\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());\n  }\n\n  currentlyValidatingElement = null;\n}\n\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    var info = '';\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    info += getStackAddendum() || '';\n\n    var typeString = void 0;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else {\n      typeString = typeof type;\n    }\n\n    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n  }\n\n  var element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  // Legacy hook: remove it\n  {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\n\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nvar React = {\n  Children: {\n    map: mapChildren,\n    forEach: forEachChildren,\n    count: countChildren,\n    toArray: toArray,\n    only: onlyChild\n  },\n\n  createRef: createRef,\n  Component: Component,\n  PureComponent: PureComponent,\n\n  createContext: createContext,\n  forwardRef: forwardRef,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n  StrictMode: REACT_STRICT_MODE_TYPE,\n  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n  unstable_Profiler: REACT_PROFILER_TYPE,\n\n  createElement: createElementWithValidation,\n  cloneElement: cloneElementWithValidation,\n  createFactory: createFactoryWithValidation,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentOwner: ReactCurrentOwner,\n    // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n    assign: _assign\n  }\n};\n\nif (enableSuspense) {\n  React.Timeout = REACT_TIMEOUT_TYPE;\n}\n\n{\n  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n\n\nvar React$2 = Object.freeze({\n\tdefault: React\n});\n\nvar React$3 = ( React$2 && React ) || React$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar react = React$3.default ? React$3.default : React$3;\n\nmodule.exports = react;\n  })();\n}\n\n\n//# sourceURL=webpack:///../node_modules/react/cjs/react.development.js?");

/***/ }),

/***/ "../node_modules/react/index.js":
/*!**************************************!*\
  !*** ../node_modules/react/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"../node_modules/react/cjs/react.development.js\");\n}\n\n\n//# sourceURL=webpack:///../node_modules/react/index.js?");

/***/ }),

/***/ "../node_modules/readable-stream/duplex-browser.js":
/*!*********************************************************!*\
  !*** ../node_modules/readable-stream/duplex-browser.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n\n//# sourceURL=webpack:///../node_modules/readable-stream/duplex-browser.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_duplex.js":
/*!*************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_duplex.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"../node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"../node_modules/readable-stream/lib/_stream_writable.js\");\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n\n//# sourceURL=webpack:///../node_modules/readable-stream/lib/_stream_duplex.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_passthrough.js":
/*!******************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"../node_modules/readable-stream/lib/_stream_transform.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//# sourceURL=webpack:///../node_modules/readable-stream/lib/_stream_passthrough.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_readable.js":
/*!***************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_readable.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(/*! isarray */ \"../node_modules/isarray/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(/*! events */ \"../node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ 0);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ \"../node_modules/readable-stream/lib/internal/streams/BufferList.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///../node_modules/readable-stream/lib/_stream_readable.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_transform.js":
/*!****************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_transform.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n//# sourceURL=webpack:///../node_modules/readable-stream/lib/_stream_transform.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_writable.js":
/*!***************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_writable.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"../node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"../node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///../node_modules/readable-stream/lib/_stream_writable.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!**************************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer;\nvar util = __webpack_require__(/*! util */ 1);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n\n//# sourceURL=webpack:///../node_modules/readable-stream/lib/internal/streams/BufferList.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!***********************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n//# sourceURL=webpack:///../node_modules/readable-stream/lib/internal/streams/destroy.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!******************************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"../node_modules/events/events.js\").EventEmitter;\n\n\n//# sourceURL=webpack:///../node_modules/readable-stream/lib/internal/streams/stream-browser.js?");

/***/ }),

/***/ "../node_modules/readable-stream/passthrough.js":
/*!******************************************************!*\
  !*** ../node_modules/readable-stream/passthrough.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"../node_modules/readable-stream/readable-browser.js\").PassThrough\n\n\n//# sourceURL=webpack:///../node_modules/readable-stream/passthrough.js?");

/***/ }),

/***/ "../node_modules/readable-stream/readable-browser.js":
/*!***********************************************************!*\
  !*** ../node_modules/readable-stream/readable-browser.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"../node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"../node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"../node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"../node_modules/readable-stream/lib/_stream_passthrough.js\");\n\n\n//# sourceURL=webpack:///../node_modules/readable-stream/readable-browser.js?");

/***/ }),

/***/ "../node_modules/readable-stream/transform.js":
/*!****************************************************!*\
  !*** ../node_modules/readable-stream/transform.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"../node_modules/readable-stream/readable-browser.js\").Transform\n\n\n//# sourceURL=webpack:///../node_modules/readable-stream/transform.js?");

/***/ }),

/***/ "../node_modules/readable-stream/writable-browser.js":
/*!***********************************************************!*\
  !*** ../node_modules/readable-stream/writable-browser.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ \"../node_modules/readable-stream/lib/_stream_writable.js\");\n\n\n//# sourceURL=webpack:///../node_modules/readable-stream/writable-browser.js?");

/***/ }),

/***/ "../node_modules/ripemd160/index.js":
/*!******************************************!*\
  !*** ../node_modules/ripemd160/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\").Buffer\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"../node_modules/hash-base/index.js\")\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n\n\n//# sourceURL=webpack:///../node_modules/ripemd160/index.js?");

/***/ }),

/***/ "../node_modules/safe-buffer/index.js":
/*!********************************************!*\
  !*** ../node_modules/safe-buffer/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack:///../node_modules/safe-buffer/index.js?");

/***/ }),

/***/ "../node_modules/secp256k1/elliptic.js":
/*!*********************************************!*\
  !*** ../node_modules/secp256k1/elliptic.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./lib */ \"../node_modules/secp256k1/lib/index.js\")(__webpack_require__(/*! ./lib/elliptic */ \"../node_modules/secp256k1/lib/elliptic/index.js\"))\n\n\n//# sourceURL=webpack:///../node_modules/secp256k1/elliptic.js?");

/***/ }),

/***/ "../node_modules/secp256k1/lib/assert.js":
/*!***********************************************!*\
  !*** ../node_modules/secp256k1/lib/assert.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar toString = Object.prototype.toString\n\n// TypeError\nexports.isArray = function (value, message) {\n  if (!Array.isArray(value)) throw TypeError(message)\n}\n\nexports.isBoolean = function (value, message) {\n  if (toString.call(value) !== '[object Boolean]') throw TypeError(message)\n}\n\nexports.isBuffer = function (value, message) {\n  if (!Buffer.isBuffer(value)) throw TypeError(message)\n}\n\nexports.isFunction = function (value, message) {\n  if (toString.call(value) !== '[object Function]') throw TypeError(message)\n}\n\nexports.isNumber = function (value, message) {\n  if (toString.call(value) !== '[object Number]') throw TypeError(message)\n}\n\nexports.isObject = function (value, message) {\n  if (toString.call(value) !== '[object Object]') throw TypeError(message)\n}\n\n// RangeError\nexports.isBufferLength = function (buffer, length, message) {\n  if (buffer.length !== length) throw RangeError(message)\n}\n\nexports.isBufferLength2 = function (buffer, length1, length2, message) {\n  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message)\n}\n\nexports.isLengthGTZero = function (value, message) {\n  if (value.length === 0) throw RangeError(message)\n}\n\nexports.isNumberInInterval = function (number, x, y, message) {\n  if (number <= x || number >= y) throw RangeError(message)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../node_modules/secp256k1/lib/assert.js?");

/***/ }),

/***/ "../node_modules/secp256k1/lib/der.js":
/*!********************************************!*\
  !*** ../node_modules/secp256k1/lib/der.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar bip66 = __webpack_require__(/*! bip66 */ \"../node_modules/bip66/index.js\")\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x21, 0x02, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x41, 0x04, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0E, 0x11,\n  0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10,\n  0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED)\n  privateKey.copy(result, compressed ? 8 : 9)\n  publicKey.copy(result, compressed ? 181 : 214)\n  return result\n}\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length\n\n  // sequence header\n  var index = 0\n  if (length < index + 1 || privateKey[index] !== 0x30) return\n  index += 1\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return\n\n  var lenb = privateKey[index] & 0x7f\n  index += 1\n  if (lenb < 1 || lenb > 2) return\n  if (length < index + lenb) return\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0)\n  index += lenb\n  if (length < index + len) return\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 ||\n      privateKey[index] !== 0x02 ||\n      privateKey[index + 1] !== 0x01 ||\n      privateKey[index + 2] !== 0x01) {\n    return\n  }\n  index += 3\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 ||\n      privateKey[index] !== 0x04 ||\n      privateKey[index + 1] > 0x20 ||\n      length < index + 2 + privateKey[index + 1]) {\n    return\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1])\n}\n\nexports.signatureExport = function (sigObj) {\n  var r = Buffer.concat([Buffer.from([0]), sigObj.r])\n  for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n  var s = Buffer.concat([Buffer.from([0]), sigObj.s])\n  for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n  return bip66.encode(r.slice(posR), s.slice(posS))\n}\n\nexports.signatureImport = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  try {\n    var sigObj = bip66.decode(sig)\n    if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1)\n    if (sigObj.r.length > 32) throw new Error('R length is too long')\n    if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1)\n    if (sigObj.s.length > 32) throw new Error('S length is too long')\n  } catch (err) {\n    return\n  }\n\n  sigObj.r.copy(r, 32 - sigObj.r.length)\n  sigObj.s.copy(s, 32 - sigObj.s.length)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImportLax = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  var length = sig.length\n  var index = 0\n\n  // sequence tag byte\n  if (sig[index++] !== 0x30) return\n\n  // sequence length byte\n  var lenbyte = sig[index++]\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80\n    if (index > length) return\n  }\n\n  // sequence tag byte for r\n  if (sig[index++] !== 0x02) return\n\n  // length for r\n  var rlen = sig[index++]\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + sig[index]\n  }\n  if (rlen > length - index) return\n  var rindex = index\n  index += rlen\n\n  // sequence tag byte for s\n  if (sig[index++] !== 0x02) return\n\n  // length for s\n  var slen = sig[index++]\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + sig[index]\n  }\n  if (slen > length - index) return\n  var sindex = index\n  index += slen\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && sig[rindex] === 0x00; rlen -= 1, rindex += 1);\n  // copy r value\n  if (rlen > 32) return\n  var rvalue = sig.slice(rindex, rindex + rlen)\n  rvalue.copy(r, 32 - rvalue.length)\n\n  // ignore leading zeros in s\n  for (; slen > 0 && sig[sindex] === 0x00; slen -= 1, sindex += 1);\n  // copy s value\n  if (slen > 32) return\n  var svalue = sig.slice(sindex, sindex + slen)\n  svalue.copy(s, 32 - svalue.length)\n\n  return { r: r, s: s }\n}\n\n\n//# sourceURL=webpack:///../node_modules/secp256k1/lib/der.js?");

/***/ }),

/***/ "../node_modules/secp256k1/lib/elliptic/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/secp256k1/lib/elliptic/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\")\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\nvar EC = __webpack_require__(/*! elliptic */ \"../node_modules/elliptic/lib/elliptic.js\").ec\n\nvar messages = __webpack_require__(/*! ../messages.json */ \"../node_modules/secp256k1/lib/messages.json\")\n\nvar ec = new EC('secp256k1')\nvar ecparams = ec.curve\n\nfunction loadCompressedPublicKey (first, xBuffer) {\n  var x = new BN(xBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xBuffer, yBuffer) {\n  var x = new BN(xBuffer)\n  var y = new BN(yBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  var x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (publicKey) {\n  var first = publicKey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (publicKey.length !== 33) return null\n      return loadCompressedPublicKey(first, publicKey.slice(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (publicKey.length !== 65) return null\n      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65))\n    default:\n      return null\n  }\n}\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.cmp(ecparams.n) < 0 && !bn.isZero()\n}\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.isZero() ? Buffer.alloc(32) : ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID)\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  bn.iadd(new BN(privateKey))\n  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL)\n\n  bn.imul(new BN(privateKey))\n  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return Buffer.from(pair.getPublic(compressed, true))\n}\n\nexports.publicKeyVerify = function (publicKey) {\n  return loadPublicKey(publicKey) !== null\n}\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  return Buffer.from(ecparams.g.mul(tweak).add(pair.pub).encode(true, compressed))\n}\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL)\n\n  return Buffer.from(pair.pub.mul(tweak).encode(true, compressed))\n}\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var pairs = new Array(publicKeys.length)\n  for (var i = 0; i < publicKeys.length; ++i) {\n    pairs[i] = loadPublicKey(publicKeys[i])\n    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n  }\n\n  var point = pairs[0].pub\n  for (var j = 1; j < pairs.length; ++j) point = point.add(pairs[j].pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.signatureNormalize = function (signature) {\n  var r = new BN(signature.slice(0, 32))\n  var s = new BN(signature.slice(32, 64))\n  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  var result = Buffer.from(signature)\n  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32)\n\n  return result\n}\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32)\n  var s = signature.slice(32, 64)\n  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r)\n  if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n  var s = new BN(sigObj.s)\n  if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n  return Buffer.concat([\n    r.toArrayLike(Buffer, 'be', 32),\n    s.toArrayLike(Buffer, 'be', 32)\n  ])\n}\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  if (typeof noncefn === 'function') {\n    var getNonce = noncefn\n    noncefn = function (counter) {\n      var nonce = getNonce(message, privateKey, null, data, counter)\n      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n      return new BN(nonce)\n    }\n  }\n\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n  var result = ec.sign(message, privateKey, { canonical: true, k: noncefn, pers: data })\n  return {\n    signature: Buffer.concat([\n      result.r.toArrayLike(Buffer, 'be', 32),\n      result.s.toArrayLike(Buffer, 'be', 32)\n    ]),\n    recovery: result.recoveryParam\n  }\n}\n\nexports.verify = function (message, signature, publicKey) {\n  var sigObj = {r: signature.slice(0, 32), s: signature.slice(32, 64)}\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false\n\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return ec.verify(message, sigObj, {x: pair.pub.x, y: pair.pub.y})\n}\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigObj = {r: signature.slice(0, 32), s: signature.slice(32, 64)}\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  try {\n    if (sigr.isZero() || sigs.isZero()) throw new Error()\n\n    var point = ec.recoverPubKey(message, sigObj, recovery)\n    return Buffer.from(point.encode(true, compressed))\n  } catch (err) {\n    throw new Error(messages.ECDSA_RECOVER_FAIL)\n  }\n}\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true)\n  return createHash('sha256').update(shared).digest()\n}\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  var scalar = new BN(privateKey)\n  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL)\n\n  return Buffer.from(pair.pub.mul(scalar).encode(true, compressed))\n}\n\n\n//# sourceURL=webpack:///../node_modules/secp256k1/lib/elliptic/index.js?");

/***/ }),

/***/ "../node_modules/secp256k1/lib/index.js":
/*!**********************************************!*\
  !*** ../node_modules/secp256k1/lib/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar assert = __webpack_require__(/*! ./assert */ \"../node_modules/secp256k1/lib/assert.js\")\nvar der = __webpack_require__(/*! ./der */ \"../node_modules/secp256k1/lib/der.js\")\nvar messages = __webpack_require__(/*! ./messages.json */ \"../node_modules/secp256k1/lib/messages.json\")\n\nfunction initCompressedValue (value, defaultValue) {\n  if (value === undefined) return defaultValue\n\n  assert.isBoolean(value, messages.COMPRESSED_TYPE_INVALID)\n  return value\n}\n\nmodule.exports = function (secp256k1) {\n  return {\n    privateKeyVerify: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      return privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)\n    },\n\n    privateKeyExport: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n      var publicKey = secp256k1.privateKeyExport(privateKey, compressed)\n\n      return der.privateKeyExport(privateKey, publicKey, compressed)\n    },\n\n    privateKeyImport: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n\n      privateKey = der.privateKeyImport(privateKey)\n      if (privateKey && privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)) return privateKey\n\n      throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL)\n    },\n\n    privateKeyNegate: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyNegate(privateKey)\n    },\n\n    privateKeyModInverse: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyModInverse(privateKey)\n    },\n\n    privateKeyTweakAdd: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakAdd(privateKey, tweak)\n    },\n\n    privateKeyTweakMul: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakMul(privateKey, tweak)\n    },\n\n    publicKeyCreate: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCreate(privateKey, compressed)\n    },\n\n    publicKeyConvert: function (publicKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyConvert(publicKey, compressed)\n    },\n\n    publicKeyVerify: function (publicKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      return secp256k1.publicKeyVerify(publicKey)\n    },\n\n    publicKeyTweakAdd: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakAdd(publicKey, tweak, compressed)\n    },\n\n    publicKeyTweakMul: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakMul(publicKey, tweak, compressed)\n    },\n\n    publicKeyCombine: function (publicKeys, compressed) {\n      assert.isArray(publicKeys, messages.EC_PUBLIC_KEYS_TYPE_INVALID)\n      assert.isLengthGTZero(publicKeys, messages.EC_PUBLIC_KEYS_LENGTH_INVALID)\n      for (var i = 0; i < publicKeys.length; ++i) {\n        assert.isBuffer(publicKeys[i], messages.EC_PUBLIC_KEY_TYPE_INVALID)\n        assert.isBufferLength2(publicKeys[i], 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n      }\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCombine(publicKeys, compressed)\n    },\n\n    signatureNormalize: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      return secp256k1.signatureNormalize(signature)\n    },\n\n    signatureExport: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = secp256k1.signatureExport(signature)\n      return der.signatureExport(sigObj)\n    },\n\n    signatureImport: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImport(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    signatureImportLax: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImportLax(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    sign: function (message, privateKey, options) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      var data = null\n      var noncefn = null\n      if (options !== undefined) {\n        assert.isObject(options, messages.OPTIONS_TYPE_INVALID)\n\n        if (options.data !== undefined) {\n          assert.isBuffer(options.data, messages.OPTIONS_DATA_TYPE_INVALID)\n          assert.isBufferLength(options.data, 32, messages.OPTIONS_DATA_LENGTH_INVALID)\n          data = options.data\n        }\n\n        if (options.noncefn !== undefined) {\n          assert.isFunction(options.noncefn, messages.OPTIONS_NONCEFN_TYPE_INVALID)\n          noncefn = options.noncefn\n        }\n      }\n\n      return secp256k1.sign(message, privateKey, noncefn, data)\n    },\n\n    verify: function (message, signature, publicKey) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      return secp256k1.verify(message, signature, publicKey)\n    },\n\n    recover: function (message, signature, recovery, compressed) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isNumber(recovery, messages.RECOVERY_ID_TYPE_INVALID)\n      assert.isNumberInInterval(recovery, -1, 4, messages.RECOVERY_ID_VALUE_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.recover(message, signature, recovery, compressed)\n    },\n\n    ecdh: function (publicKey, privateKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.ecdh(publicKey, privateKey)\n    },\n\n    ecdhUnsafe: function (publicKey, privateKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.ecdhUnsafe(publicKey, privateKey, compressed)\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///../node_modules/secp256k1/lib/index.js?");

/***/ }),

/***/ "../node_modules/secp256k1/lib/messages.json":
/*!***************************************************!*\
  !*** ../node_modules/secp256k1/lib/messages.json ***!
  \***************************************************/
/*! exports provided: COMPRESSED_TYPE_INVALID, EC_PRIVATE_KEY_TYPE_INVALID, EC_PRIVATE_KEY_LENGTH_INVALID, EC_PRIVATE_KEY_RANGE_INVALID, EC_PRIVATE_KEY_TWEAK_ADD_FAIL, EC_PRIVATE_KEY_TWEAK_MUL_FAIL, EC_PRIVATE_KEY_EXPORT_DER_FAIL, EC_PRIVATE_KEY_IMPORT_DER_FAIL, EC_PUBLIC_KEYS_TYPE_INVALID, EC_PUBLIC_KEYS_LENGTH_INVALID, EC_PUBLIC_KEY_TYPE_INVALID, EC_PUBLIC_KEY_LENGTH_INVALID, EC_PUBLIC_KEY_PARSE_FAIL, EC_PUBLIC_KEY_CREATE_FAIL, EC_PUBLIC_KEY_TWEAK_ADD_FAIL, EC_PUBLIC_KEY_TWEAK_MUL_FAIL, EC_PUBLIC_KEY_COMBINE_FAIL, ECDH_FAIL, ECDSA_SIGNATURE_TYPE_INVALID, ECDSA_SIGNATURE_LENGTH_INVALID, ECDSA_SIGNATURE_PARSE_FAIL, ECDSA_SIGNATURE_PARSE_DER_FAIL, ECDSA_SIGNATURE_SERIALIZE_DER_FAIL, ECDSA_SIGN_FAIL, ECDSA_RECOVER_FAIL, MSG32_TYPE_INVALID, MSG32_LENGTH_INVALID, OPTIONS_TYPE_INVALID, OPTIONS_DATA_TYPE_INVALID, OPTIONS_DATA_LENGTH_INVALID, OPTIONS_NONCEFN_TYPE_INVALID, RECOVERY_ID_TYPE_INVALID, RECOVERY_ID_VALUE_INVALID, TWEAK_TYPE_INVALID, TWEAK_LENGTH_INVALID, default */
/***/ (function(module) {

eval("module.exports = {\"COMPRESSED_TYPE_INVALID\":\"compressed should be a boolean\",\"EC_PRIVATE_KEY_TYPE_INVALID\":\"private key should be a Buffer\",\"EC_PRIVATE_KEY_LENGTH_INVALID\":\"private key length is invalid\",\"EC_PRIVATE_KEY_RANGE_INVALID\":\"private key range is invalid\",\"EC_PRIVATE_KEY_TWEAK_ADD_FAIL\":\"tweak out of range or resulting private key is invalid\",\"EC_PRIVATE_KEY_TWEAK_MUL_FAIL\":\"tweak out of range\",\"EC_PRIVATE_KEY_EXPORT_DER_FAIL\":\"couldn't export to DER format\",\"EC_PRIVATE_KEY_IMPORT_DER_FAIL\":\"couldn't import from DER format\",\"EC_PUBLIC_KEYS_TYPE_INVALID\":\"public keys should be an Array\",\"EC_PUBLIC_KEYS_LENGTH_INVALID\":\"public keys Array should have at least 1 element\",\"EC_PUBLIC_KEY_TYPE_INVALID\":\"public key should be a Buffer\",\"EC_PUBLIC_KEY_LENGTH_INVALID\":\"public key length is invalid\",\"EC_PUBLIC_KEY_PARSE_FAIL\":\"the public key could not be parsed or is invalid\",\"EC_PUBLIC_KEY_CREATE_FAIL\":\"private was invalid, try again\",\"EC_PUBLIC_KEY_TWEAK_ADD_FAIL\":\"tweak out of range or resulting public key is invalid\",\"EC_PUBLIC_KEY_TWEAK_MUL_FAIL\":\"tweak out of range\",\"EC_PUBLIC_KEY_COMBINE_FAIL\":\"the sum of the public keys is not valid\",\"ECDH_FAIL\":\"scalar was invalid (zero or overflow)\",\"ECDSA_SIGNATURE_TYPE_INVALID\":\"signature should be a Buffer\",\"ECDSA_SIGNATURE_LENGTH_INVALID\":\"signature length is invalid\",\"ECDSA_SIGNATURE_PARSE_FAIL\":\"couldn't parse signature\",\"ECDSA_SIGNATURE_PARSE_DER_FAIL\":\"couldn't parse DER signature\",\"ECDSA_SIGNATURE_SERIALIZE_DER_FAIL\":\"couldn't serialize signature to DER format\",\"ECDSA_SIGN_FAIL\":\"nonce generation function failed or private key is invalid\",\"ECDSA_RECOVER_FAIL\":\"couldn't recover public key from signature\",\"MSG32_TYPE_INVALID\":\"message should be a Buffer\",\"MSG32_LENGTH_INVALID\":\"message length is invalid\",\"OPTIONS_TYPE_INVALID\":\"options should be an Object\",\"OPTIONS_DATA_TYPE_INVALID\":\"options.data should be a Buffer\",\"OPTIONS_DATA_LENGTH_INVALID\":\"options.data length is invalid\",\"OPTIONS_NONCEFN_TYPE_INVALID\":\"options.noncefn should be a Function\",\"RECOVERY_ID_TYPE_INVALID\":\"recovery should be a Number\",\"RECOVERY_ID_VALUE_INVALID\":\"recovery should have value between -1 and 4\",\"TWEAK_TYPE_INVALID\":\"tweak should be a Buffer\",\"TWEAK_LENGTH_INVALID\":\"tweak length is invalid\"};\n\n//# sourceURL=webpack:///../node_modules/secp256k1/lib/messages.json?");

/***/ }),

/***/ "../node_modules/setimmediate/setImmediate.js":
/*!****************************************************!*\
  !*** ../node_modules/setimmediate/setImmediate.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///../node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "../node_modules/sha.js/hash.js":
/*!**************************************!*\
  !*** ../node_modules/sha.js/hash.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n\n\n//# sourceURL=webpack:///../node_modules/sha.js/hash.js?");

/***/ }),

/***/ "../node_modules/sha.js/index.js":
/*!***************************************!*\
  !*** ../node_modules/sha.js/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = __webpack_require__(/*! ./sha */ \"../node_modules/sha.js/sha.js\")\nexports.sha1 = __webpack_require__(/*! ./sha1 */ \"../node_modules/sha.js/sha1.js\")\nexports.sha224 = __webpack_require__(/*! ./sha224 */ \"../node_modules/sha.js/sha224.js\")\nexports.sha256 = __webpack_require__(/*! ./sha256 */ \"../node_modules/sha.js/sha256.js\")\nexports.sha384 = __webpack_require__(/*! ./sha384 */ \"../node_modules/sha.js/sha384.js\")\nexports.sha512 = __webpack_require__(/*! ./sha512 */ \"../node_modules/sha.js/sha512.js\")\n\n\n//# sourceURL=webpack:///../node_modules/sha.js/index.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha.js":
/*!*************************************!*\
  !*** ../node_modules/sha.js/sha.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n\n\n//# sourceURL=webpack:///../node_modules/sha.js/sha.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha1.js":
/*!**************************************!*\
  !*** ../node_modules/sha.js/sha1.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n\n\n//# sourceURL=webpack:///../node_modules/sha.js/sha1.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha224.js":
/*!****************************************!*\
  !*** ../node_modules/sha.js/sha224.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Sha256 = __webpack_require__(/*! ./sha256 */ \"../node_modules/sha.js/sha256.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n\n\n//# sourceURL=webpack:///../node_modules/sha.js/sha224.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha256.js":
/*!****************************************!*\
  !*** ../node_modules/sha.js/sha256.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n\n\n//# sourceURL=webpack:///../node_modules/sha.js/sha256.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha384.js":
/*!****************************************!*\
  !*** ../node_modules/sha.js/sha384.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar SHA512 = __webpack_require__(/*! ./sha512 */ \"../node_modules/sha.js/sha512.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n\n\n//# sourceURL=webpack:///../node_modules/sha.js/sha384.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha512.js":
/*!****************************************!*\
  !*** ../node_modules/sha.js/sha512.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n\n\n//# sourceURL=webpack:///../node_modules/sha.js/sha512.js?");

/***/ }),

/***/ "../node_modules/stream-browserify/index.js":
/*!**************************************************!*\
  !*** ../node_modules/stream-browserify/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(/*! events */ \"../node_modules/events/events.js\").EventEmitter;\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/readable.js */ \"../node_modules/readable-stream/readable-browser.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/writable.js */ \"../node_modules/readable-stream/writable-browser.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ \"../node_modules/readable-stream/duplex-browser.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/transform.js */ \"../node_modules/readable-stream/transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ \"../node_modules/readable-stream/passthrough.js\");\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n//# sourceURL=webpack:///../node_modules/stream-browserify/index.js?");

/***/ }),

/***/ "../node_modules/timers-browserify/main.js":
/*!*************************************************!*\
  !*** ../node_modules/timers-browserify/main.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"../node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///../node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "../node_modules/util-deprecate/browser.js":
/*!*************************************************!*\
  !*** ../node_modules/util-deprecate/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///../node_modules/util-deprecate/browser.js?");

/***/ }),

/***/ "../node_modules/uuid/index.js":
/*!*************************************!*\
  !*** ../node_modules/uuid/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var v1 = __webpack_require__(/*! ./v1 */ \"../node_modules/uuid/v1.js\");\nvar v4 = __webpack_require__(/*! ./v4 */ \"../node_modules/uuid/v4.js\");\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n//# sourceURL=webpack:///../node_modules/uuid/index.js?");

/***/ }),

/***/ "../node_modules/uuid/lib/bytesToUuid.js":
/*!***********************************************!*\
  !*** ../node_modules/uuid/lib/bytesToUuid.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n\n\n//# sourceURL=webpack:///../node_modules/uuid/lib/bytesToUuid.js?");

/***/ }),

/***/ "../node_modules/uuid/lib/rng-browser.js":
/*!***********************************************!*\
  !*** ../node_modules/uuid/lib/rng-browser.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\n\n//# sourceURL=webpack:///../node_modules/uuid/lib/rng-browser.js?");

/***/ }),

/***/ "../node_modules/uuid/v1.js":
/*!**********************************!*\
  !*** ../node_modules/uuid/v1.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"../node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"../node_modules/uuid/lib/bytesToUuid.js\");\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n//# sourceURL=webpack:///../node_modules/uuid/v1.js?");

/***/ }),

/***/ "../node_modules/uuid/v4.js":
/*!**********************************!*\
  !*** ../node_modules/uuid/v4.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"../node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"../node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n//# sourceURL=webpack:///../node_modules/uuid/v4.js?");

/***/ }),

/***/ "../node_modules/vm-browserify/index.js":
/*!**********************************************!*\
  !*** ../node_modules/vm-browserify/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var indexOf = __webpack_require__(/*! indexof */ \"../node_modules/indexof/index.js\");\n\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    forEach(Object_keys(ctx), function (key) {\n        context[key] = ctx[key];\n    });\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n\n\n//# sourceURL=webpack:///../node_modules/vm-browserify/index.js?");

/***/ }),

/***/ "../node_modules/webpack/buildin/global.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///../node_modules/webpack/buildin/global.js?");

/***/ }),

/***/ "../node_modules/webpack/buildin/harmony-module.js":
/*!*********************************************************!*\
  !*** ../node_modules/webpack/buildin/harmony-module.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///../node_modules/webpack/buildin/harmony-module.js?");

/***/ }),

/***/ "../node_modules/webpack/buildin/module.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/module.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///../node_modules/webpack/buildin/module.js?");

/***/ }),

/***/ "../src/utils/dateTimeFormat.js":
/*!**************************************!*\
  !*** ../src/utils/dateTimeFormat.js ***!
  \**************************************/
/*! exports provided: getDateAndTime, get_ms_short, get_s_short */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDateAndTime\", function() { return getDateAndTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_ms_short\", function() { return get_ms_short; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_s_short\", function() { return get_s_short; });\n(function () {\n  var enterModule = __webpack_require__(/*! react-hot-loader */ \"../node_modules/react-hot-loader/index.js\").enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/*\r\n  Copyright 2017~2022 The Bottos Authors\r\n  This file is part of the Bottos Data Exchange Client\r\n  Created by Developers Team of Bottos.\r\n\r\n  This program is free software: you can distribute it and/or modify\r\n  it under the terms of the GNU General Public License as published by\r\n  the Free Software Foundation, either version 3 of the License, or\r\n  (at your option) any later version.\r\n\r\n  This program is distributed in the hope that it will be useful,\r\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  GNU General Public License for more details.\r\n\r\n  You should have received a copy of the GNU General Public License\r\n  along with Bottos. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nfunction isUnixTime(time) {\n  // console.log('time', time);\n  let _time = time.toString();\n  // console.log('_time', _time);\n  if (_time.length == 10 && _time.startsWith('1')) {\n    return true;\n  }\n  return false;\n}\n\nfunction getDateAndTime(dataString) {\n  if (dataString == undefined) {\n    return '';\n  }\n  if (isUnixTime(dataString)) {\n    // console.log('dataString', dataString);\n    dataString = dataString * 1000;\n  }\n  var d = new Date(dataString);\n  return d.toLocaleDateString() + ' ' + d.toTimeString().slice(0, 8);\n}\n\n/**\r\n * [get_ms_short 是返回一个截断过的毫秒时间]\r\n * @param  {Number} n [从第 n 位开始截断]\r\n * @return {Number}  [description]\r\n */\nfunction get_ms_short(n = 7) {\n  let ms = new Date().getTime();\n  return parseInt(ms.toString().slice(n));\n}\n\n/**\r\n * [get_s_short 返回一个截断过的 0.1 秒级时间]\r\n * @param  {Number} [n=6] [description]\r\n * @return {[type]}       [description]\r\n */\nfunction get_s_short(n = 6) {\n  let ms = new Date().getTime();\n  return parseInt(ms.toString().slice(n, 11)) / 10;\n}\n;\n\n(function () {\n  var reactHotLoader = __webpack_require__(/*! react-hot-loader */ \"../node_modules/react-hot-loader/index.js\").default;\n\n  var leaveModule = __webpack_require__(/*! react-hot-loader */ \"../node_modules/react-hot-loader/index.js\").leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(isUnixTime, 'isUnixTime', 'D:/GitHub/wallet/src/utils/dateTimeFormat.js');\n  reactHotLoader.register(getDateAndTime, 'getDateAndTime', 'D:/GitHub/wallet/src/utils/dateTimeFormat.js');\n  reactHotLoader.register(get_ms_short, 'get_ms_short', 'D:/GitHub/wallet/src/utils/dateTimeFormat.js');\n  reactHotLoader.register(get_s_short, 'get_s_short', 'D:/GitHub/wallet/src/utils/dateTimeFormat.js');\n  leaveModule(module);\n})();\n\n;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"../node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../src/utils/dateTimeFormat.js?");

/***/ }),

/***/ "../src/worker.js":
/*!************************!*\
  !*** ../src/worker.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _utils_dateTimeFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/dateTimeFormat */ \"../src/utils/dateTimeFormat.js\");\n(function () {\n  var enterModule = __webpack_require__(/*! react-hot-loader */ \"../node_modules/react-hot-loader/index.js\").enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/*\r\n  Copyright 2017~2022 The Bottos Authors\r\n  This file is part of the Bottos Data Exchange Client\r\n  Created by Developers Team of Bottos.\r\n\r\n  This program is free software: you can distribute it and/or modify\r\n  it under the terms of the GNU General Public License as published by\r\n  the Free Software Foundation, either version 3 of the License, or\r\n  (at your option) any later version.\r\n\r\n  This program is distributed in the hope that it will be useful,\r\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  GNU General Public License for more details.\r\n\r\n  You should have received a copy of the GNU General Public License\r\n  along with Bottos. If not, see <http://www.gnu.org/licenses/>.\r\n*/\n// import keystore from 'bottos-crypto-js/lib/keystore'\nconst keystore = __webpack_require__(/*! bottos-crypto-js/lib/keystore */ \"../node_modules/bottos-crypto-js/lib/keystore.js\");\n\n\n\nlet t1 = 0;\n\nfunction createKeystore({ account, password, privateKey }) {\n  let keystoreObj = keystore.create({ account, password, privateKey });\n  console.log('keystoreObj', keystoreObj);\n  console.log('keys time2', Object(_utils_dateTimeFormat__WEBPACK_IMPORTED_MODULE_0__[\"get_ms_short\"])() - t1);\n  postMessage(keystoreObj);\n}\n\nfunction decryptKeystore(data) {\n  let privateKey = keystore.recover(data.password, data.keyStoreObj).toString('hex');\n  console.log('keys time2', Object(_utils_dateTimeFormat__WEBPACK_IMPORTED_MODULE_0__[\"get_ms_short\"])() - t1);\n  postMessage({\n    error: null,\n    privateKey\n  });\n}\n\nonmessage = function (e) {\n  console.log('Message received from main script', e.data);\n  // var workerResult = 'Result: ' + (e.data[0] * e.data[1]);\n  t1 = Object(_utils_dateTimeFormat__WEBPACK_IMPORTED_MODULE_0__[\"get_ms_short\"])();\n  // console.log('Posting message back to main script', t1);\n  //\n  // let keys = BTCryptTool.createPubPrivateKeys()\n  // console.log('keys', keys);\n\n  // BTIpcRenderer\n  console.log('keystore', keystore);\n  const { type, data } = e.data;\n  switch (type) {\n    case 'createKeystore':\n      createKeystore(data);\n      break;\n    case 'decryptKeystore':\n      decryptKeystore(data);\n      break;\n    default:\n  }\n};\n;\n\n(function () {\n  var reactHotLoader = __webpack_require__(/*! react-hot-loader */ \"../node_modules/react-hot-loader/index.js\").default;\n\n  var leaveModule = __webpack_require__(/*! react-hot-loader */ \"../node_modules/react-hot-loader/index.js\").leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(t1, 't1', 'D:/GitHub/wallet/src/worker.js');\n  reactHotLoader.register(createKeystore, 'createKeystore', 'D:/GitHub/wallet/src/worker.js');\n  reactHotLoader.register(decryptKeystore, 'decryptKeystore', 'D:/GitHub/wallet/src/worker.js');\n  leaveModule(module);\n})();\n\n;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"../node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../src/worker.js?");

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?");

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?");

/***/ }),

/***/ 2:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///buffer_(ignored)?");

/***/ }),

/***/ 3:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?");

/***/ })

/******/ });